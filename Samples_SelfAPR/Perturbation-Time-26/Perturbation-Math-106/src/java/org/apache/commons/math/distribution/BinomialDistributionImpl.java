[P1_Replace_Type]^private static final  short  serialVersionUID = 6751309484392813623L;^34^^^^^29^39^private static final long serialVersionUID = 6751309484392813623L;^[CLASS] BinomialDistributionImpl   [VARIABLES] 
[P8_Replace_Mix]^private static final  short  serialVersionUID = 6751309484392813623;^34^^^^^29^39^private static final long serialVersionUID = 6751309484392813623L;^[CLASS] BinomialDistributionImpl   [VARIABLES] 
[P1_Replace_Type]^private  short  numberOfTrials;^37^^^^^32^42^private int numberOfTrials;^[CLASS] BinomialDistributionImpl   [VARIABLES] 
[P1_Replace_Type]^private int probabilityOfSuccess;^40^^^^^35^45^private double probabilityOfSuccess;^[CLASS] BinomialDistributionImpl   [VARIABLES] 
[P14_Delete_Statement]^^49^^^^^48^52^super (  ) ;^[CLASS] BinomialDistributionImpl  [METHOD] <init> [RETURN_TYPE] BinomialDistributionImpl(int,double)   int trials double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P5_Replace_Variable]^setNumberOfTrials ( numberOfTrials ) ;^50^^^^^48^52^setNumberOfTrials ( trials ) ;^[CLASS] BinomialDistributionImpl  [METHOD] <init> [RETURN_TYPE] BinomialDistributionImpl(int,double)   int trials double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P7_Replace_Invocation]^probability ( trials ) ;^50^^^^^48^52^setNumberOfTrials ( trials ) ;^[CLASS] BinomialDistributionImpl  [METHOD] <init> [RETURN_TYPE] BinomialDistributionImpl(int,double)   int trials double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P8_Replace_Mix]^probability ( numberOfTrials ) ;^50^^^^^48^52^setNumberOfTrials ( trials ) ;^[CLASS] BinomialDistributionImpl  [METHOD] <init> [RETURN_TYPE] BinomialDistributionImpl(int,double)   int trials double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P14_Delete_Statement]^^50^^^^^48^52^setNumberOfTrials ( trials ) ;^[CLASS] BinomialDistributionImpl  [METHOD] <init> [RETURN_TYPE] BinomialDistributionImpl(int,double)   int trials double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P11_Insert_Donor_Statement]^return getNumberOfTrials (  ) ;setNumberOfTrials ( trials ) ;^50^^^^^48^52^setNumberOfTrials ( trials ) ;^[CLASS] BinomialDistributionImpl  [METHOD] <init> [RETURN_TYPE] BinomialDistributionImpl(int,double)   int trials double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P11_Insert_Donor_Statement]^getNumberOfTrials (  )  - x ) ;setNumberOfTrials ( trials ) ;^50^^^^^48^52^setNumberOfTrials ( trials ) ;^[CLASS] BinomialDistributionImpl  [METHOD] <init> [RETURN_TYPE] BinomialDistributionImpl(int,double)   int trials double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P5_Replace_Variable]^setProbabilityOfSuccess ( probabilityOfSuccess ) ;^51^^^^^48^52^setProbabilityOfSuccess ( p ) ;^[CLASS] BinomialDistributionImpl  [METHOD] <init> [RETURN_TYPE] BinomialDistributionImpl(int,double)   int trials double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P7_Replace_Invocation]^probability ( p ) ;^51^^^^^48^52^setProbabilityOfSuccess ( p ) ;^[CLASS] BinomialDistributionImpl  [METHOD] <init> [RETURN_TYPE] BinomialDistributionImpl(int,double)   int trials double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P8_Replace_Mix]^probability ( probabilityOfSuccess ) ;^51^^^^^48^52^setProbabilityOfSuccess ( p ) ;^[CLASS] BinomialDistributionImpl  [METHOD] <init> [RETURN_TYPE] BinomialDistributionImpl(int,double)   int trials double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P14_Delete_Statement]^^51^^^^^48^52^setProbabilityOfSuccess ( p ) ;^[CLASS] BinomialDistributionImpl  [METHOD] <init> [RETURN_TYPE] BinomialDistributionImpl(int,double)   int trials double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P5_Replace_Variable]^return trials;^59^^^^^58^60^return numberOfTrials;^[CLASS] BinomialDistributionImpl  [METHOD] getNumberOfTrials [RETURN_TYPE] int   [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P5_Replace_Variable]^return p;^67^^^^^66^68^return probabilityOfSuccess;^[CLASS] BinomialDistributionImpl  [METHOD] getProbabilityOfSuccess [RETURN_TYPE] double   [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P2_Replace_Operator]^if  ( trials <= 0 )  {^77^^^^^76^81^if  ( trials < 0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] setNumberOfTrials [RETURN_TYPE] void   int trials [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P3_Replace_Literal]^if  ( trials < 4 )  {^77^^^^^76^81^if  ( trials < 0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] setNumberOfTrials [RETURN_TYPE] void   int trials [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P5_Replace_Variable]^if  ( numberOfTrials < 0 )  {^77^^^^^76^81^if  ( trials < 0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] setNumberOfTrials [RETURN_TYPE] void   int trials [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P8_Replace_Mix]^if  ( trials < 0 - 1 )  {^77^^^^^76^81^if  ( trials < 0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] setNumberOfTrials [RETURN_TYPE] void   int trials [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P9_Replace_Statement]^if  ( x < 0 )  {^77^^^^^76^81^if  ( trials < 0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] setNumberOfTrials [RETURN_TYPE] void   int trials [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("number of trials must be non-negative.");^77^78^79^^^76^81^if  ( trials < 0 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] BinomialDistributionImpl  [METHOD] setNumberOfTrials [RETURN_TYPE] void   int trials [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P16_Remove_Block]^^77^78^79^^^76^81^if  ( trials < 0 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] BinomialDistributionImpl  [METHOD] setNumberOfTrials [RETURN_TYPE] void   int trials [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P13_Insert_Block]^if  (  ( p < 0.0 )  ||  ( p > 1.0 )  )  {     throw new IllegalArgumentException ( "probability of success must be between 0.0 and 1.0, inclusive." ) ; }^77^^^^^76^81^[Delete]^[CLASS] BinomialDistributionImpl  [METHOD] setNumberOfTrials [RETURN_TYPE] void   int trials [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P13_Insert_Block]^if  ( trials < 0 )  {     throw new IllegalArgumentException ( "number of trials must be non-negative." ) ; }^78^^^^^76^81^[Delete]^[CLASS] BinomialDistributionImpl  [METHOD] setNumberOfTrials [RETURN_TYPE] void   int trials [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P8_Replace_Mix]^numberOfTrials =  null;^80^^^^^76^81^numberOfTrials = trials;^[CLASS] BinomialDistributionImpl  [METHOD] setNumberOfTrials [RETURN_TYPE] void   int trials [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P2_Replace_Operator]^if  ( p < 0.0 && p > 1.0 )  {^90^^^^^89^94^if  ( p < 0.0 || p > 1.0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] setProbabilityOfSuccess [RETURN_TYPE] void   double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P2_Replace_Operator]^if  ( p > 0.0 || p > 1.0 )  {^90^^^^^89^94^if  ( p < 0.0 || p > 1.0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] setProbabilityOfSuccess [RETURN_TYPE] void   double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P2_Replace_Operator]^if  ( p < 0.0 || p >= 1.0 )  {^90^^^^^89^94^if  ( p < 0.0 || p > 1.0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] setProbabilityOfSuccess [RETURN_TYPE] void   double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P3_Replace_Literal]^if  ( p < 0.0 || p > 9.0 )  {^90^^^^^89^94^if  ( p < 0.0 || p > 1.0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] setProbabilityOfSuccess [RETURN_TYPE] void   double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P6_Replace_Expression]^if  ( p < 0.0 ) {^90^^^^^89^94^if  ( p < 0.0 || p > 1.0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] setProbabilityOfSuccess [RETURN_TYPE] void   double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P6_Replace_Expression]^if  (  p > 1.0 )  {^90^^^^^89^94^if  ( p < 0.0 || p > 1.0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] setProbabilityOfSuccess [RETURN_TYPE] void   double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P8_Replace_Mix]^if  ( p < 0.0d || p > 1.0 )  {^90^^^^^89^94^if  ( p < 0.0 || p > 1.0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] setProbabilityOfSuccess [RETURN_TYPE] void   double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("probability of success must be between 0.0 and 1.0, inclusive.");^90^91^92^^^89^94^if  ( p < 0.0 || p > 1.0 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] BinomialDistributionImpl  [METHOD] setProbabilityOfSuccess [RETURN_TYPE] void   double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P16_Remove_Block]^^90^91^92^^^89^94^if  ( p < 0.0 || p > 1.0 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] BinomialDistributionImpl  [METHOD] setProbabilityOfSuccess [RETURN_TYPE] void   double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P13_Insert_Block]^if  ( trials < 0 )  {     throw new IllegalArgumentException ( "number of trials must be non-negative." ) ; }^90^^^^^89^94^[Delete]^[CLASS] BinomialDistributionImpl  [METHOD] setProbabilityOfSuccess [RETURN_TYPE] void   double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P13_Insert_Block]^if  (  ( p < 0.0 )  ||  ( p > 1.0 )  )  {     throw new IllegalArgumentException ( "probability of success must be between 0.0 and 1.0, inclusive." ) ; }^91^^^^^89^94^[Delete]^[CLASS] BinomialDistributionImpl  [METHOD] setProbabilityOfSuccess [RETURN_TYPE] void   double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P8_Replace_Mix]^return ;^91^^^^^89^94^throw new IllegalArgumentException  (" ")  ;^[CLASS] BinomialDistributionImpl  [METHOD] setProbabilityOfSuccess [RETURN_TYPE] void   double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P5_Replace_Variable]^probabilityOfSuccess = probabilityOfSuccess;^93^^^^^89^94^probabilityOfSuccess = p;^[CLASS] BinomialDistributionImpl  [METHOD] setProbabilityOfSuccess [RETURN_TYPE] void   double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P8_Replace_Mix]^probabilityOfSuccess =  null;^93^^^^^89^94^probabilityOfSuccess = p;^[CLASS] BinomialDistributionImpl  [METHOD] setProbabilityOfSuccess [RETURN_TYPE] void   double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P3_Replace_Literal]^return -10;^105^^^^^104^106^return -1;^[CLASS] BinomialDistributionImpl  [METHOD] getDomainLowerBound [RETURN_TYPE] int   double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P8_Replace_Mix]^return -1 << 4;^105^^^^^104^106^return -1;^[CLASS] BinomialDistributionImpl  [METHOD] getDomainLowerBound [RETURN_TYPE] int   double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P7_Replace_Invocation]^return getProbabilityOfSuccess (  ) ;^117^^^^^116^118^return getNumberOfTrials (  ) ;^[CLASS] BinomialDistributionImpl  [METHOD] getDomainUpperBound [RETURN_TYPE] int   double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P14_Delete_Statement]^^117^^^^^116^118^return getNumberOfTrials (  ) ;^[CLASS] BinomialDistributionImpl  [METHOD] getDomainUpperBound [RETURN_TYPE] int   double p [VARIABLES] boolean  double  p  probabilityOfSuccess  long  serialVersionUID  int  numberOfTrials  trials  
[P1_Replace_Type]^float ret;^128^^^^^127^141^double ret;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P2_Replace_Operator]^if  ( x == 0 )  {^129^^^^^127^141^if  ( x < 0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P3_Replace_Literal]^if  ( x < -2 )  {^129^^^^^127^141^if  ( x < 0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P6_Replace_Expression]^if  ( x >= getNumberOfTrials() )  {^129^^^^^127^141^if  ( x < 0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P6_Replace_Expression]^if  ( 1.0 - regularizedBeta(getProbabilityOfSuccess(), (x + 1.0), (getNumberOfTrials() - x)) )  {^129^^^^^127^141^if  ( x < 0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P6_Replace_Expression]^if  ( x + 1.0 )  {^129^^^^^127^141^if  ( x < 0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P6_Replace_Expression]^if  ( getNumberOfTrials (  )  - x )  {^129^^^^^127^141^if  ( x < 0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P8_Replace_Mix]^if  ( x < 0 * 3 )  {^129^^^^^127^141^if  ( x < 0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P9_Replace_Statement]^if  ( p == 1 )  {^129^^^^^127^141^if  ( x < 0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P9_Replace_Statement]^if  ( trials < 0 )  {^129^^^^^127^141^if  ( x < 0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P9_Replace_Statement]^if  ( p == 0 )  {^129^^^^^127^141^if  ( x < 0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P2_Replace_Operator]^} else if  ( x > getNumberOfTrials (  )  )  {^131^^^^^127^141^} else if  ( x >= getNumberOfTrials (  )  )  {^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P5_Replace_Variable]^} else if  ( trials >= getNumberOfTrials (  )  )  {^131^^^^^127^141^} else if  ( x >= getNumberOfTrials (  )  )  {^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P6_Replace_Expression]^} else if  ( 1.0 - regularizedBeta(getProbabilityOfSuccess(), (x + 1.0), (getNumberOfTrials() - x)) )  {^131^^^^^127^141^} else if  ( x >= getNumberOfTrials (  )  )  {^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P6_Replace_Expression]^} else if  ( x + 1.0 )  {^131^^^^^127^141^} else if  ( x >= getNumberOfTrials (  )  )  {^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P6_Replace_Expression]^} else if  ( getNumberOfTrials (  )  - x )  {^131^^^^^127^141^} else if  ( x >= getNumberOfTrials (  )  )  {^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P6_Replace_Expression]^} else {^131^^^^^127^141^} else if  ( x >= getNumberOfTrials (  )  )  {^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P7_Replace_Invocation]^} else if  ( x >= getProbabilityOfSuccess (  )  )  {^131^^^^^127^141^} else if  ( x >= getNumberOfTrials (  )  )  {^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P2_Replace_Operator]^ret = 1.0  ==  Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^134^135^136^137^^127^141^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P2_Replace_Operator]^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  >>  ) , x + 1.0,^134^135^136^137^^127^141^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P3_Replace_Literal]^ret = 0.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 0.0,^134^135^136^137^^127^141^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P3_Replace_Literal]^ret = 3.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 3.0,^134^135^136^137^^127^141^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P5_Replace_Variable]^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , trials + 1.0,^134^135^136^137^^127^141^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P7_Replace_Invocation]^ret = 1.0 - Beta.regularizedBeta ( getNumberOfTrials (  ) , x + 1.0,^134^135^136^137^^127^141^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P8_Replace_Mix]^ret = 4.0d - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 4.0d,^134^135^136^137^^127^141^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P2_Replace_Operator]^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  <<  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^135^136^137^138^^127^141^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P2_Replace_Operator]^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )   !=  x ) ;^135^136^137^138^^127^141^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P3_Replace_Literal]^9.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 9.0, getNumberOfTrials (  )  - x ) ;^135^136^137^138^^127^141^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P5_Replace_Variable]^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , trials + 1.0, getNumberOfTrials (  )  - x ) ;^135^136^137^138^^127^141^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P7_Replace_Invocation]^1.0 - Beta.regularizedBeta ( getNumberOfTrials (  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^135^136^137^138^^127^141^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P7_Replace_Invocation]^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getProbabilityOfSuccess (  )  - x ) ;^135^136^137^138^^127^141^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P7_Replace_Invocation]^getNumberOfTrials (  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^136^137^138^^^127^141^getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P14_Delete_Statement]^^136^137^138^^^127^141^getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P7_Replace_Invocation]^getProbabilityOfSuccess (  )  - x ) ;^138^^^^^127^141^getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P14_Delete_Statement]^^138^^^^^127^141^getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P11_Insert_Donor_Statement]^setNumberOfTrials ( trials ) ;getNumberOfTrials (  )  - x ) ;^138^^^^^127^141^getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P11_Insert_Donor_Statement]^return getNumberOfTrials (  ) ;getNumberOfTrials (  )  - x ) ;^138^^^^^127^141^getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P3_Replace_Literal]^ret = 3.0;^132^^^^^127^141^ret = 1.0;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P8_Replace_Mix]^ret = 1.0d;^132^^^^^127^141^ret = 1.0;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P11_Insert_Donor_Statement]^ret = 0.0;ret = 1.0;^132^^^^^127^141^ret = 1.0;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P3_Replace_Literal]^ret = 0.2;^132^^^^^127^141^ret = 1.0;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P8_Replace_Mix]^ret = 2.0d;^132^^^^^127^141^ret = 1.0;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P2_Replace_Operator]^ret = 1.0  ^  Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^134^135^136^137^^127^141^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P2_Replace_Operator]^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  |  ) , x + 1.0,^134^135^136^137^^127^141^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P2_Replace_Operator]^ret = 1.0  >  Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^134^135^136^137^^127^141^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P3_Replace_Literal]^ret = 9.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 9.0,^134^135^136^137^^127^141^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P3_Replace_Literal]^ret = 2.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 2.0,^134^135^136^137^^127^141^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P8_Replace_Mix]^ret = 1.0D - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0D,^134^135^136^137^^127^141^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P2_Replace_Operator]^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  |  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^135^136^137^138^^127^141^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P2_Replace_Operator]^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )   |  x ) ;^135^136^137^138^^127^141^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P3_Replace_Literal]^2.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 2.0, getNumberOfTrials (  )  - x ) ;^135^136^137^138^^127^141^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P8_Replace_Mix]^ret = 0.0D;^130^^^^^127^141^ret = 0.0;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P11_Insert_Donor_Statement]^ret = 1.0;ret = 0.0;^130^^^^^127^141^ret = 0.0;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P2_Replace_Operator]^ret = 1.0  <=  Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^134^135^136^137^^127^141^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P8_Replace_Mix]^ret = 2.0d - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 2.0d,^134^135^136^137^^127^141^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P2_Replace_Operator]^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ^  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^135^136^137^138^^127^141^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P2_Replace_Operator]^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )   <<  x ) ;^135^136^137^138^^127^141^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P3_Replace_Literal]^0.2 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 0.2, getNumberOfTrials (  )  - x ) ;^135^136^137^138^^127^141^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P8_Replace_Mix]^1.0 - Beta.regularizedBeta ( getNumberOfTrials (  ) , trials + 1.0, getNumberOfTrials (  )  - x ) ;^135^136^137^138^^127^141^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P3_Replace_Literal]^ret = 0.16666666666666666;^132^^^^^127^141^ret = 1.0;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P8_Replace_Mix]^ret = 1.0D;^132^^^^^127^141^ret = 1.0;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P8_Replace_Mix]^ret = 0.0d;^130^^^^^127^141^ret = 0.0;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P3_Replace_Literal]^ret = 0.25;^132^^^^^127^141^ret = 1.0;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P2_Replace_Operator]^ret = 1.0  >=  Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^134^135^136^137^^127^141^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P2_Replace_Operator]^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  <<  ) , x + 1.0,^134^135^136^137^^127^141^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P3_Replace_Literal]^ret = 6.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 6.0,^134^135^136^137^^127^141^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P3_Replace_Literal]^ret = 8.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 8.0,^134^135^136^137^^127^141^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P8_Replace_Mix]^ret = 1.0d - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0d,^134^135^136^137^^127^141^ret = 1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0,^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P2_Replace_Operator]^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  &&  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^135^136^137^138^^127^141^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P3_Replace_Literal]^4.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 4.0, getNumberOfTrials (  )  - x ) ;^135^136^137^138^^127^141^1.0 - Beta.regularizedBeta ( getProbabilityOfSuccess (  ) , x + 1.0, getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P5_Replace_Variable]^return probabilityOfSuccess;^140^^^^^127^141^return ret;^[CLASS] BinomialDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P1_Replace_Type]^float ret;^150^^^^^149^161^double ret;^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P2_Replace_Operator]^if  ( x < 0 && x > getNumberOfTrials (  )  )  {^151^^^^^149^161^if  ( x < 0 || x > getNumberOfTrials (  )  )  {^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P2_Replace_Operator]^if  ( x <= 0 || x > getNumberOfTrials (  )  )  {^151^^^^^149^161^if  ( x < 0 || x > getNumberOfTrials (  )  )  {^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P2_Replace_Operator]^if  ( x < 0 || x >= getNumberOfTrials (  )  )  {^151^^^^^149^161^if  ( x < 0 || x > getNumberOfTrials (  )  )  {^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P3_Replace_Literal]^if  ( x < x || x > getNumberOfTrials (  )  )  {^151^^^^^149^161^if  ( x < 0 || x > getNumberOfTrials (  )  )  {^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P5_Replace_Variable]^if  ( trials < 0 || x > getNumberOfTrials (  )  )  {^151^^^^^149^161^if  ( x < 0 || x > getNumberOfTrials (  )  )  {^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P6_Replace_Expression]^if  ( x < 0 ) {^151^^^^^149^161^if  ( x < 0 || x > getNumberOfTrials (  )  )  {^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P6_Replace_Expression]^if  (  x > getNumberOfTrials (  )  )  {^151^^^^^149^161^if  ( x < 0 || x > getNumberOfTrials (  )  )  {^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P6_Replace_Expression]^if  ( binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  )  *  ( pow ( getProbabilityOfSuccess (  ) , x )  )  * pow (  ( 1.0 -  ( getProbabilityOfSuccess (  )  )  ) ,  (  ( getNumberOfTrials (  )  )  - x ) )  {^151^^^^^149^161^if  ( x < 0 || x > getNumberOfTrials (  )  )  {^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P6_Replace_Expression]^if  ( binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * pow ( getProbabilityOfSuccess (  ) , x ) )  {^151^^^^^149^161^if  ( x < 0 || x > getNumberOfTrials (  )  )  {^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P6_Replace_Expression]^if  ( 1.0 - getProbabilityOfSuccess (  ) )  {^151^^^^^149^161^if  ( x < 0 || x > getNumberOfTrials (  )  )  {^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P6_Replace_Expression]^if  ( getNumberOfTrials (  )  - x )  {^151^^^^^149^161^if  ( x < 0 || x > getNumberOfTrials (  )  )  {^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P7_Replace_Invocation]^if  ( x < 0 || x > getProbabilityOfSuccess (  )  )  {^151^^^^^149^161^if  ( x < 0 || x > getNumberOfTrials (  )  )  {^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P8_Replace_Mix]^if  ( trials < 1 ) {^151^^^^^149^161^if  ( x < 0 || x > getNumberOfTrials (  )  )  {^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P13_Insert_Block]^if  ( x >=  ( getNumberOfTrials (  )  )  )  {     ret = 1.0; }else {     ret = 1.0 -  ( regularizedBeta ( getProbabilityOfSuccess (  ) ,  ( x + 1.0 ) ,  (  ( getNumberOfTrials (  )  )  - x )  )  ) ; }^151^^^^^149^161^[Delete]^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P2_Replace_Operator]^ret - = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) ,^154^155^156^157^^149^161^ret = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) ,^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P2_Replace_Operator]^ret + = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) ,^154^155^156^157^^149^161^ret = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) ,^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P2_Replace_Operator]^ret = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0  ==  getProbabilityOfSuccess (  ) ,^154^155^156^157^^149^161^ret = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) ,^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P2_Replace_Operator]^ret = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0  ||  getProbabilityOfSuccess (  ) ,^154^155^156^157^^149^161^ret = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) ,^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P5_Replace_Variable]^ret = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , trials )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) ,^154^155^156^157^^149^161^ret = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) ,^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P7_Replace_Invocation]^ret = MathUtils.binomialCoefficientDouble ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) ,^154^155^156^157^^149^161^ret = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) ,^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P7_Replace_Invocation]^ret = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getNumberOfTrials (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) ,^154^155^156^157^^149^161^ret = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) ,^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P8_Replace_Mix]^ret = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 3.0d - getProbabilityOfSuccess (  ) ,^154^155^156^157^^149^161^ret = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) ,^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P7_Replace_Invocation]^getProbabilityOfSuccess (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - x ) ;^155^156^157^158^^149^161^getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P5_Replace_Variable]^Math.pow ( getProbabilityOfSuccess (  ) , trials )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - x ) ;^156^157^158^^^149^161^Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P7_Replace_Invocation]^Math.pow ( getNumberOfTrials (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - x ) ;^156^157^158^^^149^161^Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P8_Replace_Mix]^Math.pow ( getNumberOfTrials (  ) , trials )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - x ) ;^156^157^158^^^149^161^Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P14_Delete_Statement]^^156^157^158^^^149^161^Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P2_Replace_Operator]^Math.pow ( 1.0  ||  getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - x ) ;^157^158^^^^149^161^Math.pow ( 1.0 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P2_Replace_Operator]^Math.pow ( 1.0 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )   >  x ) ;^157^158^^^^149^161^Math.pow ( 1.0 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P3_Replace_Literal]^Math.pow ( 0.125 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - x ) ;^157^158^^^^149^161^Math.pow ( 1.0 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P5_Replace_Variable]^Math.pow ( 1.0 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - trials ) ;^157^158^^^^149^161^Math.pow ( 1.0 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P7_Replace_Invocation]^Math.pow ( 1.0 - getNumberOfTrials (  ) , getNumberOfTrials (  )  - x ) ;^157^158^^^^149^161^Math.pow ( 1.0 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P7_Replace_Invocation]^Math.pow ( 1.0 - getProbabilityOfSuccess (  ) , getProbabilityOfSuccess (  )  - x ) ;^157^158^^^^149^161^Math.pow ( 1.0 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P14_Delete_Statement]^^157^158^^^^149^161^Math.pow ( 1.0 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P7_Replace_Invocation]^getProbabilityOfSuccess (  )  - x ) ;^158^^^^^149^161^getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P14_Delete_Statement]^^158^^^^^149^161^getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P11_Insert_Donor_Statement]^setNumberOfTrials ( trials ) ;getNumberOfTrials (  )  - x ) ;^158^^^^^149^161^getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P11_Insert_Donor_Statement]^return getNumberOfTrials (  ) ;getNumberOfTrials (  )  - x ) ;^158^^^^^149^161^getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P8_Replace_Mix]^ret = 2.0d;^152^^^^^149^161^ret = 0.0;^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P11_Insert_Donor_Statement]^ret = 1.0;ret = 0.0;^152^^^^^149^161^ret = 0.0;^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P8_Replace_Mix]^ret = 0.0d;^152^^^^^149^161^ret = 0.0;^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P2_Replace_Operator]^ret = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0  !=  getProbabilityOfSuccess (  ) ,^154^155^156^157^^149^161^ret = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) ,^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P3_Replace_Literal]^ret = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 3.0 - getProbabilityOfSuccess (  ) ,^154^155^156^157^^149^161^ret = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) ,^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P8_Replace_Mix]^ret = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0D - getProbabilityOfSuccess (  ) ,^154^155^156^157^^149^161^ret = MathUtils.binomialCoefficientDouble ( getNumberOfTrials (  ) , x )  * Math.pow ( getProbabilityOfSuccess (  ) , x )  * Math.pow ( 1.0 - getProbabilityOfSuccess (  ) ,^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P2_Replace_Operator]^Math.pow ( 1.0  <  getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - x ) ;^157^158^^^^149^161^Math.pow ( 1.0 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P2_Replace_Operator]^Math.pow ( 1.0 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )    instanceof   x ) ;^157^158^^^^149^161^Math.pow ( 1.0 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P3_Replace_Literal]^Math.pow ( 8.0 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - x ) ;^157^158^^^^149^161^Math.pow ( 1.0 - getProbabilityOfSuccess (  ) , getNumberOfTrials (  )  - x ) ;^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P5_Replace_Variable]^return probabilityOfSuccess;^160^^^^^149^161^return ret;^[CLASS] BinomialDistributionImpl  [METHOD] probability [RETURN_TYPE] double   int x [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P2_Replace_Operator]^if  ( p != 0 )  {^178^^^^^176^187^if  ( p == 0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] int   final double p [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P5_Replace_Variable]^if  ( ret == 0 )  {^178^^^^^176^187^if  ( p == 0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] int   final double p [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P8_Replace_Mix]^if  ( p == 3 )  {^178^^^^^176^187^if  ( p == 0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] int   final double p [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P9_Replace_Statement]^if  ( p == 1 )  {^178^^^^^176^187^if  ( p == 0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] int   final double p [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P9_Replace_Statement]^if  ( x < 0 )  {^178^^^^^176^187^if  ( p == 0 )  {^[CLASS] BinomialDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] int   final double p [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P15_Unwrap_Block]^return -1;^178^179^180^^^176^187^if  ( p == 0 )  { return -1; }^[CLASS] BinomialDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] int   final double p [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P16_Remove_Block]^^178^179^180^^^176^187^if  ( p == 0 )  { return -1; }^[CLASS] BinomialDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] int   final double p [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P3_Replace_Literal]^return -8;^179^^^^^176^187^return -1;^[CLASS] BinomialDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] int   final double p [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P8_Replace_Mix]^return -0;^179^^^^^176^187^return -1;^[CLASS] BinomialDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] int   final double p [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P3_Replace_Literal]^return -4;^179^^^^^176^187^return -1;^[CLASS] BinomialDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] int   final double p [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P8_Replace_Mix]^return -3;^179^^^^^176^187^return -1;^[CLASS] BinomialDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] int   final double p [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P2_Replace_Operator]^if  ( p >= 1 )  {^181^^^^^176^187^if  ( p == 1 )  {^[CLASS] BinomialDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] int   final double p [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P3_Replace_Literal]^if  ( p ==  )  {^181^^^^^176^187^if  ( p == 1 )  {^[CLASS] BinomialDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] int   final double p [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P5_Replace_Variable]^if  ( ret == 1 )  {^181^^^^^176^187^if  ( p == 1 )  {^[CLASS] BinomialDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] int   final double p [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P8_Replace_Mix]^if  ( p == 1 + 3 )  {^181^^^^^176^187^if  ( p == 1 )  {^[CLASS] BinomialDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] int   final double p [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P9_Replace_Statement]^if  ( x < 0 )  {^181^^^^^176^187^if  ( p == 1 )  {^[CLASS] BinomialDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] int   final double p [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P9_Replace_Statement]^if  ( p == 0 )  {^181^^^^^176^187^if  ( p == 1 )  {^[CLASS] BinomialDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] int   final double p [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P15_Unwrap_Block]^return java.lang.Integer.MAX_VALUE;^181^182^183^^^176^187^if  ( p == 1 )  { return Integer.MAX_VALUE; }^[CLASS] BinomialDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] int   final double p [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P16_Remove_Block]^^181^182^183^^^176^187^if  ( p == 1 )  { return Integer.MAX_VALUE; }^[CLASS] BinomialDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] int   final double p [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P13_Insert_Block]^if  ( p == 1 )  {     return MAX_VALUE; }^182^^^^^176^187^[Delete]^[CLASS] BinomialDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] int   final double p [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
[P14_Delete_Statement]^^186^^^^^176^187^return super.inverseCumulativeProbability ( p ) ;^[CLASS] BinomialDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] int   final double p [VARIABLES] boolean  double  p  probabilityOfSuccess  ret  long  serialVersionUID  int  numberOfTrials  trials  x  
