[P1_Replace_Type]^private static final  int  serialVersionUID = -8178734905303459453L;^48^^^^^43^53^private static final long serialVersionUID = -8178734905303459453L;^[CLASS] GeometricMean   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID  = null ;^48^^^^^43^53^private static final long serialVersionUID = -8178734905303459453L;^[CLASS] GeometricMean   [VARIABLES] 
[P8_Replace_Mix]^sumOfLogs  = null ;^57^^^^^56^58^sumOfLogs = new SumOfLogs (  ) ;^[CLASS] GeometricMean  [METHOD] <init> [RETURN_TYPE] GeometricMean()   [VARIABLES] SumOfLogs  sumOfLogs  long  serialVersionUID  boolean  
[P7_Replace_Invocation]^sumOfLogs .getResult (  )  ;^64^^^^^63^65^sumOfLogs.increment ( d ) ;^[CLASS] GeometricMean  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] SumOfLogs  sumOfLogs  boolean  long  serialVersionUID  double  d  
[P14_Delete_Statement]^^64^^^^^63^65^sumOfLogs.increment ( d ) ;^[CLASS] GeometricMean  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] SumOfLogs  sumOfLogs  boolean  long  serialVersionUID  double  d  
[P11_Insert_Donor_Statement]^sumOfLogs.clear (  ) ;sumOfLogs.increment ( d ) ;^64^^^^^63^65^sumOfLogs.increment ( d ) ;^[CLASS] GeometricMean  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] SumOfLogs  sumOfLogs  boolean  long  serialVersionUID  double  d  
[P2_Replace_Operator]^if  ( sumOfLogs.getN (  )  < 0 )  {^71^^^^^70^76^if  ( sumOfLogs.getN (  )  > 0 )  {^[CLASS] GeometricMean  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] SumOfLogs  sumOfLogs  long  serialVersionUID  boolean  
[P6_Replace_Expression]^if  ( sumOfLogs.getResult (  )  /  ( double )   ( sumOfLogs.getN (  )  ) )  {^71^^^^^70^76^if  ( sumOfLogs.getN (  )  > 0 )  {^[CLASS] GeometricMean  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] SumOfLogs  sumOfLogs  long  serialVersionUID  boolean  
[P7_Replace_Invocation]^if  ( sumOfLogs.clear (  )  > 0 )  {^71^^^^^70^76^if  ( sumOfLogs.getN (  )  > 0 )  {^[CLASS] GeometricMean  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] SumOfLogs  sumOfLogs  long  serialVersionUID  boolean  
[P7_Replace_Invocation]^if  ( sumOfLogs .getResult (  )   > 0 )  {^71^^^^^70^76^if  ( sumOfLogs.getN (  )  > 0 )  {^[CLASS] GeometricMean  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] SumOfLogs  sumOfLogs  long  serialVersionUID  boolean  
[P8_Replace_Mix]^if  ( sumOfLogs.getN (  )  > 1 )  {^71^^^^^70^76^if  ( sumOfLogs.getN (  )  > 0 )  {^[CLASS] GeometricMean  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] SumOfLogs  sumOfLogs  long  serialVersionUID  boolean  
[P15_Unwrap_Block]^return java.lang.Math.exp(((sumOfLogs.getResult()) / ((double) (sumOfLogs.getN()))));^71^72^73^74^75^70^76^if  ( sumOfLogs.getN (  )  > 0 )  { return Math.exp ( sumOfLogs.getResult (  )  /  ( double )  sumOfLogs.getN (  )  ) ; } else { return Double.NaN; }^[CLASS] GeometricMean  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] SumOfLogs  sumOfLogs  long  serialVersionUID  boolean  
[P16_Remove_Block]^^71^72^73^74^75^70^76^if  ( sumOfLogs.getN (  )  > 0 )  { return Math.exp ( sumOfLogs.getResult (  )  /  ( double )  sumOfLogs.getN (  )  ) ; } else { return Double.NaN; }^[CLASS] GeometricMean  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] SumOfLogs  sumOfLogs  long  serialVersionUID  boolean  
[P2_Replace_Operator]^return Math.exp ( sumOfLogs.getResult (  )  -  ( double )  sumOfLogs.getN (  )  ) ;^72^^^^^70^76^return Math.exp ( sumOfLogs.getResult (  )  /  ( double )  sumOfLogs.getN (  )  ) ;^[CLASS] GeometricMean  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] SumOfLogs  sumOfLogs  long  serialVersionUID  boolean  
[P7_Replace_Invocation]^return Math.exp ( sumOfLogs.getN (  )  /  ( double )  sumOfLogs.getN (  )  ) ;^72^^^^^70^76^return Math.exp ( sumOfLogs.getResult (  )  /  ( double )  sumOfLogs.getN (  )  ) ;^[CLASS] GeometricMean  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] SumOfLogs  sumOfLogs  long  serialVersionUID  boolean  
[P7_Replace_Invocation]^return Math.exp ( sumOfLogs.getResult (  )  /  ( double )  sumOfLogs.clear (  )  ) ;^72^^^^^70^76^return Math.exp ( sumOfLogs.getResult (  )  /  ( double )  sumOfLogs.getN (  )  ) ;^[CLASS] GeometricMean  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] SumOfLogs  sumOfLogs  long  serialVersionUID  boolean  
[P8_Replace_Mix]^return Math.exp ( sumOfLogs.getResult (  )  /  ( double )  sumOfLogs .getResult (  )   ) ;^72^^^^^70^76^return Math.exp ( sumOfLogs.getResult (  )  /  ( double )  sumOfLogs.getN (  )  ) ;^[CLASS] GeometricMean  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] SumOfLogs  sumOfLogs  long  serialVersionUID  boolean  
[P13_Insert_Block]^if  (  ( sumOfLogs.getN (  )  )  > 0 )  {     return exp (  (  ( sumOfLogs.getResult (  )  )  /  (  ( double )   ( sumOfLogs.getN (  )  )  )  )  ) ; }else {     return NaN; }^72^^^^^70^76^[Delete]^[CLASS] GeometricMean  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] SumOfLogs  sumOfLogs  long  serialVersionUID  boolean  
[P2_Replace_Operator]^return Math.exp ( sumOfLogs.getResult (  )  +  ( double )  sumOfLogs.getN (  )  ) ;^72^^^^^70^76^return Math.exp ( sumOfLogs.getResult (  )  /  ( double )  sumOfLogs.getN (  )  ) ;^[CLASS] GeometricMean  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] SumOfLogs  sumOfLogs  long  serialVersionUID  boolean  
[P14_Delete_Statement]^^72^^^^^70^76^return Math.exp ( sumOfLogs.getResult (  )  /  ( double )  sumOfLogs.getN (  )  ) ;^[CLASS] GeometricMean  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] SumOfLogs  sumOfLogs  long  serialVersionUID  boolean  
[P1_Replace_Type]^return Math.exp ( sumOfLogs.getResult (  )  /  ( int )  sumOfLogs.getN (  )  ) ;^72^^^^^70^76^return Math.exp ( sumOfLogs.getResult (  )  /  ( double )  sumOfLogs.getN (  )  ) ;^[CLASS] GeometricMean  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] SumOfLogs  sumOfLogs  long  serialVersionUID  boolean  
[P2_Replace_Operator]^return Math.exp ( sumOfLogs.getResult (  )  *  ( double )  sumOfLogs.getN (  )  ) ;^72^^^^^70^76^return Math.exp ( sumOfLogs.getResult (  )  /  ( double )  sumOfLogs.getN (  )  ) ;^[CLASS] GeometricMean  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] SumOfLogs  sumOfLogs  long  serialVersionUID  boolean  
[P7_Replace_Invocation]^sumOfLogs.getN (  ) ;^82^^^^^81^83^sumOfLogs.clear (  ) ;^[CLASS] GeometricMean  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] SumOfLogs  sumOfLogs  long  serialVersionUID  boolean  
[P14_Delete_Statement]^^82^^^^^81^83^sumOfLogs.clear (  ) ;^[CLASS] GeometricMean  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] SumOfLogs  sumOfLogs  long  serialVersionUID  boolean  
[P11_Insert_Donor_Statement]^sumOfLogs.increment ( d ) ;sumOfLogs.clear (  ) ;^82^^^^^81^83^sumOfLogs.clear (  ) ;^[CLASS] GeometricMean  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] SumOfLogs  sumOfLogs  long  serialVersionUID  boolean  
[P11_Insert_Donor_Statement]^return sumOfLogs.getN (  ) ;sumOfLogs.clear (  ) ;^82^^^^^81^83^sumOfLogs.clear (  ) ;^[CLASS] GeometricMean  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] SumOfLogs  sumOfLogs  long  serialVersionUID  boolean  
[P2_Replace_Operator]^return Math.exp ( sumOfLogs.evaluate ( values, begin, length )  -  ( double )  length ) ;^103^104^^^^101^105^return Math.exp ( sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^[CLASS] GeometricMean  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] SumOfLogs  sumOfLogs  boolean  double[]  values  long  serialVersionUID  int  begin  length  
[P5_Replace_Variable]^return Math.exp ( sumOfLogs.evaluate (  begin, length )  /  ( double )  length ) ;^103^104^^^^101^105^return Math.exp ( sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^[CLASS] GeometricMean  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] SumOfLogs  sumOfLogs  boolean  double[]  values  long  serialVersionUID  int  begin  length  
[P5_Replace_Variable]^return Math.exp ( sumOfLogs.evaluate ( values,  length )  /  ( double )  length ) ;^103^104^^^^101^105^return Math.exp ( sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^[CLASS] GeometricMean  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] SumOfLogs  sumOfLogs  boolean  double[]  values  long  serialVersionUID  int  begin  length  
[P5_Replace_Variable]^return Math.exp ( sumOfLogs.evaluate ( values, begin )  /  ( double )  length ) ;^103^104^^^^101^105^return Math.exp ( sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^[CLASS] GeometricMean  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] SumOfLogs  sumOfLogs  boolean  double[]  values  long  serialVersionUID  int  begin  length  
[P5_Replace_Variable]^return Math.exp ( sumOfLogs.evaluate ( length, begin, values )  /  ( double )  length ) ;^103^104^^^^101^105^return Math.exp ( sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^[CLASS] GeometricMean  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] SumOfLogs  sumOfLogs  boolean  double[]  values  long  serialVersionUID  int  begin  length  
[P5_Replace_Variable]^return Math.exp ( sumOfLogs.evaluate ( values, length, begin )  /  ( double )  length ) ;^103^104^^^^101^105^return Math.exp ( sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^[CLASS] GeometricMean  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] SumOfLogs  sumOfLogs  boolean  double[]  values  long  serialVersionUID  int  begin  length  
[P5_Replace_Variable]^return Math.exp ( begin.evaluate ( values, sumOfLogs, length )  /  ( double )  length ) ;^103^104^^^^101^105^return Math.exp ( sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^[CLASS] GeometricMean  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] SumOfLogs  sumOfLogs  boolean  double[]  values  long  serialVersionUID  int  begin  length  
[P8_Replace_Mix]^return Math.exp ( sumOfLogs.evaluate ( values, begin, length %  2 )  /  ( double )  length %  2 ) ;^103^104^^^^101^105^return Math.exp ( sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^[CLASS] GeometricMean  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] SumOfLogs  sumOfLogs  boolean  double[]  values  long  serialVersionUID  int  begin  length  
[P2_Replace_Operator]^return Math.exp ( sumOfLogs.evaluate ( values, begin, length )  +  ( double )  length ) ;^103^104^^^^101^105^return Math.exp ( sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^[CLASS] GeometricMean  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] SumOfLogs  sumOfLogs  boolean  double[]  values  long  serialVersionUID  int  begin  length  
[P5_Replace_Variable]^return Math.exp ( sumOfLogs.evaluate ( begin, values, length )  /  ( double )  length ) ;^103^104^^^^101^105^return Math.exp ( sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^[CLASS] GeometricMean  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] SumOfLogs  sumOfLogs  boolean  double[]  values  long  serialVersionUID  int  begin  length  
[P5_Replace_Variable]^return Math.exp ( values.evaluate ( sumOfLogs, begin, length )  /  ( double )  length ) ;^103^104^^^^101^105^return Math.exp ( sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^[CLASS] GeometricMean  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] SumOfLogs  sumOfLogs  boolean  double[]  values  long  serialVersionUID  int  begin  length  
[P14_Delete_Statement]^^103^104^^^^101^105^return Math.exp ( sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^[CLASS] GeometricMean  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] SumOfLogs  sumOfLogs  boolean  double[]  values  long  serialVersionUID  int  begin  length  
[P5_Replace_Variable]^sumOfLogs.evaluate ( values, begin, begin )  /  ( double )  length ) ;^104^^^^^101^105^sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^[CLASS] GeometricMean  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] SumOfLogs  sumOfLogs  boolean  double[]  values  long  serialVersionUID  int  begin  length  
[P5_Replace_Variable]^sumOfLogs.evaluate (  begin, length )  /  ( double )  length ) ;^104^^^^^101^105^sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^[CLASS] GeometricMean  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] SumOfLogs  sumOfLogs  boolean  double[]  values  long  serialVersionUID  int  begin  length  
[P5_Replace_Variable]^sumOfLogs.evaluate ( values,  length )  /  ( double )  length ) ;^104^^^^^101^105^sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^[CLASS] GeometricMean  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] SumOfLogs  sumOfLogs  boolean  double[]  values  long  serialVersionUID  int  begin  length  
[P5_Replace_Variable]^sumOfLogs.evaluate ( values, begin )  /  ( double )  length ) ;^104^^^^^101^105^sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^[CLASS] GeometricMean  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] SumOfLogs  sumOfLogs  boolean  double[]  values  long  serialVersionUID  int  begin  length  
[P5_Replace_Variable]^sumOfLogs.evaluate ( begin, values, length )  /  ( double )  length ) ;^104^^^^^101^105^sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^[CLASS] GeometricMean  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] SumOfLogs  sumOfLogs  boolean  double[]  values  long  serialVersionUID  int  begin  length  
[P5_Replace_Variable]^sumOfLogs.evaluate ( values, length, begin )  /  ( double )  length ) ;^104^^^^^101^105^sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^[CLASS] GeometricMean  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] SumOfLogs  sumOfLogs  boolean  double[]  values  long  serialVersionUID  int  begin  length  
[P14_Delete_Statement]^^104^^^^^101^105^sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^[CLASS] GeometricMean  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] SumOfLogs  sumOfLogs  boolean  double[]  values  long  serialVersionUID  int  begin  length  
[P11_Insert_Donor_Statement]^return Math.exp ( sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^104^^^^^101^105^sumOfLogs.evaluate ( values, begin, length )  /  ( double )  length ) ;^[CLASS] GeometricMean  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] SumOfLogs  sumOfLogs  boolean  double[]  values  long  serialVersionUID  int  begin  length  
[P7_Replace_Invocation]^return sumOfLogs.clear (  ) ;^111^^^^^110^112^return sumOfLogs.getN (  ) ;^[CLASS] GeometricMean  [METHOD] getN [RETURN_TYPE] long   [VARIABLES] SumOfLogs  sumOfLogs  long  serialVersionUID  boolean  
[P7_Replace_Invocation]^return sumOfLogs .getResult (  )  ;^111^^^^^110^112^return sumOfLogs.getN (  ) ;^[CLASS] GeometricMean  [METHOD] getN [RETURN_TYPE] long   [VARIABLES] SumOfLogs  sumOfLogs  long  serialVersionUID  boolean  
[P12_Insert_Condition]^if  ( sumOfLogs.getN (  )  > 0 )  { return sumOfLogs.getN (  ) ; }^111^^^^^110^112^return sumOfLogs.getN (  ) ;^[CLASS] GeometricMean  [METHOD] getN [RETURN_TYPE] long   [VARIABLES] SumOfLogs  sumOfLogs  long  serialVersionUID  boolean  
[P14_Delete_Statement]^^111^^^^^110^112^return sumOfLogs.getN (  ) ;^[CLASS] GeometricMean  [METHOD] getN [RETURN_TYPE] long   [VARIABLES] SumOfLogs  sumOfLogs  long  serialVersionUID  boolean  
