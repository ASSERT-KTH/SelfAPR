[P1_Replace_Type]^private static final int DEFAULT_EPSILON = 10e-9;^33^^^^^28^38^private static final double DEFAULT_EPSILON = 10e-9;^[CLASS] Gamma 1   [VARIABLES] 
[P3_Replace_Literal]^private static final double DEFAULT_EPSILON = 10e-6;^33^^^^^28^38^private static final double DEFAULT_EPSILON = 10e-9;^[CLASS] Gamma 1   [VARIABLES] 
[P8_Replace_Mix]^private static final double DEFAULT_EPSILON ;^33^^^^^28^38^private static final double DEFAULT_EPSILON = 10e-9;^[CLASS] Gamma 1   [VARIABLES] 
[P8_Replace_Mix]^private static double[] lanczos  = null ;^36^37^^^^36^53^private static double[] lanczos = {^[CLASS] Gamma 1   [VARIABLES] 
[P1_Replace_Type]^private static final float HALF_LOG_2_PI = 0.5 * Math.log ( 2.0 * Math.PI ) ;^56^^^^^51^61^private static final double HALF_LOG_2_PI = 0.5 * Math.log ( 2.0 * Math.PI ) ;^[CLASS] Gamma 1   [VARIABLES] 
[P2_Replace_Operator]^private + static final double HALF_LOG_2_PI = 0.5 * Math.log ( 2.0 * Math.PI ) ;^56^^^^^51^61^private static final double HALF_LOG_2_PI = 0.5 * Math.log ( 2.0 * Math.PI ) ;^[CLASS] Gamma 1   [VARIABLES] 
[P2_Replace_Operator]^private / static final double HALF_LOG_2_PI = 0.5 * Math.log ( 2.0 * Math.PI ) ;^56^^^^^51^61^private static final double HALF_LOG_2_PI = 0.5 * Math.log ( 2.0 * Math.PI ) ;^[CLASS] Gamma 1   [VARIABLES] 
[P3_Replace_Literal]^private static final double HALF_LOG_2_PI = 0.08333333333333333 * Math.log ( 2.0 * Math.PI ) ;^56^^^^^51^61^private static final double HALF_LOG_2_PI = 0.5 * Math.log ( 2.0 * Math.PI ) ;^[CLASS] Gamma 1   [VARIABLES] 
[P3_Replace_Literal]^private static final double HALF_LOG_2_PI = 0.5 * Math.log ( 6.0 * Math.PI ) ;^56^^^^^51^61^private static final double HALF_LOG_2_PI = 0.5 * Math.log ( 2.0 * Math.PI ) ;^[CLASS] Gamma 1   [VARIABLES] 
[P7_Replace_Invocation]^private static final double HALF_LOG_2_PI = 0.5 * Math.abs ( 2.0 * Math.PI ) ;^56^^^^^51^61^private static final double HALF_LOG_2_PI = 0.5 * Math.log ( 2.0 * Math.PI ) ;^[CLASS] Gamma 1   [VARIABLES] 
[P8_Replace_Mix]^private static final double HALF_LOG_2_PI = 4.0d * Math.log ( 2.0 * Math.PI ) ;^56^^^^^51^61^private static final double HALF_LOG_2_PI = 0.5 * Math.log ( 2.0 * Math.PI ) ;^[CLASS] Gamma 1   [VARIABLES] 
[P14_Delete_Statement]^^63^^^^^62^64^super (  ) ;^[CLASS] Gamma 1  [METHOD] <init> [RETURN_TYPE] Gamma()   [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  boolean  
[P1_Replace_Type]^int ret;^84^^^^^83^103^double ret;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P11_Insert_Donor_Statement]^double n = 0.0;double ret;^84^^^^^83^103^double ret;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^if  ( Double.isNaN ( x )  &&  ( x <= 0.0 )  )  {^86^^^^^83^103^if  ( Double.isNaN ( x )  ||  ( x <= 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^if  ( Double.isNaN ( x )  ||  ( x < 0.0 )  )  {^86^^^^^83^103^if  ( Double.isNaN ( x )  ||  ( x <= 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P3_Replace_Literal]^if  ( ouble.isNaN ( x )  ||  ( x <= 0.0 )  )  {^86^^^^^83^103^if  ( Double.isNaN ( x )  ||  ( x <= 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P3_Replace_Literal]^if  ( Double.isNaN ( x )  ||  ( x <= 2.2 )  )  {^86^^^^^83^103^if  ( Double.isNaN ( x )  ||  ( x <= 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P3_Replace_Literal]^if  ( Double.isNaN ( x )  ||  ( x <= i.i )  )  {^86^^^^^83^103^if  ( Double.isNaN ( x )  ||  ( x <= 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^if  ( Double.isNaN ( tmp )  ||  ( x <= 0.0 )  )  {^86^^^^^83^103^if  ( Double.isNaN ( x )  ||  ( x <= 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^if  ( Double.issum ( x )  ||  ( x <= 0.0 )  )  {^86^^^^^83^103^if  ( Double.isNaN ( x )  ||  ( x <= 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P6_Replace_Expression]^if  ( Double.isNaN ( x )  ) {^86^^^^^83^103^if  ( Double.isNaN ( x )  ||  ( x <= 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P6_Replace_Expression]^if  (   ( x <= 0.0 )  )  {^86^^^^^83^103^if  ( Double.isNaN ( x )  ||  ( x <= 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P6_Replace_Expression]^if  ( x <= 0.0 )  {^86^^^^^83^103^if  ( Double.isNaN ( x )  ||  ( x <= 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P6_Replace_Expression]^if  ( 607.0 / 128.0 )  {^86^^^^^83^103^if  ( Double.isNaN ( x )  ||  ( x <= 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P6_Replace_Expression]^if  ( length - 1 )  {^86^^^^^83^103^if  ( Double.isNaN ( x )  ||  ( x <= 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P6_Replace_Expression]^if  ( i > 0 )  {^86^^^^^83^103^if  ( Double.isNaN ( x )  ||  ( x <= 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P6_Replace_Expression]^if  ( sum + lanczos[i] / (x + i) )  {^86^^^^^83^103^if  ( Double.isNaN ( x )  ||  ( x <= 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P6_Replace_Expression]^if  ( lanczos[i] / x + i )  {^86^^^^^83^103^if  ( Double.isNaN ( x )  ||  ( x <= 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P6_Replace_Expression]^if  ( x + i )  {^86^^^^^83^103^if  ( Double.isNaN ( x )  ||  ( x <= 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P6_Replace_Expression]^if  ( sum + lanczos[0] )  {^86^^^^^83^103^if  ( Double.isNaN ( x )  ||  ( x <= 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P6_Replace_Expression]^if  ( x + g + 0.5 )  {^86^^^^^83^103^if  ( Double.isNaN ( x )  ||  ( x <= 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P6_Replace_Expression]^if  ( x + g )  {^86^^^^^83^103^if  ( Double.isNaN ( x )  ||  ( x <= 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P6_Replace_Expression]^if  (  (  ( x + 0.5 )  *  ( log ( tmp )  )  )  - tmp )  +  ( HALF_LOG_2_PI )  + log (  ( sum / x ) )  {^86^^^^^83^103^if  ( Double.isNaN ( x )  ||  ( x <= 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P6_Replace_Expression]^if  (  (  ( x + 0.5 )  *  ( log ( tmp )  )  )  - tmp + HALF_LOG_2_PI )  {^86^^^^^83^103^if  ( Double.isNaN ( x )  ||  ( x <= 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P6_Replace_Expression]^if  (  ( x + 0.5 )  *  ( log ( tmp )  )  - tmp )  {^86^^^^^83^103^if  ( Double.isNaN ( x )  ||  ( x <= 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P6_Replace_Expression]^if  ( x + 0.5 * log ( tmp ) )  {^86^^^^^83^103^if  ( Double.isNaN ( x )  ||  ( x <= 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P6_Replace_Expression]^if  ( x + 0.5 )  {^86^^^^^83^103^if  ( Double.isNaN ( x )  ||  ( x <= 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P6_Replace_Expression]^if  ( sum / x )  {^86^^^^^83^103^if  ( Double.isNaN ( x )  ||  ( x <= 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P8_Replace_Mix]^if  (   ( x <= 1.0d )  )  {^86^^^^^83^103^if  ( Double.isNaN ( x )  ||  ( x <= 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P1_Replace_Type]^for  (  short  i = lanczos.length - 1; i > 0; --i )  {^92^^^^^83^103^for  ( int i = lanczos.length - 1; i > 0; --i )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^for  ( int i = lanczos.length  &&  1; i > 0; --i )  {^92^^^^^83^103^for  ( int i = lanczos.length - 1; i > 0; --i )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^for  ( int i = lanczos.length - 1; i < 0; --i )  {^92^^^^^83^103^for  ( int i = lanczos.length - 1; i > 0; --i )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P3_Replace_Literal]^for  ( int i = lanczos.length ; i > 0; --i )  {^92^^^^^83^103^for  ( int i = lanczos.length - 1; i > 0; --i )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P3_Replace_Literal]^for  ( int i = lanczos.length - 1; i > i; --i )  {^92^^^^^83^103^for  ( int i = lanczos.length - 1; i > 0; --i )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^sum = sum +  <=  ( lanczos[i] /  ( x + i )  ) ;^93^^^^^83^103^sum = sum +  ( lanczos[i] /  ( x + i )  ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^sum = sum +  ( lanczos[i] *  ( x + i )  ) ;^93^^^^^83^103^sum = sum +  ( lanczos[i] /  ( x + i )  ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^sum = sum +  ( lanczos[i] /  ( x  ||  i )  ) ;^93^^^^^83^103^sum = sum +  ( lanczos[i] /  ( x + i )  ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^sum = x +  ( lanczos[i] /  ( x + i )  ) ;^93^^^^^83^103^sum = sum +  ( lanczos[i] /  ( x + i )  ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^sum = sum +  ( lanczos[i] /  ( ret + i )  ) ;^93^^^^^83^103^sum = sum +  ( lanczos[i] /  ( x + i )  ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^sum = lanczos +  ( sum[i] /  ( x + i )  ) ;^93^^^^^83^103^sum = sum +  ( lanczos[i] /  ( x + i )  ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^sum = sum +  ( i[i] /  ( x + lanczos )  ) ;^93^^^^^83^103^sum = sum +  ( lanczos[i] /  ( x + i )  ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^sum = x +  ( lanczos[i] /  ( sum + i )  ) ;^93^^^^^83^103^sum = sum +  ( lanczos[i] /  ( x + i )  ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P11_Insert_Donor_Statement]^sum = sum + lanczos[0];sum = sum +  ( lanczos[i] /  ( x + i )  ) ;^93^^^^^83^103^sum = sum +  ( lanczos[i] /  ( x + i )  ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P11_Insert_Donor_Statement]^an = an *  ( x /  ( a + n )  ) ;sum = sum +  ( lanczos[i] /  ( x + i )  ) ;^93^^^^^83^103^sum = sum +  ( lanczos[i] /  ( x + i )  ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^sum = sum +  <  ( lanczos[i] /  ( x + i )  ) ;^93^^^^^83^103^sum = sum +  ( lanczos[i] /  ( x + i )  ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^sum = sum +  ( lanczos[i] +  ( x + i )  ) ;^93^^^^^83^103^sum = sum +  ( lanczos[i] /  ( x + i )  ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^sum = sum +  ( lanczos[i] /  ( x  <  i )  ) ;^93^^^^^83^103^sum = sum +  ( lanczos[i] /  ( x + i )  ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^sum = sum +  ( lanczos[i] /  ( sum + i )  ) ;^93^^^^^83^103^sum = sum +  ( lanczos[i] /  ( x + i )  ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^sum = i +  ( lanczos[i] /  ( x + sum )  ) ;^93^^^^^83^103^sum = sum +  ( lanczos[i] /  ( x + i )  ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^sum = sum +  ( lanczos[i] /  ( i + x )  ) ;^93^^^^^83^103^sum = sum +  ( lanczos[i] /  ( x + i )  ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^sum = sum +  ( x[i] /  ( lanczos + i )  ) ;^93^^^^^83^103^sum = sum +  ( lanczos[i] /  ( x + i )  ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P3_Replace_Literal]^sum = sum + lanczos[i];^95^^^^^83^103^sum = sum + lanczos[0];^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^sum = x + lanczos[0];^95^^^^^83^103^sum = sum + lanczos[0];^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^sum = lanczos + sum[0];^95^^^^^83^103^sum = sum + lanczos[0];^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P8_Replace_Mix]^sum = sum + lanczos[2];^95^^^^^83^103^sum = sum + lanczos[0];^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P11_Insert_Donor_Statement]^sum = sum +  ( lanczos[i] /  ( x + i )  ) ;sum = sum + lanczos[0];^95^^^^^83^103^sum = sum + lanczos[0];^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P11_Insert_Donor_Statement]^sum = sum + an;sum = sum + lanczos[0];^95^^^^^83^103^sum = sum + lanczos[0];^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^ret =  <<  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^ret =  >>  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^ret =  (  ( x + .5 )  * Math.log ( tmp )  )   &  tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^ret / =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^ret =  |  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum + x ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^ret =  (  ( tmp + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^ret =  (  ( x + .5 )  * Math.log ( x )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( tmp / x ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + x + Math.log ( sum / x ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^ret =  (  ( HALF_LOG_2_PI + .5 )  * Math.log ( tmp )  )  - tmp + x + Math.log ( sum / x ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^ret =  (  ( x + .5 )  * Math.log ( HALF_LOG_2_PI )  )  - tmp + tmp + Math.log ( sum / x ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^ret =  (  ( x + .5 )  * Math.log ( sum )  )  - tmp + HALF_LOG_2_PI + Math.log ( tmp / x ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P7_Replace_Invocation]^ret =  (  ( x + .5 )  * Math.abs ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P8_Replace_Mix]^ret =   (  ( tmp + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / tmp ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P1_Replace_Type]^int g = 607.0 / 128.0;^89^^^^^83^103^double g = 607.0 / 128.0;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^double g = 607.0 - 128.0;^89^^^^^83^103^double g = 607.0 / 128.0;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P11_Insert_Donor_Statement]^double n = 0.0;double g = 607.0 / 128.0;^89^^^^^83^103^double g = 607.0 / 128.0;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P11_Insert_Donor_Statement]^double an = 1.0 / a;double g = 607.0 / 128.0;^89^^^^^83^103^double g = 607.0 / 128.0;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P1_Replace_Type]^float sum = 0.0;^91^^^^^83^103^double sum = 0.0;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P11_Insert_Donor_Statement]^double n = 0.0;double sum = 0.0;^91^^^^^83^103^double sum = 0.0;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P11_Insert_Donor_Statement]^double sum = an;double sum = 0.0;^91^^^^^83^103^double sum = 0.0;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P11_Insert_Donor_Statement]^double an = 1.0 / a;double sum = 0.0;^91^^^^^83^103^double sum = 0.0;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P1_Replace_Type]^for  (  long  i = lanczos.length - 1; i > 0; --i )  {^92^^^^^83^103^for  ( int i = lanczos.length - 1; i > 0; --i )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P1_Replace_Type]^int tmp = x + g + .5;^97^^^^^83^103^double tmp = x + g + .5;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^double tmp = x  >=  g + .5;^97^^^^^83^103^double tmp = x + g + .5;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^double tmp = sum + g + .5;^97^^^^^83^103^double tmp = x + g + .5;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^double tmp = x + x + .5;^97^^^^^83^103^double tmp = x + g + .5;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^double tmp = g + x + .5;^97^^^^^83^103^double tmp = x + g + .5;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P11_Insert_Donor_Statement]^double an = 1.0 / a;double tmp = x + g + .5;^97^^^^^83^103^double tmp = x + g + .5;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^ret =  (  ( x + .5 )  * Math.log ( ret )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P14_Delete_Statement]^^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^HALF_LOG_2_PI + Math.log ( sum * x ) ;^99^^^^^83^103^HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^HALF_LOG_2_PI + Math.log ( tmp / x ) ;^99^^^^^83^103^HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^HALF_LOG_2_PI + Math.log ( x / sum ) ;^99^^^^^83^103^HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P8_Replace_Mix]^HALF_LOG_2_PI + Math.log ( sum / tmp ) ;^99^^^^^83^103^HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P14_Delete_Statement]^^99^^^^^83^103^HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P8_Replace_Mix]^ret  = null ;^87^^^^^83^103^ret = Double.NaN;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^for  ( int i = lanczos.length  ^  1; i > 0; --i )  {^92^^^^^83^103^for  ( int i = lanczos.length - 1; i > 0; --i )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^for  ( int i = lanczos.length - 1; i >= 0; --i )  {^92^^^^^83^103^for  ( int i = lanczos.length - 1; i > 0; --i )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P3_Replace_Literal]^for  ( int i = lanczos.length - i; i > 0; --i )  {^92^^^^^83^103^for  ( int i = lanczos.length - 1; i > 0; --i )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^sum = sum +  ^  ( lanczos[i] /  ( x + i )  ) ;^93^^^^^83^103^sum = sum +  ( lanczos[i] /  ( x + i )  ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^sum = sum +  ( lanczos[i] /  ( x   instanceof   i )  ) ;^93^^^^^83^103^sum = sum +  ( lanczos[i] /  ( x + i )  ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^sum = tmp +  ( lanczos[i] /  ( x + i )  ) ;^93^^^^^83^103^sum = sum +  ( lanczos[i] /  ( x + i )  ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^sum = sum +  ( lanczos[i] /  ( tmp + i )  ) ;^93^^^^^83^103^sum = sum +  ( lanczos[i] /  ( x + i )  ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P8_Replace_Mix]^sum =  ret +  ( lanczos[i] /  ( x + i )  ) ;^93^^^^^83^103^sum = sum +  ( lanczos[i] /  ( x + i )  ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^sum = sum +  ( lanczos[i] -  ( x + i )  ) ;^93^^^^^83^103^sum = sum +  ( lanczos[i] /  ( x + i )  ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^sum = sum +  ( lanczos[i] /  ( x  ^  i )  ) ;^93^^^^^83^103^sum = sum +  ( lanczos[i] /  ( x + i )  ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^sum = tmp + lanczos[0];^95^^^^^83^103^sum = sum + lanczos[0];^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P8_Replace_Mix]^sum = sum + lanczos[0L];^95^^^^^83^103^sum = sum + lanczos[0];^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^ret =  ==  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^ret =  (  ( x + .5 )  * Math.log ( tmp )  )   ||  tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^ret + =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^ret =  ^  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum - x ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^ret =  (  ( x + .5 )  * Math.log ( sum )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( x / x ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + tmp + Math.log ( sum / x ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^ret =  (  ( sum + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( x / x ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^ret =  (  ( tmp + .5 )  * Math.log ( x )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + sum + Math.log ( HALF_LOG_2_PI / x ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P8_Replace_Mix]^ret =   (  ( sum + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / sum ) ;^98^99^^^^83^103^ret =  (  ( x + .5 )  * Math.log ( tmp )  )  - tmp + HALF_LOG_2_PI + Math.log ( sum / x ) ;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^double g = 607.0 * 128.0;^89^^^^^83^103^double g = 607.0 / 128.0;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P3_Replace_Literal]^double g = 67.44444444444444 / 128.0;^89^^^^^83^103^double g = 607.0 / 128.0;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P3_Replace_Literal]^double g = 607.0 / 42.666666666666664;^89^^^^^83^103^double g = 607.0 / 128.0;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P1_Replace_Type]^int sum = 0.0;^91^^^^^83^103^double sum = 0.0;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^for  ( int i = lanczos.length  |  1; i > 0; --i )  {^92^^^^^83^103^for  ( int i = lanczos.length - 1; i > 0; --i )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P2_Replace_Operator]^double tmp = x  |  g + .5;^97^^^^^83^103^double tmp = x + g + .5;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^if  ( Double.isNaN ( ret )  ||  ( x <= 0.0 )  )  {^86^^^^^83^103^if  ( Double.isNaN ( x )  ||  ( x <= 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^return tmp;^102^^^^^83^103^return ret;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P8_Replace_Mix]^return x;^102^^^^^83^103^return ret;^[CLASS] Gamma 1  [METHOD] logGamma [RETURN_TYPE] double   double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  g  ret  sum  tmp  x  int  i  
[P5_Replace_Variable]^return regularizedGammaP ( sum, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^116^^^^^113^117^return regularizedGammaP ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  g  ret  sum  tmp  x  boolean  
[P5_Replace_Variable]^return regularizedGammaP ( a, tmp, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^116^^^^^113^117^return regularizedGammaP ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  g  ret  sum  tmp  x  boolean  
[P5_Replace_Variable]^return regularizedGammaP ( a, x, x, Integer.MAX_VALUE ) ;^116^^^^^113^117^return regularizedGammaP ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  g  ret  sum  tmp  x  boolean  
[P5_Replace_Variable]^return regularizedGammaP (  x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^116^^^^^113^117^return regularizedGammaP ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  g  ret  sum  tmp  x  boolean  
[P5_Replace_Variable]^return regularizedGammaP ( a,  DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^116^^^^^113^117^return regularizedGammaP ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  g  ret  sum  tmp  x  boolean  
[P5_Replace_Variable]^return regularizedGammaP ( a, x,  Integer.MAX_VALUE ) ;^116^^^^^113^117^return regularizedGammaP ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  g  ret  sum  tmp  x  boolean  
[P5_Replace_Variable]^return regularizedGammaP ( x, a, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^116^^^^^113^117^return regularizedGammaP ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  g  ret  sum  tmp  x  boolean  
[P5_Replace_Variable]^return regularizedGammaP ( DEFAULT_EPSILON, x, a, Integer.MAX_VALUE ) ;^116^^^^^113^117^return regularizedGammaP ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  g  ret  sum  tmp  x  boolean  
[P5_Replace_Variable]^return regularizedGammaP ( tmp, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^116^^^^^113^117^return regularizedGammaP ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  g  ret  sum  tmp  x  boolean  
[P8_Replace_Mix]^return regularizedGammaP ( a, x, tmp, Integer.MAX_VALUE ) ;^116^^^^^113^117^return regularizedGammaP ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  g  ret  sum  tmp  x  boolean  
[P14_Delete_Statement]^^116^^^^^113^117^return regularizedGammaP ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  g  ret  sum  tmp  x  boolean  
[P1_Replace_Type]^float ret;^152^^^^^137^167^double ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^double n = 0.0;double ret;^152^^^^^137^167^double ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^while  ( Math.abs ( an )  > epsilon || n < maxIterations )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^while  ( Math.abs ( an )  >= epsilon && n < maxIterations )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^while  ( Math.abs ( an )  > epsilon && n <= maxIterations )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( x )  > epsilon && n < maxIterations )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( an )  > sum && n < maxIterations )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( an )  > epsilon && ret < maxIterations )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( retn )  > epsilon && n < maxIterations )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( a )  > epsilon && n < maxIterations )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( epsilon )  > an && n < maxIterations )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( an )  > maxIterations && n < epsilon )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( nn )  > epsilon && a < maxIterations )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P7_Replace_Invocation]^while  ( Math.log ( an )  > epsilon && n < maxIterations )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^while  ( Math.log ( an )  > epsilon && g < maxIterations )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^n = n + 4.0;^169^^^^^154^184^n = n + 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^n = g + 1.0;^169^^^^^154^184^n = n + 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^n = n + 4.0d;^169^^^^^154^184^n = n + 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^an / = an *  ( x /  ( a + n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^an = an *  ( x *  ( a + n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^an = an *  ( x /  ( a  >>  n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = ret *  ( x /  ( a + n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = an *  ( sum /  ( a + n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = xn *  ( x /  ( a + n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = an *  ( x /  ( a + ret )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = x *  ( an /  ( a + n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = nn *  ( x /  ( a + a )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = n *  ( x /  ( a + an )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^an =  x *  ( x /  ( a + n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^sum = sum +  ( lanczos[i] /  ( x + i )  ) ;an = an *  ( x /  ( a + n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^sum = tmp + an;^173^^^^^158^188^sum = sum + an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^sum = sum + x;^173^^^^^158^188^sum = sum + an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^sum = an + sum;^173^^^^^158^188^sum = sum + an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^sum =  ret + an;^173^^^^^158^188^sum = sum + an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^sum = sum + lanczos[0];sum = sum + an;^173^^^^^158^188^sum = sum + an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^if  ( Double.isNaN ( a )  && Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a < 0.0 )  ||  ( x < 0.0 )  )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x == 0.0 )  )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x <= 0.0 )  )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^if  ( ouble.isNaN ( a )  || ouble.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^if  ( Double.isNaN ( x )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^if  ( Double.isNaN ( a )  || Double.isNaN ( sum )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^if  ( Double.issum ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  ( Double.isNaN ( a )  ) {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  (  Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  ( isNaN(a) || isNaN(x) || a <= 0.0) )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  ( isNaN(a || isNaN(x)) )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  ( a <= 0.0 )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  ( x < 0.0 )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  ( x == 0.0 )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  ( a >= 1.0 && x > a )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  ( a >= 1.0 )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  ( x > a )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  ( 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations) )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  ( 1.0 / a )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  ( abs(an) > epsilon && n < maxIterations )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  ( abs ( an )  > epsilon )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  ( n < maxIterations )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  ( n + 1.0 )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  ( an * x / (a + n) )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  ( x / a + n )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  ( a + n )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  ( sum + an )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  ( n >= maxIterations )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  ( exp((((-x) + (a * log(x))) - logGamma(a))) * sum )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  (  ( -x )  +  ( a *  ( log ( x )  )  )  - logGamma ( a ) )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  ( -x + a *  ( log ( x )  ) )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  ( a * log ( x ) )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 4.0d )  ||  ( x < 4.0d )  )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^while  ( Math.abs ( an )  == epsilon && n < maxIterations )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( an )  > epsilon && x < maxIterations )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( xn )  > epsilon && n < maxIterations )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( epsilonn )  > a && n < maxIterations )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( maxIterationsn )  > epsilon && n < a )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^while  ( Math.log ( tmp )  > epsilon && n < maxIterations )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^n = n + 6.0;^169^^^^^154^184^n = n + 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^n = sum + 1.0;^169^^^^^154^184^n = n + 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^n = n + 1.0D;^169^^^^^154^184^n = n + 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^an + = an *  ( x /  ( a + n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^an = an *  ( x /  ( a  !=  n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = an *  ( ret /  ( a + n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = retn *  ( x /  ( a + n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = a *  ( x /  ( an + n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = xn *  ( a /  ( a + n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = ann *  ( x /  ( a + n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^sum = n + an;^173^^^^^158^188^sum = sum + an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^sum = sum + ret;^173^^^^^158^188^sum = sum + an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^sum =  g + an;^173^^^^^158^188^sum = sum + an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^} else if  ( x >= 0.0 )  {^156^^^^^141^171^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^} else if  ( tmp == 0.0 )  {^156^^^^^141^171^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( a >= 1.0 && x > a )  {^156^^^^^141^171^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( a >= 1.0 )  {^156^^^^^141^171^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( x > a )  {^156^^^^^141^171^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations) )  {^156^^^^^141^171^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( 1.0 / a )  {^156^^^^^141^171^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( abs(an) > epsilon && n < maxIterations )  {^156^^^^^141^171^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( abs ( an )  > epsilon )  {^156^^^^^141^171^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( n < maxIterations )  {^156^^^^^141^171^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( n + 1.0 )  {^156^^^^^141^171^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( an * x / (a + n) )  {^156^^^^^141^171^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( x / a + n )  {^156^^^^^141^171^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( a + n )  {^156^^^^^141^171^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( sum + an )  {^156^^^^^141^171^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( n >= maxIterations )  {^156^^^^^141^171^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( exp((((-x) + (a * log(x))) - logGamma(a))) * sum )  {^156^^^^^141^171^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  (  ( -x )  +  ( a *  ( log ( x )  )  )  - logGamma ( a ) )  {^156^^^^^141^171^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( -x + a *  ( log ( x )  ) )  {^156^^^^^141^171^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( a * log ( x ) )  {^156^^^^^141^171^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else {^156^^^^^141^171^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^}  if  ( x == 4.0d )  {^156^^^^^141^171^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P9_Replace_Statement]^} else if  ( x < a || a < 1.0 )  {^156^^^^^141^171^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( an )  > epsilon && sum < maxIterations )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^while  ( Math.abs ( n )  > epsilon && n < maxIterations )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^n = n + 0.3333333333333333;^169^^^^^154^184^n = n + 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^n = x + 1.0;^169^^^^^154^184^n = n + 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^n = n + 2.0d;^169^^^^^154^184^n = n + 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^an = an *  ( x /  ( a  >=  n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = tmp *  ( x /  ( a + n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = an *  ( tmp /  ( a + n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = an *  ( n /  ( a + x )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^an =  sum *  ( x /  ( a + n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^sum =  x + an;^173^^^^^158^188^sum = sum + an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^} else if  ( a >= 1.0 || x > a )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^} else if  ( a > 1.0 && x > a )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^} else if  ( a >= 1.0 && x >= a )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^} else if  ( a >= 5.0 && x > a )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^} else if  ( a >= Infinity && x > a )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^} else if  ( a >= 3.0 && x > a )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^} else if  ( a >= 0.3333333333333333 && x > a )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^} else if  ( tmp >= 1.0 && x > a )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^} else if  ( a >= 1.0 && tmp > a )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^} else if  ( x >= 1.0 && a > a )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( a >= 1.0 ) {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  (  x > a )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( 1.0 - regularizedGammaQ(a, x, epsilon, maxIterations) )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( 1.0 / a )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( abs(an) > epsilon && n < maxIterations )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( abs ( an )  > epsilon )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( n < maxIterations )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( n + 1.0 )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( an * x / (a + n) )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( x / a + n )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( a + n )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( sum + an )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( n >= maxIterations )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( exp((((-x) + (a * log(x))) - logGamma(a))) * sum )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  (  ( -x )  +  ( a *  ( log ( x )  )  )  - logGamma ( a ) )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( -x + a *  ( log ( x )  ) )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else if  ( a * log ( x ) )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^} else {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^}  if  ( a >= 3.0d && x > a )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P9_Replace_Statement]^} else if  ( x == 0.0 )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^while  ( Math.abs ( an )  > epsilon || n < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^while  ( Math.abs ( an )  < epsilon && n < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^while  ( Math.abs ( an )  > epsilon && n == maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( tmp )  > epsilon && n < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( an )  > x && n < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( an )  > epsilon && x < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( sumn )  > epsilon && n < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( n )  > epsilon && an < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( epsilonn )  > a && n < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( nn )  > epsilon && a < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( an )  > epsilon && maxIterations < n )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P7_Replace_Invocation]^while  ( Math.log ( an )  > epsilon && n < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^while  ( Math.log ( an )  > epsilon && g < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^n = n + 6.0;^169^^^^^158^181^n = n + 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^n = n + 3.0d;^169^^^^^158^181^n = n + 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^an + = an *  ( x /  ( a + n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^an = an *  ( x *  ( a + n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^an = an *  ( x /  ( a  >>  n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = sum *  ( x /  ( a + n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = an *  ( ret /  ( a + n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = retn *  ( x /  ( a + n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = an *  ( x /  ( a + g )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = x *  ( an /  ( a + n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = xn *  ( a /  ( a + n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = nn *  ( x /  ( a + a )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = an *  ( n /  ( a + x )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^an =  n *  ( x /  ( a + n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^sum = sum +  ( lanczos[i] /  ( x + i )  ) ;an = an *  ( x /  ( a + n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^sum = tmp + an;^173^^^^^158^181^sum = sum + an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^sum = sum + ret;^173^^^^^158^181^sum = sum + an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^sum = an + sum;^173^^^^^158^181^sum = sum + an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^sum =  ret + an;^173^^^^^158^181^sum = sum + an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^sum = sum + lanczos[0];sum = sum + an;^173^^^^^158^181^sum = sum + an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^if  ( n > maxIterations )  {^175^^^^^158^181^if  ( n >= maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  ( exp((((-x) + (a * log(x))) - logGamma(a))) * sum )  {^175^^^^^158^181^if  ( n >= maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  (  ( -x )  +  ( a *  ( log ( x )  )  )  - logGamma ( a ) )  {^175^^^^^158^181^if  ( n >= maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  ( -x + a *  ( log ( x )  ) )  {^175^^^^^158^181^if  ( n >= maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  ( a * log ( x ) )  {^175^^^^^158^181^if  ( n >= maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^if  ( sum >= maxIterations )  {^175^^^^^158^181^if  ( n >= maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P15_Unwrap_Block]^throw new org.apache.commons.math.ConvergenceException("maximum number of iterations reached");^175^176^177^178^179^158^181^if  ( n >= maxIterations )  { throw new ConvergenceException ( "maximum number of iterations reached" ) ; } else { ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum; }^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P16_Remove_Block]^^175^176^177^178^179^158^181^if  ( n >= maxIterations )  { throw new ConvergenceException ( "maximum number of iterations reached" ) ; } else { ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum; }^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret + = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )   &  logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ==  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret - = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( ret )  )  - logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( tmp * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( sum )  )  - logGamma ( a )  )  * x;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( sum * Math.log ( x )  )  - logGamma ( a )  )  * a;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P7_Replace_Invocation]^ret = Math.exp ( -x +  ( a * Math.abs ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret =  Math.esump ( -sum +  ( a * Math.log ( sum )  )  - logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  >>  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( n )  )  - logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( n * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( x * Math.log ( a )  )  - logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret = Math.exp ( -x +  ( a * Math.log ( tmp )  )  - logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P14_Delete_Statement]^^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( g )  )  - logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( x * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^throw new ConvergenceException ( "max" ) ;^176^177^^^^158^181^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^throw new ConvergenceException ( "maximumaximum number of iterations reached" ) ;^176^177^^^^158^181^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^n = ret + 1.0;^169^^^^^158^181^n = n + 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^n = n + 0.0d;^169^^^^^158^181^n = n + 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^an / = an *  ( x /  ( a + n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^an = an *  ( x +  ( a + n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^an = an *  ( x /  ( a  &&  n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = xn *  ( x /  ( a + n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = a *  ( x /  ( an + n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = n *  ( x /  ( a + an )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^an =  x *  ( x /  ( a + n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^sum = x + an;^173^^^^^158^181^sum = sum + an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^sum = sum + x;^173^^^^^158^181^sum = sum + an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^sum =  n + an;^173^^^^^158^181^sum = sum + an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret / = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )   <=  logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  &  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * n;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret =  Math.enullp ( -null +  ( a * Math.log ( null )  )  - logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^throw new ConvergenceException ( "maximum number of iterations reached of iterations" ) ;^176^177^^^^158^181^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P1_Replace_Type]^int n = 0.0;^164^^^^^158^181^double n = 0.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^double ret;double n = 0.0;^164^^^^^158^181^double n = 0.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^double sum = an;double n = 0.0;^164^^^^^158^181^double n = 0.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^double g = 607.0 / 128.0;double n = 0.0;^164^^^^^158^181^double n = 0.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^double an = 1.0 / a;double n = 0.0;^164^^^^^158^181^double n = 0.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^double sum = 0.0;double n = 0.0;^164^^^^^158^181^double n = 0.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P1_Replace_Type]^int an = 1.0 / a;^165^^^^^158^181^double an = 1.0 / a;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^double an = 1.0 - a;^165^^^^^158^181^double an = 1.0 / a;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^double an = 3.0 / a;^165^^^^^158^181^double an = 1.0 / a;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^double retn = 1.0 / a;^165^^^^^158^181^double an = 1.0 / a;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^double tmp = x + g + .5;double an = 1.0 / a;^165^^^^^158^181^double an = 1.0 / a;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^double n = 0.0;double an = 1.0 / a;^165^^^^^158^181^double an = 1.0 / a;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^double g = 607.0 / 128.0;double an = 1.0 / a;^165^^^^^158^181^double an = 1.0 / a;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^double sum = 0.0;double an = 1.0 / a;^165^^^^^158^181^double an = 1.0 / a;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P1_Replace_Type]^int sum = an;^166^^^^^158^181^double sum = an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^double sum = ret;^166^^^^^158^181^double sum = an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^double n = 0.0;double sum = an;^166^^^^^158^181^double sum = an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^double sum = 0.0;double sum = an;^166^^^^^158^181^double sum = an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^throw new ConvergenceException ( "aximaximum number of iterations reached" ) ;^176^177^^^^158^181^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( x )  > epsilon && n < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^while  ( Math.abs ( ret )  > epsilon && n < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P14_Delete_Statement]^^167^168^169^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {  n = n + 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )   <  logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  |  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( ret * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret = Math.exp ( -x +  ( sum * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = 1.0  !=  regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^ret = 8.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaQ ( n, x, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaQ ( a, tmp, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaQ ( a, x, sum, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaQ (  x, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaQ ( a,  epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaQ ( a, x,  maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaQ ( a, x, epsilon ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaQ ( epsilon, x, a, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaQ ( a, epsilon, x, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaQ ( maxIterations, x, epsilon, a ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P7_Replace_Invocation]^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret = 2.0d - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaQ ( ret, x, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaQ ( a, n, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaQ ( a, x, ret, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaQ ( x, a, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaQ ( a, maxIterations, epsilon, x ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret = 1.0 - regularizedGammaQ ( a, x, x, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P14_Delete_Statement]^^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^return regularizedGammaP ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^return regularizedGammaQ ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^if  ( n > maxIterations )  {^175^^^^^160^190^if  ( n >= maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^if  ( ret >= maxIterations )  {^175^^^^^160^190^if  ( n >= maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  ( exp((((-x) + (a * log(x))) - logGamma(a))) * sum )  {^175^^^^^160^190^if  ( n >= maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  (  ( -x )  +  ( a *  ( log ( x )  )  )  - logGamma ( a ) )  {^175^^^^^160^190^if  ( n >= maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  ( -x + a *  ( log ( x )  ) )  {^175^^^^^160^190^if  ( n >= maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P6_Replace_Expression]^if  ( a * log ( x ) )  {^175^^^^^160^190^if  ( n >= maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^if  ( g >= maxIterations )  {^175^^^^^160^190^if  ( n >= maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P15_Unwrap_Block]^throw new org.apache.commons.math.ConvergenceException("maximum number of iterations reached");^175^176^177^178^179^160^190^if  ( n >= maxIterations )  { throw new ConvergenceException ( "maximum number of iterations reached" ) ; } else { ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum; }^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P16_Remove_Block]^^175^176^177^178^179^160^190^if  ( n >= maxIterations )  { throw new ConvergenceException ( "maximum number of iterations reached" ) ; } else { ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum; }^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret - = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )   !=  logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ^  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret / = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( n )  )  - logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( x * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * tmp;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( sum )  )  - logGamma ( a )  )  * x;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( x * Math.log ( a )  )  - logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( sum * Math.log ( x )  )  - logGamma ( a )  )  * a;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P7_Replace_Invocation]^ret = Math.exp ( -x +  ( a * Math.abs ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret =  Math.egp ( -g +  ( a * Math.log ( g )  )  - logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )    instanceof   logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  <<  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( tmp * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret = Math.exp ( -x +  ( n * Math.abs ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P14_Delete_Statement]^^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( g )  )  - logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret = Math.exp ( -x +  ( sum * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^throw new ConvergenceException ( "aximumaximum number of iterations reached" ) ;^176^177^^^^161^191^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^throw new ConvergenceException ( " reaximum number of iterations reached" ) ;^176^177^^^^161^191^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^return 0;^176^177^^^^161^191^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = 1.0  <  regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^ret = 3.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaQ ( tmp, x, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaQ ( a, x, maxIterations, epsilon ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret = 1.0D - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^n = n + 0.5;^169^^^^^154^184^n = n + 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^an = an *  ( x -  ( a + n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = tmpn *  ( x /  ( a + n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = an *  ( x /  ( a + x )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret + = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )   &  logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  !=  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( tmp )  )  - logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( tmp * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * tmp;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( sum )  )  - logGamma ( a )  )  * x;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( x * Math.log ( a )  )  - logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( sum * Math.log ( x )  )  - logGamma ( a )  )  * a;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P7_Replace_Invocation]^ret = Math.exp ( -x +  ( a * Math.abs ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret =  Math.enp ( -n +  ( a * Math.log ( n )  )  - logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^throw new ConvergenceException ( "maximum number of iterations reachedximum number of" ) ;^176^177^^^^161^191^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P1_Replace_Type]^int n = 0.0;^164^^^^^149^179^double n = 0.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^double ret;double n = 0.0;^164^^^^^149^179^double n = 0.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^double sum = an;double n = 0.0;^164^^^^^149^179^double n = 0.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^double g = 607.0 / 128.0;double n = 0.0;^164^^^^^149^179^double n = 0.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^double an = 1.0 / a;double n = 0.0;^164^^^^^149^179^double n = 0.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^double sum = 0.0;double n = 0.0;^164^^^^^149^179^double n = 0.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P1_Replace_Type]^float an = 1.0 / a;^165^^^^^150^180^double an = 1.0 / a;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^double an = 1.0 - a;^165^^^^^150^180^double an = 1.0 / a;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^double an = 6.0 / a;^165^^^^^150^180^double an = 1.0 / a;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^double xn = 1.0 / a;^165^^^^^150^180^double an = 1.0 / a;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^double tmp = x + g + .5;double an = 1.0 / a;^165^^^^^150^180^double an = 1.0 / a;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^double n = 0.0;double an = 1.0 / a;^165^^^^^150^180^double an = 1.0 / a;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^double g = 607.0 / 128.0;double an = 1.0 / a;^165^^^^^150^180^double an = 1.0 / a;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^double sum = 0.0;double an = 1.0 / a;^165^^^^^150^180^double an = 1.0 / a;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P1_Replace_Type]^int sum = an;^166^^^^^151^181^double sum = an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^double sum = x;^166^^^^^151^181^double sum = an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^double n = 0.0;double sum = an;^166^^^^^151^181^double sum = an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^double sum = 0.0;double sum = an;^166^^^^^151^181^double sum = an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^throw new ConvergenceException ( "maximum number aximum number of iterations reached" ) ;^176^177^^^^161^191^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^throw new ConvergenceException ( ;^176^177^^^^161^191^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaQ ( x, x, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaQ ( a, ret, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P14_Delete_Statement]^^167^168^169^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {  n = n + 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )   ||  logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +   instanceof   ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( ret )  )  - logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P14_Delete_Statement]^^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( n )  )  - logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret = Math.exp ( -x +  ( a * Math.log ( g )  )  - logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret = 0.0d;^157^^^^^142^172^ret = 0.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P11_Insert_Donor_Statement]^ret = 1.0;ret = 0.0;^157^^^^^142^172^ret = 0.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^} else if  ( a >= 2.0 && x > a )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^} else if  ( a >= 0.125 && x > a )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^} else if  ( sum >= 1.0 && x > a )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^}  if  ( a >= 2.0d ) {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^while  ( Math.abs ( an )  >= epsilon && n < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^while  ( Math.abs ( an )  > epsilon && n <= maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( an )  > epsilon && ret < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( retn )  > epsilon && n < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( epsilon )  > an && n < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^while  ( Math.abs ( tmpn )  > epsilon && n < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^n = n + 9.0;^169^^^^^158^181^n = n + 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^n = x + 1.0;^169^^^^^158^181^n = n + 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^n = n + 4.0d;^169^^^^^158^181^n = n + 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^an - = an *  ( x /  ( a + n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^an = an *  ( x -  ( a + n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^an = an *  ( x /  ( a  <  n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = ret *  ( x /  ( a + n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = an *  ( tmp /  ( a + n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = an *  ( x /  ( a + x )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^sum = sum + n;^173^^^^^158^181^sum = sum + an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^sum =  g + an;^173^^^^^158^181^sum = sum + an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^if  ( n == maxIterations )  {^175^^^^^158^181^if  ( n >= maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^if  ( g >= maxIterations )  {^175^^^^^158^181^if  ( n >= maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )   &&  logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  <=  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * tmp;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret =  Math.enp ( -n +  ( a * Math.log ( n )  )  - logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )   |  logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  !=  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret = Math.exp ( -x +  ( a * Math.abs ( n )  )  - logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^throw new ConvergenceException ( "maximum number of iterations reachedxim" ) ;^176^177^^^^158^181^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^throw new ConvergenceException ( "maximum number of iterations reachedmaximum number of iterations" ) ;^176^177^^^^158^181^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^n = n + 0.125;^169^^^^^158^181^n = n + 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^n = n + 1.0D;^169^^^^^158^181^n = n + 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^an = an *  ( x /  ( a  !=  n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = tmp *  ( x /  ( a + n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = an *  ( n /  ( a + n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^sum =  null + an;^173^^^^^158^181^sum = sum + an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )   ^  logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret =  Math.etmpp ( -tmp +  ( a * Math.log ( tmp )  )  - logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^throw new ConvergenceException ( "maximum number of iterations reachede" ) ;^176^177^^^^158^181^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P1_Replace_Type]^float n = 0.0;^164^^^^^158^181^double n = 0.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^double an = 1.0 + a;^165^^^^^158^181^double an = 1.0 / a;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^double an = 7.0 / a;^165^^^^^158^181^double an = 1.0 / a;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^double sumn = 1.0 / a;^165^^^^^158^181^double an = 1.0 / a;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^double xn = 1.0 / a;^165^^^^^158^181^double an = 1.0 / a;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^double sum = x;^166^^^^^158^181^double sum = an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^throw new ConvergenceException ( "mum num" ) ;^176^177^^^^158^181^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( n )  > epsilon && n < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  >=  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret = Math.exp ( -x +  ( a * Math.abs ( tmp )  )  - logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = 1.0  &&  regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^ret = Infinity - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaQ ( a, x, n, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^if  ( x >= maxIterations )  {^175^^^^^160^190^if  ( n >= maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^if  ( sum >= maxIterations )  {^175^^^^^160^190^if  ( n >= maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret + = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )   &&  logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ||  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * x;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )   >>  logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  >  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( tmp )  )  - logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( ret * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( sum )  )  - logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret = Math.exp ( -x +  ( n * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^throw new ConvergenceException ( "maximum number of iterations reachednumber of i" ) ;^176^177^^^^161^191^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^throw new ConvergenceException ( "f iterations re" ) ;^176^177^^^^161^191^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret = 0.0D;^157^^^^^142^172^ret = 0.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = 1.0  ==  regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^ret = 0.16666666666666666 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaQ ( a, x, tmp, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret = 0.0d - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^n = n + 3.0;^169^^^^^154^184^n = n + 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^an - = an *  ( x /  ( a + n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^an = an *  ( x +  ( a + n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^an = an *  ( x /  ( a  |  n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^sum = sum + tmp;^173^^^^^158^188^sum = sum + an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )   |  logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  <<  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( n * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret =  Math.egp ( -g +  ( a * Math.log ( g )  )  - logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^throw new ConvergenceException ( "maximum number of iterations reachedmum" ) ;^176^177^^^^161^191^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P1_Replace_Type]^float n = 0.0;^164^^^^^149^179^double n = 0.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P1_Replace_Type]^int an = 1.0 / a;^165^^^^^150^180^double an = 1.0 / a;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^double an = 1.0 * a;^165^^^^^150^180^double an = 1.0 / a;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^double an = 0.25 / a;^165^^^^^150^180^double an = 1.0 / a;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P1_Replace_Type]^float sum = an;^166^^^^^151^181^double sum = an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^double sum = tmp;^166^^^^^151^181^double sum = an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^throw new ConvergenceException ( "maximum number of iterations reachedmu" ) ;^176^177^^^^161^191^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaQ ( sum, x, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaQ ( a, g, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )   <  logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  |  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret - = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( sum )  )  - logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( ret * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret  =  ret ;^155^^^^^140^170^ret = Double.NaN;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^} else if  ( x != 0.0 )  {^156^^^^^141^171^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^} else if  ( g == 0.0 )  {^156^^^^^141^171^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^}  if  ( x == 2.0d )  {^156^^^^^141^171^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( an )  > n && n < maxIterations )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( an )  > epsilon && tmp < maxIterations )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( maxIterations )  > epsilon && n < an )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^n = n + 0.25;^169^^^^^154^184^n = n + 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^an = an *  ( x /  ( a  &  n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^an =  null *  ( x /  ( a + n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^} else if  ( a == 1.0 && x > a )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^} else if  ( a >= 0.2 && x > a )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^} else if  ( a >= 0.14285714285714285 && x > a )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^} else if  ( ret >= 1.0 && x > a )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^} else if  ( a >= 1.0 && g > a )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( an )  > ret && n < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( an )  > epsilon && tmp < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( nn )  > epsilon && n < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( maxIterationsn )  > epsilon && n < a )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^while  ( Math.abs ( an )  > epsilon && sum < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^n = n + 0.5;^169^^^^^158^181^n = n + 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^n = g + 1.0;^169^^^^^158^181^n = n + 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^n = n + 1.0d;^169^^^^^158^181^n = n + 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^if  ( tmp >= maxIterations )  {^175^^^^^158^181^if  ( n >= maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ||  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret =  Math.egp ( -g +  ( a * Math.log ( g )  )  - logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )   >=  logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^throw new ConvergenceException ( "maximum number of iterations reachedmaximum " ) ;^176^177^^^^158^181^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^throw new ConvergenceException ( "of iterataximum number of iterations reached" ) ;^176^177^^^^158^181^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^n = n + 0.3333333333333333;^169^^^^^158^181^n = n + 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^an = an *  ( x /  ( a  >  n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = an *  ( x /  ( a + ret )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = ann *  ( x /  ( a + n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P1_Replace_Type]^float an = 1.0 / a;^165^^^^^158^181^double an = 1.0 / a;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P1_Replace_Type]^float sum = an;^166^^^^^158^181^double sum = an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^double sum = tmp;^166^^^^^158^181^double sum = an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^throw new ConvergenceException ( "mum numberaximum number of iterations reached" ) ;^176^177^^^^158^181^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^return 0;^176^177^^^^158^181^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )   >  logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = 1.0  <=  regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret = 1.0d - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^if  ( maxIterations >= n )  {^175^^^^^160^190^if  ( n >= maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^if  ( tmp >= maxIterations )  {^175^^^^^160^190^if  ( n >= maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  &  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * g;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  |  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( ret )  )  - logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret = Math.exp ( -x +  ( a * Math.abs ( tmp )  )  - logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^throw new ConvergenceException ( "maximumaximum number of iterations reached" ) ;^176^177^^^^161^191^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^throw new ConvergenceException ( "maximum number of iterations reachedaximum n" ) ;^176^177^^^^161^191^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = 1.0  <<  regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^ret = 0.25 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaQ ( a, sum, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret = 3.0d - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^n = n + 3.0d;^169^^^^^154^184^n = n + 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^an =  n *  ( x /  ( a + n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )   ==  logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret =  Math.etmpp ( -tmp +  ( a * Math.log ( tmp )  )  - logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^throw new ConvergenceException ( "acaximum number of iterations reached" ) ;^176^177^^^^161^191^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^double an = 1.0 + a;^165^^^^^150^180^double an = 1.0 / a;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^double an = 0.125 / a;^165^^^^^150^180^double an = 1.0 / a;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^double tmpn = 1.0 / a;^165^^^^^150^180^double an = 1.0 / a;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^double sum = ret;^166^^^^^151^181^double sum = an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^throw new ConvergenceException ( "ber of iaximum number of iterations reached" ) ;^176^177^^^^161^191^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( ret )  > epsilon && n < maxIterations )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )    instanceof   logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ||  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret / = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret = 4.0d;^157^^^^^142^172^ret = 0.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^} else if  ( a >= 9.0 && x > a )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^} else if  ( a >= 6.0 && x > a )  {^158^^^^^143^173^} else if  ( a >= 1.0 && x > a )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( an )  > tmp && n < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^while  ( Math.abs ( a )  > epsilon && n < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^while  ( Math.abs ( an )  > epsilon && g < maxIterations )  {^167^^^^^158^181^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^n = n + Infinity;^169^^^^^158^181^n = n + 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^an = an *  ( x /  ( a   instanceof   n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^an = tmpn *  ( x /  ( a + n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )   >>  logGamma ( a )  )  * sum;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^throw new ConvergenceException ( "maximum number of iterations reachedm" ) ;^176^177^^^^158^181^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^throw new ConvergenceException ( "ber of iterations r" ) ;^176^177^^^^158^181^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^an = an *  ( x /  ( a  ==  n )  ) ;^170^^^^^158^181^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * g;^179^^^^^158^181^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^throw new ConvergenceException ( "mum" ) ;^176^177^^^^158^181^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^double sum = n;^166^^^^^158^181^double sum = an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^throw new ConvergenceException ( "maximum number of iterations reachedm number " ) ;^176^177^^^^158^181^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^throw new ConvergenceException ( ;^176^177^^^^158^181^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^ret = 9.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret = 1.0 - regularizedGammaP ( a, ret, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +   instanceof   ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * n;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret =  Math.enp ( -n +  ( a * Math.log ( n )  )  - logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )   ==  logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  >>  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^175^180^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^throw new ConvergenceException ( "aximum number of iterations reac" ) ;^176^177^^^^161^191^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^throw new ConvergenceException ( "ximu" ) ;^176^177^^^^161^191^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret = 2.0d;^157^^^^^142^172^ret = 0.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = 1.0  >=  regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^ret = 7.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^n = n + 0.0d;^169^^^^^154^184^n = n + 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^an = an *  ( x /  ( a  <=  n )  ) ;^170^^^^^155^185^an = an *  ( x /  ( a + n )  ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^sum = sum + n;^173^^^^^158^188^sum = sum + an;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * n;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^throw new ConvergenceException ( "maximum number of iterations reachedmum nu" ) ;^176^177^^^^161^191^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P3_Replace_Literal]^throw new ConvergenceException ( "mum numbe" ) ;^176^177^^^^161^191^throw new ConvergenceException ( "maximum number of iterations reached" ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^if  ( Double.isNaN ( n )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^if  ( Double.isNaN ( a )  || Double.isNaN ( n )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^154^^^^^139^169^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret = 1.0 - regularizedGammaP ( a, n, epsilon, maxIterations ) ;^161^^^^^146^176^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^while  ( Math.log ( x )  > epsilon && n < maxIterations )  {^167^^^^^152^182^while  ( Math.abs ( an )  > epsilon && n < maxIterations )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )   >  logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ^  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^ret = Math.exp ( -x +  ( a * Math.abs ( n )  )  - logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( x * Math.log ( x )  )  - logGamma ( a )  )  * sum;^179^^^^^164^194^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^return sum;^183^^^^^168^198^return ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P8_Replace_Mix]^return x;^183^^^^^168^198^return ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaP [RETURN_TYPE] double   double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  
[P5_Replace_Variable]^return regularizedGammaQ ( x, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^197^^^^^194^198^return regularizedGammaQ ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  boolean  
[P5_Replace_Variable]^return regularizedGammaQ ( a, n, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^197^^^^^194^198^return regularizedGammaQ ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  boolean  
[P5_Replace_Variable]^return regularizedGammaQ ( a, x, ret, Integer.MAX_VALUE ) ;^197^^^^^194^198^return regularizedGammaQ ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  boolean  
[P5_Replace_Variable]^return regularizedGammaQ (  x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^197^^^^^194^198^return regularizedGammaQ ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  boolean  
[P5_Replace_Variable]^return regularizedGammaQ ( a,  DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^197^^^^^194^198^return regularizedGammaQ ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  boolean  
[P5_Replace_Variable]^return regularizedGammaQ ( a, x,  Integer.MAX_VALUE ) ;^197^^^^^194^198^return regularizedGammaQ ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  boolean  
[P5_Replace_Variable]^return regularizedGammaQ ( DEFAULT_EPSILON, x, a, Integer.MAX_VALUE ) ;^197^^^^^194^198^return regularizedGammaQ ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  boolean  
[P5_Replace_Variable]^return regularizedGammaQ ( a, DEFAULT_EPSILON, x, Integer.MAX_VALUE ) ;^197^^^^^194^198^return regularizedGammaQ ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  boolean  
[P5_Replace_Variable]^return regularizedGammaQ ( a, ret, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^197^^^^^194^198^return regularizedGammaQ ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  boolean  
[P14_Delete_Statement]^^197^^^^^194^198^return regularizedGammaQ ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   double a double x [VARIABLES] double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  boolean  
[P1_Replace_Type]^int ret;^228^^^^^227^255^double ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P11_Insert_Donor_Statement]^double n = 0.0;double ret;^228^^^^^227^255^double ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^if  ( Double.isNaN ( a )  && Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a < 0.0 )  ||  ( x < 0.0 )  )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x <= 0.0 )  )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^if  ( ouble.isNaN ( a )  || ouble.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^if  ( Double.isNaN ( n )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^if  ( Double.isNaN ( a )  || Double.isNaN ( sum )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^if  ( Double.isNaN ( x )  || Double.isNaN ( a )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^if  ( Double.isNaN ( a )  ) {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^if  (  Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^if  ( isNaN(a) || isNaN(x) || a <= 0.0) )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^if  ( isNaN(a || isNaN(x)) )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^if  ( a <= 0.0 )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^if  ( x < 0.0 )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^if  ( x == 0.0 )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^if  ( x < a || a < 1.0 )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^if  ( x < a )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^if  ( a < 1.0 )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^if  ( 1.0 - regularizedGammaP(a, x, epsilon, maxIterations) )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^if  ( ((2.0 * n) + 1.0) - a + x )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^if  (  ( 2.0 * n )  + 1.0 - a )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^if  ( 2.0 * n + 1.0 )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^if  ( 2.0 * n )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^if  ( n * a - n )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^if  ( a - n )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^if  ( 1.0 / cf.evaluate(x, epsilon, maxIterations) )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^if  ( exp((((-x) + (a * log(x))) - logGamma(a))) * ret )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^if  (  ( -x )  +  ( a *  ( log ( x )  )  )  - logGamma ( a ) )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^if  ( -x + a *  ( log ( x )  ) )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^if  ( a * log ( x ) )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0D )  ||  ( x < 0.0D )  )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^} else if  ( x != 0.0 )  {^232^^^^^227^255^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^} else if  ( tmp == 0.0 )  {^232^^^^^227^255^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^} else if  ( g == 0.0 )  {^232^^^^^227^255^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^} else if  ( x < a || a < 1.0 )  {^232^^^^^227^255^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^} else if  ( x < a )  {^232^^^^^227^255^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^} else if  ( a < 1.0 )  {^232^^^^^227^255^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^} else if  ( 1.0 - regularizedGammaP(a, x, epsilon, maxIterations) )  {^232^^^^^227^255^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^} else if  ( ((2.0 * n) + 1.0) - a + x )  {^232^^^^^227^255^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^} else if  (  ( 2.0 * n )  + 1.0 - a )  {^232^^^^^227^255^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^} else if  ( 2.0 * n + 1.0 )  {^232^^^^^227^255^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^} else if  ( 2.0 * n )  {^232^^^^^227^255^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^} else if  ( n * a - n )  {^232^^^^^227^255^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^} else if  ( a - n )  {^232^^^^^227^255^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^} else if  ( 1.0 / cf.evaluate(x, epsilon, maxIterations) )  {^232^^^^^227^255^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^} else if  ( exp((((-x) + (a * log(x))) - logGamma(a))) * ret )  {^232^^^^^227^255^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^} else if  (  ( -x )  +  ( a *  ( log ( x )  )  )  - logGamma ( a ) )  {^232^^^^^227^255^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^} else if  ( -x + a *  ( log ( x )  ) )  {^232^^^^^227^255^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^} else if  ( a * log ( x ) )  {^232^^^^^227^255^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^} else {^232^^^^^227^255^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^}  if  ( x == 2.0d )  {^232^^^^^227^255^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P9_Replace_Statement]^} else if  ( a >= 1.0 && x > a )  {^232^^^^^227^255^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^} else if  ( x < a && a < 1.0 )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^} else if  ( x <= a || a < 1.0 )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^} else if  ( x < a || a > 1.0 )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^} else if  ( x < a || a < 0.14285714285714285 )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^} else if  ( x < a || a < 0.3333333333333333 )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^} else if  ( x < a || a < 0.0 )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^} else if  ( g < a || a < 1.0 )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^} else if  ( x < x || a < 1.0 )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^} else if  ( n < a || a < 1.0 )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^} else if  ( x < a ) {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^} else if  (  a < 1.0 )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^} else if  ( 1.0 - regularizedGammaP(a, x, epsilon, maxIterations) )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^} else if  ( ((2.0 * n) + 1.0) - a + x )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^} else if  (  ( 2.0 * n )  + 1.0 - a )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^} else if  ( 2.0 * n + 1.0 )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^} else if  ( 2.0 * n )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^} else if  ( n * a - n )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^} else if  ( a - n )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^} else if  ( 1.0 / cf.evaluate(x, epsilon, maxIterations) )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^} else if  ( exp((((-x) + (a * log(x))) - logGamma(a))) * ret )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^} else if  (  ( -x )  +  ( a *  ( log ( x )  )  )  - logGamma ( a ) )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^} else if  ( -x + a *  ( log ( x )  ) )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^} else if  ( a * log ( x ) )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P6_Replace_Expression]^} else {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^} else if  (  a < 2.0d )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P9_Replace_Statement]^} else if  ( x == 0.0 )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = 1.0 - cf.evaluate ( x, epsilon, maxIterations ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / cf.evaluate ( tmp, epsilon, maxIterations ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / cf.evaluate ( x, tmp, maxIterations ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / cf.evaluate ( x, epsilon, n ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / cf.evaluate (  epsilon, maxIterations ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / cf.evaluate ( x,  maxIterations ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / cf.evaluate ( x, epsilon ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / x.evaluate ( cf, epsilon, maxIterations ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / cf.evaluate ( epsilon, x, maxIterations ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / maxIterations.evaluate ( x, epsilon, cf ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P7_Replace_Invocation]^ret = 1.0 / cf .ContinuedFraction (  )  ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret = 3.0d / cf.evaluate ( x, epsilon, maxIterations ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P11_Insert_Donor_Statement]^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P11_Insert_Donor_Statement]^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret / = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )   ||  logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = Math.exp ( -x +  <<  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret - = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( n )  )  - logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( tmp * Math.log ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * n;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( ret )  )  - logGamma ( a )  )  * x;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( x * Math.log ( a )  )  - logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P7_Replace_Invocation]^ret = Math.exp ( -x +  ( a * Math.abs ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret =  Math.egp ( -g +  ( a * Math.log ( g )  )  - logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P11_Insert_Donor_Statement]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return  >  (  ( 2.0 * n )  + 1.0 )  - a + x;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return  (  ( 2.0 * n )  + 1.0 )   ^  a + x;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return  >>  (  ( 2.0 * n )  + 1.0 )  - a + x;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return  (  ( 2.0 / n )  + 1.0 )  - a + x;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^return  (  ( 0.4 * n )  + 1.0 )  - a + x;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^return  (  ( 2.0 * n )  + 0.16666666666666666 )  - a + x;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^return  (  ( 2.0 * maxIterations )  + 1.0 )  - a + x;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^return  (  ( 2.0 * n )  + 1.0 )  - n + x;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^return  (  ( 2.0 * n )  + 1.0 )  - a + tmp;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^return  (  ( 2.0 * a )  + 1.0 )  - n + x;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^return  (  ( 2.0 * n )  + 1.0 )  - x + a;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^return  (  ( 2.0d * n )  + 1.0 )  - a +n;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return - n *  ( a - n ) ;^246^^^^^234^252^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return n *  ( a  >  n ) ;^246^^^^^234^252^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^return maxIterations *  ( a - n ) ;^246^^^^^234^252^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^return n *  ( ret - n ) ;^246^^^^^234^252^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^return a *  ( n - n ) ;^246^^^^^234^252^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^returmaxIterations n  ;^246^^^^^234^252^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ContinuedFraction cf = maxIterationsew ContinuedFraction (  )  {^240^^^^^234^252^ContinuedFraction cf = new ContinuedFraction (  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / cf.evaluate ( n, epsilon, maxIterations ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / cf.evaluate ( x, n, maxIterations ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / cf.evaluate ( maxIterations, epsilon, x ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P14_Delete_Statement]^^250^251^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ; ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )    instanceof   logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = Math.exp ( -x +  >=  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( sum * Math.log ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P14_Delete_Statement]^^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( g )  )  - logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( n * Math.log ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret = Math.exp ( -x +  ( x * Math.log ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = 1.0  <=  regularizedGammaP ( a, x, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaP ( x, x, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaP ( a, ret, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaP ( a, x, epsilon, n ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaP (  x, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaP ( a,  epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaP ( a, x,  maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaP ( a, x, epsilon ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaP ( x, a, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaP ( a, maxIterations, epsilon, x ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaP ( a, epsilon, x, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaP ( a, x, maxIterations, epsilon ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P7_Replace_Invocation]^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret = 1.0D - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P11_Insert_Donor_Statement]^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P11_Insert_Donor_Statement]^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaP ( ret, x, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaP ( a, x, tmp, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaP ( epsilon, x, a, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P14_Delete_Statement]^^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P11_Insert_Donor_Statement]^return regularizedGammaP ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P11_Insert_Donor_Statement]^return regularizedGammaQ ( a, x, DEFAULT_EPSILON, Integer.MAX_VALUE ) ;ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = 1.0  ^  regularizedGammaP ( a, x, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaP ( sum, x, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaP ( a, x, ret, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaP ( maxIterations, x, epsilon, a ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = 1.0 + cf.evaluate ( x, epsilon, maxIterations ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^ret = 8.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / cf.evaluate ( n, epsilon, maxIterations ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / cf.evaluate ( x, ret, maxIterations ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / cf.evaluate ( x, epsilon, n ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / cf.evaluate (  epsilon, maxIterations ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / cf.evaluate ( x,  maxIterations ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / cf.evaluate ( x, epsilon ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / maxIterations.evaluate ( x, epsilon, cf ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / cf.evaluate ( epsilon, x, maxIterations ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret = 1.0D / cf.evaluate ( x, epsilon, maxIterations ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P11_Insert_Donor_Statement]^ret = 1.0 - regularizedGammaQ ( a, x, epsilon, maxIterations ) ;ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P11_Insert_Donor_Statement]^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret - = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )   <  logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = Math.exp ( -x +  >=  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret + = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( sum )  )  - logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( tmp * Math.log ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * g;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( ret )  )  - logGamma ( a )  )  * x;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( ret * Math.log ( x )  )  - logGamma ( a )  )  * a;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P7_Replace_Invocation]^ret = Math.exp ( -x +  ( a * Math.abs ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret =  Math.egp ( -g +  ( a * Math.log ( g )  )  - logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P11_Insert_Donor_Statement]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return  ^  (  ( 2.0 * n )  + 1.0 )  - a + x;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return  (  ( 2.0 * n )  + 1.0 )   <<  a + x;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return  |  (  ( 2.0 * n )  + 1.0 )  - a + x;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return  (  ( 2.0 / n )  + 1.0 )  - a + x;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^return  (  ( 0.25 * n )  + 1.0 )  - a + x;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^return  (  ( 2.0 * n )  + 5.0 )  - a + x;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^return  (  ( 2.0 * maxIterations )  + 1.0 )  - a + x;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^return  (  ( 2.0 * n )  + 1.0 )  - tmp + x;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^return  (  ( 2.0 * n )  + 1.0 )  - a + tmp;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^return  (  ( 2.0 * a )  + 1.0 )  - n + x;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^return  (  ( 2.0 * n )  + 1.0 )  - x + a;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^return  (  ( 2.0 * n )   &&  1.0 )  - a  &&  ret;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return / n *  ( a - n ) ;^246^^^^^227^255^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return n *  ( a  >  n ) ;^246^^^^^227^255^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^return maxIterations *  ( a - n ) ;^246^^^^^227^255^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^return n *  ( x - n ) ;^246^^^^^227^255^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^return a *  ( n - n ) ;^246^^^^^227^255^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^return n  ;^246^^^^^227^255^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ContinuedFraction cf = maxIterationsew ContinuedFraction (  )  {^240^^^^^227^255^ContinuedFraction cf = new ContinuedFraction (  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaP ( tmp, x, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaP ( a, tmp, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret = 1.0 - regularizedGammaP ( a, n, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / cf.evaluate ( x, n, maxIterations ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / x.evaluate ( cf, epsilon, maxIterations ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / cf.evaluate ( maxIterations, epsilon, x ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P7_Replace_Invocation]^ret = 1.0 / cf .ContinuedFraction (  )  ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret = 1.0 / cf.evaluate ( ret, epsilon, maxIterations ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P14_Delete_Statement]^^250^251^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ; ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )   !=  logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ||  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( ret )  )  - logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( x * Math.log ( a )  )  - logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret = Math.exp ( -x +  ( a * Math.abs ( ret )  )  - logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P14_Delete_Statement]^^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( tmp )  )  - logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret = Math.exp ( -x +  ( a * Math.log ( n )  )  - logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( x * Math.log ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^ret = 0.14285714285714285;^233^^^^^227^255^ret = 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret = 4.0d;^233^^^^^227^255^ret = 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P11_Insert_Donor_Statement]^ret = 0.0;ret = 1.0;^233^^^^^227^255^ret = 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^} else if  ( x < a || a <= 1.0 )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^} else if  ( x < a || a < 4.0 )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^} else if  ( x < a || a < 7.0 )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^} else if  ( x < n || a < 1.0 )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^} else if  ( a < x || a < 1.0 )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^}  if  ( n < a ) {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = 1.0 * cf.evaluate ( x, epsilon, maxIterations ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^ret = Infinity / cf.evaluate ( x, epsilon, maxIterations ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / cf.evaluate ( sum, epsilon, maxIterations ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / cf.evaluate ( x, ret, maxIterations ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / cf.evaluate ( x, maxIterations, epsilon ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret = 1.0D / cf.evaluate ( x, epsilon, maxIterations ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret + = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )   ==  logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ==  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( ret )  )  - logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * tmp;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret =  Math.enp ( -n +  ( a * Math.log ( n )  )  - logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return   instanceof   (  ( 2.0 * n )  + 1.0 )  - a + x;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return  (  ( 2.0 * n )  + 1.0 )   <  a + x;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return  <  (  ( 2.0 * n )  + 1.0 )  - a + x;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return  (  ( 2.0 + n )  + 1.0 )  - a + x;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^return  (  ( 6.0 * n )  + 1.0 )  - a + x;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^return  (  ( 2.0 * n )  + 0.1111111111111111 )  - a + x;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^return  (  ( 2.0 * x )  + 1.0 )  - a + n;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^return  (  ( 2.0 * n )   ;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return + n *  ( a - n ) ;^246^^^^^234^252^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return n *  ( a  <=  n ) ;^246^^^^^234^252^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^return n *  ( x - n ) ;^246^^^^^234^252^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^return n  ;^246^^^^^234^252^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P14_Delete_Statement]^^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )   ^  logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( tmp )  )  - logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret = Math.exp ( -x +  ( a * Math.abs ( ret )  )  - logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = 1.0  &  regularizedGammaP ( a, x, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^ret = 4.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaP ( a, x, sum, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaP ( a, x, x, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret = 1.0 - regularizedGammaP ( n, x, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^ret = 9.0;^233^^^^^227^255^ret = 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret = 1.0D;^233^^^^^227^255^ret = 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = 1.0  >>  regularizedGammaP ( a, x, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^ret = 6.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret = 0.0d - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = 1.0 - cf.evaluate ( x, epsilon, maxIterations ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^ret = 4.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / cf.evaluate ( x, x, maxIterations ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / epsilon.evaluate ( x, cf, maxIterations ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret = 4.0d / cf.evaluate ( x, epsilon, maxIterations ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )   ||  logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( sum * Math.log ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * n;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret =  Math.enullp ( -null +  ( a * Math.log ( null )  )  - logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return  !=  (  ( 2.0 * n )  + 1.0 )  - a + x;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return  (  ( 2.0 * n )  + 1.0 )   ||  a + x;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return  <=  (  ( 2.0 * n )  + 1.0 )  - a + x;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return  (  ( 2.0 + n )  + 1.0 )  - a + x;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^return  (  ( 2.0 * n )  + 0.16666666666666666 )  - a + x;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^return  (  ( 2.0 * n )  + 1.0 )  - n + x;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^return  (  ( 2.0 * n )  + 1.0 )  - a + ret;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^return  (  ( 2.0 * n )   &&  1.0 )  - x  &&  x;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return n *  ( a  <=  n ) ;^246^^^^^227^255^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^return n *  ( sum - n ) ;^246^^^^^227^255^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaP ( a, x, n, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret = 1.0 - regularizedGammaQ ( tmp, x, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / cf.evaluate ( tmp, epsilon, maxIterations ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ==  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( ret * Math.log ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret = Math.exp ( -x +  ( n * Math.log ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret  = null ;^231^^^^^227^255^ret = Double.NaN;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^} else if  ( ret == 0.0 )  {^232^^^^^227^255^} else if  ( x == 0.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^} else if  ( x == a || a < 1.0 )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^} else if  ( x < a || a == 1.0 )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^} else if  ( x < a || a < 0.5 )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^} else if  ( x < a || a < Infinity )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^} else if  ( x < a || a < 6.0 )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^ret = 7.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / epsilon.evaluate ( x, cf, maxIterations ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret = 2.0d / cf.evaluate ( x, epsilon, maxIterations ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = Math.exp ( -x +  <=  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return  ==  (  ( 2.0 * n )  + 1.0 )  - a + x;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return  (  ( 2.0 * n )  + 1.0 )   <=  a + x;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return  (  ( 2.0 - n )  + 1.0 )  - a + x;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^return  (  ( 0.5 * n )  + 1.0 )  - a + x;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^return  (  ( 2.0 * n )  + 1.0 )  - a + n;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^return  (  ( 2.0 * n )  + 1.0 )  - a +g;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return / n *  ( a - n ) ;^246^^^^^234^252^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return n *  ( a  >>  n ) ;^246^^^^^234^252^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^return n *  ( sum - n ) ;^246^^^^^234^252^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^return maxIterations  ;^246^^^^^234^252^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )   !=  logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = Math.exp ( -x +  !=  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( sum )  )  - logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = 1.0   instanceof   regularizedGammaP ( a, x, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^ret = 0.16666666666666666 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 - regularizedGammaP ( a, sum, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^ret = 0.25 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret = 2.0d - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^ret = 0.25 / cf.evaluate ( x, epsilon, maxIterations ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / cf.evaluate ( x, maxIterations, epsilon ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret = 0.0d / cf.evaluate ( x, epsilon, maxIterations ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret / = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )   >>  logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ^  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret =  Math.etmpp ( -tmp +  ( a * Math.log ( tmp )  )  - logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return  (  ( 2.0 * n )  + 1.0 )   <=  a + x;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^return  (  ( 6.0 * n )  + 1.0 )  - a + x;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^return  (  ( 2.0 * n )  + 1.0 )  - n +g;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return + n *  ( a - n ) ;^246^^^^^227^255^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return n *  ( a  ==  n ) ;^246^^^^^227^255^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^return n *  ( ret - n ) ;^246^^^^^227^255^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^returmaxIterations n  ;^246^^^^^227^255^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / cf.evaluate ( x, tmp, maxIterations ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )   <=  logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = Math.exp ( -x +   instanceof   ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret = Math.exp ( -x +  ( n * Math.abs ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret = Math.exp ( -x +  ( a * Math.abs ( n )  )  - logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^ret = 0.1111111111111111;^233^^^^^227^255^ret = 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret = 3.0d;^233^^^^^227^255^ret = 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^} else if  ( x < a || a < 0.16666666666666666 )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^} else if  ( ret < a || a < 1.0 )  {^234^^^^^227^255^} else if  ( x < a || a < 1.0 )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / cf.evaluate ( x, x, maxIterations ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )   |  logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ||  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * sum;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return  (  ( 2.0 * n )  + 1.0 )   >>  a + x;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return  ||  (  ( 2.0 * n )  + 1.0 )  - a + x;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^return  (  ( 10.0 * n )  + 1.0 )  - a + x;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^return  (  ( 2.0 * n )  + 0.125 )  - a + x;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^return  (  ( 2.0 * n )  + 1.0 )  - sum + x;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^return  (  ( 4.0d * n )   |  1.0 )  - a  |  tmp;^242^^^^^234^252^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return n *  ( a  ==  n ) ;^246^^^^^234^252^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / cf.evaluate ( ret, epsilon, maxIterations ) ;^250^^^^^234^252^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )   &&  logGamma ( a )  )  * ret;^251^^^^^234^252^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^ret = 2.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret = 1.0 - regularizedGammaQ ( a, n, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret ;^231^^^^^227^255^ret = Double.NaN;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret = 0.0d;^233^^^^^227^255^ret = 1.0;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = 1.0  !=  regularizedGammaP ( a, x, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^ret = 5.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^237^^^^^227^255^ret = 1.0 - regularizedGammaP ( a, x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^ret = Infinity / cf.evaluate ( x, epsilon, maxIterations ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / cf.evaluate ( g, epsilon, maxIterations ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^ret = 3.0d / cf.evaluate ( x, epsilon, maxIterations ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = Math.exp ( -x +  <=  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( g )  )  - logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * x;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return  >>  (  ( 2.0 * n )  + 1.0 )  - a + x;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return  (  ( 2.0 * n )  + 1.0 )   !=  a + x;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return  (  ( 2.0 - n )  + 1.0 )  - a + x;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^return  (  ( 4.0 * n )  + 1.0 )  - a + x;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P3_Replace_Literal]^return  (  ( 2.0 * n )  + 0.125 )  - a + x;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^return  (  ( 2.0 * n )  + 1.0 )  - ret + x;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^return  (  ( 2.0 * x )  + 1.0 )  - a + n;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^return  (  ( 2.0 * n )   ||  1.0 )  - a  ||  x;^242^^^^^227^255^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return n *  ( a  >=  n ) ;^246^^^^^227^255^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^returnmaxIterations  ;^246^^^^^227^255^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^if  ( Double.isNaN ( tmp )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^if  ( Double.isNaN ( x )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^if  ( Double.isNaN ( a )  || Double.isNaN ( g )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^230^^^^^227^255^if  ( Double.isNaN ( a )  || Double.isNaN ( x )  ||  ( a <= 0.0 )  ||  ( x < 0.0 )  )  {^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^ret = 1.0 / cf.evaluate ( x, sum, maxIterations ) ;^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P14_Delete_Statement]^^250^^^^^227^255^ret = 1.0 / cf.evaluate ( x, epsilon, maxIterations ) ;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^ret = Math.exp ( -x +  ( a * Math.log ( x )  )    instanceof   logGamma ( a )  )  * ret;^251^^^^^227^255^ret = Math.exp ( -x +  ( a * Math.log ( x )  )  - logGamma ( a )  )  * ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P5_Replace_Variable]^return sum;^254^^^^^227^255^return ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P8_Replace_Mix]^return tmp;^254^^^^^227^255^return ret;^[CLASS] Gamma 1  [METHOD] regularizedGammaQ [RETURN_TYPE] double   final double a double x double epsilon int maxIterations [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  maxIterations  n  ContinuedFraction  cf  
[P2_Replace_Operator]^return  >=  (  ( 2.0 * n )  + 1.0 )  - a + x;^242^^^^^241^243^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] getA [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  n  
[P2_Replace_Operator]^return  (  ( 2.0 * n )  + 1.0 )   ||  a + x;^242^^^^^241^243^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] getA [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  n  
[P2_Replace_Operator]^return  ||  (  ( 2.0 * n )  + 1.0 )  - a + x;^242^^^^^241^243^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] getA [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  n  
[P2_Replace_Operator]^return  (  ( 2.0 - n )  + 1.0 )  - a + x;^242^^^^^241^243^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] getA [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  n  
[P3_Replace_Literal]^return  (  ( 18.0 * n )  + 1.0 )  - a + x;^242^^^^^241^243^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] getA [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  n  
[P3_Replace_Literal]^return  (  ( 2.0 * n )  + 8.0 )  - a + x;^242^^^^^241^243^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] getA [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  n  
[P5_Replace_Variable]^return  (  ( 2.0 * n )  + 1.0 )  - ret + x;^242^^^^^241^243^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] getA [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  n  
[P5_Replace_Variable]^return  (  ( 2.0 * n )  + 1.0 )  - a + n;^242^^^^^241^243^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] getA [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  n  
[P5_Replace_Variable]^return  (  ( 2.0 * a )  + 1.0 )  - n + x;^242^^^^^241^243^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] getA [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  n  
[P5_Replace_Variable]^return  (  ( 2.0 * n )  + 1.0 )  - x + a;^242^^^^^241^243^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] getA [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  n  
[P8_Replace_Mix]^return  (  ( 2.0 * n )   ||  1.0 )  - a  ||  x;^242^^^^^241^243^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] Gamma 1  [METHOD] getA [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  n  
[P2_Replace_Operator]^return / n *  ( a - n ) ;^246^^^^^245^247^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  n  
[P2_Replace_Operator]^return n *  ( a  ||  n ) ;^246^^^^^245^247^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  n  
[P5_Replace_Variable]^return n *  ( x - n ) ;^246^^^^^245^247^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  n  
[P5_Replace_Variable]^return a *  ( n - n ) ;^246^^^^^245^247^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  n  
[P8_Replace_Mix]^return n  ;^246^^^^^245^247^return n *  ( a - n ) ;^[CLASS] Gamma 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double[]  lanczos  double  DEFAULT_EPSILON  HALF_LOG_2_PI  a  an  epsilon  g  n  ret  sum  tmp  x  int  n  
[P2_Replace_Operator]^return  !=  (  ( 2.0 * n )  + 1.0 )  - a + x;^242^^^^^241^243^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] 1  [METHOD] getA [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  x  int  n  
[P2_Replace_Operator]^return  (  ( 2.0 * n )  + 1.0 )   <<  a + x;^242^^^^^241^243^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] 1  [METHOD] getA [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  x  int  n  
[P2_Replace_Operator]^return  <  (  ( 2.0 * n )  + 1.0 )  - a + x;^242^^^^^241^243^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] 1  [METHOD] getA [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  x  int  n  
[P2_Replace_Operator]^return  (  ( 2.0 / n )  + 1.0 )  - a + x;^242^^^^^241^243^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] 1  [METHOD] getA [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  x  int  n  
[P3_Replace_Literal]^return  (  ( 2.0 * n )  + 5.0 )  - a + x;^242^^^^^241^243^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] 1  [METHOD] getA [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  x  int  n  
[P5_Replace_Variable]^return  (  ( 2.0 * x )  + 1.0 )  - a + n;^242^^^^^241^243^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] 1  [METHOD] getA [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  x  int  n  
[P5_Replace_Variable]^return  (  ( 2.0 * a )  + 1.0 )  - n + x;^242^^^^^241^243^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] 1  [METHOD] getA [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  x  int  n  
[P5_Replace_Variable]^return  (  ( 2.0 * n )  + 1.0 )  - x + a;^242^^^^^241^243^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] 1  [METHOD] getA [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  x  int  n  
[P8_Replace_Mix]^return  (  ( 2.0d * n )   ^  1.0 )  - a  ^  x;^242^^^^^241^243^return  (  ( 2.0 * n )  + 1.0 )  - a + x;^[CLASS] 1  [METHOD] getA [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  x  int  n  
[P2_Replace_Operator]^return + n *  ( a - n ) ;^246^^^^^245^247^return n *  ( a - n ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  x  int  n  
[P2_Replace_Operator]^return n *  ( a  &&  n ) ;^246^^^^^245^247^return n *  ( a - n ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  x  int  n  
[P5_Replace_Variable]^return n *  ( x - n ) ;^246^^^^^245^247^return n *  ( a - n ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  x  int  n  
[P5_Replace_Variable]^return a *  ( n - n ) ;^246^^^^^245^247^return n *  ( a - n ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  x  int  n  
[P8_Replace_Mix]^return n  ;^246^^^^^245^247^return n *  ( a - n ) ;^[CLASS] 1  [METHOD] getB [RETURN_TYPE] double   int n double x [VARIABLES] boolean  double  x  int  n  
