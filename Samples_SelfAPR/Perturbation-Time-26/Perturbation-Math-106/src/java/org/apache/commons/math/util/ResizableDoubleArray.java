[P1_Replace_Type]^private static final  int  serialVersionUID = -3485529955529426875L;^74^^^^^69^79^private static final long serialVersionUID = -3485529955529426875L;^[CLASS] ResizableDoubleArray   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID = -3485529955529426875;^74^^^^^69^79^private static final long serialVersionUID = -3485529955529426875L;^[CLASS] ResizableDoubleArray   [VARIABLES] 
[P1_Replace_Type]^public static final  long  ADDITIVE_MODE = 1;^77^^^^^72^82^public static final int ADDITIVE_MODE = 1;^[CLASS] ResizableDoubleArray   [VARIABLES] 
[P3_Replace_Literal]^public static final int ADDITIVE_MODE = -3;^77^^^^^72^82^public static final int ADDITIVE_MODE = 1;^[CLASS] ResizableDoubleArray   [VARIABLES] 
[P8_Replace_Mix]^public static final int ADDITIVE_MODE = 0;^77^^^^^72^82^public static final int ADDITIVE_MODE = 1;^[CLASS] ResizableDoubleArray   [VARIABLES] 
[P1_Replace_Type]^public static final  long  MULTIPLICATIVE_MODE = 0;^80^^^^^75^85^public static final int MULTIPLICATIVE_MODE = 0;^[CLASS] ResizableDoubleArray   [VARIABLES] 
[P3_Replace_Literal]^public static final int MULTIPLICATIVE_MODE = -9;^80^^^^^75^85^public static final int MULTIPLICATIVE_MODE = 0;^[CLASS] ResizableDoubleArray   [VARIABLES] 
[P8_Replace_Mix]^public static final int MULTIPLICATIVE_MODE = 1;^80^^^^^75^85^public static final int MULTIPLICATIVE_MODE = 0;^[CLASS] ResizableDoubleArray   [VARIABLES] 
[P1_Replace_Type]^protected int contractionCriteria = 2.5f;^87^^^^^82^92^protected float contractionCriteria = 2.5f;^[CLASS] ResizableDoubleArray   [VARIABLES] 
[P1_Replace_Type]^protected int expansionFactor = 2.0f;^97^^^^^92^102^protected float expansionFactor = 2.0f;^[CLASS] ResizableDoubleArray   [VARIABLES] 
[P3_Replace_Literal]^protected float expansionactor = 2.0f;^97^^^^^92^102^protected float expansionFactor = 2.0f;^[CLASS] ResizableDoubleArray   [VARIABLES] 
[P8_Replace_Mix]^protected float expansionFactor ;^97^^^^^92^102^protected float expansionFactor = 2.0f;^[CLASS] ResizableDoubleArray   [VARIABLES] 
[P1_Replace_Type]^protected  long  expansionMode = MULTIPLICATIVE_MODE;^103^^^^^98^108^protected int expansionMode = MULTIPLICATIVE_MODE;^[CLASS] ResizableDoubleArray   [VARIABLES] 
[P8_Replace_Mix]^protected  short  expansionMode = MULTIPLICATIVE_MODE;^103^^^^^98^108^protected int expansionMode = MULTIPLICATIVE_MODE;^[CLASS] ResizableDoubleArray   [VARIABLES] 
[P12_Insert_Condition]^if  ( expansionMode == MULTIPLICATIVE_MODE )  { protected int expansionMode = MULTIPLICATIVE_MODE; }^103^^^^^98^108^protected int expansionMode = MULTIPLICATIVE_MODE;^[CLASS] ResizableDoubleArray   [VARIABLES] 
[P1_Replace_Type]^protected  short  initialCapacity = 16;^109^^^^^104^114^protected int initialCapacity = 16;^[CLASS] ResizableDoubleArray   [VARIABLES] 
[P3_Replace_Literal]^protected int initialCapacity = 20;^109^^^^^104^114^protected int initialCapacity = 16;^[CLASS] ResizableDoubleArray   [VARIABLES] 
[P8_Replace_Mix]^protected int initialCapacity = 16 + 1;^109^^^^^104^114^protected int initialCapacity = 16;^[CLASS] ResizableDoubleArray   [VARIABLES] 
[P8_Replace_Mix]^private double[] internalArray;^114^^^^^109^119^protected double[] internalArray;^[CLASS] ResizableDoubleArray   [VARIABLES] 
[P1_Replace_Type]^protected  long  numElements = 0;^120^^^^^115^125^protected int numElements = 0;^[CLASS] ResizableDoubleArray   [VARIABLES] 
[P3_Replace_Literal]^protected int numElements = -5;^120^^^^^115^125^protected int numElements = 0;^[CLASS] ResizableDoubleArray   [VARIABLES] 
[P8_Replace_Mix]^private  short  numElements = 1;^120^^^^^115^125^protected int numElements = 0;^[CLASS] ResizableDoubleArray   [VARIABLES] 
[P12_Insert_Condition]^if  ( i > numElements )  { protected int numElements = 0; }^120^^^^^115^125^protected int numElements = 0;^[CLASS] ResizableDoubleArray   [VARIABLES] 
[P1_Replace_Type]^protected  long  startIndex = 0;^128^^^^^123^133^protected int startIndex = 0;^[CLASS] ResizableDoubleArray   [VARIABLES] 
[P3_Replace_Literal]^protected int startIndex = 2;^128^^^^^123^133^protected int startIndex = 0;^[CLASS] ResizableDoubleArray   [VARIABLES] 
[P8_Replace_Mix]^protected int startIndex ;^128^^^^^123^133^protected int startIndex = 0;^[CLASS] ResizableDoubleArray   [VARIABLES] 
[P8_Replace_Mix]^internalArray  = null ;^140^^^^^139^141^internalArray = new double[initialCapacity];^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray()   [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^internalArray = new double[this.initialCapacity];internalArray = new double[initialCapacity];^140^^^^^139^141^internalArray = new double[initialCapacity];^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray()   [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P7_Replace_Invocation]^setNumElements ( initialCapacity ) ;^155^^^^^154^157^setInitialCapacity ( initialCapacity ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int)   int initialCapacity [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P14_Delete_Statement]^^155^156^^^^154^157^setInitialCapacity ( initialCapacity ) ; internalArray = new double[this.initialCapacity];^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int)   int initialCapacity [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P8_Replace_Mix]^internalArray  =  internalArray ;^156^^^^^154^157^internalArray = new double[this.initialCapacity];^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int)   int initialCapacity [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^internalArray = new double[initialCapacity];internalArray = new double[this.initialCapacity];^156^^^^^154^157^internalArray = new double[this.initialCapacity];^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int)   int initialCapacity [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^this.expansionFactor = contractionCriteria;^182^^^^^181^186^this.expansionFactor = expansionFactor;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float)   int initialCapacity float expansionFactor [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^this.expansionMode = expansionMode;this.expansionFactor = expansionFactor;^182^^^^^181^186^this.expansionFactor = expansionFactor;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float)   int initialCapacity float expansionFactor [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^setInitialCapacity ( startIndex ) ;^183^^^^^181^186^setInitialCapacity ( initialCapacity ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float)   int initialCapacity float expansionFactor [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P7_Replace_Invocation]^setNumElements ( initialCapacity ) ;^183^^^^^181^186^setInitialCapacity ( initialCapacity ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float)   int initialCapacity float expansionFactor [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P8_Replace_Mix]^setInitialCapacity ( numElements ) ;^183^^^^^181^186^setInitialCapacity ( initialCapacity ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float)   int initialCapacity float expansionFactor [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P14_Delete_Statement]^^183^^^^^181^186^setInitialCapacity ( initialCapacity ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float)   int initialCapacity float expansionFactor [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P8_Replace_Mix]^internalArray =  new double[numElements];^184^^^^^181^186^internalArray = new double[initialCapacity];^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float)   int initialCapacity float expansionFactor [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^internalArray = new double[this.initialCapacity];internalArray = new double[initialCapacity];^184^^^^^181^186^internalArray = new double[initialCapacity];^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float)   int initialCapacity float expansionFactor [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P3_Replace_Literal]^setContractionCriteria ( expansionactor +0.5f ) ;^185^^^^^181^186^setContractionCriteria ( expansionFactor +0.5f ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float)   int initialCapacity float expansionFactor [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^setContractionCriteria ( contractionCriteria +0.5f ) ;^185^^^^^181^186^setContractionCriteria ( expansionFactor +0.5f ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float)   int initialCapacity float expansionFactor [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P7_Replace_Invocation]^checkContractExpand ( expansionFactor +0.5f ) ;^185^^^^^181^186^setContractionCriteria ( expansionFactor +0.5f ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float)   int initialCapacity float expansionFactor [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P14_Delete_Statement]^^185^^^^^181^186^setContractionCriteria ( expansionFactor +0.5f ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float)   int initialCapacity float expansionFactor [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^checkContractExpand ( contractionCriteria, getExpansionFactor (  )  ) ;setContractionCriteria ( expansionFactor +0.5f ) ;^185^^^^^181^186^setContractionCriteria ( expansionFactor +0.5f ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float)   int initialCapacity float expansionFactor [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^setContractionCriteria ( contractionCriteria ) ;setContractionCriteria ( expansionFactor +0.5f ) ;^185^^^^^181^186^setContractionCriteria ( expansionFactor +0.5f ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float)   int initialCapacity float expansionFactor [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^checkContractExpand ( getContractionCriteria (  ) , expansionFactor ) ;setContractionCriteria ( expansionFactor +0.5f ) ;^185^^^^^181^186^setContractionCriteria ( expansionFactor +0.5f ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float)   int initialCapacity float expansionFactor [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P12_Insert_Condition]^if  ( contractionCritera < expansionFactor )  { setContractionCriteria ( expansionFactor +0.5f ) ; }^185^^^^^181^186^setContractionCriteria ( expansionFactor +0.5f ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float)   int initialCapacity float expansionFactor [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^this.expansionFactor = contractionCriteria;^209^^^^^207^213^this.expansionFactor = expansionFactor;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float)   int initialCapacity float expansionFactor float contractionCriteria [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^this.expansionMode = expansionMode;this.expansionFactor = expansionFactor;^209^^^^^207^213^this.expansionFactor = expansionFactor;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float)   int initialCapacity float expansionFactor float contractionCriteria [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^setContractionCriteria ( expansionFactor ) ;^210^^^^^207^213^setContractionCriteria ( contractionCriteria ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float)   int initialCapacity float expansionFactor float contractionCriteria [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P7_Replace_Invocation]^setExpansionFactor ( contractionCriteria ) ;^210^^^^^207^213^setContractionCriteria ( contractionCriteria ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float)   int initialCapacity float expansionFactor float contractionCriteria [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P8_Replace_Mix]^setExpansionFactor ( expansionFactor ) ;^210^^^^^207^213^setContractionCriteria ( contractionCriteria ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float)   int initialCapacity float expansionFactor float contractionCriteria [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P14_Delete_Statement]^^210^211^^^^207^213^setContractionCriteria ( contractionCriteria ) ; setInitialCapacity ( initialCapacity ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float)   int initialCapacity float expansionFactor float contractionCriteria [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^setContractionCriteria ( expansionFactor +0.5f ) ;setContractionCriteria ( contractionCriteria ) ;^210^^^^^207^213^setContractionCriteria ( contractionCriteria ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float)   int initialCapacity float expansionFactor float contractionCriteria [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P12_Insert_Condition]^if  ( contractionCritera < expansionFactor )  { setContractionCriteria ( contractionCriteria ) ; }^210^^^^^207^213^setContractionCriteria ( contractionCriteria ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float)   int initialCapacity float expansionFactor float contractionCriteria [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^setInitialCapacity ( numElements ) ;^211^^^^^207^213^setInitialCapacity ( initialCapacity ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float)   int initialCapacity float expansionFactor float contractionCriteria [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P7_Replace_Invocation]^setNumElements ( initialCapacity ) ;^211^^^^^207^213^setInitialCapacity ( initialCapacity ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float)   int initialCapacity float expansionFactor float contractionCriteria [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P8_Replace_Mix]^setInitialCapacity ( startIndex ) ;^211^^^^^207^213^setInitialCapacity ( initialCapacity ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float)   int initialCapacity float expansionFactor float contractionCriteria [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P14_Delete_Statement]^^211^212^^^^207^213^setInitialCapacity ( initialCapacity ) ; internalArray = new double[initialCapacity];^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float)   int initialCapacity float expansionFactor float contractionCriteria [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P8_Replace_Mix]^internalArray =  new double[startIndex];^212^^^^^207^213^internalArray = new double[initialCapacity];^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float)   int initialCapacity float expansionFactor float contractionCriteria [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^internalArray = new double[this.initialCapacity];internalArray = new double[initialCapacity];^212^^^^^207^213^internalArray = new double[initialCapacity];^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float)   int initialCapacity float expansionFactor float contractionCriteria [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^this.expansionFactor = contractionCriteria;^238^^^^^236^243^this.expansionFactor = expansionFactor;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float,int)   int initialCapacity float expansionFactor float contractionCriteria int expansionMode [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^this.expansionMode = expansionMode;this.expansionFactor = expansionFactor;^238^^^^^236^243^this.expansionFactor = expansionFactor;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float,int)   int initialCapacity float expansionFactor float contractionCriteria int expansionMode [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^setContractionCriteria ( expansionFactor ) ;^239^^^^^236^243^setContractionCriteria ( contractionCriteria ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float,int)   int initialCapacity float expansionFactor float contractionCriteria int expansionMode [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P7_Replace_Invocation]^setExpansionFactor ( contractionCriteria ) ;^239^^^^^236^243^setContractionCriteria ( contractionCriteria ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float,int)   int initialCapacity float expansionFactor float contractionCriteria int expansionMode [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P14_Delete_Statement]^^239^240^^^^236^243^setContractionCriteria ( contractionCriteria ) ; setInitialCapacity ( initialCapacity ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float,int)   int initialCapacity float expansionFactor float contractionCriteria int expansionMode [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^setContractionCriteria ( expansionFactor +0.5f ) ;setContractionCriteria ( contractionCriteria ) ;^239^^^^^236^243^setContractionCriteria ( contractionCriteria ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float,int)   int initialCapacity float expansionFactor float contractionCriteria int expansionMode [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P12_Insert_Condition]^if  ( contractionCritera < expansionFactor )  { setContractionCriteria ( contractionCriteria ) ; }^239^^^^^236^243^setContractionCriteria ( contractionCriteria ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float,int)   int initialCapacity float expansionFactor float contractionCriteria int expansionMode [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^setInitialCapacity ( numElements ) ;^240^^^^^236^243^setInitialCapacity ( initialCapacity ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float,int)   int initialCapacity float expansionFactor float contractionCriteria int expansionMode [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P7_Replace_Invocation]^setNumElements ( initialCapacity ) ;^240^^^^^236^243^setInitialCapacity ( initialCapacity ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float,int)   int initialCapacity float expansionFactor float contractionCriteria int expansionMode [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P14_Delete_Statement]^^240^241^^^^236^243^setInitialCapacity ( initialCapacity ) ; setExpansionMode ( expansionMode ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float,int)   int initialCapacity float expansionFactor float contractionCriteria int expansionMode [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^setExpansionMode ( numElements ) ;^241^^^^^236^243^setExpansionMode ( expansionMode ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float,int)   int initialCapacity float expansionFactor float contractionCriteria int expansionMode [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P7_Replace_Invocation]^setExpansionFactor ( expansionMode ) ;^241^^^^^236^243^setExpansionMode ( expansionMode ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float,int)   int initialCapacity float expansionFactor float contractionCriteria int expansionMode [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P8_Replace_Mix]^setExpansionMode ( startIndex ) ;^241^^^^^236^243^setExpansionMode ( expansionMode ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float,int)   int initialCapacity float expansionFactor float contractionCriteria int expansionMode [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P14_Delete_Statement]^^241^^^^^236^243^setExpansionMode ( expansionMode ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float,int)   int initialCapacity float expansionFactor float contractionCriteria int expansionMode [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P12_Insert_Condition]^if  ( expansionMode == MULTIPLICATIVE_MODE )  { setExpansionMode ( expansionMode ) ; }^241^^^^^236^243^setExpansionMode ( expansionMode ) ;^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float,int)   int initialCapacity float expansionFactor float contractionCriteria int expansionMode [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P8_Replace_Mix]^internalArray =  new double[numElements];^242^^^^^236^243^internalArray = new double[initialCapacity];^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float,int)   int initialCapacity float expansionFactor float contractionCriteria int expansionMode [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^internalArray = new double[this.initialCapacity];internalArray = new double[initialCapacity];^242^^^^^236^243^internalArray = new double[initialCapacity];^[CLASS] ResizableDoubleArray  [METHOD] <init> [RETURN_TYPE] ResizableDoubleArray(int,float,float,int)   int initialCapacity float expansionFactor float contractionCriteria int expansionMode [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P2_Replace_Operator]^if  (  ( startIndex + numElements )  < internalArray.length )  {^252^^^^^250^259^if  (  ( startIndex + numElements )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P2_Replace_Operator]^if  (  ( startIndex  ==  numElements )  > internalArray.length )  {^252^^^^^250^259^if  (  ( startIndex + numElements )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P5_Replace_Variable]^if  (  ( initialCapacity + numElements )  > internalArray.length )  {^252^^^^^250^259^if  (  ( startIndex + numElements )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P5_Replace_Variable]^if  (  ( startIndex + initialCapacity )  > internalArray.length )  {^252^^^^^250^259^if  (  ( startIndex + numElements )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P5_Replace_Variable]^if  (  ( startIndex + numElements )  > numElements )  {^252^^^^^250^259^if  (  ( startIndex + numElements )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P5_Replace_Variable]^if  (  ( numElements + startIndex )  > internalArray.length )  {^252^^^^^250^259^if  (  ( startIndex + numElements )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P5_Replace_Variable]^if  (  ( startIndex + internalArray.length )  > numElements )  {^252^^^^^250^259^if  (  ( startIndex + numElements )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P5_Replace_Variable]^if  (  ( internalArray + numElements )  > startIndex.length )  {^252^^^^^250^259^if  (  ( startIndex + numElements )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P6_Replace_Expression]^if  ( startIndex + numElements )  {^252^^^^^250^259^if  (  ( startIndex + numElements )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P9_Replace_Statement]^if  (  ( startIndex + index )  >= internalArray.length )  {^252^^^^^250^259^if  (  ( startIndex + numElements )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P9_Replace_Statement]^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^252^^^^^250^259^if  (  ( startIndex + numElements )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P9_Replace_Statement]^if  (  ( startIndex + i )  > internalArray.length )  {^252^^^^^250^259^if  (  ( startIndex + numElements )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P15_Unwrap_Block]^expand();^252^253^254^^^250^259^if  (  ( startIndex + numElements )  > internalArray.length )  { expand (  ) ; }^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P16_Remove_Block]^^252^253^254^^^250^259^if  (  ( startIndex + numElements )  > internalArray.length )  { expand (  ) ; }^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P13_Insert_Block]^if  (  (  ( startIndex )  +  (  ( numElements )  + 1 )  )  >  ( internalArray.length )  )  {     expand (  ) ; }^252^^^^^250^259^[Delete]^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P13_Insert_Block]^if  (  (  ( startIndex )  + i )  >  ( internalArray.length )  )  {     expandTo (  (  ( startIndex )  + i )  ) ; }^252^^^^^250^259^[Delete]^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P13_Insert_Block]^if  (  (  ( startIndex )  + index )  >=  ( internalArray.length )  )  {     expandTo (  (  ( startIndex )  +  ( index + 1 )  )  ) ; }^252^^^^^250^259^[Delete]^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P7_Replace_Invocation]^contract (  ) ;^253^^^^^250^259^expand (  ) ;^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P14_Delete_Statement]^^253^^^^^250^259^expand (  ) ;^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P11_Insert_Donor_Statement]^contract (  ) ;expand (  ) ;^253^^^^^250^259^expand (  ) ;^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P2_Replace_Operator]^internalArray[startIndex +  ==  ( numElements - 1 ) ] = value;^255^^^^^250^259^internalArray[startIndex +  ( numElements - 1 ) ] = value;^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P2_Replace_Operator]^internalArray[startIndex +  ( numElements  |  1 ) ] = value;^255^^^^^250^259^internalArray[startIndex +  ( numElements - 1 ) ] = value;^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P3_Replace_Literal]^internalArray[startIndex +  ( numElements - startIndex ) ] = value;^255^^^^^250^259^internalArray[startIndex +  ( numElements - 1 ) ] = value;^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P5_Replace_Variable]^internalArray[startIndex +  ( initialCapacity - 1 ) ] = value;^255^^^^^250^259^internalArray[startIndex +  ( numElements - 1 ) ] = value;^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P5_Replace_Variable]^internalArray[startIndex +  ( value - 1 ) ] = numElements;^255^^^^^250^259^internalArray[startIndex +  ( numElements - 1 ) ] = value;^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P8_Replace_Mix]^internalArray[startIndex +  ( numElements - 0 ) ] = value;^255^^^^^250^259^internalArray[startIndex +  ( numElements - 1 ) ] = value;^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P11_Insert_Donor_Statement]^internalArray[startIndex + index] = value;internalArray[startIndex +  ( numElements - 1 ) ] = value;^255^^^^^250^259^internalArray[startIndex +  ( numElements - 1 ) ] = value;^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P7_Replace_Invocation]^if  ( contract (  )  )  {^256^^^^^250^259^if  ( shouldContract (  )  )  {^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P15_Unwrap_Block]^contract();^256^257^258^^^250^259^if  ( shouldContract (  )  )  { contract (  ) ; }^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P16_Remove_Block]^^256^257^258^^^250^259^if  ( shouldContract (  )  )  { contract (  ) ; }^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P7_Replace_Invocation]^shouldContract (  ) ;^257^^^^^250^259^contract (  ) ;^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P14_Delete_Statement]^^257^^^^^250^259^contract (  ) ;^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P11_Insert_Donor_Statement]^expand (  ) ;contract (  ) ;^257^^^^^250^259^contract (  ) ;^[CLASS] ResizableDoubleArray  [METHOD] addElement [RETURN_TYPE] void   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  value  
[P1_Replace_Type]^int discarded = internalArray[startIndex];^278^^^^^277^294^double discarded = internalArray[startIndex];^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P2_Replace_Operator]^if  (  ( startIndex +  ( numElements + 1 )  )  >= internalArray.length )  {^280^^^^^277^294^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P2_Replace_Operator]^if  >>  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^280^^^^^277^294^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P2_Replace_Operator]^if  (  ( startIndex +  ( numElements  <  1 )  )  > internalArray.length )  {^280^^^^^277^294^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P3_Replace_Literal]^if  (  ( startIndex +  ( numElements + expansionMode )  )  > internalArray.length )  {^280^^^^^277^294^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P5_Replace_Variable]^if  (  ( initialCapacity +  ( numElements + 1 )  )  > internalArray.length )  {^280^^^^^277^294^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P5_Replace_Variable]^if  (  ( startIndex +  ( initialCapacity + 1 )  )  > internalArray.length )  {^280^^^^^277^294^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P5_Replace_Variable]^if  (  ( startIndex +  ( numElements + 1 )  )  > numElements )  {^280^^^^^277^294^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P5_Replace_Variable]^if  (  ( internalArray.length +  ( numElements + 1 )  )  > startIndex )  {^280^^^^^277^294^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P5_Replace_Variable]^if  (  ( startIndex +  ( internalArray.length + 1 )  )  > numElements )  {^280^^^^^277^294^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P5_Replace_Variable]^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length.length )  {^280^^^^^277^294^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P6_Replace_Expression]^if  ( startIndex +  ( numElements )  + 1 )  {^280^^^^^277^294^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P6_Replace_Expression]^if  ( numElements + 1 )  {^280^^^^^277^294^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P8_Replace_Mix]^if  (  ( startIndex +  ( numElements + 0  )  )  > internalArray.length )  {^280^^^^^277^294^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P9_Replace_Statement]^if  (  ( startIndex + index )  >= internalArray.length )  {^280^^^^^277^294^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P9_Replace_Statement]^if  (  ( startIndex + numElements )  > internalArray.length )  {^280^^^^^277^294^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P9_Replace_Statement]^if  (  ( startIndex + i )  > internalArray.length )  {^280^^^^^277^294^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P15_Unwrap_Block]^expand();^280^281^282^^^277^294^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  { expand (  ) ; }^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P16_Remove_Block]^^280^281^282^^^277^294^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  { expand (  ) ; }^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P13_Insert_Block]^if  (  (  ( startIndex )  +  ( numElements )  )  >  ( internalArray.length )  )  {     expand (  ) ; }^280^^^^^277^294^[Delete]^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P13_Insert_Block]^if  (  (  ( startIndex )  + i )  >  ( internalArray.length )  )  {     expandTo (  (  ( startIndex )  + i )  ) ; }^280^^^^^277^294^[Delete]^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P13_Insert_Block]^if  (  (  ( startIndex )  + index )  >=  ( internalArray.length )  )  {     expandTo (  (  ( startIndex )  +  ( index + 1 )  )  ) ; }^280^^^^^277^294^[Delete]^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P7_Replace_Invocation]^contract (  ) ;^281^^^^^277^294^expand (  ) ;^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P14_Delete_Statement]^^281^^^^^277^294^expand (  ) ;^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P11_Insert_Donor_Statement]^contract (  ) ;expand (  ) ;^281^^^^^277^294^expand (  ) ;^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P3_Replace_Literal]^startIndex += 6;^284^^^^^277^294^startIndex += 1;^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P8_Replace_Mix]^startIndex += 1 >>> 0;^284^^^^^277^294^startIndex += 1;^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P11_Insert_Donor_Statement]^startIndex = 0;startIndex += 1;^284^^^^^277^294^startIndex += 1;^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P11_Insert_Donor_Statement]^startIndex += i;startIndex += 1;^284^^^^^277^294^startIndex += 1;^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P2_Replace_Operator]^internalArray[startIndex +  >=  ( numElements - 1 ) ] = value;^287^^^^^277^294^internalArray[startIndex +  ( numElements - 1 ) ] = value;^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P2_Replace_Operator]^internalArray[startIndex +  ( numElements  <<  1 ) ] = value;^287^^^^^277^294^internalArray[startIndex +  ( numElements - 1 ) ] = value;^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P3_Replace_Literal]^internalArray[startIndex +  ( numElements - ADDITIVE_MODE ) ] = value;^287^^^^^277^294^internalArray[startIndex +  ( numElements - 1 ) ] = value;^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P5_Replace_Variable]^internalArray[initialCapacity +  ( numElements - 1 ) ] = value;^287^^^^^277^294^internalArray[startIndex +  ( numElements - 1 ) ] = value;^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P5_Replace_Variable]^internalArray[startIndex +  ( initialCapacity - 1 ) ] = value;^287^^^^^277^294^internalArray[startIndex +  ( numElements - 1 ) ] = value;^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P8_Replace_Mix]^internalArray[startIndex +  ( numElements - 4 ) ] = value;^287^^^^^277^294^internalArray[startIndex +  ( numElements - 1 ) ] = value;^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P11_Insert_Donor_Statement]^internalArray[startIndex + index] = value;internalArray[startIndex +  ( numElements - 1 ) ] = value;^287^^^^^277^294^internalArray[startIndex +  ( numElements - 1 ) ] = value;^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P7_Replace_Invocation]^if  ( contract (  )  )  {^290^^^^^277^294^if  ( shouldContract (  )  )  {^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P15_Unwrap_Block]^contract();^290^291^292^^^277^294^if  ( shouldContract (  )  )  { contract (  ) ; }^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P16_Remove_Block]^^290^291^292^^^277^294^if  ( shouldContract (  )  )  { contract (  ) ; }^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P7_Replace_Invocation]^shouldContract (  ) ;^291^^^^^277^294^contract (  ) ;^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P14_Delete_Statement]^^291^^^^^277^294^contract (  ) ;^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P11_Insert_Donor_Statement]^expand (  ) ;contract (  ) ;^291^^^^^277^294^contract (  ) ;^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P5_Replace_Variable]^return value;^293^^^^^277^294^return discarded;^[CLASS] ResizableDoubleArray  [METHOD] addElementRolling [RETURN_TYPE] double   double value [VARIABLES] boolean  double[]  internalArray  float  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  double  discarded  value  
[P2_Replace_Operator]^if  ( contractionCritera <= expansionFactor )  {^310^^^^^308^335^if  ( contractionCritera < expansionFactor )  {^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^if  ( expansionFactor < expansionFactor )  {^310^^^^^308^335^if  ( contractionCritera < expansionFactor )  {^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^if  ( contractionCritera < contractionCriteria )  {^310^^^^^308^335^if  ( contractionCritera < expansionFactor )  {^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^if  ( expansionFactor < contractionCritera )  {^310^^^^^308^335^if  ( contractionCritera < expansionFactor )  {^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P6_Replace_Expression]^if  ( "Contraction criteria can never be smaller than " + (("the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly ") + "expanded internal storage array would immediately ") + "satisfy the criteria for contraction" )  {^310^^^^^308^335^if  ( contractionCritera < expansionFactor )  {^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P6_Replace_Expression]^if  (  ( "the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly " )  + "expanded internal storage array would immediately " + "satisfy the criteria for contraction" )  {^310^^^^^308^335^if  ( contractionCritera < expansionFactor )  {^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P6_Replace_Expression]^if  ( "the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly " + "expanded internal storage array would immediately " )  {^310^^^^^308^335^if  ( contractionCritera < expansionFactor )  {^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P6_Replace_Expression]^if  ( "the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly " )  {^310^^^^^308^335^if  ( contractionCritera < expansionFactor )  {^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P1_Replace_Type]^char msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^311^312^313^314^^308^335^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P2_Replace_Operator]^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  <=  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^311^312^313^314^^308^335^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P2_Replace_Operator]^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  >=  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^311^312^313^314^^308^335^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P2_Replace_Operator]^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  ==  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^311^312^313^314^^308^335^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P2_Replace_Operator]^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never "  &  "ending loop of expansion and contraction as a newly " +^311^312^313^314^^308^335^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P3_Replace_Literal]^String msg = "Contraction criteria can never be smaller than ntraction criteria c" + "the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^311^312^313^314^^308^335^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P3_Replace_Literal]^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never   This w" + "ending loop of expansion and contraction as a newly " +^311^312^313^314^^308^335^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P3_Replace_Literal]^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never " + "loop of expansion and contraction " +^311^312^313^314^^308^335^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^throw new ArrayIndexOutOfBoundsException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^317^^^^^308^335^throw new IllegalArgumentException  (" ")  ;^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P2_Replace_Operator]^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  &  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^311^312^313^314^^308^335^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P2_Replace_Operator]^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  ||  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^311^312^313^314^^308^335^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P2_Replace_Operator]^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never "  >>  "ending loop of expansion and contraction as a newly " +^311^312^313^314^^308^335^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P3_Replace_Literal]^String msg = "Contraction criteria can never be smaller than riteria can never be smal" + "the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^311^312^313^314^^308^335^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P3_Replace_Literal]^String msg = "Contraction criteria can never be smaller than " + "his would he expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^311^312^313^314^^308^335^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P3_Replace_Literal]^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly op o" +^311^312^313^314^^308^335^String msg = "Contraction criteria can never be smaller than " + "the expansion factor.  This would lead to a never " + "ending loop of expansion and contraction as a newly " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P2_Replace_Operator]^if  ( contractionCriteria == 1.0 )  {^320^^^^^308^335^if  ( contractionCriteria <= 1.0 )  {^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P3_Replace_Literal]^if  ( contractionCriteria <= 9.0 )  {^320^^^^^308^335^if  ( contractionCriteria <= 1.0 )  {^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^if  ( expansionFactor <= 1.0 )  {^320^^^^^308^335^if  ( contractionCriteria <= 1.0 )  {^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P6_Replace_Expression]^if  ( "The contraction criteria must be a number larger " + (("than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and ") + "expansion would ensue as an internalArray.length ") + "== numElements would satisfy the contraction criteria" )  {^320^^^^^308^335^if  ( contractionCriteria <= 1.0 )  {^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P6_Replace_Expression]^if  (  ( "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " )  + "expansion would ensue as an internalArray.length " + "== numElements would satisfy the contraction criteria" )  {^320^^^^^308^335^if  ( contractionCriteria <= 1.0 )  {^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P6_Replace_Expression]^if  ( "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " + "expansion would ensue as an internalArray.length " )  {^320^^^^^308^335^if  ( contractionCriteria <= 1.0 )  {^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P6_Replace_Expression]^if  ( "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " )  {^320^^^^^308^335^if  ( contractionCriteria <= 1.0 )  {^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P8_Replace_Mix]^if  ( expansionFactor <= 3.0d )  {^320^^^^^308^335^if  ( contractionCriteria <= 1.0 )  {^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P1_Replace_Type]^char msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^321^322^323^324^^308^335^String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P2_Replace_Operator]^String msg = "The contraction criteria must be a number larger " + "than one.  !=  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^321^322^323^324^^308^335^String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P2_Replace_Operator]^String msg = "The contraction criteria must be a number larger " + "than one.  |  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^321^322^323^324^^308^335^String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P2_Replace_Operator]^String msg = "The contraction criteria must be a number larger " + "than one.  <<  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^321^322^323^324^^308^335^String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P2_Replace_Operator]^String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or "  ==  "equal to one an endless loop of contraction and " +^321^322^323^324^^308^335^String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P3_Replace_Literal]^String msg = "The contraction criteria must be a number larger raction cri" + "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^321^322^323^324^^308^335^String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P3_Replace_Literal]^String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or th" + "equal to one an endless loop of contraction and " +^321^322^323^324^^308^335^String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P3_Replace_Literal]^String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or " + " e" +^321^322^323^324^^308^335^String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^throw new ArrayIndexOutOfBoundsException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^327^^^^^308^335^throw new IllegalArgumentException  (" ")  ;^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P2_Replace_Operator]^String msg = "The contraction criteria must be a number larger " + "than one.  >=  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^321^322^323^324^^308^335^String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P2_Replace_Operator]^String msg = "The contraction criteria must be a number larger " + "than one.   instanceof   If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^321^322^323^324^^308^335^String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P2_Replace_Operator]^String msg = "The contraction criteria must be a number larger " + "than one.  >>  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^321^322^323^324^^308^335^String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P2_Replace_Operator]^String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or "  >>  "equal to one an endless loop of contraction and " +^321^322^323^324^^308^335^String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P3_Replace_Literal]^String msg = "The contraction criteria must be a number larger criteria must" + "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^321^322^323^324^^308^335^String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P3_Replace_Literal]^String msg = "The contraction criteria must be a number larger " + "ehan one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^321^322^323^324^^308^335^String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P3_Replace_Literal]^String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and al to " +^321^322^323^324^^308^335^String msg = "The contraction criteria must be a number larger " + "than one.  If the contractionCriteria is less than or " + "equal to one an endless loop of contraction and " +^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P2_Replace_Operator]^if  ( expansionFactor == 1.0 )  {^330^^^^^308^335^if  ( expansionFactor <= 1.0 )  {^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P3_Replace_Literal]^if  ( expansionFactor <= 0.14285714285714285 )  {^330^^^^^308^335^if  ( expansionFactor <= 1.0 )  {^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^if  ( contractionCriteria <= 1.0 )  {^330^^^^^308^335^if  ( expansionFactor <= 1.0 )  {^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P8_Replace_Mix]^if  ( contractionCriteria <= 1.0D )  {^330^^^^^308^335^if  ( expansionFactor <= 1.0 )  {^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P15_Unwrap_Block]^java.lang.String msg = "The expansion factor must be a number greater than 1.0"; throw new java.lang.IllegalArgumentException(msg);^330^331^332^333^334^308^335^if  ( expansionFactor <= 1.0 )  { String msg = "The expansion factor must be a number greater than 1.0"; throw new IllegalArgumentException  (" ")  ; }^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P16_Remove_Block]^^330^331^332^333^334^308^335^if  ( expansionFactor <= 1.0 )  { String msg = "The expansion factor must be a number greater than 1.0"; throw new IllegalArgumentException  (" ")  ; }^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P13_Insert_Block]^if  ( i < 0 )  {     String msg = "Number of elements must be zero or a positive " + "integer";     throw new IllegalArgumentException ( msg ) ; }^330^^^^^308^335^[Delete]^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P13_Insert_Block]^if  ( index < 0 )  {     String msg = "Cannot set an element at a negative index";     throw new ArrayIndexOutOfBoundsException ( msg ) ; }^330^^^^^308^335^[Delete]^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P1_Replace_Type]^char msg = "The expansion factor must be a number greater than 1.0";^331^332^^^^308^335^String msg = "The expansion factor must be a number greater than 1.0";^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P3_Replace_Literal]^String msg = "nsion factor must he expansion factor must be a number greater than 1.0";^331^332^^^^308^335^String msg = "The expansion factor must be a number greater than 1.0";^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P3_Replace_Literal]^String msg = "The expansion factor must be a number greater than 1.0expa";^331^332^^^^308^335^String msg = "The expansion factor must be a number greater than 1.0";^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^throw new ArrayIndexOutOfBoundsException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^333^^^^^308^335^throw new IllegalArgumentException  (" ")  ;^[CLASS] ResizableDoubleArray  [METHOD] checkContractExpand [RETURN_TYPE] void   float contractionCritera float expansionFactor [VARIABLES] String  msg  boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P3_Replace_Literal]^numElements = -9;^342^^^^^341^344^numElements = 0;^[CLASS] ResizableDoubleArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P8_Replace_Mix]^numElements = 2;^342^^^^^341^344^numElements = 0;^[CLASS] ResizableDoubleArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^numElements = index + 1;numElements = 0;^342^^^^^341^344^numElements = 0;^[CLASS] ResizableDoubleArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^numElements = i;numElements = 0;^342^^^^^341^344^numElements = 0;^[CLASS] ResizableDoubleArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^numElements -= i;numElements = 0;^342^^^^^341^344^numElements = 0;^[CLASS] ResizableDoubleArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P8_Replace_Mix]^internalArray  = null ;^343^^^^^341^344^internalArray = new double[initialCapacity];^[CLASS] ResizableDoubleArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^internalArray = new double[this.initialCapacity];internalArray = new double[initialCapacity];^343^^^^^341^344^internalArray = new double[initialCapacity];^[CLASS] ResizableDoubleArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P3_Replace_Literal]^double[] tempArray = new double[numElements ];^352^^^^^351^360^double[] tempArray = new double[numElements + 1];^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^double[] tempArray = new double[startIndex + 1];^352^^^^^351^360^double[] tempArray = new double[numElements + 1];^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^double[] tempArray = new double[newSize];double[] tempArray = new double[numElements + 1];^352^^^^^351^360^double[] tempArray = new double[numElements + 1];^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^double[] elementArray = new double[numElements];double[] tempArray = new double[numElements + 1];^352^^^^^351^360^double[] tempArray = new double[numElements + 1];^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^double[] tempArray = new double[size];double[] tempArray = new double[numElements + 1];^352^^^^^351^360^double[] tempArray = new double[numElements + 1];^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P3_Replace_Literal]^System.arraycopy ( internalArray, startIndex, tempArray, -6, numElements ) ;^355^^^^^351^360^System.arraycopy ( internalArray, startIndex, tempArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^System.arraycopy ( internalArray, startIndex, internalArray, 0, numElements ) ;^355^^^^^351^360^System.arraycopy ( internalArray, startIndex, tempArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^System.arraycopy ( internalArray, numElements, tempArray, 0, numElements ) ;^355^^^^^351^360^System.arraycopy ( internalArray, startIndex, tempArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^System.arraycopy ( internalArray, startIndex, tempArray, 0, initialCapacity ) ;^355^^^^^351^360^System.arraycopy ( internalArray, startIndex, tempArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^System.arraycopy ( internalArray, startIndex,  0, numElements ) ;^355^^^^^351^360^System.arraycopy ( internalArray, startIndex, tempArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^System.arraycopy (  startIndex, tempArray, 0, numElements ) ;^355^^^^^351^360^System.arraycopy ( internalArray, startIndex, tempArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^System.arraycopy ( internalArray,  tempArray, 0, numElements ) ;^355^^^^^351^360^System.arraycopy ( internalArray, startIndex, tempArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^System.arraycopy ( internalArray, startIndex, tempArray, 0 ) ;^355^^^^^351^360^System.arraycopy ( internalArray, startIndex, tempArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^System.arraycopy ( internalArray, startIndex, numElements, 0, tempArray ) ;^355^^^^^351^360^System.arraycopy ( internalArray, startIndex, tempArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^System.arraycopy ( numElements, startIndex, tempArray, 0, internalArray ) ;^355^^^^^351^360^System.arraycopy ( internalArray, startIndex, tempArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^System.arraycopy ( internalArray, tempArray, startIndex, 0, numElements ) ;^355^^^^^351^360^System.arraycopy ( internalArray, startIndex, tempArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^System.arraycopy ( internalArray, numElements, tempArray, 0, startIndex ) ;^355^^^^^351^360^System.arraycopy ( internalArray, startIndex, tempArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P14_Delete_Statement]^^355^^^^^351^360^System.arraycopy ( internalArray, startIndex, tempArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;System.arraycopy ( internalArray, startIndex, tempArray, 0, numElements ) ;^355^^^^^351^360^System.arraycopy ( internalArray, startIndex, tempArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^System.arraycopy (  internalArray, startIndex, elementArray, 0, numElements ) ;System.arraycopy ( internalArray, startIndex, tempArray, 0, numElements ) ;^355^^^^^351^360^System.arraycopy ( internalArray, startIndex, tempArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^internalArray = internalArray;^356^^^^^351^360^internalArray = tempArray;^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P8_Replace_Mix]^internalArray =  null;^356^^^^^351^360^internalArray = tempArray;^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P3_Replace_Literal]^startIndex = startIndex;^359^^^^^351^360^startIndex = 0;^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P8_Replace_Mix]^startIndex = 4;^359^^^^^351^360^startIndex = 0;^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^startIndex += 1;startIndex = 0;^359^^^^^351^360^startIndex = 0;^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^startIndex += i;startIndex = 0;^359^^^^^351^360^startIndex = 0;^[CLASS] ResizableDoubleArray  [METHOD] contract [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  initialCapacity  numElements  startIndex  
[P2_Replace_Operator]^if  ( i >= numElements )  {^373^^^^^372^388^if  ( i > numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^if  ( startIndex > numElements )  {^373^^^^^372^388^if  ( i > numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^if  ( i > initialCapacity )  {^373^^^^^372^388^if  ( i > numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^if  ( numElements > i )  {^373^^^^^372^388^if  ( i > numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P6_Replace_Expression]^if  ( "Cannot discard more elements than are" + "contained in this array." )  {^373^^^^^372^388^if  ( i > numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P6_Replace_Expression]^if  ( i < 0 )  {^373^^^^^372^388^if  ( i > numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P8_Replace_Mix]^if  ( i > startIndex )  {^373^^^^^372^388^if  ( i > numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P9_Replace_Statement]^if  ( index >= numElements )  {^373^^^^^372^388^if  ( i > numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P9_Replace_Statement]^if  ( index + 1 > numElements )  {^373^^^^^372^388^if  ( i > numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P2_Replace_Operator]^} else if  ( i <= 0 )  {^377^^^^^372^388^} else if  ( i < 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P3_Replace_Literal]^} else if  ( i < 3 )  {^377^^^^^372^388^} else if  ( i < 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P6_Replace_Expression]^} else {^377^^^^^372^388^} else if  ( i < 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P8_Replace_Mix]^}  if  ( i < 0 - 4 )  {^377^^^^^372^388^} else if  ( i < 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P9_Replace_Statement]^} else if  ( index >= 0 )  {^377^^^^^372^388^} else if  ( i < 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P2_Replace_Operator]^numElements += i;^382^^^^^372^388^numElements -= i;^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^numElements -= initialCapacity;^382^^^^^372^388^numElements -= i;^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P8_Replace_Mix]^numElements -=  startIndex;^382^^^^^372^388^numElements -= i;^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^numElements = index + 1;numElements -= i;^382^^^^^372^388^numElements -= i;^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^numElements = 0;numElements -= i;^382^^^^^372^388^numElements -= i;^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^numElements = i;numElements -= i;^382^^^^^372^388^numElements -= i;^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^startIndex += startIndex;^383^^^^^372^388^startIndex += i;^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P8_Replace_Mix]^startIndex +=  numElements;^383^^^^^372^388^startIndex += i;^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^startIndex += 1;startIndex += i;^383^^^^^372^388^startIndex += i;^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^startIndex = 0;startIndex += i;^383^^^^^372^388^startIndex += i;^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P1_Replace_Type]^char msg = "Cannot discard a negative number of elements.";^378^^^^^372^388^String msg = "Cannot discard a negative number of elements.";^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P3_Replace_Literal]^String msg = "Cannot discard a negative number of elements.card a negativ";^378^^^^^372^388^String msg = "Cannot discard a negative number of elements.";^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^String msg = "Cannot discard more elements than are" + "contained in this array.";String msg = "Cannot discard a negative number of elements.";^378^^^^^372^388^String msg = "Cannot discard a negative number of elements.";^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^throw new ArrayIndexOutOfBoundsException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^379^^^^^372^388^throw new IllegalArgumentException  (" ")  ;^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P3_Replace_Literal]^String msg = "Cannot discard a negative number of elements.ment";^378^^^^^372^388^String msg = "Cannot discard a negative number of elements.";^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P1_Replace_Type]^char msg = "Cannot discard more elements than are" + "contained in this array.";^374^375^^^^372^388^String msg = "Cannot discard more elements than are" + "contained in this array.";^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P3_Replace_Literal]^String msg = "discard" + "contained in this array.";^374^375^^^^372^388^String msg = "Cannot discard more elements than are" + "contained in this array.";^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P3_Replace_Literal]^String msg = "Cannot discard more elements than are" + "contained in this array.ntaine";^374^375^^^^372^388^String msg = "Cannot discard more elements than are" + "contained in this array.";^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^String msg = "Cannot discard a negative number of elements.";String msg = "Cannot discard more elements than are" + "contained in this array.";^374^375^^^^372^388^String msg = "Cannot discard more elements than are" + "contained in this array.";^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^String msg = "Cannot set an element at a negative index";String msg = "Cannot discard more elements than are" + "contained in this array.";^374^375^^^^372^388^String msg = "Cannot discard more elements than are" + "contained in this array.";^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P8_Replace_Mix]^throw new ArrayIndexOutOfBoundsException  (" ")  ; ;^376^^^^^372^388^throw new IllegalArgumentException  (" ")  ;^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^throw new ArrayIndexOutOfBoundsException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^376^^^^^372^388^throw new IllegalArgumentException  (" ")  ;^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P3_Replace_Literal]^} else if  ( i < 9 )  {^377^^^^^372^388^} else if  ( i < 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P5_Replace_Variable]^} else initialCapacityf  ( i < 0 )  {^377^^^^^372^388^} else if  ( i < 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P2_Replace_Operator]^numElements = i;^382^^^^^372^388^numElements -= i;^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P3_Replace_Literal]^String msg = "n";^378^^^^^372^388^String msg = "Cannot discard a negative number of elements.";^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P3_Replace_Literal]^String msg = "Cannot discard more elements than areno" + "contained in this array.";^374^375^^^^372^388^String msg = "Cannot discard more elements than are" + "contained in this array.";^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P3_Replace_Literal]^String msg = "Cannot discard more elements than are" + "contained in this array.tained ";^374^375^^^^372^388^String msg = "Cannot discard more elements than are" + "contained in this array.";^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P3_Replace_Literal]^String msg = " negative number of eannot discard a negative number of elements.";^378^^^^^372^388^String msg = "Cannot discard a negative number of elements.";^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P7_Replace_Invocation]^if  ( contract (  )  )  {^385^^^^^372^388^if  ( shouldContract (  )  )  {^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P15_Unwrap_Block]^contract();^385^386^387^^^372^388^if  ( shouldContract (  )  )  { contract (  ) ; }^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P16_Remove_Block]^^385^386^387^^^372^388^if  ( shouldContract (  )  )  { contract (  ) ; }^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P7_Replace_Invocation]^shouldContract (  ) ;^386^^^^^372^388^contract (  ) ;^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P14_Delete_Statement]^^386^^^^^372^388^contract (  ) ;^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P11_Insert_Donor_Statement]^expand (  ) ;contract (  ) ;^386^^^^^372^388^contract (  ) ;^[CLASS] ResizableDoubleArray  [METHOD] discardFrontElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  numElements  startIndex  
[P1_Replace_Type]^short  newSize = 0;^405^^^^^398^416^int newSize = 0;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P3_Replace_Literal]^int newSize = 9;^405^^^^^398^416^int newSize = 0;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P2_Replace_Operator]^if  ( expansionMode <= MULTIPLICATIVE_MODE )  {^406^^^^^398^416^if  ( expansionMode == MULTIPLICATIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P5_Replace_Variable]^if  ( startIndex == MULTIPLICATIVE_MODE )  {^406^^^^^398^416^if  ( expansionMode == MULTIPLICATIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P5_Replace_Variable]^if  ( expansionMode == startIndex )  {^406^^^^^398^416^if  ( expansionMode == MULTIPLICATIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P5_Replace_Variable]^if  ( MULTIPLICATIVE_MODE == expansionMode )  {^406^^^^^398^416^if  ( expansionMode == MULTIPLICATIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P6_Replace_Expression]^if  ( internalArray.length * expansionFactor )  {^406^^^^^398^416^if  ( expansionMode == MULTIPLICATIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P6_Replace_Expression]^if  ( internalArray.length + round(expansionFactor) )  {^406^^^^^398^416^if  ( expansionMode == MULTIPLICATIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P8_Replace_Mix]^if  ( numElements == MULTIPLICATIVE_MODE )  {^406^^^^^398^416^if  ( expansionMode == MULTIPLICATIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P15_Unwrap_Block]^newSize = ((int) (java.lang.Math.ceil(((internalArray.length) * (expansionFactor)))));^406^407^408^409^410^398^416^if  ( expansionMode == MULTIPLICATIVE_MODE )  { newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ; } else { newSize = internalArray.length + Math.round ( expansionFactor ) ; }^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P16_Remove_Block]^^406^407^408^409^410^398^416^if  ( expansionMode == MULTIPLICATIVE_MODE )  { newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ; } else { newSize = internalArray.length + Math.round ( expansionFactor ) ; }^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P13_Insert_Block]^if  (  ( expansionMode )  ==  ( MULTIPLICATIVE_MODE )  )  {     return  (  ( internalArray.length )  /  ( numElements )  )  >  ( contractionCriteria ) ; }else {     return  (  ( internalArray.length )  -  ( numElements )  )  >  ( contractionCriteria ) ; }^406^^^^^398^416^[Delete]^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P5_Replace_Variable]^newSize = initialCapacity + Math.round ( expansionFactor ) ;^409^^^^^398^416^newSize = internalArray.length + Math.round ( expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P5_Replace_Variable]^newSize = tempArray.length + Math.round ( expansionFactor ) ;^409^^^^^398^416^newSize = internalArray.length + Math.round ( expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P5_Replace_Variable]^newSize = internalArray.length + Math.round ( contractionCriteria ) ;^409^^^^^398^416^newSize = internalArray.length + Math.round ( expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P5_Replace_Variable]^newSize = internalArray + Math.round ( expansionFactor ) ;^409^^^^^398^416^newSize = internalArray.length + Math.round ( expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P5_Replace_Variable]^newSize = expansionFactor.length + Math.round ( internalArray ) ;^409^^^^^398^416^newSize = internalArray.length + Math.round ( expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P5_Replace_Variable]^newSize = expansionFactor + Math.round ( internalArray.length ) ;^409^^^^^398^416^newSize = internalArray.length + Math.round ( expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P11_Insert_Donor_Statement]^newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;newSize = internalArray.length + Math.round ( expansionFactor ) ;^409^^^^^398^416^newSize = internalArray.length + Math.round ( expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P14_Delete_Statement]^^409^^^^^398^416^newSize = internalArray.length + Math.round ( expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P1_Replace_Type]^newSize =  (  short  )  Math.ceil ( internalArray.length * expansionFactor ) ;^407^^^^^398^416^newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P2_Replace_Operator]^newSize =  ( int )  Math.ceil ( internalArray.length / expansionFactor ) ;^407^^^^^398^416^newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P5_Replace_Variable]^newSize =  ( int )  Math.ceil ( numElements * expansionFactor ) ;^407^^^^^398^416^newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P5_Replace_Variable]^newSize =  ( int )  Math.ceil ( tempArray.length * expansionFactor ) ;^407^^^^^398^416^newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P5_Replace_Variable]^newSize =  ( int )  Math.ceil ( internalArray.length * contractionCriteria ) ;^407^^^^^398^416^newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P5_Replace_Variable]^newSize =  ( int )  Math.ceil ( internalArray * expansionFactor ) ;^407^^^^^398^416^newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P5_Replace_Variable]^newSize =  ( int )  Math.ceil ( expansionFactor.length * internalArray ) ;^407^^^^^398^416^newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P11_Insert_Donor_Statement]^newSize = internalArray.length + Math.round ( expansionFactor ) ;newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;^407^^^^^398^416^newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P1_Replace_Type]^newSize =  (  long  )  Math.ceil ( internalArray.length * expansionFactor ) ;^407^^^^^398^416^newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P2_Replace_Operator]^newSize =  ( int )  Math.ceil ( internalArray.length + expansionFactor ) ;^407^^^^^398^416^newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P5_Replace_Variable]^newSize =  ( int )  Math.ceil ( startIndex * expansionFactor ) ;^407^^^^^398^416^newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P14_Delete_Statement]^^407^^^^^398^416^newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P5_Replace_Variable]^newSize =  ( int )  Math.ceil ( expansionFactor * internalArray.length ) ;^407^^^^^398^416^newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P5_Replace_Variable]^newSize =  ( int )  Math.ceil ( internalArray.length.length * expansionFactor ) ;^407^^^^^398^416^newSize =  ( int )  Math.ceil ( internalArray.length * expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P5_Replace_Variable]^newSize = startIndex + Math.round ( expansionFactor ) ;^409^^^^^398^416^newSize = internalArray.length + Math.round ( expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P5_Replace_Variable]^newSize = internalArray.length.length + Math.round ( expansionFactor ) ;^409^^^^^398^416^newSize = internalArray.length + Math.round ( expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P11_Insert_Donor_Statement]^double[] tempArray = new double[numElements + 1];double[] tempArray = new double[newSize];^411^^^^^398^416^double[] tempArray = new double[newSize];^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P11_Insert_Donor_Statement]^double[] elementArray = new double[numElements];double[] tempArray = new double[newSize];^411^^^^^398^416^double[] tempArray = new double[newSize];^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P11_Insert_Donor_Statement]^double[] tempArray = new double[size];double[] tempArray = new double[newSize];^411^^^^^398^416^double[] tempArray = new double[newSize];^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P3_Replace_Literal]^System.arraycopy ( internalArray, -3, tempArray, -3, internalArray.length ) ;^414^^^^^398^416^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P3_Replace_Literal]^System.arraycopy ( internalArray, -8, tempArray, -8, internalArray.length ) ;^414^^^^^398^416^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P5_Replace_Variable]^System.arraycopy ( internalArray, 0, tempArray, 0, newSize ) ;^414^^^^^398^416^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P5_Replace_Variable]^System.arraycopy ( internalArray, 0,  0, internalArray.length ) ;^414^^^^^398^416^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P5_Replace_Variable]^System.arraycopy (  0, tempArray, 0, internalArray.length ) ;^414^^^^^398^416^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P5_Replace_Variable]^System.arraycopy ( internalArray, 0, tempArray, 0 ) ;^414^^^^^398^416^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P5_Replace_Variable]^System.arraycopy ( tempArray, 0, internalArray, 0, internalArray.length ) ;^414^^^^^398^416^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P5_Replace_Variable]^System.arraycopy ( internalArray.length, 0, tempArray, 0, internalArray ) ;^414^^^^^398^416^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P8_Replace_Mix]^System.arraycopy ( internalArray, 0, tempArray, 0, initialCapacity ) ;^414^^^^^398^416^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P14_Delete_Statement]^^414^415^^^^398^416^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ; internalArray = tempArray;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P11_Insert_Donor_Statement]^System.arraycopy (  internalArray, startIndex, elementArray, 0, numElements ) ;System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^414^^^^^398^416^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P11_Insert_Donor_Statement]^System.arraycopy ( internalArray, startIndex, tempArray, 0, numElements ) ;System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^414^^^^^398^416^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P8_Replace_Mix]^internalArray =  null;^415^^^^^398^416^internalArray = tempArray;^[CLASS] ResizableDoubleArray  [METHOD] expand [RETURN_TYPE] void   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  startIndex  
[P11_Insert_Donor_Statement]^double[] tempArray = new double[numElements + 1];double[] tempArray = new double[size];^424^^^^^423^428^double[] tempArray = new double[size];^[CLASS] ResizableDoubleArray  [METHOD] expandTo [RETURN_TYPE] void   int size [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^double[] tempArray = new double[newSize];double[] tempArray = new double[size];^424^^^^^423^428^double[] tempArray = new double[size];^[CLASS] ResizableDoubleArray  [METHOD] expandTo [RETURN_TYPE] void   int size [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^double[] elementArray = new double[numElements];double[] tempArray = new double[size];^424^^^^^423^428^double[] tempArray = new double[size];^[CLASS] ResizableDoubleArray  [METHOD] expandTo [RETURN_TYPE] void   int size [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  size  startIndex  
[P3_Replace_Literal]^System.arraycopy ( internalArray, initialCapacity, tempArray, initialCapacity, internalArray.length ) ;^426^^^^^423^428^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expandTo [RETURN_TYPE] void   int size [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  size  startIndex  
[P3_Replace_Literal]^System.arraycopy ( internalArray, , tempArray, , internalArray.length ) ;^426^^^^^423^428^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expandTo [RETURN_TYPE] void   int size [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^System.arraycopy ( tempArray, 0, tempArray, 0, internalArray.length ) ;^426^^^^^423^428^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expandTo [RETURN_TYPE] void   int size [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^System.arraycopy ( internalArray, 0,  0, internalArray.length ) ;^426^^^^^423^428^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expandTo [RETURN_TYPE] void   int size [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^System.arraycopy (  0, tempArray, 0, internalArray.length ) ;^426^^^^^423^428^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expandTo [RETURN_TYPE] void   int size [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^System.arraycopy ( internalArray, 0, tempArray, 0 ) ;^426^^^^^423^428^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expandTo [RETURN_TYPE] void   int size [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^System.arraycopy ( tempArray, 0, internalArray, 0, internalArray.length ) ;^426^^^^^423^428^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expandTo [RETURN_TYPE] void   int size [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^System.arraycopy ( internalArray.length, 0, tempArray, 0, internalArray ) ;^426^^^^^423^428^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expandTo [RETURN_TYPE] void   int size [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^System.arraycopy ( internalArray, 0, tempArray, 0, startIndex ) ;^426^^^^^423^428^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expandTo [RETURN_TYPE] void   int size [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  size  startIndex  
[P14_Delete_Statement]^^426^^^^^423^428^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expandTo [RETURN_TYPE] void   int size [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^System.arraycopy (  internalArray, startIndex, elementArray, 0, numElements ) ;System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^426^^^^^423^428^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expandTo [RETURN_TYPE] void   int size [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^System.arraycopy ( internalArray, startIndex, tempArray, 0, numElements ) ;System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^426^^^^^423^428^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] expandTo [RETURN_TYPE] void   int size [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^internalArray = internalArray;^427^^^^^423^428^internalArray = tempArray;^[CLASS] ResizableDoubleArray  [METHOD] expandTo [RETURN_TYPE] void   int size [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^internalArray =  null;^427^^^^^423^428^internalArray = tempArray;^[CLASS] ResizableDoubleArray  [METHOD] expandTo [RETURN_TYPE] void   int size [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return expansionFactor;^443^^^^^442^444^return contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] getContractionCriteria [RETURN_TYPE] float   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  size  startIndex  
[P12_Insert_Condition]^if  ( contractionCriteria <= 1.0 )  { return contractionCriteria; }^443^^^^^442^444^return contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] getContractionCriteria [RETURN_TYPE] float   [VARIABLES] boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^if  ( index > numElements )  {^455^^^^^454^467^if  ( index >= numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^if  ( newSize >= numElements )  {^455^^^^^454^467^if  ( index >= numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^if  ( index >= startIndex )  {^455^^^^^454^467^if  ( index >= numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P6_Replace_Expression]^if  ( "The index specified: " + index + " is larger than the current number of elements" )  {^455^^^^^454^467^if  ( index >= numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P6_Replace_Expression]^if  ( "The index specified: " + index )  {^455^^^^^454^467^if  ( index >= numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P6_Replace_Expression]^if  ( index >= 0 )  {^455^^^^^454^467^if  ( index >= numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P6_Replace_Expression]^if  ( startIndex + index )  {^455^^^^^454^467^if  ( index >= numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P9_Replace_Statement]^if  ( index + 1 > numElements )  {^455^^^^^454^467^if  ( index >= numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P9_Replace_Statement]^if  ( i > numElements )  {^455^^^^^454^467^if  ( index >= numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^} else if  ( index < 0 )  {^460^^^^^454^467^} else if  ( index >= 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P3_Replace_Literal]^} else if  ( index >= ADDITIVE_MODE )  {^460^^^^^454^467^} else if  ( index >= 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^} else if  ( numElements >= 0 )  {^460^^^^^454^467^} else if  ( index >= 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P6_Replace_Expression]^} else if  ( startIndex + index )  {^460^^^^^454^467^} else if  ( index >= 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P6_Replace_Expression]^} else {^460^^^^^454^467^} else if  ( index >= 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^}  if  ( index >= 3 )  {^460^^^^^454^467^} else if  ( index >= 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P13_Insert_Block]^if  ( index < 0 )  {     String msg = "Cannot set an element at a negative index";     throw new ArrayIndexOutOfBoundsException ( msg ) ; }^460^^^^^454^467^[Delete]^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P1_Replace_Type]^char msg = "Elements cannot be retrieved from a negative array index";^463^464^^^^454^467^String msg = "Elements cannot be retrieved from a negative array index";^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P3_Replace_Literal]^String msg = "Elements cannot be retrieved from a negative array indexnts cannot be retri";^463^464^^^^454^467^String msg = "Elements cannot be retrieved from a negative array index";^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^String msg = "Cannot set an element at a negative index";String msg = "Elements cannot be retrieved from a negative array index";^463^464^^^^454^467^String msg = "Elements cannot be retrieved from a negative array index";^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new ArrayIndexOutOfBoundsException  (" ")  ;^465^^^^^454^467^throw new ArrayIndexOutOfBoundsException  (" ")  ;^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return internalArray[startIndex + size];^461^^^^^454^467^return internalArray[startIndex + index];^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return tempArray[startIndex + index];^461^^^^^454^467^return internalArray[startIndex + index];^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return internalArray[initialCapacity + index];^461^^^^^454^467^return internalArray[startIndex + index];^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return index[startIndex + internalArray];^461^^^^^454^467^return internalArray[startIndex + index];^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^return internalArray[startIndex  ^  index];^461^^^^^454^467^return internalArray[startIndex + index];^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return internalArray[startIndex + newSize];^461^^^^^454^467^return internalArray[startIndex + index];^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return internalArray[newSize + index];^461^^^^^454^467^return internalArray[startIndex + index];^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^return internalArray[startIndex   instanceof   index];^461^^^^^454^467^return internalArray[startIndex + index];^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P3_Replace_Literal]^String msg = "be retrieved from a negatlements cannot be retrieved from a negative array index";^463^464^^^^454^467^String msg = "Elements cannot be retrieved from a negative array index";^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^465^^^^^454^467^throw new ArrayIndexOutOfBoundsException  (" ")  ;^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P1_Replace_Type]^char msg = "The index specified: " + index + " is larger than the current number of elements";^456^457^458^^^454^467^String msg = "The index specified: " + index + " is larger than the current number of elements";^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^String msg = "The index specified: "  >>  index + " is larger than the current number of elements";^456^457^458^^^454^467^String msg = "The index specified: " + index + " is larger than the current number of elements";^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P3_Replace_Literal]^String msg = "The index specified: The in" + index + " is larger than the current number of elements";^456^457^458^^^454^467^String msg = "The index specified: " + index + " is larger than the current number of elements";^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P3_Replace_Literal]^String msg = "The index specified: " + index + "rentis larger than the current number of elements";^456^457^458^^^454^467^String msg = "The index specified: " + index + " is larger than the current number of elements";^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^String msg = "The startIndex specified: " + index + " is larger than the current number of elements";^456^457^458^^^454^467^String msg = "The index specified: " + index + " is larger than the current number of elements";^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^String msg = "The numElements specified: " + index + " is larger than the current number of elements";^456^457^458^^^454^467^String msg = "The index specified: " + index + " is larger than the current number of elements";^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^459^^^^^454^467^throw new ArrayIndexOutOfBoundsException  (" ")  ;^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new ArrayIndexOutOfBoundsException  (" ")  ;^459^^^^^454^467^throw new ArrayIndexOutOfBoundsException  (" ")  ;^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^} else if  ( index > 0 )  {^460^^^^^454^467^} else if  ( index >= 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P3_Replace_Literal]^} else if  ( index >= -2 )  {^460^^^^^454^467^} else if  ( index >= 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^}  if  ( index >= 0 * 1 )  {^460^^^^^454^467^} else if  ( index >= 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P3_Replace_Literal]^String msg = "nnot be retrielements cannot be retrieved from a negative array index";^463^464^^^^454^467^String msg = "Elements cannot be retrieved from a negative array index";^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return internalArray[startIndex + numElements];^461^^^^^454^467^return internalArray[startIndex + index];^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^return internalArray[startIndex  ;^461^^^^^454^467^return internalArray[startIndex + index];^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^String msg = "The index specified: "  <  index + " is larger than the current number of elements";^456^457^458^^^454^467^String msg = "The index specified: " + index + " is larger than the current number of elements";^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P3_Replace_Literal]^String msg = " indhe index specified: " + index + " is larger than the current number of elements";^456^457^458^^^454^467^String msg = "The index specified: " + index + " is larger than the current number of elements";^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P3_Replace_Literal]^String msg = "The index specified: " + index + " is larger than the current number of elementss larger than the ";^456^457^458^^^454^467^String msg = "The index specified: " + index + " is larger than the current number of elements";^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^String msg = "The newSize specified: " + index + " is larger than the current number of elements";^456^457^458^^^454^467^String msg = "The index specified: " + index + " is larger than the current number of elements";^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P3_Replace_Literal]^String msg = "El";^463^464^^^^454^467^String msg = "Elements cannot be retrieved from a negative array index";^[CLASS] ResizableDoubleArray  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] String  msg  boolean  double[]  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^double[] tempArray = new double[numElements + 1];double[] elementArray = new double[numElements];^477^^^^^476^481^double[] elementArray = new double[numElements];^[CLASS] ResizableDoubleArray  [METHOD] getElements [RETURN_TYPE] double[]   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^double[] tempArray = new double[newSize];double[] elementArray = new double[numElements];^477^^^^^476^481^double[] elementArray = new double[numElements];^[CLASS] ResizableDoubleArray  [METHOD] getElements [RETURN_TYPE] double[]   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^double[] tempArray = new double[size];double[] elementArray = new double[numElements];^477^^^^^476^481^double[] elementArray = new double[numElements];^[CLASS] ResizableDoubleArray  [METHOD] getElements [RETURN_TYPE] double[]   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P3_Replace_Literal]^System.arraycopy (  internalArray, startIndex, elementArray, newSize, numElements ) ;^478^479^^^^476^481^System.arraycopy (  internalArray, startIndex, elementArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] getElements [RETURN_TYPE] double[]   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^System.arraycopy (  internalArray, startIndex, tempArray, 0, numElements ) ;^478^479^^^^476^481^System.arraycopy (  internalArray, startIndex, elementArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] getElements [RETURN_TYPE] double[]   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^System.arraycopy (  tempArray, startIndex, elementArray, 0, numElements ) ;^478^479^^^^476^481^System.arraycopy (  internalArray, startIndex, elementArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] getElements [RETURN_TYPE] double[]   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^System.arraycopy (  internalArray, size, elementArray, 0, numElements ) ;^478^479^^^^476^481^System.arraycopy (  internalArray, startIndex, elementArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] getElements [RETURN_TYPE] double[]   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^System.arraycopy (  internalArray, startIndex, elementArray, 0, initialCapacity ) ;^478^479^^^^476^481^System.arraycopy (  internalArray, startIndex, elementArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] getElements [RETURN_TYPE] double[]   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^System.arraycopy (  internalArray, startIndex,  0, numElements ) ;^478^479^^^^476^481^System.arraycopy (  internalArray, startIndex, elementArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] getElements [RETURN_TYPE] double[]   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^System.arraycopy (   startIndex, elementArray, 0, numElements ) ;^478^479^^^^476^481^System.arraycopy (  internalArray, startIndex, elementArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] getElements [RETURN_TYPE] double[]   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^System.arraycopy (  internalArray,  elementArray, 0, numElements ) ;^478^479^^^^476^481^System.arraycopy (  internalArray, startIndex, elementArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] getElements [RETURN_TYPE] double[]   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^System.arraycopy (  internalArray, startIndex, elementArray, 0 ) ;^478^479^^^^476^481^System.arraycopy (  internalArray, startIndex, elementArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] getElements [RETURN_TYPE] double[]   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^System.arraycopy (  elementArray, startIndex, internalArray, 0, numElements ) ;^478^479^^^^476^481^System.arraycopy (  internalArray, startIndex, elementArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] getElements [RETURN_TYPE] double[]   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^System.arraycopy (  numElements, startIndex, elementArray, 0, internalArray ) ;^478^479^^^^476^481^System.arraycopy (  internalArray, startIndex, elementArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] getElements [RETURN_TYPE] double[]   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^System.arraycopy (  internalArray, numElements, elementArray, 0, startIndex ) ;^478^479^^^^476^481^System.arraycopy (  internalArray, startIndex, elementArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] getElements [RETURN_TYPE] double[]   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^System.arraycopy (  internalArray, startIndex, elementArray, 0, newSize ) ;^478^479^^^^476^481^System.arraycopy (  internalArray, startIndex, elementArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] getElements [RETURN_TYPE] double[]   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P14_Delete_Statement]^^478^479^^^^476^481^System.arraycopy (  internalArray, startIndex, elementArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] getElements [RETURN_TYPE] double[]   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^System.arraycopy ( internalArray, 0, tempArray, 0, internalArray.length ) ;System.arraycopy (  internalArray, startIndex, elementArray, 0, numElements ) ;^478^479^^^^476^481^System.arraycopy (  internalArray, startIndex, elementArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] getElements [RETURN_TYPE] double[]   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^System.arraycopy ( internalArray, startIndex, tempArray, 0, numElements ) ;System.arraycopy (  internalArray, startIndex, elementArray, 0, numElements ) ;^478^479^^^^476^481^System.arraycopy (  internalArray, startIndex, elementArray, 0, numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] getElements [RETURN_TYPE] double[]   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return tempArray;^480^^^^^476^481^return elementArray;^[CLASS] ResizableDoubleArray  [METHOD] getElements [RETURN_TYPE] double[]   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return contractionCriteria;^496^^^^^495^497^return expansionFactor;^[CLASS] ResizableDoubleArray  [METHOD] getExpansionFactor [RETURN_TYPE] float   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^return size;^507^^^^^506^508^return expansionMode;^[CLASS] ResizableDoubleArray  [METHOD] getExpansionMode [RETURN_TYPE] int   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return  ( size ) ;^519^^^^^518^520^return  ( internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] getInternalLength [RETURN_TYPE] int   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return  ( tempArray.length ) ;^519^^^^^518^520^return  ( internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] getInternalLength [RETURN_TYPE] int   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return  ( internalArray ) ;^519^^^^^518^520^return  ( internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] getInternalLength [RETURN_TYPE] int   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return  ( internalArray.length.length ) ;^519^^^^^518^520^return  ( internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] getInternalLength [RETURN_TYPE] int   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^return  ( numElements ) ;^519^^^^^518^520^return  ( internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] getInternalLength [RETURN_TYPE] int   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P12_Insert_Condition]^if  (  ( startIndex + i )  > internalArray.length )  { return  ( internalArray.length ) ; }^519^^^^^518^520^return  ( internalArray.length ) ;^[CLASS] ResizableDoubleArray  [METHOD] getInternalLength [RETURN_TYPE] int   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return  ( newSize ) ;^529^^^^^528^530^return  ( numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] getNumElements [RETURN_TYPE] int   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P12_Insert_Condition]^if  ( index >= numElements )  { return  ( numElements ) ; }^529^^^^^528^530^return  ( numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] getNumElements [RETURN_TYPE] int   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P12_Insert_Condition]^if  ( index + 1 > numElements )  { return  ( numElements ) ; }^529^^^^^528^530^return  ( numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] getNumElements [RETURN_TYPE] int   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P12_Insert_Condition]^if  ( i > numElements )  { return  ( numElements ) ; }^529^^^^^528^530^return  ( numElements ) ;^[CLASS] ResizableDoubleArray  [METHOD] getNumElements [RETURN_TYPE] int   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^checkContractExpand ( expansionFactor, getExpansionFactor (  )  ) ;^553^^^^^552^555^checkContractExpand ( contractionCriteria, getExpansionFactor (  )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setContractionCriteria [RETURN_TYPE] void   float contractionCriteria [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P7_Replace_Invocation]^setContractionCriteria ( contractionCriteria, getExpansionFactor (  )  ) ;^553^^^^^552^555^checkContractExpand ( contractionCriteria, getExpansionFactor (  )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setContractionCriteria [RETURN_TYPE] void   float contractionCriteria [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P7_Replace_Invocation]^checkContractExpand ( contractionCriteria, getContractionCriteria (  )  ) ;^553^^^^^552^555^checkContractExpand ( contractionCriteria, getExpansionFactor (  )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setContractionCriteria [RETURN_TYPE] void   float contractionCriteria [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^setContractionCriteria ( expansionFactor, getExpansionFactor (  )  ) ;^553^^^^^552^555^checkContractExpand ( contractionCriteria, getExpansionFactor (  )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setContractionCriteria [RETURN_TYPE] void   float contractionCriteria [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P14_Delete_Statement]^^553^554^^^^552^555^checkContractExpand ( contractionCriteria, getExpansionFactor (  )  ) ; this.contractionCriteria = contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] setContractionCriteria [RETURN_TYPE] void   float contractionCriteria [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^setContractionCriteria ( expansionFactor +0.5f ) ;checkContractExpand ( contractionCriteria, getExpansionFactor (  )  ) ;^553^^^^^552^555^checkContractExpand ( contractionCriteria, getExpansionFactor (  )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setContractionCriteria [RETURN_TYPE] void   float contractionCriteria [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^checkContractExpand ( getContractionCriteria (  ) , expansionFactor ) ;checkContractExpand ( contractionCriteria, getExpansionFactor (  )  ) ;^553^^^^^552^555^checkContractExpand ( contractionCriteria, getExpansionFactor (  )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setContractionCriteria [RETURN_TYPE] void   float contractionCriteria [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P14_Delete_Statement]^^553^^^^^552^555^checkContractExpand ( contractionCriteria, getExpansionFactor (  )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setContractionCriteria [RETURN_TYPE] void   float contractionCriteria [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P12_Insert_Condition]^if  ( contractionCritera < expansionFactor )  { checkContractExpand ( contractionCriteria, getExpansionFactor (  )  ) ; }^553^^^^^552^555^checkContractExpand ( contractionCriteria, getExpansionFactor (  )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setContractionCriteria [RETURN_TYPE] void   float contractionCriteria [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^this.contractionCriteria = expansionFactor;^554^^^^^552^555^this.contractionCriteria = contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] setContractionCriteria [RETURN_TYPE] void   float contractionCriteria [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^if  ( index <= 0 )  {^571^^^^^570^582^if  ( index < 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P3_Replace_Literal]^if  ( index < -7 )  {^571^^^^^570^582^if  ( index < 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^if  ( newSize < 0 )  {^571^^^^^570^582^if  ( index < 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^if  ( numElements < 2 )  {^571^^^^^570^582^if  ( index < 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P15_Unwrap_Block]^java.lang.String msg = "Cannot set an element at a negative index"; throw new java.lang.ArrayIndexOutOfBoundsException(msg);^571^572^573^574^^570^582^if  ( index < 0 )  { String msg = "Cannot set an element at a negative index"; throw new ArrayIndexOutOfBoundsException  (" ")  ; }^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P16_Remove_Block]^^571^572^573^574^^570^582^if  ( index < 0 )  { String msg = "Cannot set an element at a negative index"; throw new ArrayIndexOutOfBoundsException  (" ")  ; }^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P13_Insert_Block]^if  ( i < 0 )  {     String msg = "Number of elements must be zero or a positive " + "integer";     throw new IllegalArgumentException ( msg ) ; }^571^^^^^570^582^[Delete]^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P13_Insert_Block]^if  ( expansionFactor <= 1.0 )  {     String msg = "The expansion factor must be a number greater than 1.0";     throw new IllegalArgumentException ( msg ) ; }^571^^^^^570^582^[Delete]^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P13_Insert_Block]^if  ( index >= 0 )  {     return internalArray[ (  ( startIndex )  + index ) ]; }else {     String msg = "Elements cannot be retrieved from a negative array index";     throw new ArrayIndexOutOfBoundsException ( msg ) ; }^571^^^^^570^582^[Delete]^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P1_Replace_Type]^char msg = "Cannot set an element at a negative index";^572^^^^^570^582^String msg = "Cannot set an element at a negative index";^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P3_Replace_Literal]^String msg = "tannot set an element at a negative index";^572^^^^^570^582^String msg = "Cannot set an element at a negative index";^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^String msg = "Elements cannot be retrieved from a negative array index";String msg = "Cannot set an element at a negative index";^572^^^^^570^582^String msg = "Cannot set an element at a negative index";^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^String msg = "Cannot discard more elements than are" + "contained in this array.";String msg = "Cannot set an element at a negative index";^572^^^^^570^582^String msg = "Cannot set an element at a negative index";^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^573^^^^^570^582^throw new ArrayIndexOutOfBoundsException  (" ")  ;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new ArrayIndexOutOfBoundsException  (" ")  ;^573^^^^^570^582^throw new ArrayIndexOutOfBoundsException  (" ")  ;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P3_Replace_Literal]^String msg = "elementannot set an element at a negative index";^572^^^^^570^582^String msg = "Cannot set an element at a negative index";^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^if  ( index + 1 >= numElements )  {^575^^^^^570^582^if  ( index + 1 > numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^if  ( index  >  1 > numElements )  {^575^^^^^570^582^if  ( index + 1 > numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^if  ( index  ^  1 > numElements )  {^575^^^^^570^582^if  ( index + 1 > numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P3_Replace_Literal]^if  ( index  > numElements )  {^575^^^^^570^582^if  ( index + 1 > numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^if  ( size + 1 > numElements )  {^575^^^^^570^582^if  ( index + 1 > numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^if  ( index + 1 > startIndex )  {^575^^^^^570^582^if  ( index + 1 > numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^if  ( numElements + 1 > index )  {^575^^^^^570^582^if  ( index + 1 > numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P6_Replace_Expression]^if  ( index + 1 )  {^575^^^^^570^582^if  ( index + 1 > numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^if  ( index + 3 > size )  {^575^^^^^570^582^if  ( index + 1 > numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P9_Replace_Statement]^if  ( index >= numElements )  {^575^^^^^570^582^if  ( index + 1 > numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P9_Replace_Statement]^if  ( i > numElements )  {^575^^^^^570^582^if  ( index + 1 > numElements )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P15_Unwrap_Block]^numElements = index + 1;^575^576^577^^^570^582^if  ( index + 1 > numElements )  { numElements = index + 1; }^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P16_Remove_Block]^^575^576^577^^^570^582^if  ( index + 1 > numElements )  { numElements = index + 1; }^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P13_Insert_Block]^if  (  (  ( startIndex )  + i )  >  ( internalArray.length )  )  {     expandTo (  (  ( startIndex )  + i )  ) ; }^575^^^^^570^582^[Delete]^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P3_Replace_Literal]^numElements = index ;^576^^^^^570^582^numElements = index + 1;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^numElements = startIndex + 1;^576^^^^^570^582^numElements = index + 1;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^numElements = index + 3;^576^^^^^570^582^numElements = index + 1;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^numElements = 0;numElements = index + 1;^576^^^^^570^582^numElements = index + 1;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^numElements = i;numElements = index + 1;^576^^^^^570^582^numElements = index + 1;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^numElements -= i;numElements = index + 1;^576^^^^^570^582^numElements = index + 1;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P3_Replace_Literal]^numElements = index + initialCapacity;^576^^^^^570^582^numElements = index + 1;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^numElements = numElements + 1;^576^^^^^570^582^numElements = index + 1;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^numElements = index + 2;^576^^^^^570^582^numElements = index + 1;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^if  (  ( startIndex + index )  > internalArray.length )  {^578^^^^^570^582^if  (  ( startIndex + index )  >= internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^if  (  ( startIndex  |  index )  >= internalArray.length )  {^578^^^^^570^582^if  (  ( startIndex + index )  >= internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^if  >  (  ( startIndex + index )  >= internalArray.length )  {^578^^^^^570^582^if  (  ( startIndex + index )  >= internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^if  ^  (  ( startIndex + index )  >= internalArray.length )  {^578^^^^^570^582^if  (  ( startIndex + index )  >= internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^if  (  ( startIndex + numElements )  >= internalArray.length )  {^578^^^^^570^582^if  (  ( startIndex + index )  >= internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^if  (  ( newSize + index )  >= internalArray.length )  {^578^^^^^570^582^if  (  ( startIndex + index )  >= internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^if  (  ( startIndex + index )  >= numElements )  {^578^^^^^570^582^if  (  ( startIndex + index )  >= internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^if  (  ( startIndex + index )  >= tempArray.length )  {^578^^^^^570^582^if  (  ( startIndex + index )  >= internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^if  (  ( index + startIndex )  >= internalArray.length )  {^578^^^^^570^582^if  (  ( startIndex + index )  >= internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^if  (  ( internalArray.length + index )  >= startIndex )  {^578^^^^^570^582^if  (  ( startIndex + index )  >= internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^if  (  ( internalArray + index )  >= startIndex.length )  {^578^^^^^570^582^if  (  ( startIndex + index )  >= internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P6_Replace_Expression]^if  ( startIndex + index )  {^578^^^^^570^582^if  (  ( startIndex + index )  >= internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P6_Replace_Expression]^if  ( startIndex + index + 1 )  {^578^^^^^570^582^if  (  ( startIndex + index )  >= internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P6_Replace_Expression]^if  ( index + 1 )  {^578^^^^^570^582^if  (  ( startIndex + index )  >= internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P9_Replace_Statement]^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^578^^^^^570^582^if  (  ( startIndex + index )  >= internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P9_Replace_Statement]^if  (  ( startIndex + numElements )  > internalArray.length )  {^578^^^^^570^582^if  (  ( startIndex + index )  >= internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P9_Replace_Statement]^if  (  ( startIndex + i )  > internalArray.length )  {^578^^^^^570^582^if  (  ( startIndex + index )  >= internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P15_Unwrap_Block]^expandTo(((startIndex) + (index + 1)));^578^579^580^^^570^582^if  (  ( startIndex + index )  >= internalArray.length )  { expandTo ( startIndex +  ( index + 1 )  ) ; }^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P16_Remove_Block]^^578^579^580^^^570^582^if  (  ( startIndex + index )  >= internalArray.length )  { expandTo ( startIndex +  ( index + 1 )  ) ; }^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P13_Insert_Block]^if  (  (  ( startIndex )  +  ( numElements )  )  >  ( internalArray.length )  )  {     expand (  ) ; }^578^^^^^570^582^[Delete]^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P13_Insert_Block]^if  (  (  ( startIndex )  +  (  ( numElements )  + 1 )  )  >  ( internalArray.length )  )  {     expand (  ) ; }^578^^^^^570^582^[Delete]^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P13_Insert_Block]^if  (  (  ( startIndex )  + i )  >  ( internalArray.length )  )  {     expandTo (  (  ( startIndex )  + i )  ) ; }^578^^^^^570^582^[Delete]^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^expandTo ( startIndex +  &&  ( index + 1 )  ) ;^579^^^^^570^582^expandTo ( startIndex +  ( index + 1 )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^expandTo ( startIndex +  ( index  >  1 )  ) ;^579^^^^^570^582^expandTo ( startIndex +  ( index + 1 )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P3_Replace_Literal]^expandTo ( startIndex +  ( index  )  ) ;^579^^^^^570^582^expandTo ( startIndex +  ( index + 1 )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^expandTo ( size +  ( index + 1 )  ) ;^579^^^^^570^582^expandTo ( startIndex +  ( index + 1 )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^expandTo ( index +  ( startIndex + 1 )  ) ;^579^^^^^570^582^expandTo ( startIndex +  ( index + 1 )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P7_Replace_Invocation]^setElement ( startIndex +  ( index + 1 )  ) ;^579^^^^^570^582^expandTo ( startIndex +  ( index + 1 )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P14_Delete_Statement]^^579^^^^^570^582^expandTo ( startIndex +  ( index + 1 )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^expandTo ( startIndex + i ) ;expandTo ( startIndex +  ( index + 1 )  ) ;^579^^^^^570^582^expandTo ( startIndex +  ( index + 1 )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^expandTo ( startIndex +   instanceof   ( index + 1 )  ) ;^579^^^^^570^582^expandTo ( startIndex +  ( index + 1 )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P3_Replace_Literal]^expandTo ( startIndex +  ( index + initialCapacity )  ) ;^579^^^^^570^582^expandTo ( startIndex +  ( index + 1 )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^expandTo ( startIndex +  ( size + 1 )  ) ;^579^^^^^570^582^expandTo ( startIndex +  ( index + 1 )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^expandTo ( numElements +  ( index + 1 )  ) ;^579^^^^^570^582^expandTo ( startIndex +  ( index + 1 )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^expandTo ( startIndex +  ( numElements + 1 )  ) ;^579^^^^^570^582^expandTo ( startIndex +  ( index + 1 )  ) ;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^internalArray[newSize + index] = value;^581^^^^^570^582^internalArray[startIndex + index] = value;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^internalArray[startIndex + value] = index;^581^^^^^570^582^internalArray[startIndex + index] = value;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^internalArray[startIndex + index]  =  internalArray[startIndex + index] ;^581^^^^^570^582^internalArray[startIndex + index] = value;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^internalArray[startIndex +  ( numElements - 1 ) ] = value;internalArray[startIndex + index] = value;^581^^^^^570^582^internalArray[startIndex + index] = value;^[CLASS] ResizableDoubleArray  [METHOD] setElement [RETURN_TYPE] void   int index double value [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  double  value  String  msg  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P7_Replace_Invocation]^setContractionCriteria ( getContractionCriteria (  ) , expansionFactor ) ;^596^^^^^595^599^checkContractExpand ( getContractionCriteria (  ) , expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] setExpansionFactor [RETURN_TYPE] void   float expansionFactor [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P7_Replace_Invocation]^checkContractExpand ( getExpansionFactor (  ) , expansionFactor ) ;^596^^^^^595^599^checkContractExpand ( getContractionCriteria (  ) , expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] setExpansionFactor [RETURN_TYPE] void   float expansionFactor [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^checkContractExpand ( getContractionCriteria (  ) , contractionCriteria ) ;^596^^^^^595^599^checkContractExpand ( getContractionCriteria (  ) , expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] setExpansionFactor [RETURN_TYPE] void   float expansionFactor [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P14_Delete_Statement]^^596^^^^^595^599^checkContractExpand ( getContractionCriteria (  ) , expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] setExpansionFactor [RETURN_TYPE] void   float expansionFactor [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^checkContractExpand ( contractionCriteria, getExpansionFactor (  )  ) ;checkContractExpand ( getContractionCriteria (  ) , expansionFactor ) ;^596^^^^^595^599^checkContractExpand ( getContractionCriteria (  ) , expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] setExpansionFactor [RETURN_TYPE] void   float expansionFactor [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^setContractionCriteria ( expansionFactor +0.5f ) ;checkContractExpand ( getContractionCriteria (  ) , expansionFactor ) ;^596^^^^^595^599^checkContractExpand ( getContractionCriteria (  ) , expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] setExpansionFactor [RETURN_TYPE] void   float expansionFactor [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P12_Insert_Condition]^if  ( contractionCritera < expansionFactor )  { checkContractExpand ( getContractionCriteria (  ) , expansionFactor ) ; }^596^^^^^595^599^checkContractExpand ( getContractionCriteria (  ) , expansionFactor ) ;^[CLASS] ResizableDoubleArray  [METHOD] setExpansionFactor [RETURN_TYPE] void   float expansionFactor [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^this.expansionFactor = contractionCriteria;^598^^^^^595^599^this.expansionFactor = expansionFactor;^[CLASS] ResizableDoubleArray  [METHOD] setExpansionFactor [RETURN_TYPE] void   float expansionFactor [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^this.expansionMode = expansionMode;this.expansionFactor = expansionFactor;^598^^^^^595^599^this.expansionFactor = expansionFactor;^[CLASS] ResizableDoubleArray  [METHOD] setExpansionFactor [RETURN_TYPE] void   float expansionFactor [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^if  ( expansionMode != MULTIPLICATIVE_MODE || expansionMode != ADDITIVE_MODE )  {^609^610^^^^608^614^if  ( expansionMode != MULTIPLICATIVE_MODE && expansionMode != ADDITIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] setExpansionMode [RETURN_TYPE] void   int expansionMode [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^if  ( expansionMode == MULTIPLICATIVE_MODE && expansionMode != ADDITIVE_MODE )  {^609^610^^^^608^614^if  ( expansionMode != MULTIPLICATIVE_MODE && expansionMode != ADDITIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] setExpansionMode [RETURN_TYPE] void   int expansionMode [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^if  ( expansionMode != MULTIPLICATIVE_MODE && expansionMode >= ADDITIVE_MODE )  {^609^610^^^^608^614^if  ( expansionMode != MULTIPLICATIVE_MODE && expansionMode != ADDITIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] setExpansionMode [RETURN_TYPE] void   int expansionMode [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^if  ( numElements != MULTIPLICATIVE_MODE && expansionMode != ADDITIVE_MODE )  {^609^610^^^^608^614^if  ( expansionMode != MULTIPLICATIVE_MODE && expansionMode != ADDITIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] setExpansionMode [RETURN_TYPE] void   int expansionMode [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^if  ( expansionMode != numElements && expansionMode != ADDITIVE_MODE )  {^609^610^^^^608^614^if  ( expansionMode != MULTIPLICATIVE_MODE && expansionMode != ADDITIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] setExpansionMode [RETURN_TYPE] void   int expansionMode [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^if  ( expansionMode != MULTIPLICATIVE_MODE && expansionMode != startIndex )  {^609^610^^^^608^614^if  ( expansionMode != MULTIPLICATIVE_MODE && expansionMode != ADDITIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] setExpansionMode [RETURN_TYPE] void   int expansionMode [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^if  ( MULTIPLICATIVE_MODE != expansionMode && expansionMode != ADDITIVE_MODE )  {^609^610^^^^608^614^if  ( expansionMode != MULTIPLICATIVE_MODE && expansionMode != ADDITIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] setExpansionMode [RETURN_TYPE] void   int expansionMode [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^if  ( expansionMode != ADDITIVE_MODE && expansionMode != MULTIPLICATIVE_MODE )  {^609^610^^^^608^614^if  ( expansionMode != MULTIPLICATIVE_MODE && expansionMode != ADDITIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] setExpansionMode [RETURN_TYPE] void   int expansionMode [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^if  ( ADDITIVE_MODE != MULTIPLICATIVE_MODE && expansionMode != expansionMode )  {^609^610^^^^608^614^if  ( expansionMode != MULTIPLICATIVE_MODE && expansionMode != ADDITIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] setExpansionMode [RETURN_TYPE] void   int expansionMode [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P6_Replace_Expression]^if  ( expansionMode != MULTIPLICATIVE_MODE ) {^609^610^^^^608^614^if  ( expansionMode != MULTIPLICATIVE_MODE && expansionMode != ADDITIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] setExpansionMode [RETURN_TYPE] void   int expansionMode [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P6_Replace_Expression]^if  (  expansionMode != ADDITIVE_MODE )  {^609^610^^^^608^614^if  ( expansionMode != MULTIPLICATIVE_MODE && expansionMode != ADDITIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] setExpansionMode [RETURN_TYPE] void   int expansionMode [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^if  ( size != MULTIPLICATIVE_MODE && expansionMode != ADDITIVE_MODE )  {^609^610^^^^608^614^if  ( expansionMode != MULTIPLICATIVE_MODE && expansionMode != ADDITIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] setExpansionMode [RETURN_TYPE] void   int expansionMode [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Illegal expansionMode setting.");^609^610^611^612^^608^614^if  ( expansionMode != MULTIPLICATIVE_MODE && expansionMode != ADDITIVE_MODE )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] ResizableDoubleArray  [METHOD] setExpansionMode [RETURN_TYPE] void   int expansionMode [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P16_Remove_Block]^^609^610^611^612^^608^614^if  ( expansionMode != MULTIPLICATIVE_MODE && expansionMode != ADDITIVE_MODE )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] ResizableDoubleArray  [METHOD] setExpansionMode [RETURN_TYPE] void   int expansionMode [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^throw new ArrayIndexOutOfBoundsException  (" ")  ; ;^611^^^^^608^614^throw new IllegalArgumentException  (" ")  ;^[CLASS] ResizableDoubleArray  [METHOD] setExpansionMode [RETURN_TYPE] void   int expansionMode [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^throw new ArrayIndexOutOfBoundsException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^611^^^^^608^614^throw new IllegalArgumentException  (" ")  ;^[CLASS] ResizableDoubleArray  [METHOD] setExpansionMode [RETURN_TYPE] void   int expansionMode [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^this.expansionMode = startIndex;^613^^^^^608^614^this.expansionMode = expansionMode;^[CLASS] ResizableDoubleArray  [METHOD] setExpansionMode [RETURN_TYPE] void   int expansionMode [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^this.expansionMode =  newSize;^613^^^^^608^614^this.expansionMode = expansionMode;^[CLASS] ResizableDoubleArray  [METHOD] setExpansionMode [RETURN_TYPE] void   int expansionMode [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^this.expansionFactor = expansionFactor;this.expansionMode = expansionMode;^613^^^^^608^614^this.expansionMode = expansionMode;^[CLASS] ResizableDoubleArray  [METHOD] setExpansionMode [RETURN_TYPE] void   int expansionMode [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^if  ( initialCapacity >= 0 )  {^624^^^^^623^632^if  ( initialCapacity > 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] setInitialCapacity [RETURN_TYPE] void   int initialCapacity [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P3_Replace_Literal]^if  ( initialCapacity > size )  {^624^^^^^623^632^if  ( initialCapacity > 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] setInitialCapacity [RETURN_TYPE] void   int initialCapacity [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P6_Replace_Expression]^if  ( "The initial capacity supplied: " + initialCapacity + "must be a positive integer" )  {^624^^^^^623^632^if  ( initialCapacity > 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] setInitialCapacity [RETURN_TYPE] void   int initialCapacity [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P6_Replace_Expression]^if  ( "The initial capacity supplied: " + initialCapacity )  {^624^^^^^623^632^if  ( initialCapacity > 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] setInitialCapacity [RETURN_TYPE] void   int initialCapacity [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^if  ( initialCapacity > 1 )  {^624^^^^^623^632^if  ( initialCapacity > 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] setInitialCapacity [RETURN_TYPE] void   int initialCapacity [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P1_Replace_Type]^char msg = "The initial capacity supplied: " + initialCapacity + "must be a positive integer";^627^628^629^^^623^632^String msg = "The initial capacity supplied: " + initialCapacity + "must be a positive integer";^[CLASS] ResizableDoubleArray  [METHOD] setInitialCapacity [RETURN_TYPE] void   int initialCapacity [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^String msg = "The initial capacity supplied: "  &  initialCapacity + "must be a positive integer";^627^628^629^^^623^632^String msg = "The initial capacity supplied: " + initialCapacity + "must be a positive integer";^[CLASS] ResizableDoubleArray  [METHOD] setInitialCapacity [RETURN_TYPE] void   int initialCapacity [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P3_Replace_Literal]^String msg = "itial capa" + initialCapacity + "must be a positive integer";^627^628^629^^^623^632^String msg = "The initial capacity supplied: " + initialCapacity + "must be a positive integer";^[CLASS] ResizableDoubleArray  [METHOD] setInitialCapacity [RETURN_TYPE] void   int initialCapacity [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P3_Replace_Literal]^String msg = "The initial capacity supplied: " + initialCapacity + " be a positiust be a positive integer";^627^628^629^^^623^632^String msg = "The initial capacity supplied: " + initialCapacity + "must be a positive integer";^[CLASS] ResizableDoubleArray  [METHOD] setInitialCapacity [RETURN_TYPE] void   int initialCapacity [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^String msg = "The initial capacity supplied: " + startIndex + "must be a positive integer";^627^628^629^^^623^632^String msg = "The initial capacity supplied: " + initialCapacity + "must be a positive integer";^[CLASS] ResizableDoubleArray  [METHOD] setInitialCapacity [RETURN_TYPE] void   int initialCapacity [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^throw new ArrayIndexOutOfBoundsException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^630^^^^^623^632^throw new IllegalArgumentException  (" ")  ;^[CLASS] ResizableDoubleArray  [METHOD] setInitialCapacity [RETURN_TYPE] void   int initialCapacity [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^this.initialCapacity = startIndex;^625^^^^^623^632^this.initialCapacity = initialCapacity;^[CLASS] ResizableDoubleArray  [METHOD] setInitialCapacity [RETURN_TYPE] void   int initialCapacity [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^this.initialCapacity =  size;^625^^^^^623^632^this.initialCapacity = initialCapacity;^[CLASS] ResizableDoubleArray  [METHOD] setInitialCapacity [RETURN_TYPE] void   int initialCapacity [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^String msg = "The initial capacity supplied: "  <=  initialCapacity + "must be a positive integer";^627^628^629^^^623^632^String msg = "The initial capacity supplied: " + initialCapacity + "must be a positive integer";^[CLASS] ResizableDoubleArray  [METHOD] setInitialCapacity [RETURN_TYPE] void   int initialCapacity [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P3_Replace_Literal]^String msg = "The initial capache initial capacity supplied: " + initialCapacity + "must be a positive integer";^627^628^629^^^623^632^String msg = "The initial capacity supplied: " + initialCapacity + "must be a positive integer";^[CLASS] ResizableDoubleArray  [METHOD] setInitialCapacity [RETURN_TYPE] void   int initialCapacity [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P3_Replace_Literal]^String msg = "The initial capacity supplied: " + initialCapacity + "be a";^627^628^629^^^623^632^String msg = "The initial capacity supplied: " + initialCapacity + "must be a positive integer";^[CLASS] ResizableDoubleArray  [METHOD] setInitialCapacity [RETURN_TYPE] void   int initialCapacity [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^String msg = "The initial capacity supplied: " + newSize + "must be a positive integer";^627^628^629^^^623^632^String msg = "The initial capacity supplied: " + initialCapacity + "must be a positive integer";^[CLASS] ResizableDoubleArray  [METHOD] setInitialCapacity [RETURN_TYPE] void   int initialCapacity [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^if  ( i == 0 )  {^645^^^^^642^659^if  ( i < 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P3_Replace_Literal]^if  ( i < MULTIPLICATIVE_MODE )  {^645^^^^^642^659^if  ( i < 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^if  ( size < 0 )  {^645^^^^^642^659^if  ( i < 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P6_Replace_Expression]^if  ( "Number of elements must be zero or a positive " + "integer" )  {^645^^^^^642^659^if  ( i < 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^if  ( i < 0 * 0 )  {^645^^^^^642^659^if  ( i < 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P9_Replace_Statement]^if  ( index < 0 )  {^645^^^^^642^659^if  ( i < 0 )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P15_Unwrap_Block]^java.lang.String msg = "Number of elements must be zero or a positive " + "integer"; throw new java.lang.IllegalArgumentException(msg);^645^646^647^648^649^642^659^if  ( i < 0 )  { String msg = "Number of elements must be zero or a positive " + "integer"; throw new IllegalArgumentException  (" ")  ; }^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P16_Remove_Block]^^645^646^647^648^649^642^659^if  ( i < 0 )  { String msg = "Number of elements must be zero or a positive " + "integer"; throw new IllegalArgumentException  (" ")  ; }^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P1_Replace_Type]^char msg = "Number of elements must be zero or a positive " + "integer";^646^647^^^^642^659^String msg = "Number of elements must be zero or a positive " + "integer";^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P3_Replace_Literal]^String msg = "f el" + "integer";^646^647^^^^642^659^String msg = "Number of elements must be zero or a positive " + "integer";^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P3_Replace_Literal]^String msg = "Number of elements must be zero or a positive " + "int";^646^647^^^^642^659^String msg = "Number of elements must be zero or a positive " + "integer";^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^throw new ArrayIndexOutOfBoundsException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^648^^^^^642^659^throw new IllegalArgumentException  (" ")  ;^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P3_Replace_Literal]^String msg = "Number of elements must be zero or a positive Number of elements must " + "integer";^646^647^^^^642^659^String msg = "Number of elements must be zero or a positive " + "integer";^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^if  (  ( startIndex + i )  == internalArray.length )  {^653^^^^^642^659^if  (  ( startIndex + i )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^if  (  ( startIndex  ==  i )  > internalArray.length )  {^653^^^^^642^659^if  (  ( startIndex + i )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^if  (  ( startIndex  ^  i )  > internalArray.length )  {^653^^^^^642^659^if  (  ( startIndex + i )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^if  (  ( startIndex + size )  > internalArray.length )  {^653^^^^^642^659^if  (  ( startIndex + i )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^if  (  ( size + i )  > internalArray.length )  {^653^^^^^642^659^if  (  ( startIndex + i )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^if  (  ( startIndex + i )  > size )  {^653^^^^^642^659^if  (  ( startIndex + i )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^if  (  ( startIndex + i )  > tempArray.length )  {^653^^^^^642^659^if  (  ( startIndex + i )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^if  (  ( startIndex + internalArray.length )  > i )  {^653^^^^^642^659^if  (  ( startIndex + i )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^if  (  ( internalArray.length + i )  > startIndex )  {^653^^^^^642^659^if  (  ( startIndex + i )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^if  (  ( startIndex + internalArray )  > i.length )  {^653^^^^^642^659^if  (  ( startIndex + i )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P6_Replace_Expression]^if  ( startIndex + i )  {^653^^^^^642^659^if  (  ( startIndex + i )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^if  (  ( initialCapacity + i )  > internalArray.length )  {^653^^^^^642^659^if  (  ( startIndex + i )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P9_Replace_Statement]^if  (  ( startIndex + index )  >= internalArray.length )  {^653^^^^^642^659^if  (  ( startIndex + i )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P9_Replace_Statement]^if  (  ( startIndex +  ( numElements + 1 )  )  > internalArray.length )  {^653^^^^^642^659^if  (  ( startIndex + i )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P9_Replace_Statement]^if  (  ( startIndex + numElements )  > internalArray.length )  {^653^^^^^642^659^if  (  ( startIndex + i )  > internalArray.length )  {^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P15_Unwrap_Block]^expandTo(((startIndex) + i));^653^654^655^^^642^659^if  (  ( startIndex + i )  > internalArray.length )  { expandTo ( startIndex + i ) ; }^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P16_Remove_Block]^^653^654^655^^^642^659^if  (  ( startIndex + i )  > internalArray.length )  { expandTo ( startIndex + i ) ; }^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P13_Insert_Block]^if  (  (  ( startIndex )  +  ( numElements )  )  >  ( internalArray.length )  )  {     expand (  ) ; }^653^^^^^642^659^[Delete]^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P13_Insert_Block]^if  (  ( index + 1 )  >  ( numElements )  )  {     numElements = index + 1; }^653^^^^^642^659^[Delete]^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P13_Insert_Block]^if  (  (  ( startIndex )  +  (  ( numElements )  + 1 )  )  >  ( internalArray.length )  )  {     expand (  ) ; }^653^^^^^642^659^[Delete]^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P13_Insert_Block]^if  (  (  ( startIndex )  + index )  >=  ( internalArray.length )  )  {     expandTo (  (  ( startIndex )  +  ( index + 1 )  )  ) ; }^653^^^^^642^659^[Delete]^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^expandTo ( startIndex  !=  i ) ;^654^^^^^642^659^expandTo ( startIndex + i ) ;^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^expandTo ( startIndex + size ) ;^654^^^^^642^659^expandTo ( startIndex + i ) ;^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^expandTo ( size + i ) ;^654^^^^^642^659^expandTo ( startIndex + i ) ;^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^expandTo ( i + startIndex ) ;^654^^^^^642^659^expandTo ( startIndex + i ) ;^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P7_Replace_Invocation]^getElement ( startIndex + i ) ;^654^^^^^642^659^expandTo ( startIndex + i ) ;^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^getElement ( startIndex + size ) ;^654^^^^^642^659^expandTo ( startIndex + i ) ;^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P14_Delete_Statement]^^654^^^^^642^659^expandTo ( startIndex + i ) ;^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^expandTo ( startIndex +  ( index + 1 )  ) ;expandTo ( startIndex + i ) ;^654^^^^^642^659^expandTo ( startIndex + i ) ;^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^expandTo ( startIndex  <=  i ) ;^654^^^^^642^659^expandTo ( startIndex + i ) ;^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^expandTo ( newSize + i ) ;^654^^^^^642^659^expandTo ( startIndex + i ) ;^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^getElement ( newSize + i ) ;^654^^^^^642^659^expandTo ( startIndex + i ) ;^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^numElements = numElements;^658^^^^^642^659^numElements = i;^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^numElements =  startIndex;^658^^^^^642^659^numElements = i;^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^numElements = index + 1;numElements = i;^658^^^^^642^659^numElements = i;^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^numElements = 0;numElements = i;^658^^^^^642^659^numElements = i;^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P11_Insert_Donor_Statement]^numElements -= i;numElements = i;^658^^^^^642^659^numElements = i;^[CLASS] ResizableDoubleArray  [METHOD] setNumElements [RETURN_TYPE] void   int i [VARIABLES] String  msg  boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^if  ( expansionMode != MULTIPLICATIVE_MODE )  {^668^^^^^667^673^if  ( expansionMode == MULTIPLICATIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^if  ( size == MULTIPLICATIVE_MODE )  {^668^^^^^667^673^if  ( expansionMode == MULTIPLICATIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^if  ( expansionMode == newSize )  {^668^^^^^667^673^if  ( expansionMode == MULTIPLICATIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P6_Replace_Expression]^if  ( internalArray.length / numElements > contractionCriteria )  {^668^^^^^667^673^if  ( expansionMode == MULTIPLICATIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P6_Replace_Expression]^if  ( internalArray.length / numElements )  {^668^^^^^667^673^if  ( expansionMode == MULTIPLICATIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P6_Replace_Expression]^if  ( internalArray.length - numElements > contractionCriteria )  {^668^^^^^667^673^if  ( expansionMode == MULTIPLICATIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P6_Replace_Expression]^if  ( internalArray.length - numElements )  {^668^^^^^667^673^if  ( expansionMode == MULTIPLICATIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^if  ( newSize == MULTIPLICATIVE_MODE )  {^668^^^^^667^673^if  ( expansionMode == MULTIPLICATIVE_MODE )  {^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P15_Unwrap_Block]^return ((internalArray.length) / (numElements)) > (contractionCriteria);^668^669^670^671^672^667^673^if  ( expansionMode == MULTIPLICATIVE_MODE )  { return  ( internalArray.length / numElements )  > contractionCriteria; } else { return  ( internalArray.length - numElements )  > contractionCriteria; }^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P16_Remove_Block]^^668^669^670^671^672^667^673^if  ( expansionMode == MULTIPLICATIVE_MODE )  { return  ( internalArray.length / numElements )  > contractionCriteria; } else { return  ( internalArray.length - numElements )  > contractionCriteria; }^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P13_Insert_Block]^if  (  ( expansionMode )  ==  ( MULTIPLICATIVE_MODE )  )  {     newSize =  (  ( int )   ( ceil (  (  ( internalArray.length )  *  ( expansionFactor )  )  )  )  ) ; }else {     newSize =  ( internalArray.length )  +  ( round ( expansionFactor )  ) ; }^668^^^^^667^673^[Delete]^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^return  ( internalArray.length - numElements )  >= contractionCriteria;^671^^^^^667^673^return  ( internalArray.length - numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^return  ( internalArray.length  >=  numElements )  > contractionCriteria;^671^^^^^667^673^return  ( internalArray.length - numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return  ( newSize - numElements )  > contractionCriteria;^671^^^^^667^673^return  ( internalArray.length - numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return  ( internalArray.length - startIndex )  > contractionCriteria;^671^^^^^667^673^return  ( internalArray.length - numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return  ( internalArray.length - numElements )  > expansionFactor;^671^^^^^667^673^return  ( internalArray.length - numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return  ( numElements - internalArray.length )  > contractionCriteria;^671^^^^^667^673^return  ( internalArray.length - numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return  ( numElements.length - internalArray )  > contractionCriteria;^671^^^^^667^673^return  ( internalArray.length - numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return  ( internalArray.length - contractionCriteria )  > numElements;^671^^^^^667^673^return  ( internalArray.length - numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^return  ( internalArray.length *  0.5  - numElements )  > contractionCriteria;^671^^^^^667^673^return  ( internalArray.length - numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^return  ( internalArray.length / numElements )  >= contractionCriteria;^669^^^^^667^673^return  ( internalArray.length / numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P2_Replace_Operator]^return  ( internalArray.length - numElements )  > contractionCriteria;^669^^^^^667^673^return  ( internalArray.length / numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return  ( newSize / numElements )  > contractionCriteria;^669^^^^^667^673^return  ( internalArray.length / numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return  ( tempArray.length / numElements )  > contractionCriteria;^669^^^^^667^673^return  ( internalArray.length / numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return  ( internalArray.length / newSize )  > contractionCriteria;^669^^^^^667^673^return  ( internalArray.length / numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return  ( contractionCriteria / numElements )  > internalArray.length;^669^^^^^667^673^return  ( internalArray.length / numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return  ( contractionCriteria.length / numElements )  > internalArray;^669^^^^^667^673^return  ( internalArray.length / numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return  ( numElements.length / internalArray )  > contractionCriteria;^669^^^^^667^673^return  ( internalArray.length / numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return  ( internalArray.length / contractionCriteria )  > numElements;^669^^^^^667^673^return  ( internalArray.length / numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^return  ( internalArray.length - 4 / numElements )  > contractionCriteria;^669^^^^^667^673^return  ( internalArray.length / numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return  ( startIndex / numElements )  > contractionCriteria;^669^^^^^667^673^return  ( internalArray.length / numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return  ( internalArray.length / numElements )  > expansionFactor;^669^^^^^667^673^return  ( internalArray.length / numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return  ( numElements / internalArray.length )  > contractionCriteria;^669^^^^^667^673^return  ( internalArray.length / numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^return  ( internalArray.length + 2 / numElements )  > contractionCriteria;^669^^^^^667^673^return  ( internalArray.length / numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return  ( tempArray.length - numElements )  > contractionCriteria;^671^^^^^667^673^return  ( internalArray.length - numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return  ( internalArray.length - initialCapacity )  > contractionCriteria;^671^^^^^667^673^return  ( internalArray.length - numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return  ( contractionCriteria - numElements )  > internalArray.length;^671^^^^^667^673^return  ( internalArray.length - numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return  ( contractionCriteria.length - numElements )  > internalArray;^671^^^^^667^673^return  ( internalArray.length - numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P8_Replace_Mix]^return  ( internalArray.length - 1 - numElements )  > contractionCriteria;^671^^^^^667^673^return  ( internalArray.length - numElements )  > contractionCriteria;^[CLASS] ResizableDoubleArray  [METHOD] shouldContract [RETURN_TYPE] boolean   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
[P5_Replace_Variable]^return size;^685^^^^^684^686^return startIndex;^[CLASS] ResizableDoubleArray  [METHOD] start [RETURN_TYPE] int   [VARIABLES] boolean  double[]  elementArray  internalArray  tempArray  float  contractionCritera  contractionCriteria  expansionFactor  long  serialVersionUID  int  ADDITIVE_MODE  MULTIPLICATIVE_MODE  expansionMode  i  index  initialCapacity  newSize  numElements  size  startIndex  
