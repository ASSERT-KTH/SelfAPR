[P1_Replace_Type]^private static final  int  serialVersionUID = 2784465764798260919L;^43^^^^^38^48^private static final long serialVersionUID = 2784465764798260919L;^[CLASS] Kurtosis   [VARIABLES] 
[P8_Replace_Mix]^private static final  int  serialVersionUID = 2784465764798260919;^43^^^^^38^48^private static final long serialVersionUID = 2784465764798260919L;^[CLASS] Kurtosis   [VARIABLES] 
[P8_Replace_Mix]^private boolean incMoment;^54^^^^^49^59^protected boolean incMoment;^[CLASS] Kurtosis   [VARIABLES] 
[P3_Replace_Literal]^incMoment = false;^60^^^^^59^62^incMoment = true;^[CLASS] Kurtosis  [METHOD] <init> [RETURN_TYPE] Kurtosis()   [VARIABLES] FourthMoment  moment  boolean  incMoment  long  serialVersionUID  
[P11_Insert_Donor_Statement]^this.moment = m4;incMoment = true;^60^^^^^59^62^incMoment = true;^[CLASS] Kurtosis  [METHOD] <init> [RETURN_TYPE] Kurtosis()   [VARIABLES] FourthMoment  moment  boolean  incMoment  long  serialVersionUID  
[P11_Insert_Donor_Statement]^incMoment = false;incMoment = true;^60^^^^^59^62^incMoment = true;^[CLASS] Kurtosis  [METHOD] <init> [RETURN_TYPE] Kurtosis()   [VARIABLES] FourthMoment  moment  boolean  incMoment  long  serialVersionUID  
[P4_Replace_Constructor]^moment = moment =  new Variance (  )  ;^61^^^^^59^62^moment = new FourthMoment (  ) ;^[CLASS] Kurtosis  [METHOD] <init> [RETURN_TYPE] Kurtosis()   [VARIABLES] FourthMoment  moment  boolean  incMoment  long  serialVersionUID  
[P8_Replace_Mix]^moment =  new Variance (  )  ;^61^^^^^59^62^moment = new FourthMoment (  ) ;^[CLASS] Kurtosis  [METHOD] <init> [RETURN_TYPE] Kurtosis()   [VARIABLES] FourthMoment  moment  boolean  incMoment  long  serialVersionUID  
[P3_Replace_Literal]^incMoment = true;^70^^^^^69^72^incMoment = false;^[CLASS] Kurtosis  [METHOD] <init> [RETURN_TYPE] FourthMoment)   FourthMoment m4 [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  
[P11_Insert_Donor_Statement]^incMoment = true;incMoment = false;^70^^^^^69^72^incMoment = false;^[CLASS] Kurtosis  [METHOD] <init> [RETURN_TYPE] FourthMoment)   FourthMoment m4 [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  
[P5_Replace_Variable]^this.moment = moment;^71^^^^^69^72^this.moment = m4;^[CLASS] Kurtosis  [METHOD] <init> [RETURN_TYPE] FourthMoment)   FourthMoment m4 [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  
[P11_Insert_Donor_Statement]^incMoment = true;this.moment = m4;^71^^^^^69^72^this.moment = m4;^[CLASS] Kurtosis  [METHOD] <init> [RETURN_TYPE] FourthMoment)   FourthMoment m4 [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  
[P15_Unwrap_Block]^moment.increment(d);^78^79^80^81^82^77^84^if  ( incMoment )  { moment.increment ( d ) ; }  else  { throw new IllegalStateException ( "Statistics constructed from external moments cannot be incremented" ) ; }^[CLASS] Kurtosis  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  d  
[P16_Remove_Block]^^78^79^80^81^82^77^84^if  ( incMoment )  { moment.increment ( d ) ; }  else  { throw new IllegalStateException ( "Statistics constructed from external moments cannot be incremented" ) ; }^[CLASS] Kurtosis  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  d  
[P13_Insert_Block]^if  ( incMoment )  {     moment.clear (  ) ; }else {     throw new IllegalStateException ( "Statistics constructed from external moments cannot be cleared" ) ; }^78^^^^^77^84^[Delete]^[CLASS] Kurtosis  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  d  
[P3_Replace_Literal]^throw new IllegalStateException ( "tatistics constructed from external moments cannot be incremented" ) ;^81^82^^^^77^84^throw new IllegalStateException ( "Statistics constructed from external moments cannot be incremented" ) ;^[CLASS] Kurtosis  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  d  
[P4_Replace_Constructor]^throw throw  new IllegalStateException ( "Statistics constructed from external moments cannot be cleared" )  ;^81^82^^^^77^84^throw new IllegalStateException ( "Statistics constructed from external moments cannot be incremented" ) ;^[CLASS] Kurtosis  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  d  
[P13_Insert_Block]^if  ( incMoment )  {     moment.clear (  ) ; }else {     throw new IllegalStateException ( "Statistics constructed from external moments cannot be cleared" ) ; }^81^^^^^77^84^[Delete]^[CLASS] Kurtosis  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  d  
[P13_Insert_Block]^if  ( incMoment )  {     moment.increment ( d ) ; }else {     throw new IllegalStateException ( "Statistics constructed from external moments cannot be incremented" ) ; }^81^^^^^77^84^[Delete]^[CLASS] Kurtosis  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  d  
[P3_Replace_Literal]^throw new IllegalStateException ( "ternal mometatistics constructed from external moments cannot be incremented" ) ;^81^82^^^^77^84^throw new IllegalStateException ( "Statistics constructed from external moments cannot be incremented" ) ;^[CLASS] Kurtosis  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  d  
[P8_Replace_Mix]^return ;^81^82^^^^77^84^throw new IllegalStateException ( "Statistics constructed from external moments cannot be incremented" ) ;^[CLASS] Kurtosis  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  d  
[P11_Insert_Donor_Statement]^throw new IllegalStateException ( "Statistics constructed from external moments cannot be cleared" ) ;throw new IllegalStateException ( "Statistics constructed from external moments cannot be incremented" ) ;^81^82^^^^77^84^throw new IllegalStateException ( "Statistics constructed from external moments cannot be incremented" ) ;^[CLASS] Kurtosis  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  d  
[P14_Delete_Statement]^^79^^^^^77^84^moment.increment ( d ) ;^[CLASS] Kurtosis  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  d  
[P11_Insert_Donor_Statement]^moment.clear (  ) ;moment.increment ( d ) ;^79^^^^^77^84^moment.increment ( d ) ;^[CLASS] Kurtosis  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  d  
[P3_Replace_Literal]^throw new IllegalStateException ( " from external moments cannottatistics constructed from external moments cannot be incremented" ) ;^81^82^^^^77^84^throw new IllegalStateException ( "Statistics constructed from external moments cannot be incremented" ) ;^[CLASS] Kurtosis  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  d  
[P3_Replace_Literal]^throw new IllegalStateException ( "nstructed from external moments cannot b" ) ;^81^82^^^^77^84^throw new IllegalStateException ( "Statistics constructed from external moments cannot be incremented" ) ;^[CLASS] Kurtosis  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  d  
[P7_Replace_Invocation]^moment .FourthMoment (  )  ;^79^^^^^77^84^moment.increment ( d ) ;^[CLASS] Kurtosis  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  d  
[P1_Replace_Type]^int kurtosis = Double.NaN;^90^^^^^89^104^double kurtosis = Double.NaN;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P11_Insert_Donor_Statement]^double kurt = Double.NaN;double kurtosis = Double.NaN;^90^^^^^89^104^double kurtosis = Double.NaN;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^if  ( moment.getN (  )  >= 3 )  {^91^^^^^89^104^if  ( moment.getN (  )  > 3 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P3_Replace_Literal]^if  ( moment.getN (  )  > 1 )  {^91^^^^^89^104^if  ( moment.getN (  )  > 3 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P3_Replace_Literal]^if  ( moment.getN (  )  > 12 )  {^91^^^^^89^104^if  ( moment.getN (  )  > 3 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P3_Replace_Literal]^if  ( moment.getN (  )  > -4 )  {^91^^^^^89^104^if  ( moment.getN (  )  > 3 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  ( moment.m2 / double (moment.n - 1) )  {^91^^^^^89^104^if  ( moment.getN (  )  > 3 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  (  ( double )   ( moment.n - 1 ) )  {^91^^^^^89^104^if  ( moment.getN (  )  > 3 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  ( moment.n <= 3 || variance < 1.0E-19 )  {^91^^^^^89^104^if  ( moment.getN (  )  > 3 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  ( moment.n <= 3 )  {^91^^^^^89^104^if  ( moment.getN (  )  > 3 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  ( variance < 1.0E-19 )  {^91^^^^^89^104^if  ( moment.getN (  )  > 3 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  ( ((n * (n + 1)) * moment.m4) - (((3 * moment.m2) * moment.m2) * (n - 1)) / ((((n - 1) * (n - 2)) * (n - 3)) * variance) * variance )  {^91^^^^^89^104^if  ( moment.getN (  )  > 3 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  (  ( n *  ( n + 1 )  )  *  ( moment.m4 )  -  (  ( 3 *  ( moment.m2 )  )  *  ( moment.m2 )  )  *  ( n - 1 ) )  {^91^^^^^89^104^if  ( moment.getN (  )  > 3 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  ( n *  ( n + 1 )  * moment.m4 )  {^91^^^^^89^104^if  ( moment.getN (  )  > 3 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  ( n * n + 1 )  {^91^^^^^89^104^if  ( moment.getN (  )  > 3 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  ( n + 1 )  {^91^^^^^89^104^if  ( moment.getN (  )  > 3 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  (  ( 3 *  ( moment.m2 )  )  *  ( moment.m2 )  * n - 1 )  {^91^^^^^89^104^if  ( moment.getN (  )  > 3 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  ( 3 * moment.m2 * moment.m2 )  {^91^^^^^89^104^if  ( moment.getN (  )  > 3 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  ( 3 * moment.m2 )  {^91^^^^^89^104^if  ( moment.getN (  )  > 3 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  ( n - 1 )  {^91^^^^^89^104^if  ( moment.getN (  )  > 3 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  (  (  (  ( n - 1 )  *  ( n - 2 )  )  *  ( n - 3 )  )  * variance * variance )  {^91^^^^^89^104^if  ( moment.getN (  )  > 3 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  (  (  ( n - 1 )  *  ( n - 2 )  )  *  ( n - 3 )  * variance )  {^91^^^^^89^104^if  ( moment.getN (  )  > 3 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  (  ( n - 1 )  *  ( n - 2 )  * n - 3 )  {^91^^^^^89^104^if  ( moment.getN (  )  > 3 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  ( n - 1 * n - 2 )  {^91^^^^^89^104^if  ( moment.getN (  )  > 3 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  ( n - 2 )  {^91^^^^^89^104^if  ( moment.getN (  )  > 3 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  ( n - 3 )  {^91^^^^^89^104^if  ( moment.getN (  )  > 3 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P7_Replace_Invocation]^if  ( moment.clear (  )  > 3 )  {^91^^^^^89^104^if  ( moment.getN (  )  > 3 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P8_Replace_Mix]^if  ( moment.getN (  )  > 4 )  {^91^^^^^89^104^if  ( moment.getN (  )  > 3 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^if  ( moment.n <= 3 && variance < 10E-20 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^if  ( moment.n < 3 || variance < 10E-20 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^if  ( moment.n <= 3 || variance > 10E-20 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P3_Replace_Literal]^if  ( moment.n <= 12 || variance < 10E-20 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P3_Replace_Literal]^if  ( moment.n <= 3 || variance < 10E-14 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P3_Replace_Literal]^if  ( moment.n <= 3 || variance < 20E-20 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P3_Replace_Literal]^if  ( moment.n <= 3 || variance < 50E-20 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P3_Replace_Literal]^if  ( moment.n <= 3 || variance < 40E-20 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P3_Replace_Literal]^if  ( moment.n <= -3 || variance < 10E-20 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  ( moment.n <= 3 ) {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  (  variance < 10E-20 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  ( variance < 1.0E-19 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  ( ((n * (n + 1)) * moment.m4) - (((3 * moment.m2) * moment.m2) * (n - 1)) / ((((n - 1) * (n - 2)) * (n - 3)) * variance) * variance )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  (  ( n *  ( n + 1 )  )  *  ( moment.m4 )  -  (  ( 3 *  ( moment.m2 )  )  *  ( moment.m2 )  )  *  ( n - 1 ) )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  ( n *  ( n + 1 )  * moment.m4 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  ( n * n + 1 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  ( n + 1 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  (  ( 3 *  ( moment.m2 )  )  *  ( moment.m2 )  * n - 1 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  ( 3 * moment.m2 * moment.m2 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  ( 3 * moment.m2 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  ( n - 1 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  (  (  (  ( n - 1 )  *  ( n - 2 )  )  *  ( n - 3 )  )  * variance * variance )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  (  (  ( n - 1 )  *  ( n - 2 )  )  *  ( n - 3 )  * variance )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  (  ( n - 1 )  *  ( n - 2 )  * n - 3 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  ( n - 1 * n - 2 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  ( n - 2 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P6_Replace_Expression]^if  ( n - 3 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P8_Replace_Mix]^if  ( moment.n <= 1 || variance < 10E-20 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P13_Insert_Block]^if  (  ( moment.getN (  )  )  > 3 )  {     double variance =  ( moment.m2 )  /  (  ( double )   (  ( moment.n )  - 1 )  ) ;     if  (  (  ( moment.n )  <= 3 )  ||  ( variance < 1.0E-19 )  )  {         kurtosis = 0.0;     }else {         double n =  (  ( double )   ( moment.n )  ) ;         kurtosis =  (  (  ( n *  ( n + 1 )  )  *  ( moment.m4 )  )  -  (  (  ( 3 *  ( moment.m2 )  )  *  ( moment.m2 )  )  *  ( n - 1 )  )  )  /  (  (  (  (  ( n - 1 )  *  ( n - 2 )  )  *  ( n - 3 )  )  * variance )  * variance ) ;     } }^93^^^^^89^104^[Delete]^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  * (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4  |  3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^kurtosis = ( n -  ( n + 1 )  - moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^kurtosis / = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^kurtosis = ( n *  ( n  |  1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 + moment.m2 + moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 / moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n  ==  1 )  )  / (  ( n  ==  1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^kurtosis + = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^kurtosis - = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n  >  1 )  )  / (  ( n  >  1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4  >>  3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P3_Replace_Literal]^kurtosis = ( n *  ( n  )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P3_Replace_Literal]^kurtosis = ( n *  ( n + 1 )  * moment.m4 -  * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n - )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P3_Replace_Literal]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m * moment.m *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n - )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P3_Replace_Literal]^kurtosis = ( n *  ( n + 1 )  * moment.m4  * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P8_Replace_Mix]^kurtosis = ( n *  ( n + 1 * 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 * 1 )  )  / (  ( n - 1 * 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P1_Replace_Type]^int n =  ( int )  moment.n;^96^^^^^89^104^double n =  ( double )  moment.n;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P11_Insert_Donor_Statement]^double kurt = Double.NaN;double n =  ( double )  moment.n;^96^^^^^89^104^double n =  ( double )  moment.n;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P11_Insert_Donor_Statement]^double variance = moment.m2 /  ( double )   ( moment.n - 1 ) ;double n =  ( double )  moment.n;^96^^^^^89^104^double n =  ( double )  moment.n;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P8_Replace_Mix]^kurtosis = 4.0d;^94^^^^^89^104^kurtosis = 0.0;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P8_Replace_Mix]^kurtosis = 0.0d;^94^^^^^89^104^kurtosis = 0.0;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  - (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4  >  3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^kurtosis = ( n *  ( n  ||  1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 + moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n  <  1 )  )  / (  ( n  <  1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n  ^  1 )  )  / (  ( n  ^  1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P3_Replace_Literal]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m-5 * moment.m-5 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n --5 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P8_Replace_Mix]^kurtosis = ( n *  ( n + 1L )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1L )  )  / (  ( n - 1L )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P1_Replace_Type]^int variance = moment.m2 /  ( int )   ( moment.n - 1 ) ;^92^^^^^89^104^double variance = moment.m2 /  ( double )   ( moment.n - 1 ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^double variance = moment.m2 +  ( double )   ( moment.n - 1 ) ;^92^^^^^89^104^double variance = moment.m2 /  ( double )   ( moment.n - 1 ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^double variance = moment.m2 /  ( double )   ( moment.n  !=  1 ) ;^92^^^^^89^104^double variance = moment.m2 /  ( double )   ( moment.n - 1 ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P3_Replace_Literal]^double variance = moment.m2 /  ( double )   ( moment.n  ) ;^92^^^^^89^104^double variance = moment.m2 /  ( double )   ( moment.n - 1 ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P11_Insert_Donor_Statement]^double n =  ( double )  moment.n;double variance = moment.m2 /  ( double )   ( moment.n - 1 ) ;^92^^^^^89^104^double variance = moment.m2 /  ( double )   ( moment.n - 1 ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^if  ( moment.n <= 3 || variance <= 10E-20 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P3_Replace_Literal]^if  ( moment.n <= 6 || variance < 10E-20 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P3_Replace_Literal]^if  ( moment.n <= 3 || variance < 10E-15 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P3_Replace_Literal]^if  ( moment.n <= 3 || variance < -10E-20 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P3_Replace_Literal]^if  ( moment.n <=  || variance < 10E-20 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P3_Replace_Literal]^if  ( moment.n <= 3 || variance < -40E-20 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P3_Replace_Literal]^if  ( moment.n <= 3 || variance < 10E-70 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P3_Replace_Literal]^if  ( moment.n <= 2 || variance < 10E-20 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P8_Replace_Mix]^if  ( moment.n <= 4 || variance < 10E-20 )  {^93^^^^^89^104^if  ( moment.n <= 3 || variance < 10E-20 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4  >=  3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^kurtosis = ( n *  ( n  <=  1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 - moment.m2 - moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 - moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n  !=  1 )  )  / (  ( n  !=  1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4  <<  3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P3_Replace_Literal]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m1 * moment.m1 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -1 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P8_Replace_Mix]^kurtosis = ( n *  ( n + 0 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 0 )  )  / (  ( n - 0 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P8_Replace_Mix]^kurtosis = 2.0d;^94^^^^^89^104^kurtosis = 0.0;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P8_Replace_Mix]^kurtosis = 3.0d;^94^^^^^89^104^kurtosis = 0.0;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  + (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^kurtosis = ( n /  ( n + 1 )  / moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^kurtosis = ( n *  ( n  <  1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n  <=  1 )  )  / (  ( n  <=  1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n  <<  1 )  )  / (  ( n  <<  1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4  <  3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^kurtosis = ( n *  ( n + 1 )  * moment.m4  ==  3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P3_Replace_Literal]^kurtosis = ( n *  ( n +  )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n -  )  )  / (  ( n -  )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P3_Replace_Literal]^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m-6 * moment.m-6 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n --6 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P8_Replace_Mix]^kurtosis = ( n *  ( n + 1 + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 + 1 )  )  / (  ( n - 1 + 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^97^98^99^100^^89^104^kurtosis = ( n *  ( n + 1 )  * moment.m4 - 3 * moment.m2 * moment.m2 *  ( n - 1 )  )  / (  ( n - 1 )  *  ( n -2 )  *  ( n -3 )  * variance * variance ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^double variance = moment.m2 *  ( double )   ( moment.n - 1 ) ;^92^^^^^89^104^double variance = moment.m2 /  ( double )   ( moment.n - 1 ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P2_Replace_Operator]^double variance = moment.m2 /  ( double )   ( moment.n  <<  1 ) ;^92^^^^^89^104^double variance = moment.m2 /  ( double )   ( moment.n - 1 ) ;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P8_Replace_Mix]^if  ( m4.getN (  )  > 3 )  {^91^^^^^89^104^if  ( moment.getN (  )  > 3 )  {^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P5_Replace_Variable]^return variance;^103^^^^^89^104^return kurtosis;^[CLASS] Kurtosis  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  double  kurtosis  n  variance  
[P15_Unwrap_Block]^moment.clear();^110^111^112^113^114^109^116^if  ( incMoment )  { moment.clear (  ) ; } else  { throw new IllegalStateException ( "Statistics constructed from external moments cannot be cleared" ) ; }^[CLASS] Kurtosis  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  
[P16_Remove_Block]^^110^111^112^113^114^109^116^if  ( incMoment )  { moment.clear (  ) ; } else  { throw new IllegalStateException ( "Statistics constructed from external moments cannot be cleared" ) ; }^[CLASS] Kurtosis  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  
[P13_Insert_Block]^if  ( incMoment )  {     moment.increment ( d ) ; }else {     throw new IllegalStateException ( "Statistics constructed from external moments cannot be incremented" ) ; }^110^^^^^109^116^[Delete]^[CLASS] Kurtosis  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  
[P3_Replace_Literal]^throw new IllegalStateException ( "Statistics constructed from external moments cannot be clearedbe c" ) ;^113^114^^^^109^116^throw new IllegalStateException ( "Statistics constructed from external moments cannot be cleared" ) ;^[CLASS] Kurtosis  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  
[P4_Replace_Constructor]^throw throw  new IllegalStateException ( "Statistics constructed from external moments cannot be incremented" )  ;^113^114^^^^109^116^throw new IllegalStateException ( "Statistics constructed from external moments cannot be cleared" ) ;^[CLASS] Kurtosis  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  
[P13_Insert_Block]^if  ( incMoment )  {     moment.clear (  ) ; }else {     throw new IllegalStateException ( "Statistics constructed from external moments cannot be cleared" ) ; }^113^^^^^109^116^[Delete]^[CLASS] Kurtosis  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  
[P13_Insert_Block]^if  ( incMoment )  {     moment.increment ( d ) ; }else {     throw new IllegalStateException ( "Statistics constructed from external moments cannot be incremented" ) ; }^113^^^^^109^116^[Delete]^[CLASS] Kurtosis  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  
[P3_Replace_Literal]^throw new IllegalStateException ( "tics constructetatistics constructed from external moments cannot be cleared" ) ;^113^114^^^^109^116^throw new IllegalStateException ( "Statistics constructed from external moments cannot be cleared" ) ;^[CLASS] Kurtosis  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  
[P8_Replace_Mix]^return false;^113^114^^^^109^116^throw new IllegalStateException ( "Statistics constructed from external moments cannot be cleared" ) ;^[CLASS] Kurtosis  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  
[P11_Insert_Donor_Statement]^throw new IllegalStateException ( "Statistics constructed from external moments cannot be incremented" ) ;throw new IllegalStateException ( "Statistics constructed from external moments cannot be cleared" ) ;^113^114^^^^109^116^throw new IllegalStateException ( "Statistics constructed from external moments cannot be cleared" ) ;^[CLASS] Kurtosis  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  
[P7_Replace_Invocation]^moment.getN (  ) ;^111^^^^^109^116^moment.clear (  ) ;^[CLASS] Kurtosis  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  
[P14_Delete_Statement]^^111^^^^^109^116^moment.clear (  ) ;^[CLASS] Kurtosis  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  
[P11_Insert_Donor_Statement]^moment.increment ( d ) ;moment.clear (  ) ;^111^^^^^109^116^moment.clear (  ) ;^[CLASS] Kurtosis  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  
[P11_Insert_Donor_Statement]^return moment.getN (  ) ;moment.clear (  ) ;^111^^^^^109^116^moment.clear (  ) ;^[CLASS] Kurtosis  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  
[P3_Replace_Literal]^throw new IllegalStateException ( "Statistics constructed from external moments cannot be clearedte" ) ;^113^114^^^^109^116^throw new IllegalStateException ( "Statistics constructed from external moments cannot be cleared" ) ;^[CLASS] Kurtosis  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  
[P3_Replace_Literal]^throw new IllegalStateException ( "e cl" ) ;^113^114^^^^109^116^throw new IllegalStateException ( "Statistics constructed from external moments cannot be cleared" ) ;^[CLASS] Kurtosis  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  
[P5_Replace_Variable]^return m4.getN (  ) ;^122^^^^^121^123^return moment.getN (  ) ;^[CLASS] Kurtosis  [METHOD] getN [RETURN_TYPE] long   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  
[P7_Replace_Invocation]^return moment.clear (  ) ;^122^^^^^121^123^return moment.getN (  ) ;^[CLASS] Kurtosis  [METHOD] getN [RETURN_TYPE] long   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  
[P12_Insert_Condition]^if  ( moment.getN (  )  > 3 )  { return moment.getN (  ) ; }^122^^^^^121^123^return moment.getN (  ) ;^[CLASS] Kurtosis  [METHOD] getN [RETURN_TYPE] long   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  
[P8_Replace_Mix]^return m4.clear (  ) ;^122^^^^^121^123^return moment.getN (  ) ;^[CLASS] Kurtosis  [METHOD] getN [RETURN_TYPE] long   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  
[P14_Delete_Statement]^^122^^^^^121^123^return moment.getN (  ) ;^[CLASS] Kurtosis  [METHOD] getN [RETURN_TYPE] long   [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  long  serialVersionUID  
[P1_Replace_Type]^int kurt = Double.NaN;^145^^^^^130^160^double kurt = Double.NaN;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P11_Insert_Donor_Statement]^double n =  ( double )  moment.n;double kurt = Double.NaN;^145^^^^^130^160^double kurt = Double.NaN;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P11_Insert_Donor_Statement]^double kurtosis = Double.NaN;double kurt = Double.NaN;^145^^^^^130^160^double kurt = Double.NaN;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P11_Insert_Donor_Statement]^double n0 = length;double kurt = Double.NaN;^145^^^^^130^160^double kurt = Double.NaN;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^if  ( test ( values, begin, length )  || length > 3 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^if  ( test ( values, begin, length )  && length >= 3 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P3_Replace_Literal]^if  ( test ( values, begin, length )  && length > i )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P3_Replace_Literal]^if  ( test ( values, begin, length )  && length > begin )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P3_Replace_Literal]^if  ( test ( values, begin, length )  && length > 4 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P4_Replace_Constructor]^if  ( test (  begin, length )  && length > 3 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P4_Replace_Constructor]^if  ( test ( values,  length )  && length > 3 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P4_Replace_Constructor]^if  ( test ( values, begin )  && length > 3 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P6_Replace_Expression]^if  ( test ( values, begin, length )  ) {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P6_Replace_Expression]^if  (  length > 3 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P6_Replace_Expression]^if  ( i < begin + length )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P6_Replace_Expression]^if  ( begin + length )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P6_Replace_Expression]^if  ( values[i] - mean )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P6_Replace_Expression]^if  ( n0 * (n0 + 1) / ((n0 - 1) * (n0 - 2)) * (n0 - 3) )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P6_Replace_Expression]^if  ( n0 * n0 + 1 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P6_Replace_Expression]^if  ( n0 + 1 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P6_Replace_Expression]^if  (  ( n0 - 1 )  *  ( n0 - 2 )  * n0 - 3 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P6_Replace_Expression]^if  ( n0 - 1 * n0 - 2 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P6_Replace_Expression]^if  ( n0 - 1 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P6_Replace_Expression]^if  ( n0 - 2 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P6_Replace_Expression]^if  ( n0 - 3 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P6_Replace_Expression]^if  ( 3 * pow((n0 - 1), 2.0)) / (n0 - 2) * (n0 - 3) )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P6_Replace_Expression]^if  ( 3 * pow (  ( n0 - 1 ) , 2.0 ) )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P6_Replace_Expression]^if  ( n0 - 2 * n0 - 3 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P6_Replace_Expression]^if  ( coefficientOne * accum3 - termTwo )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P6_Replace_Expression]^if  ( coefficientOne * accum3 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P8_Replace_Mix]^if  (  length > 0  )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P1_Replace_Type]^for  (  long  i = begin; i < begin + length; i++ )  {^158^^^^^143^173^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^for  ( int i = begin; i == begin + length; i++ )  {^158^^^^^143^173^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^for  !=  ( int i = begin; i < begin + length; i++ )  {^158^^^^^143^173^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^for  ^  ( int i = begin; i < begin + length; i++ )  {^158^^^^^143^173^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^for  ( int i = length; i < begin + length; i++ )  {^158^^^^^143^173^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^for  ( int i = begin; i < begin + begin; i++ )  {^158^^^^^143^173^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^for  ( int i = length; i < begin + begin; i++ )  {^158^^^^^143^173^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^for  ( lengthnt i = begin; i < begin + i; i++ )  {^158^^^^^143^173^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^accum3 += Math.pow (  ( values[i]  !=  mean ) , 4.0 ) ;^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^accum3 += Math.pow (  ( values[i] - termTwo ) , 4.0 ) ;^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^accum3 += Math.pow (  ( mean[i] - values ) , 4.0 ) ;^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P8_Replace_Mix]^accum3 += Math.pow (  ( values[i] - mean ) , 4.0D ) ;^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P11_Insert_Donor_Statement]^accum3 /= Math.pow ( stdDev, 4.0d ) ;accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^accum3 += Math.pow (  ( values[i]  ^  mean ) , 4.0 ) ;^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P3_Replace_Literal]^accum3 += Math.pow (  ( values[i] - mean ) , 16.0 ) ;^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P14_Delete_Statement]^^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^accum3 += Math.pow (  ( values[i]  <=  mean ) , 4.0 ) ;^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P3_Replace_Literal]^accum3 += Math.pow (  ( values[i] - mean ) , Infinity ) ;^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^accum3 += Math.pow (  ( values[i] - stdDev ) , 4.0 ) ;^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P3_Replace_Literal]^accum3 /= Math.pow ( stdDev, 28.0d ) ;^161^^^^^146^176^accum3 /= Math.pow ( stdDev, 4.0d ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^accum3 /= Math.pow ( termTwo, 4.0d ) ;^161^^^^^146^176^accum3 /= Math.pow ( stdDev, 4.0d ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P8_Replace_Mix]^accum3 /= Math.pow ( stfev, 2.0f ) ;^161^^^^^146^176^accum3 /= Math.pow ( stdDev, 4.0d ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P11_Insert_Donor_Statement]^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;accum3 /= Math.pow ( stdDev, 4.0d ) ;^161^^^^^146^176^accum3 /= Math.pow ( stdDev, 4.0d ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^kurt =  ( coefficientOne * accum3 )   <=  termTwo;^172^^^^^157^187^kurt =  ( coefficientOne * accum3 )  - termTwo;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^kurt =  ( coefficientOne / accum3 )  - termTwo;^172^^^^^157^187^kurt =  ( coefficientOne * accum3 )  - termTwo;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^kurt =  ( termTwo * accum3 )  - termTwo;^172^^^^^157^187^kurt =  ( coefficientOne * accum3 )  - termTwo;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^kurt =  ( coefficientOne * termTwo )  - termTwo;^172^^^^^157^187^kurt =  ( coefficientOne * accum3 )  - termTwo;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^kurt =  ( coefficientOne * accum3 )  - stdDev;^172^^^^^157^187^kurt =  ( coefficientOne * accum3 )  - termTwo;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^kurt =  ( accum3 * coefficientOne )  - termTwo;^172^^^^^157^187^kurt =  ( coefficientOne * accum3 )  - termTwo;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^kurt =  ( coefficientOne * termTwo )  - accum3;^172^^^^^157^187^kurt =  ( coefficientOne * accum3 )  - termTwo;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P8_Replace_Mix]^kurt =   ( stdDev * accum3 )  - termTwo;^172^^^^^157^187^kurt =  ( coefficientOne * accum3 )  - termTwo;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P4_Replace_Constructor]^Variance variance = new FourthMoment (  )  ;^150^^^^^135^165^Variance variance = new Variance (  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P1_Replace_Type]^float mean = variance.moment.m1;^152^^^^^137^167^double mean = variance.moment.m1;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P1_Replace_Type]^int stdDev = Math.sqrt ( variance.getResult (  )  ) ;^153^^^^^138^168^double stdDev = Math.sqrt ( variance.getResult (  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P1_Replace_Type]^float accum3 = 0.0;^157^^^^^142^172^double accum3 = 0.0;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P1_Replace_Type]^int n0 = length;^164^^^^^149^179^double n0 = length;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^double n0 = i;^164^^^^^149^179^double n0 = length;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P11_Insert_Donor_Statement]^double kurt = Double.NaN;double n0 = length;^164^^^^^149^179^double n0 = length;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P1_Replace_Type]^int coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^double coefficientOne = ( n0 *  ( n0 + 1 )  )  -  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^double / coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^double coefficientOne = ( n0 *  ( n0  ||  1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^double - coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0  <  1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0  <  2 )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0  &&  3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P3_Replace_Literal]^double coefficientOne = ( n0 *  ( n0  )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P3_Replace_Literal]^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0  )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P3_Replace_Literal]^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - i )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^double coefficientOne = ( stdDev *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P11_Insert_Donor_Statement]^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P1_Replace_Type]^int termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  *  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^double + termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^double termTwo = (  ( 3 * Math.pow ( n0  &  1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^double / termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0  ==  2 )  *  ( n0 - 3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0  ||  3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P3_Replace_Literal]^double termTwo = (  ( length * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - length )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P3_Replace_Literal]^double termTwo = (  ( 3 * Math.pow ( n0 , 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P3_Replace_Literal]^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 16.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P3_Replace_Literal]^double termTwo = (  ( 3 * Math.pow ( n0 - 1, length.0 )  )  /  (  ( n0 - length )  *  ( n0 - 3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P3_Replace_Literal]^double termTwo = (  ( i * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - i )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^double termTwo = (  ( 3 * Math.pow ( stdDev - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P11_Insert_Donor_Statement]^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^variance.incrementAll ( values, i, length ) ;^151^^^^^136^166^variance.incrementAll ( values, begin, length ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^variance.incrementAll ( values, begin, i ) ;^151^^^^^136^166^variance.incrementAll ( values, begin, length ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^variance.incrementAll (  begin, length ) ;^151^^^^^136^166^variance.incrementAll ( values, begin, length ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^variance.incrementAll ( values,  length ) ;^151^^^^^136^166^variance.incrementAll ( values, begin, length ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^variance.incrementAll ( values, begin ) ;^151^^^^^136^166^variance.incrementAll ( values, begin, length ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^variance.incrementAll ( values, length, begin ) ;^151^^^^^136^166^variance.incrementAll ( values, begin, length ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^variance.incrementAll ( length, begin, values ) ;^151^^^^^136^166^variance.incrementAll ( values, begin, length ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P7_Replace_Invocation]^variance .getResult (  )  ;^151^^^^^136^166^variance.incrementAll ( values, begin, length ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P14_Delete_Statement]^^151^152^^^^136^166^variance.incrementAll ( values, begin, length ) ; double mean = variance.moment.m1;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P14_Delete_Statement]^^153^^^^^138^168^double stdDev = Math.sqrt ( variance.getResult (  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P8_Replace_Mix]^double stdDev = Math.sqrt ( variance .incrementAll ( values , length , length )   ) ;^153^^^^^138^168^double stdDev = Math.sqrt ( variance.getResult (  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^accum3 += Math.pow (  ( values[i]  ||  mean ) , 4.0 ) ;^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P3_Replace_Literal]^accum3 += Math.pow (  ( values[i] - mean ) , 8.0 ) ;^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P8_Replace_Mix]^accum3 += Math.pow (  ( values[i] - n0 ) , 4.0 ) ;^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P3_Replace_Literal]^accum3 /= Math.pow ( stdDev, 12.0d ) ;^161^^^^^146^176^accum3 /= Math.pow ( stdDev, 4.0d ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P14_Delete_Statement]^^161^^^^^146^176^accum3 /= Math.pow ( stdDev, 4.0d ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^(  ( 3 * Math.pow ( n0  >=  1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^169^^^^^154^184^(  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P3_Replace_Literal]^(  ( 3 * Math.pow ( n0 , 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^169^^^^^154^184^(  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^(  ( 3 * Math.pow ( stdDev - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^169^^^^^154^184^(  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P8_Replace_Mix]^(  ( 3 * Math.pow ( mean - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^169^^^^^154^184^(  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P14_Delete_Statement]^^169^^^^^154^184^(  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P1_Replace_Type]^for  (  short  i = begin; i < begin + length; i++ )  {^158^^^^^143^173^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^for  ( int i = begin; i <= begin + length; i++ )  {^158^^^^^143^173^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^for  >=  ( int i = begin; i < begin + length; i++ )  {^158^^^^^143^173^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^for   instanceof   ( int i = begin; i < begin + length; i++ )  {^158^^^^^143^173^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^for  ( lengthnt i = begin; i < begin + length; i++ )  {^158^^^^^143^173^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^for  ( beginnt i = i; i < begin + length; i++ )  {^158^^^^^143^173^for  ( int i = begin; i < begin + length; i++ )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^accum3 += Math.pow (  ( values[i]  &  mean ) , 4.0 ) ;^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P3_Replace_Literal]^accum3 += Math.pow (  ( values[i] - mean ) , 0.8 ) ;^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^accum3 += Math.pow (  ( values[i]  <<  mean ) , 4.0 ) ;^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^accum3 += Math.pow (  ( values[i]  &&  mean ) , 4.0 ) ;^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P3_Replace_Literal]^accum3 += Math.pow (  ( values[i] - mean ) , 0.5714285714285714 ) ;^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P8_Replace_Mix]^accum3 += Math.pow (  ( values[i] - mean ) , 4.0d ) ;^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^accum3 /= Math.pow ( n0, 4.0d ) ;^161^^^^^146^176^accum3 /= Math.pow ( stdDev, 4.0d ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P8_Replace_Mix]^accum3 /= Math.pow ( stfev, 4.0f ) ;^161^^^^^146^176^accum3 /= Math.pow ( stdDev, 4.0d ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^kurt =  ( coefficientOne * accum3 )   <  termTwo;^172^^^^^157^187^kurt =  ( coefficientOne * accum3 )  - termTwo;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^kurt =  ( coefficientOne + accum3 )  - termTwo;^172^^^^^157^187^kurt =  ( coefficientOne * accum3 )  - termTwo;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^kurt =  ( coefficientOne * n0 )  - termTwo;^172^^^^^157^187^kurt =  ( coefficientOne * accum3 )  - termTwo;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^kurt =  ( termTwo * accum3 )  - coefficientOne;^172^^^^^157^187^kurt =  ( coefficientOne * accum3 )  - termTwo;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P1_Replace_Type]^int accum3 = 0.0;^157^^^^^142^172^double accum3 = 0.0;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P1_Replace_Type]^float coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^double coefficientOne = ( n0 *  ( n0  >  1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^double + coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0  !=  1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0  !=  2 )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0  <  3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P3_Replace_Literal]^double coefficientOne = ( n0 *  ( n0 + i )  )  /  (  ( n0 - i )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P3_Replace_Literal]^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - length )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^double coefficientOne = ( termTwo *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^166^167^^^^151^181^double coefficientOne = ( n0 *  ( n0 + 1 )  )  /  (  ( n0 - 1 )  *  ( n0 - 2 )  *  ( n0 - 3 )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  +  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^double termTwo = (  ( 3 * Math.pow ( n0  <  1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^double - termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0  >  2 )  *  ( n0 - 3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0  ^  3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P3_Replace_Literal]^double termTwo = (  ( begin * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - begin )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P3_Replace_Literal]^double termTwo = (  ( 3 * Math.pow ( n0 - length, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P3_Replace_Literal]^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0  )  *  ( n0 - 3 )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P3_Replace_Literal]^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0  )  )  ) ;^168^169^^^^153^183^double termTwo = (  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^if  ( test ( values, i, length )  && length > 3 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^if  ( test ( values, begin, i )  && length > 3 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^if  ( test ( length, begin, values )  && length > 3 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^if  ( test ( values, length, begin )  && length > 3 )  {^147^^^^^132^162^if  ( test ( values, begin, length )  && length > 3 )  {^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^variance.incrementAll ( values, length, length ) ;^151^^^^^136^166^variance.incrementAll ( values, begin, length ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P14_Delete_Statement]^^151^^^^^136^166^variance.incrementAll ( values, begin, length ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P3_Replace_Literal]^accum3 += Math.pow (  ( values[i] - mean ) , 20.0 ) ;^159^^^^^144^174^accum3 += Math.pow (  ( values[i] - mean ) , 4.0 ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P3_Replace_Literal]^accum3 /= Math.pow ( stdDev, 36.0d ) ;^161^^^^^146^176^accum3 /= Math.pow ( stdDev, 4.0d ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P2_Replace_Operator]^(  ( 3 * Math.pow ( n0  &&  1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^169^^^^^154^184^(  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P3_Replace_Literal]^(  ( 3 * Math.pow ( n0 - , 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^169^^^^^154^184^(  ( 3 * Math.pow ( n0 - 1, 2.0 )  )  /  (  ( n0 - 2 )  *  ( n0 - 3 )  )  ) ;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P5_Replace_Variable]^return stdDev;^174^^^^^159^189^return kurt;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
[P8_Replace_Mix]^return n0;^174^^^^^159^189^return kurt;^[CLASS] Kurtosis  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] FourthMoment  m4  moment  boolean  incMoment  double[]  values  double  accum3  coefficientOne  kurt  mean  n0  stdDev  termTwo  long  serialVersionUID  int  begin  i  length  Variance  variance  
