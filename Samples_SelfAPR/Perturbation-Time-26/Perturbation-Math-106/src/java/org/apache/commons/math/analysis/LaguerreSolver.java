[P1_Replace_Type]^private static final  short  serialVersionUID = 5287689975005870178L;^37^^^^^32^42^private static final long serialVersionUID = 5287689975005870178L;^[CLASS] LaguerreSolver   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID  = null ;^37^^^^^32^42^private static final long serialVersionUID = 5287689975005870178L;^[CLASS] LaguerreSolver   [VARIABLES] 
[P12_Insert_Condition]^if  ( f instanceof PolynomialFunction )  { private PolynomialFunction p; }^40^^^^^35^45^private PolynomialFunction p;^[CLASS] LaguerreSolver   [VARIABLES] 
[P14_Delete_Statement]^^51^^^^^48^57^super ( f, 100, 1E-6 ) ;^[CLASS] LaguerreSolver  [METHOD] <init> [RETURN_TYPE] UnivariateRealFunction)   UnivariateRealFunction f [VARIABLES] PolynomialFunction  p  UnivariateRealFunction  f  boolean  long  serialVersionUID  
[P2_Replace_Operator]^if  ( f  ^  PolynomialFunction )  {^52^^^^^48^57^if  ( f instanceof PolynomialFunction )  {^[CLASS] LaguerreSolver  [METHOD] <init> [RETURN_TYPE] UnivariateRealFunction)   UnivariateRealFunction f [VARIABLES] PolynomialFunction  p  UnivariateRealFunction  f  boolean  long  serialVersionUID  
[P15_Unwrap_Block]^p = ((org.apache.commons.math.analysis.PolynomialFunction) (f));^52^53^54^55^56^48^57^if  ( f instanceof PolynomialFunction )  { p =  ( PolynomialFunction ) f; } else { throw new IllegalArgumentException  (" ")  ; }^[CLASS] LaguerreSolver  [METHOD] <init> [RETURN_TYPE] UnivariateRealFunction)   UnivariateRealFunction f [VARIABLES] PolynomialFunction  p  UnivariateRealFunction  f  boolean  long  serialVersionUID  
[P16_Remove_Block]^^52^53^54^55^56^48^57^if  ( f instanceof PolynomialFunction )  { p =  ( PolynomialFunction ) f; } else { throw new IllegalArgumentException  (" ")  ; }^[CLASS] LaguerreSolver  [METHOD] <init> [RETURN_TYPE] UnivariateRealFunction)   UnivariateRealFunction f [VARIABLES] PolynomialFunction  p  UnivariateRealFunction  f  boolean  long  serialVersionUID  
[P11_Insert_Donor_Statement]^throw new ConvergenceException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^55^^^^^48^57^throw new IllegalArgumentException  (" ")  ;^[CLASS] LaguerreSolver  [METHOD] <init> [RETURN_TYPE] UnivariateRealFunction)   UnivariateRealFunction f [VARIABLES] PolynomialFunction  p  UnivariateRealFunction  f  boolean  long  serialVersionUID  
[P8_Replace_Mix]^p =   ( PolynomialFunction ) f;^53^^^^^48^57^p =  ( PolynomialFunction ) f;^[CLASS] LaguerreSolver  [METHOD] <init> [RETURN_TYPE] UnivariateRealFunction)   UnivariateRealFunction f [VARIABLES] PolynomialFunction  p  UnivariateRealFunction  f  boolean  long  serialVersionUID  
[P12_Insert_Condition]^if  ( f instanceof PolynomialFunction )  { p =  ( PolynomialFunction ) f; }^53^^^^^48^57^p =  ( PolynomialFunction ) f;^[CLASS] LaguerreSolver  [METHOD] <init> [RETURN_TYPE] UnivariateRealFunction)   UnivariateRealFunction f [VARIABLES] PolynomialFunction  p  UnivariateRealFunction  f  boolean  long  serialVersionUID  
[P14_Delete_Statement]^^65^^^^^64^66^return new PolynomialFunction ( p.getCoefficients (  )  ) ;^[CLASS] LaguerreSolver  [METHOD] getPolynomialFunction [RETURN_TYPE] PolynomialFunction   [VARIABLES] PolynomialFunction  p  long  serialVersionUID  boolean  
[P2_Replace_Operator]^if  ( p.value ( min )  <= 0.0 )  { return min; }^87^^^^^83^98^if  ( p.value ( min )  == 0.0 )  { return min; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^if  ( p.value ( max )  == 0.0 )  { return min; }^87^^^^^83^98^if  ( p.value ( min )  == 0.0 )  { return min; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^if  ( min.value ( p )  == 0.0 )  { return min; }^87^^^^^83^98^if  ( p.value ( min )  == 0.0 )  { return min; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P7_Replace_Invocation]^if  ( p .getCoefficients (  )   == 0.0 )  { return min; }^87^^^^^83^98^if  ( p.value ( min )  == 0.0 )  { return min; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P8_Replace_Mix]^if  ( p.value ( min )  == 0.0D )  { return min; }^87^^^^^83^98^if  ( p.value ( min )  == 0.0 )  { return min; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P15_Unwrap_Block]^return min;^87^88^^^^83^98^if  ( p.value ( min )  == 0.0 )  { return min; } if  ( p.value ( max )  == 0.0 )  { return max; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P16_Remove_Block]^^87^88^^^^83^98^if  ( p.value ( min )  == 0.0 )  { return min; } if  ( p.value ( max )  == 0.0 )  { return max; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P13_Insert_Block]^if  (  ( p.value ( initial )  )  == 0.0 )  {     return initial; }^87^^^^^83^98^[Delete]^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P13_Insert_Block]^if  (  ( p.value ( max )  )  == 0.0 )  {     return max; }^87^^^^^83^98^[Delete]^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P2_Replace_Operator]^if  ( p.value ( max )  >= 0.0 )  { return max; }^88^^^^^83^98^if  ( p.value ( max )  == 0.0 )  { return max; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^if  ( p.value ( min )  == 0.0 )  { return max; }^88^^^^^83^98^if  ( p.value ( max )  == 0.0 )  { return max; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^if  ( max.value ( p )  == 0.0 )  { return max; }^88^^^^^83^98^if  ( p.value ( max )  == 0.0 )  { return max; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P7_Replace_Invocation]^if  ( p .getCoefficients (  )   == 0.0 )  { return max; }^88^^^^^83^98^if  ( p.value ( max )  == 0.0 )  { return max; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P8_Replace_Mix]^if  ( p.value ( max )  == 0.0D )  { return max; }^88^^^^^83^98^if  ( p.value ( max )  == 0.0 )  { return max; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P15_Unwrap_Block]^return max;^88^89^^^^83^98^if  ( p.value ( max )  == 0.0 )  { return max; } if  ( p.value ( initial )  == 0.0 )  { return initial; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P16_Remove_Block]^^88^89^^^^83^98^if  ( p.value ( max )  == 0.0 )  { return max; } if  ( p.value ( initial )  == 0.0 )  { return initial; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P13_Insert_Block]^if  (  ( p.value ( min )  )  == 0.0 )  {     return min; }^88^^^^^83^98^[Delete]^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P13_Insert_Block]^if  (  ( p.value ( initial )  )  == 0.0 )  {     return initial; }^88^^^^^83^98^[Delete]^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P2_Replace_Operator]^if  ( p.value ( initial )  != 0.0 )  { return initial; }^89^^^^^83^98^if  ( p.value ( initial )  == 0.0 )  { return initial; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^if  ( p.value ( min )  == 0.0 )  { return initial; }^89^^^^^83^98^if  ( p.value ( initial )  == 0.0 )  { return initial; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^if  ( initial.value ( p )  == 0.0 )  { return initial; }^89^^^^^83^98^if  ( p.value ( initial )  == 0.0 )  { return initial; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P7_Replace_Invocation]^if  ( p .getCoefficients (  )   == 0.0 )  { return initial; }^89^^^^^83^98^if  ( p.value ( initial )  == 0.0 )  { return initial; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P8_Replace_Mix]^if  ( p.value ( min )  == 4.0d )  { return initial; }^89^^^^^83^98^if  ( p.value ( initial )  == 0.0 )  { return initial; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P13_Insert_Block]^if  (  ( p.value ( min )  )  == 0.0 )  {     return min; }^89^^^^^83^98^[Delete]^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P13_Insert_Block]^if  (  ( p.value ( max )  )  == 0.0 )  {     return max; }^89^^^^^83^98^[Delete]^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^verifyBracketing ( initial, max, p ) ;^91^^^^^83^98^verifyBracketing ( min, max, p ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^verifyBracketing ( min, initial, p ) ;^91^^^^^83^98^verifyBracketing ( min, max, p ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^verifyBracketing (  max, p ) ;^91^^^^^83^98^verifyBracketing ( min, max, p ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^verifyBracketing ( min,  p ) ;^91^^^^^83^98^verifyBracketing ( min, max, p ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^verifyBracketing ( min, max ) ;^91^^^^^83^98^verifyBracketing ( min, max, p ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^verifyBracketing ( max, min, p ) ;^91^^^^^83^98^verifyBracketing ( min, max, p ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^verifyBracketing ( min, p, max ) ;^91^^^^^83^98^verifyBracketing ( min, max, p ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P7_Replace_Invocation]^setResult ( min, max, p ) ;^91^^^^^83^98^verifyBracketing ( min, max, p ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P12_Insert_Condition]^if  ( isBracketing ( min, initial, p )  )  { verifyBracketing ( min, max, p ) ; }^91^^^^^83^98^verifyBracketing ( min, max, p ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^verifySequence ( initial, initial, max ) ;^92^^^^^83^98^verifySequence ( min, initial, max ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^verifySequence ( min, initial, initial ) ;^92^^^^^83^98^verifySequence ( min, initial, max ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^verifySequence (  initial, max ) ;^92^^^^^83^98^verifySequence ( min, initial, max ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^verifySequence ( min,  max ) ;^92^^^^^83^98^verifySequence ( min, initial, max ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^verifySequence ( min, initial ) ;^92^^^^^83^98^verifySequence ( min, initial, max ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^verifySequence ( initial, min, max ) ;^92^^^^^83^98^verifySequence ( min, initial, max ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^verifySequence ( min, max, initial ) ;^92^^^^^83^98^verifySequence ( min, initial, max ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^verifySequence ( max, initial, min ) ;^92^^^^^83^98^verifySequence ( min, initial, max ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P7_Replace_Invocation]^isSequence ( min, initial, max ) ;^92^^^^^83^98^verifySequence ( min, initial, max ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P14_Delete_Statement]^^92^93^94^95^96^83^98^verifySequence ( min, initial, max ) ; if  ( isBracketing ( min, initial, p )  )  { return solve ( min, initial ) ; } else { return solve ( initial, max ) ; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^if  ( isBracketing ( initial, initial, p )  )  {^93^^^^^83^98^if  ( isBracketing ( min, initial, p )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^if  ( isBracketing ( min, min, p )  )  {^93^^^^^83^98^if  ( isBracketing ( min, initial, p )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^if  ( isBracketing (  initial, p )  )  {^93^^^^^83^98^if  ( isBracketing ( min, initial, p )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^if  ( isBracketing ( min,  p )  )  {^93^^^^^83^98^if  ( isBracketing ( min, initial, p )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^if  ( isBracketing ( min, initial )  )  {^93^^^^^83^98^if  ( isBracketing ( min, initial, p )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^if  ( isBracketing ( initial, min, p )  )  {^93^^^^^83^98^if  ( isBracketing ( min, initial, p )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^if  ( isBracketing ( min, p, initial )  )  {^93^^^^^83^98^if  ( isBracketing ( min, initial, p )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P7_Replace_Invocation]^if  ( setResult ( min, initial, p )  )  {^93^^^^^83^98^if  ( isBracketing ( min, initial, p )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P8_Replace_Mix]^if  ( setResult ( initial, initial, p )  )  {^93^^^^^83^98^if  ( isBracketing ( min, initial, p )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P9_Replace_Statement]^if  ( isRootOK ( min, max, z )  )  {^93^^^^^83^98^if  ( isBracketing ( min, initial, p )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P15_Unwrap_Block]^return solve(min, initial);^93^94^95^96^97^83^98^if  ( isBracketing ( min, initial, p )  )  { return solve ( min, initial ) ; } else { return solve ( initial, max ) ; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P16_Remove_Block]^^93^94^95^96^97^83^98^if  ( isBracketing ( min, initial, p )  )  { return solve ( min, initial ) ; } else { return solve ( initial, max ) ; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^return solve ( min, max ) ;^96^^^^^83^98^return solve ( initial, max ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^return solve ( initial, min ) ;^96^^^^^83^98^return solve ( initial, max ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^return solve (  max ) ;^96^^^^^83^98^return solve ( initial, max ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^return solve ( initial ) ;^96^^^^^83^98^return solve ( initial, max ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^return solve ( max, initial ) ;^96^^^^^83^98^return solve ( initial, max ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P7_Replace_Invocation]^return solveAll ( initial, max ) ;^96^^^^^83^98^return solve ( initial, max ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P8_Replace_Mix]^return solveAll ( min, max ) ;^96^^^^^83^98^return solve ( initial, max ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P14_Delete_Statement]^^96^^^^^83^98^return solve ( initial, max ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^return solve ( max, initial ) ;^94^^^^^83^98^return solve ( min, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^return solve ( min, max ) ;^94^^^^^83^98^return solve ( min, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^return solve (  initial ) ;^94^^^^^83^98^return solve ( min, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^return solve ( min ) ;^94^^^^^83^98^return solve ( min, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^return solve ( initial, min ) ;^94^^^^^83^98^return solve ( min, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P7_Replace_Invocation]^return solveAll ( min, initial ) ;^94^^^^^83^98^return solve ( min, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P8_Replace_Mix]^return solveAll ( min, max ) ;^94^^^^^83^98^return solve ( min, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P8_Replace_Mix]^return solveAll ( max, initial ) ;^94^^^^^83^98^return solve ( min, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P14_Delete_Statement]^^94^^^^^83^98^return solve ( min, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^if  ( isBracketing ( max, initial, p )  )  {^93^^^^^83^98^if  ( isBracketing ( min, initial, p )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^if  ( isBracketing ( min, max, p )  )  {^93^^^^^83^98^if  ( isBracketing ( min, initial, p )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P5_Replace_Variable]^if  ( isBracketing ( p, initial, min )  )  {^93^^^^^83^98^if  ( isBracketing ( min, initial, p )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max double initial [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  initial  max  min  
[P2_Replace_Operator]^if  ( p.value ( min )  != 0.0 )  { return min; }^122^^^^^119^149^if  ( p.value ( min )  == 0.0 )  { return min; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^if  ( p.value ( max )  == 0.0 )  { return min; }^122^^^^^119^149^if  ( p.value ( min )  == 0.0 )  { return min; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^if  ( min.value ( p )  == 0.0 )  { return min; }^122^^^^^119^149^if  ( p.value ( min )  == 0.0 )  { return min; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P8_Replace_Mix]^if  ( p.value ( min )  == 0.0D )  { return min; }^122^^^^^119^149^if  ( p.value ( min )  == 0.0 )  { return min; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P15_Unwrap_Block]^return min;^122^123^^^^119^149^if  ( p.value ( min )  == 0.0 )  { return min; } if  ( p.value ( max )  == 0.0 )  { return max; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P16_Remove_Block]^^122^123^^^^119^149^if  ( p.value ( min )  == 0.0 )  { return min; } if  ( p.value ( max )  == 0.0 )  { return max; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P13_Insert_Block]^if  (  ( p.value ( initial )  )  == 0.0 )  {     return initial; }^122^^^^^119^149^[Delete]^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P13_Insert_Block]^if  (  ( p.value ( max )  )  == 0.0 )  {     return max; }^122^^^^^119^149^[Delete]^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P7_Replace_Invocation]^if  ( p .getCoefficients (  )   == 0.0 )  { return min; }^122^^^^^119^149^if  ( p.value ( min )  == 0.0 )  { return min; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P2_Replace_Operator]^if  ( p.value ( max )  <= 0.0 )  { return max; }^123^^^^^119^149^if  ( p.value ( max )  == 0.0 )  { return max; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^if  ( p.value ( min )  == 0.0 )  { return max; }^123^^^^^119^149^if  ( p.value ( max )  == 0.0 )  { return max; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^if  ( max.value ( p )  == 0.0 )  { return max; }^123^^^^^119^149^if  ( p.value ( max )  == 0.0 )  { return max; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P8_Replace_Mix]^if  ( p.value ( max )  == 0.0D )  { return max; }^123^^^^^119^149^if  ( p.value ( max )  == 0.0 )  { return max; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P13_Insert_Block]^if  (  ( p.value ( min )  )  == 0.0 )  {     return min; }^123^^^^^119^149^[Delete]^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P13_Insert_Block]^if  (  ( p.value ( initial )  )  == 0.0 )  {     return initial; }^123^^^^^119^149^[Delete]^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^verifyBracketing ( max, max, p ) ;^124^^^^^119^149^verifyBracketing ( min, max, p ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^verifyBracketing (  max, p ) ;^124^^^^^119^149^verifyBracketing ( min, max, p ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^verifyBracketing ( min,  p ) ;^124^^^^^119^149^verifyBracketing ( min, max, p ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^verifyBracketing ( min, max ) ;^124^^^^^119^149^verifyBracketing ( min, max, p ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^verifyBracketing ( max, min, p ) ;^124^^^^^119^149^verifyBracketing ( min, max, p ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^verifyBracketing ( min, p, max ) ;^124^^^^^119^149^verifyBracketing ( min, max, p ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P7_Replace_Invocation]^setResult ( min, max, p ) ;^124^^^^^119^149^verifyBracketing ( min, max, p ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P8_Replace_Mix]^verifyBracketing ( min, min, p ) ;^124^^^^^119^149^verifyBracketing ( min, max, p ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P12_Insert_Condition]^if  ( isBracketing ( min, initial, p )  )  { verifyBracketing ( min, max, p ) ; }^124^^^^^119^149^verifyBracketing ( min, max, p ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P8_Replace_Mix]^double coefficients[] = p .value ( min )  ;^126^^^^^119^149^double coefficients[] = p.getCoefficients (  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P14_Delete_Statement]^^126^^^^^119^149^double coefficients[] = p.getCoefficients (  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P11_Insert_Donor_Statement]^return new PolynomialFunction ( p.getCoefficients (  )  ) ;double coefficients[] = p.getCoefficients (  ) ;^126^^^^^119^149^double coefficients[] = p.getCoefficients (  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P11_Insert_Donor_Statement]^Complex root[] = new Complex[n];Complex c[] = new Complex[coefficients.length];^127^^^^^119^149^Complex c[] = new Complex[coefficients.length];^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P11_Insert_Donor_Statement]^Complex z = new Complex ( initial, 0.0 ) ;Complex c[] = new Complex[coefficients.length];^127^^^^^119^149^Complex c[] = new Complex[coefficients.length];^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P11_Insert_Donor_Statement]^Complex c[] = new Complex[n+1];Complex c[] = new Complex[coefficients.length];^127^^^^^119^149^Complex c[] = new Complex[coefficients.length];^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P1_Replace_Type]^for  (  short  i = 0; i < coefficients.length; i++ )  {^128^^^^^119^149^for  ( int i = 0; i < coefficients.length; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P2_Replace_Operator]^for  ( int i = 0; i <= coefficients.length; i++ )  {^128^^^^^119^149^for  ( int i = 0; i < coefficients.length; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P3_Replace_Literal]^for  ( int i = i; i < coefficients.length; i++ )  {^128^^^^^119^149^for  ( int i = 0; i < coefficients.length; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^for  ( int i = 0; i < rootoefficients.length; i++ )  {^128^^^^^119^149^for  ( int i = 0; i < coefficients.length; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^for  ( coefficients.lengthnt i = 0; i < i; i++ )  {^128^^^^^119^149^for  ( int i = 0; i < coefficients.length; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^for  ( coefficientsnt i = 0; i < i.length; i++ )  {^128^^^^^119^149^for  ( int i = 0; i < coefficients.length; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^for  ( cnt i = 0; i < ioefficients.length; i++ )  {^128^^^^^119^149^for  ( int i = 0; i < coefficients.length; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^for  ( int i = 0; i < coefficients; i++ )  {^128^^^^^119^149^for  ( int i = 0; i < coefficients.length; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P4_Replace_Constructor]^c[i] = c[i] =  new Complex (  ( 0.5 *  ( min + max )  ) , 0.0 )  ;^129^^^^^119^149^c[i] = new Complex ( coefficients[i], 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^c[i] = new Complex ( coefficientsoefficients[i], 0.0 ) ;^129^^^^^119^149^c[i] = new Complex ( coefficients[i], 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^c[i] = new Complex ( c[i], 0.0 ) ;^129^^^^^119^149^c[i] = new Complex ( coefficients[i], 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P8_Replace_Mix]^c[i] = new Complex ( coefficients[i], 0.0D ) ;^129^^^^^119^149^c[i] = new Complex ( coefficients[i], 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P11_Insert_Donor_Statement]^c[i] = coefficients[i];c[i] = new Complex ( coefficients[i], 0.0 ) ;^129^^^^^119^149^c[i] = new Complex ( coefficients[i], 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^c[i] = new Complex ( rootoefficients[i], 0.0 ) ;^129^^^^^119^149^c[i] = new Complex ( coefficients[i], 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P8_Replace_Mix]^c[i] = new Complex ( coefficients[i], 0.0d ) ;^129^^^^^119^149^c[i] = new Complex ( coefficients[i], 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P3_Replace_Literal]^c[i] = new Complex ( coefficients[i], NaN ) ;^129^^^^^119^149^c[i] = new Complex ( coefficients[i], 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P1_Replace_Type]^for  (  long  i = 0; i < coefficients.length; i++ )  {^128^^^^^119^149^for  ( int i = 0; i < coefficients.length; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P2_Replace_Operator]^Complex / initial = new Complex ( 0.5 *  ( min + max ) , 0.0 ) ;^131^^^^^119^149^Complex initial = new Complex ( 0.5 *  ( min + max ) , 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P2_Replace_Operator]^Complex initial = new Complex ( 0.5 *  ( min  |  max ) , 0.0 ) ;^131^^^^^119^149^Complex initial = new Complex ( 0.5 *  ( min + max ) , 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P3_Replace_Literal]^Complex initial = new Complex ( 0.125 *  ( min + max ) , 0.0 ) ;^131^^^^^119^149^Complex initial = new Complex ( 0.5 *  ( min + max ) , 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P4_Replace_Constructor]^Complex initial = new Complex (  (  ( double )   ( n - 1 )  ) , 0.0 )  , 0.0 ) ;^131^^^^^119^149^Complex initial = new Complex ( 0.5 *  ( min + max ) , 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^Complex initial = new Complex ( 0.5 *  ( max + min ) , 0.0 ) ;^131^^^^^119^149^Complex initial = new Complex ( 0.5 *  ( min + max ) , 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P2_Replace_Operator]^Complex initial = new Complex ( 0.5 *  ( min  ^  max ) , 0.0 ) ;^131^^^^^119^149^Complex initial = new Complex ( 0.5 *  ( min + max ) , 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P3_Replace_Literal]^Complex initial = new Complex ( 3.5 *  ( min + max ) , 0.0 ) ;^131^^^^^119^149^Complex initial = new Complex ( 0.5 *  ( min + max ) , 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^Complex initial = new Complex ( 0.5 *  ( max + max ) , 0.0 ) ;^131^^^^^119^149^Complex initial = new Complex ( 0.5 *  ( min + max ) , 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^Complex initial = new Complex ( 0.5 *  ( min + min ) , 0.0 ) ;^131^^^^^119^149^Complex initial = new Complex ( 0.5 *  ( min + max ) , 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P11_Insert_Donor_Statement]^Complex N = new Complex (  ( double ) n, 0.0 ) ;Complex initial = new Complex ( 0.5 *  ( min + max ) , 0.0 ) ;^131^^^^^119^149^Complex initial = new Complex ( 0.5 *  ( min + max ) , 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P11_Insert_Donor_Statement]^Complex N1 = new Complex (  ( double )  ( n-1 ) , 0.0 ) ;Complex initial = new Complex ( 0.5 *  ( min + max ) , 0.0 ) ;^131^^^^^119^149^Complex initial = new Complex ( 0.5 *  ( min + max ) , 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P11_Insert_Donor_Statement]^Complex z = new Complex ( initial, 0.0 ) ;Complex initial = new Complex ( 0.5 *  ( min + max ) , 0.0 ) ;^131^^^^^119^149^Complex initial = new Complex ( 0.5 *  ( min + max ) , 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^Complex z = solve (  initial ) ;^132^^^^^119^149^Complex z = solve ( c, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^Complex z = solve ( c ) ;^132^^^^^119^149^Complex z = solve ( c, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^Complex z = solve ( initial, c ) ;^132^^^^^119^149^Complex z = solve ( c, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P7_Replace_Invocation]^Complex z = solveAll ( c, initial ) ;^132^^^^^119^149^Complex z = solve ( c, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P8_Replace_Mix]^Complex z = solve ( root, initial ) ;^132^^^^^119^149^Complex z = solve ( c, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P11_Insert_Donor_Statement]^Complex z = initial;Complex z = solve ( c, initial ) ;^132^^^^^119^149^Complex z = solve ( c, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P11_Insert_Donor_Statement]^Complex[] root = solveAll ( c, initial ) ;Complex z = solve ( c, initial ) ;^132^^^^^119^149^Complex z = solve ( c, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P11_Insert_Donor_Statement]^Complex z = new Complex ( initial, 0.0 ) ;Complex z = solve ( c, initial ) ;^132^^^^^119^149^Complex z = solve ( c, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^Complex z = solve ( c, z ) ;^132^^^^^119^149^Complex z = solve ( c, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P8_Replace_Mix]^Complex z = solveAll ( root, initial ) ;^132^^^^^119^149^Complex z = solve ( c, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P14_Delete_Statement]^^132^^^^^119^149^Complex z = solve ( c, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P11_Insert_Donor_Statement]^return solve ( min, initial ) ;Complex z = solve ( c, initial ) ;^132^^^^^119^149^Complex z = solve ( c, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P11_Insert_Donor_Statement]^root[i] = solve ( subarray, initial ) ;Complex z = solve ( c, initial ) ;^132^^^^^119^149^Complex z = solve ( c, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^if  ( isRootOK ( min, max, initial )  )  {^133^^^^^119^149^if  ( isRootOK ( min, max, z )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^if  ( isRootOK (  max, z )  )  {^133^^^^^119^149^if  ( isRootOK ( min, max, z )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^if  ( isRootOK ( min,  z )  )  {^133^^^^^119^149^if  ( isRootOK ( min, max, z )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^if  ( isRootOK ( min, max )  )  {^133^^^^^119^149^if  ( isRootOK ( min, max, z )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^if  ( isRootOK ( max, min, z )  )  {^133^^^^^119^149^if  ( isRootOK ( min, max, z )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P7_Replace_Invocation]^if  ( solve ( min, max, z )  )  {^133^^^^^119^149^if  ( isRootOK ( min, max, z )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P8_Replace_Mix]^if  ( solve ( min, max, initial )  )  {^133^^^^^119^149^if  ( isRootOK ( min, max, z )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P9_Replace_Statement]^if  ( isBracketing ( min, initial, p )  )  {^133^^^^^119^149^if  ( isRootOK ( min, max, z )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P9_Replace_Statement]^if  ( isRootOK ( min, max, root[i] )  )  {^133^^^^^119^149^if  ( isRootOK ( min, max, z )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P15_Unwrap_Block]^setResult(z.getReal(), iterationCount); return result;^133^134^135^136^^119^149^if  ( isRootOK ( min, max, z )  )  { setResult ( z.getReal (  ) , iterationCount ) ; return result; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P16_Remove_Block]^^133^134^135^136^^119^149^if  ( isRootOK ( min, max, z )  )  { setResult ( z.getReal (  ) , iterationCount ) ; return result; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P13_Insert_Block]^if  ( isRootOK ( min, max, root[i] )  )  {     setResult ( root[i].getReal (  ) , iterationCount ) ;     return result; }^133^^^^^119^149^[Delete]^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P8_Replace_Mix]^return null;^135^^^^^119^149^return result;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^setResult ( initial.getReal (  ) , iterationCount ) ;^134^^^^^119^149^setResult ( z.getReal (  ) , iterationCount ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^setResult ( z.getReal (  )  ) ;^134^^^^^119^149^setResult ( z.getReal (  ) , iterationCount ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^setResult ( iterationCount.getReal (  ) , z ) ;^134^^^^^119^149^setResult ( z.getReal (  ) , iterationCount ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P7_Replace_Invocation]^subtract ( z.getReal (  ) , iterationCount ) ;^134^^^^^119^149^setResult ( z.getReal (  ) , iterationCount ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P7_Replace_Invocation]^setResult ( z.add (  ) , iterationCount ) ;^134^^^^^119^149^setResult ( z.getReal (  ) , iterationCount ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P7_Replace_Invocation]^setResult ( z .getImaginary (  )  , iterationCount ) ;^134^^^^^119^149^setResult ( z.getReal (  ) , iterationCount ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P14_Delete_Statement]^^134^^^^^119^149^setResult ( z.getReal (  ) , iterationCount ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P14_Delete_Statement]^^134^135^^^^119^149^setResult ( z.getReal (  ) , iterationCount ) ; return result;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^if  ( isRootOK ( min, min, z )  )  {^133^^^^^119^149^if  ( isRootOK ( min, max, z )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^if  ( isRootOK ( z, max, min )  )  {^133^^^^^119^149^if  ( isRootOK ( min, max, z )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P8_Replace_Mix]^if  ( isRootOK ( max, max, z )  )  {^133^^^^^119^149^if  ( isRootOK ( min, max, z )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P8_Replace_Mix]^setResult ( initial.add (  ) , iterationCount ) ;^134^^^^^119^149^setResult ( z.getReal (  ) , iterationCount ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^Complex[] root = solveAll ( c, z ) ;^139^^^^^119^149^Complex[] root = solveAll ( c, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^Complex[] root = solveAll (  initial ) ;^139^^^^^119^149^Complex[] root = solveAll ( c, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^Complex[] root = solveAll ( c ) ;^139^^^^^119^149^Complex[] root = solveAll ( c, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^Complex[] root = solveAll ( initial, c ) ;^139^^^^^119^149^Complex[] root = solveAll ( c, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P7_Replace_Invocation]^Complex[] root = solve ( c, initial ) ;^139^^^^^119^149^Complex[] root = solveAll ( c, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P11_Insert_Donor_Statement]^Complex z = solve ( c, initial ) ;Complex[] root = solveAll ( c, initial ) ;^139^^^^^119^149^Complex[] root = solveAll ( c, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^Complex[] root = solveAll ( root, initial ) ;^139^^^^^119^149^Complex[] root = solveAll ( c, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P14_Delete_Statement]^^139^^^^^119^149^Complex[] root = solveAll ( c, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P11_Insert_Donor_Statement]^return solve ( min, initial ) ;Complex[] root = solveAll ( c, initial ) ;^139^^^^^119^149^Complex[] root = solveAll ( c, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^if  ( isRootOK ( max, max, root[i] )  )  {^141^^^^^119^149^if  ( isRootOK ( min, max, root[i] )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^if  ( isRootOK ( min, max, c[i] )  )  {^141^^^^^119^149^if  ( isRootOK ( min, max, root[i] )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^if  ( isRootOK (  max, root[i] )  )  {^141^^^^^119^149^if  ( isRootOK ( min, max, root[i] )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^if  ( isRootOK ( min,  root[i] )  )  {^141^^^^^119^149^if  ( isRootOK ( min, max, root[i] )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^if  ( isRootOK ( min, max[i] )  )  {^141^^^^^119^149^if  ( isRootOK ( min, max, root[i] )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^if  ( maxsRootOK ( min, i, root[i] )  )  {^141^^^^^119^149^if  ( isRootOK ( min, max, root[i] )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P8_Replace_Mix]^if  ( isRootOK ( min, min, root[i] )  )  {^141^^^^^119^149^if  ( isRootOK ( min, max, root[i] )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P9_Replace_Statement]^if  ( isRootOK ( min, max, z )  )  {^141^^^^^119^149^if  ( isRootOK ( min, max, root[i] )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P15_Unwrap_Block]^setResult(root[i].getReal(), iterationCount); return result;^141^142^143^144^^119^149^if  ( isRootOK ( min, max, root[i] )  )  { setResult ( root[i].getReal (  ) , iterationCount ) ; return result; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P16_Remove_Block]^^141^142^143^144^^119^149^if  ( isRootOK ( min, max, root[i] )  )  { setResult ( root[i].getReal (  ) , iterationCount ) ; return result; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P13_Insert_Block]^if  ( isRootOK ( min, max, z )  )  {     setResult ( z.getReal (  ) , iterationCount ) ;     return result; }^141^^^^^119^149^[Delete]^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^setResult ( c[i].getReal (  ) , iterationCount ) ;^142^^^^^119^149^setResult ( root[i].getReal (  ) , iterationCount ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^setResult ( root[i].getReal (  ) terationCount ) ;^142^^^^^119^149^setResult ( root[i].getReal (  ) , iterationCount ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^setResult ( root[i].getReal (  )  ) ;^142^^^^^119^149^setResult ( root[i].getReal (  ) , iterationCount ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^setResult ( iterationCount[i].getReal (  ) , root ) ;^142^^^^^119^149^setResult ( root[i].getReal (  ) , iterationCount ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^setResult ( i[i].getReal (  ) , rootterationCount ) ;^142^^^^^119^149^setResult ( root[i].getReal (  ) , iterationCount ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P7_Replace_Invocation]^setResult ( root[i].setResult (  ) , iterationCount ) ;^142^^^^^119^149^setResult ( root[i].getReal (  ) , iterationCount ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P8_Replace_Mix]^setResult ( root[i] .getImaginary (  )  , iterationCount ) ;^142^^^^^119^149^setResult ( root[i].getReal (  ) , iterationCount ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P14_Delete_Statement]^^142^143^^^^119^149^setResult ( root[i].getReal (  ) , iterationCount ) ; return result;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P14_Delete_Statement]^^142^^^^^119^149^setResult ( root[i].getReal (  ) , iterationCount ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P1_Replace_Type]^for  (  long  i = 0; i < root.length; i++ )  {^140^^^^^119^149^for  ( int i = 0; i < root.length; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P2_Replace_Operator]^for  ( int i = 0; i > root.length; i++ )  {^140^^^^^119^149^for  ( int i = 0; i < root.length; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P3_Replace_Literal]^for  ( int i = 5; i < root.length; i++ )  {^140^^^^^119^149^for  ( int i = 0; i < root.length; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^if  ( isRootOK ( root, max, min[i] )  )  {^141^^^^^119^149^if  ( isRootOK ( min, max, root[i] )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^if  ( minsRootOK ( i, max, root[i] )  )  {^141^^^^^119^149^if  ( isRootOK ( min, max, root[i] )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^setResult ( root[i].getReal (  ) , 3 ) ;^142^^^^^119^149^setResult ( root[i].getReal (  ) , iterationCount ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^setResult ( root[i].getReal (  ) , iterationCountterationCount ) ;^142^^^^^119^149^setResult ( root[i].getReal (  ) , iterationCount ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^setResult ( root[i].getReal (  ) , i ) ;^142^^^^^119^149^setResult ( root[i].getReal (  ) , iterationCount ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P8_Replace_Mix]^return this;^143^^^^^119^149^return result;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^if  ( isRootOK ( min, root, max[i] )  )  {^141^^^^^119^149^if  ( isRootOK ( min, max, root[i] )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P3_Replace_Literal]^for  ( int i = 9; i < root.length; i++ )  {^140^^^^^119^149^for  ( int i = 0; i < root.length; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P5_Replace_Variable]^if  ( isRootOK ( max, min, root[i] )  )  {^141^^^^^119^149^if  ( isRootOK ( min, max, root[i] )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new ConvergenceException  (" ")  ;^148^^^^^119^149^throw new ConvergenceException  (" ")  ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] double   double min double max [VARIABLES] Complex[]  c  root  boolean  double[]  coefficients  double  max  min  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  initial  z  
[P1_Replace_Type]^int tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^161^^^^^160^165^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P2_Replace_Operator]^double tolerance = Math.max ( relativeAccuracy / z.abs (  ) , absoluteAccuracy ) ;^161^^^^^160^165^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P5_Replace_Variable]^double tolerance = Math.max ( relativeAccuracy * z.abs (  )  ) ;^161^^^^^160^165^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P5_Replace_Variable]^double tolerance = Math.max ( relativeAccuracy * absoluteAccuracy.abs (  ) , z ) ;^161^^^^^160^165^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P5_Replace_Variable]^double tolerance = Math.max ( absoluteAccuracy * z.abs (  ) , relativeAccuracy ) ;^161^^^^^160^165^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P7_Replace_Invocation]^double tolerance = Math.abs ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^161^^^^^160^165^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P7_Replace_Invocation]^double tolerance = Math.max ( relativeAccuracy * z.add (  ) , absoluteAccuracy ) ;^161^^^^^160^165^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P2_Replace_Operator]^double tolerance = Math.max ( relativeAccuracy - z.abs (  ) , absoluteAccuracy ) ;^161^^^^^160^165^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P14_Delete_Statement]^^161^^^^^160^165^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P2_Replace_Operator]^return  ( isSequence ( min, z.getReal (  ) , max )  )  || ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P2_Replace_Operator]^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance && z.abs (  )  <= functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P2_Replace_Operator]^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  < tolerance || z.abs (  )  <= functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P2_Replace_Operator]^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  < functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P5_Replace_Variable]^return  ( isSequence ( min, z.getReal (  ) , min )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P5_Replace_Variable]^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= max || z.abs (  )  <= functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P5_Replace_Variable]^return  ( isSequence (  z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P5_Replace_Variable]^return  ( isSequence ( min.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P5_Replace_Variable]^return  ( isSequence ( min, z.getReal (  )  )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P5_Replace_Variable]^return  ( isSequence ( tolerance, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= min || z.abs (  )  <= functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P5_Replace_Variable]^return  ( isSequence ( z, min.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P5_Replace_Variable]^return  ( isSequence ( min, z.getReal (  ) , tolerance )  )  && ( Math.abs ( z.getImaginary (  )  )  <= max || z.abs (  )  <= functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P5_Replace_Variable]^return  ( isSequence ( min, z.getReal (  ) , functionValueAccuracy )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= max ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P7_Replace_Invocation]^return  ( verifySequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P7_Replace_Invocation]^return  ( isSequence ( min, z.add (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P7_Replace_Invocation]^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math .add (  )   <= tolerance || z^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P7_Replace_Invocation]^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.add (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P7_Replace_Invocation]^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.add ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P8_Replace_Mix]^return  ( isSequence ( min, z.add (  ) , max )  )  ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P5_Replace_Variable]^return  ( isSequence ( tolerance, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P5_Replace_Variable]^return  ( isSequence ( min, z.getReal (  ) , tolerance )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P5_Replace_Variable]^return  ( isSequence ( max, z.getReal (  ) , min )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P5_Replace_Variable]^return  ( isSequence ( min, max.getReal (  ) , z )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P14_Delete_Statement]^^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P7_Replace_Invocation]^return  ( isSequence ( min, z .getImaginary (  )  , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^162^163^164^^^160^165^return  ( isSequence ( min, z.getReal (  ) , max )  )  && ( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P7_Replace_Invocation]^( Math.abs ( z.add (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^163^164^^^^160^165^( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P8_Replace_Mix]^( Math.abs ( z .getReal (  )   )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^163^164^^^^160^165^( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P14_Delete_Statement]^^163^164^^^^160^165^( Math.abs ( z.getImaginary (  )  )  <= tolerance || z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P7_Replace_Invocation]^z.add (  )  <= functionValueAccuracy ) ;^164^^^^^160^165^z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P14_Delete_Statement]^^164^^^^^160^165^z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P12_Insert_Condition]^if  ( pv.abs (  )  <= functionValueAccuracy )  { z.abs (  )  <= functionValueAccuracy ) ; }^164^^^^^160^165^z.abs (  )  <= functionValueAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] isRootOK [RETURN_TYPE] boolean   double min double max Complex z [VARIABLES] PolynomialFunction  p  boolean  long  serialVersionUID  double  max  min  tolerance  Complex  z  
[P11_Insert_Donor_Statement]^Complex root[] = new Complex[n];Complex c[] = new Complex[coefficients.length];^183^^^^^180^189^Complex c[] = new Complex[coefficients.length];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   double[] coefficients double initial [VARIABLES] Complex[]  c  boolean  double[]  coefficients  double  initial  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  z  
[P11_Insert_Donor_Statement]^Complex z = new Complex ( initial, 0.0 ) ;Complex c[] = new Complex[coefficients.length];^183^^^^^180^189^Complex c[] = new Complex[coefficients.length];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   double[] coefficients double initial [VARIABLES] Complex[]  c  boolean  double[]  coefficients  double  initial  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  z  
[P11_Insert_Donor_Statement]^Complex c[] = new Complex[n+1];Complex c[] = new Complex[coefficients.length];^183^^^^^180^189^Complex c[] = new Complex[coefficients.length];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   double[] coefficients double initial [VARIABLES] Complex[]  c  boolean  double[]  coefficients  double  initial  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  z  
[P4_Replace_Constructor]^Complex z = new Complex (  ( 0.5 *  ( min + max )  ) , 0.0 )  ;^184^^^^^180^189^Complex z = new Complex ( initial, 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   double[] coefficients double initial [VARIABLES] Complex[]  c  boolean  double[]  coefficients  double  initial  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  z  
[P11_Insert_Donor_Statement]^Complex N = new Complex (  ( double ) n, 0.0 ) ;Complex z = new Complex ( initial, 0.0 ) ;^184^^^^^180^189^Complex z = new Complex ( initial, 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   double[] coefficients double initial [VARIABLES] Complex[]  c  boolean  double[]  coefficients  double  initial  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  z  
[P11_Insert_Donor_Statement]^Complex N1 = new Complex (  ( double )  ( n-1 ) , 0.0 ) ;Complex z = new Complex ( initial, 0.0 ) ;^184^^^^^180^189^Complex z = new Complex ( initial, 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   double[] coefficients double initial [VARIABLES] Complex[]  c  boolean  double[]  coefficients  double  initial  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  z  
[P11_Insert_Donor_Statement]^Complex z = solve ( c, initial ) ;Complex z = new Complex ( initial, 0.0 ) ;^184^^^^^180^189^Complex z = new Complex ( initial, 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   double[] coefficients double initial [VARIABLES] Complex[]  c  boolean  double[]  coefficients  double  initial  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  z  
[P11_Insert_Donor_Statement]^Complex initial = new Complex ( 0.5 *  ( min + max ) , 0.0 ) ;Complex z = new Complex ( initial, 0.0 ) ;^184^^^^^180^189^Complex z = new Complex ( initial, 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   double[] coefficients double initial [VARIABLES] Complex[]  c  boolean  double[]  coefficients  double  initial  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  z  
[P11_Insert_Donor_Statement]^Complex c[] = new Complex[coefficients.length];Complex z = new Complex ( initial, 0.0 ) ;^184^^^^^180^189^Complex z = new Complex ( initial, 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   double[] coefficients double initial [VARIABLES] Complex[]  c  boolean  double[]  coefficients  double  initial  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  z  
[P11_Insert_Donor_Statement]^Complex c[] = new Complex[n+1];Complex z = new Complex ( initial, 0.0 ) ;^184^^^^^180^189^Complex z = new Complex ( initial, 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   double[] coefficients double initial [VARIABLES] Complex[]  c  boolean  double[]  coefficients  double  initial  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  z  
[P1_Replace_Type]^for  (  long  i = 0; i < c.length; i++ )  {^185^^^^^180^189^for  ( int i = 0; i < c.length; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   double[] coefficients double initial [VARIABLES] Complex[]  c  boolean  double[]  coefficients  double  initial  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  z  
[P2_Replace_Operator]^for  ( int i = 0; i <= c.length; i++ )  {^185^^^^^180^189^for  ( int i = 0; i < c.length; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   double[] coefficients double initial [VARIABLES] Complex[]  c  boolean  double[]  coefficients  double  initial  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  z  
[P3_Replace_Literal]^for  ( int i = i; i < c.length; i++ )  {^185^^^^^180^189^for  ( int i = 0; i < c.length; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   double[] coefficients double initial [VARIABLES] Complex[]  c  boolean  double[]  coefficients  double  initial  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  z  
[P4_Replace_Constructor]^c[i] = c[i] =  new Complex (  ( 0.5 *  ( min + max )  ) , 0.0 )  ;^186^^^^^180^189^c[i] = new Complex ( coefficients[i], 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   double[] coefficients double initial [VARIABLES] Complex[]  c  boolean  double[]  coefficients  double  initial  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  z  
[P5_Replace_Variable]^c[i] = new Complex ( coefficientsoefficients[i], 0.0 ) ;^186^^^^^180^189^c[i] = new Complex ( coefficients[i], 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   double[] coefficients double initial [VARIABLES] Complex[]  c  boolean  double[]  coefficients  double  initial  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  z  
[P5_Replace_Variable]^c[i] = new Complex ( c[i], 0.0 ) ;^186^^^^^180^189^c[i] = new Complex ( coefficients[i], 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   double[] coefficients double initial [VARIABLES] Complex[]  c  boolean  double[]  coefficients  double  initial  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  z  
[P8_Replace_Mix]^c[i] = new Complex ( coefficients[i], 4.0d ) ;^186^^^^^180^189^c[i] = new Complex ( coefficients[i], 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   double[] coefficients double initial [VARIABLES] Complex[]  c  boolean  double[]  coefficients  double  initial  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  z  
[P11_Insert_Donor_Statement]^c[i] = coefficients[i];c[i] = new Complex ( coefficients[i], 0.0 ) ;^186^^^^^180^189^c[i] = new Complex ( coefficients[i], 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   double[] coefficients double initial [VARIABLES] Complex[]  c  boolean  double[]  coefficients  double  initial  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  z  
[P8_Replace_Mix]^c[i] = new Complex ( coefficients[i], 0.0D ) ;^186^^^^^180^189^c[i] = new Complex ( coefficients[i], 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   double[] coefficients double initial [VARIABLES] Complex[]  c  boolean  double[]  coefficients  double  initial  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  z  
[P5_Replace_Variable]^return solveAll (  z ) ;^188^^^^^180^189^return solveAll ( c, z ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   double[] coefficients double initial [VARIABLES] Complex[]  c  boolean  double[]  coefficients  double  initial  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  z  
[P5_Replace_Variable]^return solveAll ( c ) ;^188^^^^^180^189^return solveAll ( c, z ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   double[] coefficients double initial [VARIABLES] Complex[]  c  boolean  double[]  coefficients  double  initial  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  z  
[P5_Replace_Variable]^return solveAll ( z, c ) ;^188^^^^^180^189^return solveAll ( c, z ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   double[] coefficients double initial [VARIABLES] Complex[]  c  boolean  double[]  coefficients  double  initial  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  z  
[P7_Replace_Invocation]^return solve ( c, z ) ;^188^^^^^180^189^return solveAll ( c, z ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   double[] coefficients double initial [VARIABLES] Complex[]  c  boolean  double[]  coefficients  double  initial  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  z  
[P14_Delete_Statement]^^188^^^^^180^189^return solveAll ( c, z ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   double[] coefficients double initial [VARIABLES] Complex[]  c  boolean  double[]  coefficients  double  initial  PolynomialFunction  p  long  serialVersionUID  int  i  Complex  z  
[P1_Replace_Type]^short  n = coefficients.length - 1;^207^^^^^192^222^int n = coefficients.length - 1;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P2_Replace_Operator]^int n = coefficients.length  ^  1;^207^^^^^192^222^int n = coefficients.length - 1;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P3_Replace_Literal]^int n = coefficients.length ;^207^^^^^192^222^int n = coefficients.length - 1;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P1_Replace_Type]^short  iterationCount = 0;^208^^^^^193^223^int iterationCount = 0;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P3_Replace_Literal]^int iterationCount = n;^208^^^^^193^223^int iterationCount = 0;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P2_Replace_Operator]^if  ( n <= 1 )  {^209^^^^^194^224^if  ( n < 1 )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P3_Replace_Literal]^if  ( n < -5 )  {^209^^^^^194^224^if  ( n < 1 )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^if  ( j < 1 )  {^209^^^^^194^224^if  ( n < 1 )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P6_Replace_Expression]^if  ( "Polynomial degree must be positive: degree=" + n )  {^209^^^^^194^224^if  ( n < 1 )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P8_Replace_Mix]^if  ( j < 4 )  {^209^^^^^194^224^if  ( n < 1 )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("Polynomial degree must be positive: degree=" + n));^209^210^211^212^^194^224^if  ( n < 1 )  { throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ; }^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P16_Remove_Block]^^209^210^211^212^^194^224^if  ( n < 1 )  { throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ; }^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree="   instanceof   n ) ;^210^211^^^^195^225^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P3_Replace_Literal]^throw new IllegalArgumentException ( ": deg" + n ) ;^210^211^^^^195^225^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^throw jew IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^210^211^^^^195^225^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P13_Insert_Block]^if  ( n < 1 )  {     throw new IllegalArgumentException (  ( "Polynomial degree must be positive: degree=" + n )  ) ; }^210^^^^^195^225^[Delete]^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree="  >>  n ) ;^210^211^^^^195^225^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "positive: d" + n ) ;^210^211^^^^195^225^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree="  ==  n ) ;^210^211^^^^195^225^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=ee must be po" + n ) ;^210^211^^^^195^225^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "e positiveolynomial degree must be positive: degree=" + n ) ;^210^211^^^^195^225^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P3_Replace_Literal]^Complex c[] = new Complex[n+i];^213^^^^^198^228^Complex c[] = new Complex[n+1];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^Complex c[] = jew Complex[n+1];^213^^^^^198^228^Complex c[] = new Complex[n+1];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^Complex subarray[] = new Complex[n-i+1];Complex c[] = new Complex[n+1];^213^^^^^198^228^Complex c[] = new Complex[n+1];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^Complex root[] = new Complex[n];Complex c[] = new Complex[n+1];^213^^^^^198^228^Complex c[] = new Complex[n+1];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^Complex z = new Complex ( initial, 0.0 ) ;Complex c[] = new Complex[n+1];^213^^^^^198^228^Complex c[] = new Complex[n+1];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^Complex c[] = new Complex[coefficients.length];Complex c[] = new Complex[n+1];^213^^^^^198^228^Complex c[] = new Complex[n+1];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^Complex newc = c[n-i];Complex c[] = new Complex[n+1];^213^^^^^198^228^Complex c[] = new Complex[n+1];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P1_Replace_Type]^for  (  short  i = 0; i <= n; i++ )  {^214^^^^^199^229^for  ( int i = 0; i <= n; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P2_Replace_Operator]^for  ( int i = 0; i == n; i++ )  {^214^^^^^199^229^for  ( int i = 0; i <= n; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P3_Replace_Literal]^for  ( int i = n; i <= n; i++ )  {^214^^^^^199^229^for  ( int i = 0; i <= n; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^for  ( nnt i = 0; i <= n; i++ )  {^214^^^^^199^229^for  ( int i = 0; i <= n; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^for  ( int i = 0; i <= j; i++ )  {^214^^^^^199^229^for  ( int i = 0; i <= n; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^for  ( nnt i = 0; i <= i; i++ )  {^214^^^^^199^229^for  ( int i = 0; i <= n; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^c[i] = subarrayoefficients[i];^215^^^^^200^230^c[i] = coefficients[i];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^c[i] = subarray[i];^215^^^^^200^230^c[i] = coefficients[i];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^c[i] = coefficientsoefficients[i];^215^^^^^200^230^c[i] = coefficients[i];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^c[i] = c[i];^215^^^^^200^230^c[i] = coefficients[i];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^c[i] = new Complex ( coefficients[i], 0.0 ) ;c[i] = coefficients[i];^215^^^^^200^230^c[i] = coefficients[i];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^pv = coefficients[n];c[i] = coefficients[i];^215^^^^^200^230^c[i] = coefficients[i];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P3_Replace_Literal]^for  ( int i = iterationCount; i <= n; i++ )  {^214^^^^^199^229^for  ( int i = 0; i <= n; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P8_Replace_Mix]^Complex root[] = jew Complex[n];^219^^^^^204^234^Complex root[] = new Complex[n];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^Complex subarray[] = new Complex[n-i+1];Complex root[] = new Complex[n];^219^^^^^204^234^Complex root[] = new Complex[n];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^Complex c[] = new Complex[coefficients.length];Complex root[] = new Complex[n];^219^^^^^204^234^Complex root[] = new Complex[n];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^Complex c[] = new Complex[n+1];Complex root[] = new Complex[n];^219^^^^^204^234^Complex root[] = new Complex[n];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P1_Replace_Type]^for  (  short  i = 0; i < n; i++ )  {^220^^^^^205^235^for  ( int i = 0; i < n; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P2_Replace_Operator]^for  ( int i = 0; i <= n; i++ )  {^220^^^^^205^235^for  ( int i = 0; i < n; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P2_Replace_Operator]^for  <<  ( int i = 0; i < n; i++ )  {^220^^^^^205^235^for  ( int i = 0; i < n; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P3_Replace_Literal]^for  ( int i = n; i < n; i++ )  {^220^^^^^205^235^for  ( int i = 0; i < n; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P3_Replace_Literal]^for  ( int i = j; i < n; i++ )  {^220^^^^^205^235^for  ( int i = 0; i < n; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P3_Replace_Literal]^for  ( int i = i; i < n; i++ )  {^220^^^^^205^235^for  ( int i = 0; i < n; i++ )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P1_Replace_Type]^for  (  short  j = n-i-1; j >= 0; j-- )  {^227^^^^^212^242^for  ( int j = n-i-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P2_Replace_Operator]^for  ( int j = n-i-1; j > 0; j-- )  {^227^^^^^212^242^for  ( int j = n-i-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P3_Replace_Literal]^for  ( int j = n-i--7; j >= 0; j-- )  {^227^^^^^212^242^for  ( int j = n-i-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P3_Replace_Literal]^for  ( int j = n-i-1; j >= iterationCount; j-- )  {^227^^^^^212^242^for  ( int j = n-i-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^for  ( int j = iterationCount-i-1; j >= 0; j-- )  {^227^^^^^212^242^for  ( int j = n-i-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^for  ( nnt j = n-i-1; j >= 0; j-- )  {^227^^^^^212^242^for  ( int j = n-i-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^for  ( int n = n-i-1; j >= 0; j-- )  {^227^^^^^212^242^for  ( int j = n-i-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^for  ( jnt i = n-i-1; j >= 0; j-- )  {^227^^^^^212^242^for  ( int j = n-i-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^oldc = subarray[j];^228^^^^^213^243^oldc = c[j];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^oldz = z;oldc = c[j];^228^^^^^213^243^oldc = c[j];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^c[j] = oldc;^229^^^^^214^244^c[j] = newc;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P8_Replace_Mix]^c[j]  =  c[j] ;^229^^^^^214^244^c[j] = newc;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^newc = initial.add ( newc.multiply ( root[i] )  ) ;^230^^^^^215^245^newc = oldc.add ( newc.multiply ( root[i] )  ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^newc = oldc.add ( oldc.multiply ( root[i] )  ) ;^230^^^^^215^245^newc = oldc.add ( newc.multiply ( root[i] )  ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^newc = oldc.add ( newc.multiply ( subarray[i] )  ) ;^230^^^^^215^245^newc = oldc.add ( newc.multiply ( root[i] )  ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^newc = newc.add ( oldc.multiply ( root[i] )  ) ;^230^^^^^215^245^newc = oldc.add ( newc.multiply ( root[i] )  ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^newc = root.add ( newc.multiply ( oldc[i] )  ) ;^230^^^^^215^245^newc = oldc.add ( newc.multiply ( root[i] )  ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^dv = pv.add ( z.multiply ( dv )  ) ;newc = oldc.add ( newc.multiply ( root[i] )  ) ;^230^^^^^215^245^newc = oldc.add ( newc.multiply ( root[i] )  ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^d2v = dv.add ( z.multiply ( d2v )  ) ;newc = oldc.add ( newc.multiply ( root[i] )  ) ;^230^^^^^215^245^newc = oldc.add ( newc.multiply ( root[i] )  ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^newc = newc.add ( newc.multiply ( root[i] )  ) ;^230^^^^^215^245^newc = oldc.add ( newc.multiply ( root[i] )  ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^newc = oldc.add ( initial.multiply ( root[i] )  ) ;^230^^^^^215^245^newc = oldc.add ( newc.multiply ( root[i] )  ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P7_Replace_Invocation]^newc = oldc .add (  )  ;^230^^^^^215^245^newc = oldc.add ( newc.multiply ( root[i] )  ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P7_Replace_Invocation]^newc = oldc.add ( newc .multiply (  )   ) ;^230^^^^^215^245^newc = oldc.add ( newc.multiply ( root[i] )  ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P14_Delete_Statement]^^230^^^^^215^245^newc = oldc.add ( newc.multiply ( root[i] )  ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^newc = oldc.add ( root.multiply ( newc[i] )  ) ;^230^^^^^215^245^newc = oldc.add ( newc.multiply ( root[i] )  ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^root[i] = solve ( subarray, nnitial ) ;^223^^^^^208^238^root[i] = solve ( subarray, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^root[i] = solve ( root, initial ) ;^223^^^^^208^238^root[i] = solve ( subarray, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^root[i] = solve ( subarray, oldc ) ;^223^^^^^208^238^root[i] = solve ( subarray, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^root[i] = solve ( subarraynitial ) ;^223^^^^^208^238^root[i] = solve ( subarray, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^root[i] = solve (  initial ) ;^223^^^^^208^238^root[i] = solve ( subarray, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^root[i] = solve ( subarray ) ;^223^^^^^208^238^root[i] = solve ( subarray, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^root[i] = solve ( i, subarraynitial ) ;^223^^^^^208^238^root[i] = solve ( subarray, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^root[i] = solve ( subarray, i ) ;^223^^^^^208^238^root[i] = solve ( subarray, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P7_Replace_Invocation]^root[i] = solveAll ( subarray, initial ) ;^223^^^^^208^238^root[i] = solve ( subarray, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P8_Replace_Mix]^root[i]  = null ;^223^^^^^208^238^root[i] = solve ( subarray, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P8_Replace_Mix]^c[j] ;^229^^^^^214^244^c[j] = newc;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P8_Replace_Mix]^newc =  null.add ( newc.multiply ( root[i] )  ) ;^230^^^^^215^245^newc = oldc.add ( newc.multiply ( root[i] )  ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P8_Replace_Mix]^iterationCount +;^232^^^^^217^247^iterationCount += this.iterationCount;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^this.iterationCount = iterationCount;iterationCount += this.iterationCount;^232^^^^^217^247^iterationCount += this.iterationCount;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P3_Replace_Literal]^Complex subarray[] = new Complex[n-i+n];^221^^^^^206^236^Complex subarray[] = new Complex[n-i+1];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^Complex subarray[] = jew Complex[n-i+1];^221^^^^^206^236^Complex subarray[] = new Complex[n-i+1];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^Complex newc = subarray[n-i];^225^^^^^210^240^Complex newc = c[n-i];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^Complex jewc = c[n-i];^225^^^^^210^240^Complex newc = c[n-i];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^Complex d2v = null;Complex newc = c[n-i];^225^^^^^210^240^Complex newc = c[n-i];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^Complex H = null;Complex newc = c[n-i];^225^^^^^210^240^Complex newc = c[n-i];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^Complex z = initial;Complex newc = c[n-i];^225^^^^^210^240^Complex newc = c[n-i];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^Complex G2 = null;Complex newc = c[n-i];^225^^^^^210^240^Complex newc = c[n-i];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^Complex dv = null;Complex newc = c[n-i];^225^^^^^210^240^Complex newc = c[n-i];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^Complex delta = null;Complex newc = c[n-i];^225^^^^^210^240^Complex newc = c[n-i];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^Complex c[] = new Complex[n+1];Complex newc = c[n-i];^225^^^^^210^240^Complex newc = c[n-i];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^Complex oldc = null;Complex newc = c[n-i];^225^^^^^210^240^Complex newc = c[n-i];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^Complex pv = null;Complex newc = c[n-i];^225^^^^^210^240^Complex newc = c[n-i];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^Complex G = null;Complex newc = c[n-i];^225^^^^^210^240^Complex newc = c[n-i];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^Complex d2v = null;Complex oldc = null;^226^^^^^211^241^Complex oldc = null;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^Complex H = null;Complex oldc = null;^226^^^^^211^241^Complex oldc = null;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^Complex z = initial;Complex oldc = null;^226^^^^^211^241^Complex oldc = null;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^Complex G2 = null;Complex oldc = null;^226^^^^^211^241^Complex oldc = null;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^Complex dv = null;Complex oldc = null;^226^^^^^211^241^Complex oldc = null;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^Complex delta = null;Complex oldc = null;^226^^^^^211^241^Complex oldc = null;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^Complex denominator = null;Complex oldc = null;^226^^^^^211^241^Complex oldc = null;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^Complex pv = null;Complex oldc = null;^226^^^^^211^241^Complex oldc = null;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^Complex G = null;Complex oldc = null;^226^^^^^211^241^Complex oldc = null;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^Complex newc = c[n-i];Complex oldc = null;^226^^^^^211^241^Complex oldc = null;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P3_Replace_Literal]^for  ( int j = n-i-j; j >= 0; j-- )  {^227^^^^^212^242^for  ( int j = n-i-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^for  ( nnt j = i-i-1; j >= 0; j-- )  {^227^^^^^212^242^for  ( int j = n-i-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P3_Replace_Literal]^System.arraycopy ( c, -3, subarray, -3, subarray.length ) ;^222^^^^^207^237^System.arraycopy ( c, 0, subarray, 0, subarray.length ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P3_Replace_Literal]^System.arraycopy ( c, i, subarray, i, subarray.length ) ;^222^^^^^207^237^System.arraycopy ( c, 0, subarray, 0, subarray.length ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^System.arraycopy (  0, subarray, 0, subarray.length ) ;^222^^^^^207^237^System.arraycopy ( c, 0, subarray, 0, subarray.length ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^System.arraycopy ( c, 0,  0, subarray.length ) ;^222^^^^^207^237^System.arraycopy ( c, 0, subarray, 0, subarray.length ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^System.arraycopy ( c, 0, subarray, 0 ) ;^222^^^^^207^237^System.arraycopy ( c, 0, subarray, 0, subarray.length ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P14_Delete_Statement]^^222^^^^^207^237^System.arraycopy ( c, 0, subarray, 0, subarray.length ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^root[i] = solve ( initial, subarray ) ;^223^^^^^208^238^root[i] = solve ( subarray, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P14_Delete_Statement]^^223^^^^^208^238^root[i] = solve ( subarray, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^Complex z = solve ( c, initial ) ;root[i] = solve ( subarray, initial ) ;^223^^^^^208^238^root[i] = solve ( subarray, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^return solve ( min, initial ) ;root[i] = solve ( subarray, initial ) ;^223^^^^^208^238^root[i] = solve ( subarray, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P3_Replace_Literal]^for  ( int j = n-i--2; j >= 0; j-- )  {^227^^^^^212^242^for  ( int j = n-i-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P3_Replace_Literal]^for  ( int j = n-i-1; j >= n; j-- )  {^227^^^^^212^242^for  ( int j = n-i-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^for  ( int n = j-i-1; j >= 0; j-- )  {^227^^^^^212^242^for  ( int j = n-i-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^root[i] = solve ( subarray, initialnitial ) ;^223^^^^^208^238^root[i] = solve ( subarray, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P8_Replace_Mix]^root[i] ;^223^^^^^208^238^root[i] = solve ( subarray, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P3_Replace_Literal]^Complex subarray[] = new Complex[n-i+iterationCount];^221^^^^^206^236^Complex subarray[] = new Complex[n-i+1];^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P3_Replace_Literal]^System.arraycopy ( c, n, subarray, n, subarray.length ) ;^222^^^^^207^237^System.arraycopy ( c, 0, subarray, 0, subarray.length ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P14_Delete_Statement]^^222^223^^^^207^237^System.arraycopy ( c, 0, subarray, 0, subarray.length ) ; root[i] = solve ( subarray, initial ) ;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P3_Replace_Literal]^resultComputed = false;^235^^^^^220^250^resultComputed = true;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^this.iterationCount = n;^236^^^^^221^251^this.iterationCount = iterationCount;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^iterationCount += this.iterationCount;this.iterationCount = iterationCount;^236^^^^^221^251^this.iterationCount = iterationCount;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P11_Insert_Donor_Statement]^iterationCount = i;this.iterationCount = iterationCount;^236^^^^^221^251^this.iterationCount = iterationCount;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P5_Replace_Variable]^return subarray;^237^^^^^222^252^return root;^[CLASS] LaguerreSolver  [METHOD] solveAll [RETURN_TYPE] Complex[]   Complex[] coefficients Complex initial [VARIABLES] Complex[]  c  coefficients  root  subarray  PolynomialFunction  p  boolean  long  serialVersionUID  int  i  iterationCount  j  n  Complex  initial  newc  oldc  
[P1_Replace_Type]^short  n = coefficients.length - 1;^256^^^^^241^271^int n = coefficients.length - 1;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P2_Replace_Operator]^int n = coefficients.length   instanceof   1;^256^^^^^241^271^int n = coefficients.length - 1;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P3_Replace_Literal]^int n = coefficients.length ;^256^^^^^241^271^int n = coefficients.length - 1;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P2_Replace_Operator]^if  ( n <= 1 )  {^257^^^^^242^272^if  ( n < 1 )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P3_Replace_Literal]^if  ( n < j )  {^257^^^^^242^272^if  ( n < 1 )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^if  ( j < 1 )  {^257^^^^^242^272^if  ( n < 1 )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P6_Replace_Expression]^if  ( "Polynomial degree must be positive: degree=" + n )  {^257^^^^^242^272^if  ( n < 1 )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^if  ( n < 3 )  {^257^^^^^242^272^if  ( n < 1 )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("Polynomial degree must be positive: degree=" + n));^257^258^259^260^^242^272^if  ( n < 1 )  { throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P16_Remove_Block]^^257^258^259^260^^242^272^if  ( n < 1 )  { throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree="  <=  n ) ;^258^259^^^^243^273^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=itive: " + n ) ;^258^259^^^^243^273^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^throw jew IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^258^259^^^^243^273^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P13_Insert_Block]^if  ( n < 1 )  {     throw new IllegalArgumentException (  ( "Polynomial degree must be positive: degree=" + n )  ) ; }^258^^^^^243^273^[Delete]^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree="  &&  n ) ;^258^259^^^^243^273^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "ee must be positive: degr" + n ) ;^258^259^^^^243^273^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree="  &  n ) ;^258^259^^^^243^273^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P2_Replace_Operator]^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree="  |  n ) ;^258^259^^^^243^273^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "" + n ) ;^258^259^^^^243^273^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^258^259^^^^243^273^throw new IllegalArgumentException ( "Polynomial degree must be positive: degree=" + n ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P4_Replace_Constructor]^Complex N = new Complex (  ( 0.5 *  ( min + max )  ) , 0.0 )  n, 0.0 ) ;^261^^^^^246^276^Complex N = new Complex (  ( double ) n, 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex N1 = new Complex (  ( double )  ( n-1 ) , 0.0 ) ;Complex N = new Complex (  ( double ) n, 0.0 ) ;^261^^^^^246^276^Complex N = new Complex (  ( double ) n, 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex initial = new Complex ( 0.5 *  ( min + max ) , 0.0 ) ;Complex N = new Complex (  ( double ) n, 0.0 ) ;^261^^^^^246^276^Complex N = new Complex (  ( double ) n, 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex z = new Complex ( initial, 0.0 ) ;Complex N = new Complex (  ( double ) n, 0.0 ) ;^261^^^^^246^276^Complex N = new Complex (  ( double ) n, 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P3_Replace_Literal]^Complex N-3 = new Complex (  ( double )  ( n--3 ) , 0.0 ) ;^262^^^^^247^277^Complex N1 = new Complex (  ( double )  ( n-1 ) , 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P4_Replace_Constructor]^Complex N1 = new Complex (  ( 0.5 *  ( min + max )  ) , 0.0 )   ( n-1 ) , 0.0 ) ;^262^^^^^247^277^Complex N1 = new Complex (  ( double )  ( n-1 ) , 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^Complex N1 = jew Complex (  ( double )  ( n-1 ) , 0.0 ) ;^262^^^^^247^277^Complex N1 = new Complex (  ( double )  ( n-1 ) , 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P3_Replace_Literal]^Complex Ni = new Complex (  ( double )  ( n-i ) , 0.0 ) ;^262^^^^^247^277^Complex N1 = new Complex (  ( double )  ( n-1 ) , 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex N = new Complex (  ( double ) n, 0.0 ) ;Complex N1 = new Complex (  ( double )  ( n-1 ) , 0.0 ) ;^262^^^^^247^277^Complex N1 = new Complex (  ( double )  ( n-1 ) , 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex initial = new Complex ( 0.5 *  ( min + max ) , 0.0 ) ;Complex N1 = new Complex (  ( double )  ( n-1 ) , 0.0 ) ;^262^^^^^247^277^Complex N1 = new Complex (  ( double )  ( n-1 ) , 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex z = new Complex ( initial, 0.0 ) ;Complex N1 = new Complex (  ( double )  ( n-1 ) , 0.0 ) ;^262^^^^^247^277^Complex N1 = new Complex (  ( double )  ( n-1 ) , 0.0 ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P1_Replace_Type]^long  i = 1;^264^^^^^249^279^int i = 1;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex d2v = null;Complex pv = null;^265^^^^^250^280^Complex pv = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex H = null;Complex pv = null;^265^^^^^250^280^Complex pv = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex z = initial;Complex pv = null;^265^^^^^250^280^Complex pv = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex G2 = null;Complex pv = null;^265^^^^^250^280^Complex pv = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex dv = null;Complex pv = null;^265^^^^^250^280^Complex pv = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex delta = null;Complex pv = null;^265^^^^^250^280^Complex pv = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex oldc = null;Complex pv = null;^265^^^^^250^280^Complex pv = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex denominator = null;Complex pv = null;^265^^^^^250^280^Complex pv = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex G = null;Complex pv = null;^265^^^^^250^280^Complex pv = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex newc = c[n-i];Complex pv = null;^265^^^^^250^280^Complex pv = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex d2v = null;Complex dv = null;^266^^^^^251^281^Complex dv = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex H = null;Complex dv = null;^266^^^^^251^281^Complex dv = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex z = initial;Complex dv = null;^266^^^^^251^281^Complex dv = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex G2 = null;Complex dv = null;^266^^^^^251^281^Complex dv = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex delta = null;Complex dv = null;^266^^^^^251^281^Complex dv = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex oldc = null;Complex dv = null;^266^^^^^251^281^Complex dv = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex denominator = null;Complex dv = null;^266^^^^^251^281^Complex dv = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex pv = null;Complex dv = null;^266^^^^^251^281^Complex dv = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex G = null;Complex dv = null;^266^^^^^251^281^Complex dv = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex newc = c[n-i];Complex dv = null;^266^^^^^251^281^Complex dv = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex H = null;Complex d2v = null;^267^^^^^252^282^Complex d2v = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex z = initial;Complex d2v = null;^267^^^^^252^282^Complex d2v = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex G2 = null;Complex d2v = null;^267^^^^^252^282^Complex d2v = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex dv = null;Complex d2v = null;^267^^^^^252^282^Complex d2v = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex delta = null;Complex d2v = null;^267^^^^^252^282^Complex d2v = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex oldc = null;Complex d2v = null;^267^^^^^252^282^Complex d2v = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex denominator = null;Complex d2v = null;^267^^^^^252^282^Complex d2v = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex pv = null;Complex d2v = null;^267^^^^^252^282^Complex d2v = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex G = null;Complex d2v = null;^267^^^^^252^282^Complex d2v = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex newc = c[n-i];Complex d2v = null;^267^^^^^252^282^Complex d2v = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex d2v = null;Complex G = null;^268^^^^^253^283^Complex G = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex H = null;Complex G = null;^268^^^^^253^283^Complex G = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex z = initial;Complex G = null;^268^^^^^253^283^Complex G = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex G2 = null;Complex G = null;^268^^^^^253^283^Complex G = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex dv = null;Complex G = null;^268^^^^^253^283^Complex G = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex delta = null;Complex G = null;^268^^^^^253^283^Complex G = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex oldc = null;Complex G = null;^268^^^^^253^283^Complex G = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex denominator = null;Complex G = null;^268^^^^^253^283^Complex G = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex pv = null;Complex G = null;^268^^^^^253^283^Complex G = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex newc = c[n-i];Complex G = null;^268^^^^^253^283^Complex G = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex d2v = null;Complex G2 = null;^269^^^^^254^284^Complex G2 = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex H = null;Complex G2 = null;^269^^^^^254^284^Complex G2 = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex z = initial;Complex G2 = null;^269^^^^^254^284^Complex G2 = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex dv = null;Complex G2 = null;^269^^^^^254^284^Complex G2 = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex delta = null;Complex G2 = null;^269^^^^^254^284^Complex G2 = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex oldc = null;Complex G2 = null;^269^^^^^254^284^Complex G2 = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex denominator = null;Complex G2 = null;^269^^^^^254^284^Complex G2 = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex pv = null;Complex G2 = null;^269^^^^^254^284^Complex G2 = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex G = null;Complex G2 = null;^269^^^^^254^284^Complex G2 = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex newc = c[n-i];Complex G2 = null;^269^^^^^254^284^Complex G2 = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex d2v = null;Complex H = null;^270^^^^^255^285^Complex H = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex z = initial;Complex H = null;^270^^^^^255^285^Complex H = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex G2 = null;Complex H = null;^270^^^^^255^285^Complex H = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex dv = null;Complex H = null;^270^^^^^255^285^Complex H = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex delta = null;Complex H = null;^270^^^^^255^285^Complex H = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex oldc = null;Complex H = null;^270^^^^^255^285^Complex H = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex denominator = null;Complex H = null;^270^^^^^255^285^Complex H = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex pv = null;Complex H = null;^270^^^^^255^285^Complex H = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex G = null;Complex H = null;^270^^^^^255^285^Complex H = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex newc = c[n-i];Complex H = null;^270^^^^^255^285^Complex H = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex d2v = null;Complex delta = null;^271^^^^^256^286^Complex delta = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex H = null;Complex delta = null;^271^^^^^256^286^Complex delta = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex z = initial;Complex delta = null;^271^^^^^256^286^Complex delta = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex G2 = null;Complex delta = null;^271^^^^^256^286^Complex delta = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex dv = null;Complex delta = null;^271^^^^^256^286^Complex delta = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex oldc = null;Complex delta = null;^271^^^^^256^286^Complex delta = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex denominator = null;Complex delta = null;^271^^^^^256^286^Complex delta = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex pv = null;Complex delta = null;^271^^^^^256^286^Complex delta = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex G = null;Complex delta = null;^271^^^^^256^286^Complex delta = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex newc = c[n-i];Complex delta = null;^271^^^^^256^286^Complex delta = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex d2v = null;Complex denominator = null;^272^^^^^257^287^Complex denominator = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex H = null;Complex denominator = null;^272^^^^^257^287^Complex denominator = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex G2 = null;Complex denominator = null;^272^^^^^257^287^Complex denominator = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex dv = null;Complex denominator = null;^272^^^^^257^287^Complex denominator = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex delta = null;Complex denominator = null;^272^^^^^257^287^Complex denominator = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex oldc = null;Complex denominator = null;^272^^^^^257^287^Complex denominator = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex pv = null;Complex denominator = null;^272^^^^^257^287^Complex denominator = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex G = null;Complex denominator = null;^272^^^^^257^287^Complex denominator = null;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^Complex z = pv;^273^^^^^258^288^Complex z = initial;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex d2v = null;Complex z = initial;^273^^^^^258^288^Complex z = initial;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex H = null;Complex z = initial;^273^^^^^258^288^Complex z = initial;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex z = solve ( c, initial ) ;Complex z = initial;^273^^^^^258^288^Complex z = initial;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex G2 = null;Complex z = initial;^273^^^^^258^288^Complex z = initial;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex dv = null;Complex z = initial;^273^^^^^258^288^Complex z = initial;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex delta = null;Complex z = initial;^273^^^^^258^288^Complex z = initial;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex oldc = null;Complex z = initial;^273^^^^^258^288^Complex z = initial;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex pv = null;Complex z = initial;^273^^^^^258^288^Complex z = initial;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex G = null;Complex z = initial;^273^^^^^258^288^Complex z = initial;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex newc = c[n-i];Complex z = initial;^273^^^^^258^288^Complex z = initial;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^Complex oldz = new Complex ( Double.POSITIVE_INFINITY, Double.tolerance ) ;^274^^^^^259^289^Complex oldz = new Complex ( Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P2_Replace_Operator]^while  ( i < maximalIterationCount )  {^275^^^^^260^290^while  ( i <= maximalIterationCount )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P2_Replace_Operator]^while  ( i == maximalIterationCount )  {^275^^^^^260^290^while  ( i <= maximalIterationCount )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^while  ( n <= maximalIterationCount )  {^275^^^^^260^290^while  ( i <= maximalIterationCount )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^while  ( i <= absimalIterationCount )  {^275^^^^^260^290^while  ( i <= maximalIterationCount )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P2_Replace_Operator]^if  (  ( z.subtract ( oldz )  ) .abs (  )  < tolerance )  {^291^^^^^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^if  (  ( dplus.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^291^^^^^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^if  (  ( z.subtract ( dminus )  ) .abs (  )  <= tolerance )  {^291^^^^^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^if  (  ( oldz.subtract ( z )  ) .abs (  )  <= tolerance )  {^291^^^^^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^if  (  ( z.subtract ( oldz )  ) .setResult (  )  <= tolerance )  {^291^^^^^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^if  (  ( z.Complex ( oldz )  ) .abs (  )  <= tolerance )  {^291^^^^^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^if  (  ( z .subtract ( d2v )   ) .abs (  )  <= tolerance )  {^291^^^^^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^if  (  ( dminus.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^291^^^^^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P15_Unwrap_Block]^resultComputed = true; iterationCount = i; return z;^291^292^293^294^295^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  { resultComputed = true; iterationCount = i; return z; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P16_Remove_Block]^^291^292^293^294^295^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  { resultComputed = true; iterationCount = i; return z; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P13_Insert_Block]^if  (  ( pv.abs (  )  )  <=  ( functionValueAccuracy )  )  {     resultComputed = true;     iterationCount = i;     return z; }^291^^^^^276^306^[Delete]^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P3_Replace_Literal]^resultComputed = false;^292^^^^^277^307^resultComputed = true;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^iterationCount = n;^293^^^^^278^308^iterationCount = i;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^this.iterationCount = iterationCount;iterationCount = i;^293^^^^^278^308^iterationCount = i;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^return denominator;^294^^^^^279^309^return z;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^return pv;^294^^^^^279^309^return z;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P2_Replace_Operator]^if  ( pv.abs (  )  < functionValueAccuracy )  {^296^^^^^281^311^if  ( pv.abs (  )  <= functionValueAccuracy )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^if  ( initial.abs (  )  <= functionValueAccuracy )  {^296^^^^^281^311^if  ( pv.abs (  )  <= functionValueAccuracy )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^if  ( pv.add (  )  <= functionValueAccuracy )  {^296^^^^^281^311^if  ( pv.abs (  )  <= functionValueAccuracy )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^if  ( dminus.add (  )  <= functionValueAccuracy )  {^296^^^^^281^311^if  ( pv.abs (  )  <= functionValueAccuracy )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P15_Unwrap_Block]^resultComputed = true; iterationCount = i; return z;^296^297^298^299^300^281^311^if  ( pv.abs (  )  <= functionValueAccuracy )  { resultComputed = true; iterationCount = i; return z; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P16_Remove_Block]^^296^297^298^299^300^281^311^if  ( pv.abs (  )  <= functionValueAccuracy )  { resultComputed = true; iterationCount = i; return z; }^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P13_Insert_Block]^if  (  ( z.subtract ( oldz ) .abs (  )  )  <= tolerance )  {     resultComputed = true;     iterationCount = i;     return z; }^296^^^^^281^311^[Delete]^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P3_Replace_Literal]^resultComputed = false;^297^^^^^282^312^resultComputed = true;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^iterationCount = n;^298^^^^^283^313^iterationCount = i;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^this.iterationCount = iterationCount;iterationCount = i;^298^^^^^283^313^iterationCount = i;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^return pv;^299^^^^^284^314^return z;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^return denominator;^299^^^^^284^314^return z;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P4_Replace_Constructor]^if  ( denominator.equals ( if  ( denominator.equals (  new Complex (  ( 0.5 *  ( min + max )  ) , 0.0 )   )  )  {^313^^^^^298^328^if  ( denominator.equals ( new Complex ( 0.0, 0.0 )  )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^if  ( denominator.equals ( new Complex ( 0.0d, 0.0d )  )  )  {^313^^^^^298^328^if  ( denominator.equals ( new Complex ( 0.0, 0.0 )  )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^oldz =  null;^318^^^^^313^320^oldz = z;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^oldc = c[j];oldz = z;^318^^^^^313^320^oldz = z;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = dminus.subtract ( N.divide ( denominator )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = z.subtract ( initial.divide ( denominator )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = z.subtract ( N.divide ( initial )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = N.subtract ( z.divide ( denominator )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = denominator.subtract ( N.divide ( z )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^z = z.subtract ( N.Complex ( denominator )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^z =  initial.subtract ( N.divide ( denominator )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^H = G2.subtract ( d2v.divide ( pv )  ) ;z = z.subtract ( N.divide ( denominator )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = dv.subtract ( N.divide ( denominator )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = z.subtract ( dplus.divide ( denominator )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^z = z.subtract ( N .getImaginary (  )   ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^z = z.subtract ( N.divide ( dv )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P14_Delete_Statement]^^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = z.subtract ( pv.divide ( denominator )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = z.subtract ( denominator.divide ( N )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = dminus.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^314^^^^^299^329^z = z.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = z.add ( new Complex (  absoluteAccuracy )  ) ;^314^^^^^299^329^z = z.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = absoluteAccuracy.add ( new Complex ( z, absoluteAccuracy )  ) ;^314^^^^^299^329^z = z.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^z = z.divide ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^314^^^^^299^329^z = z.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^z = z .abs (  )  ;^314^^^^^299^329^z = z.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^oldz = new Complex ( Double.POSITIVE_INFINITY, Double.tolerance ) ;^315^316^^^^300^330^oldz = new Complex ( Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^oldz  =  oldz ;^315^316^^^^300^330^oldz = new Complex ( Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P14_Delete_Statement]^^314^^^^^299^329^z = z.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P1_Replace_Type]^for  (  short  j = n-1; j >= 0; j-- )  {^281^^^^^266^296^for  ( int j = n-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P2_Replace_Operator]^for  ( int j = n-1; j > 0; j-- )  {^281^^^^^266^296^for  ( int j = n-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P3_Replace_Literal]^for  ( int j = n-10; j >= 0; j-- )  {^281^^^^^266^296^for  ( int j = n-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P3_Replace_Literal]^for  ( int j = n-1; j >= -7; j-- )  {^281^^^^^266^296^for  ( int j = n-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^for  ( int j = i-1; j >= 0; j-- )  {^281^^^^^266^296^for  ( int j = n-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^for  ( int n = n-1; j >= 0; j-- )  {^281^^^^^266^296^for  ( int j = n-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^for  ( int n = j-1; j >= 0; j-- )  {^281^^^^^266^296^for  ( int j = n-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^d2v = initial.add ( z.multiply ( d2v )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^d2v = dv.add ( oldz.multiply ( d2v )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^d2v = dv.add ( z.multiply ( initial )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^d2v = d2v.add ( z.multiply ( dv )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^d2v = z.add ( dv.multiply ( d2v )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^d2v = dv.add ( d2v.multiply ( z )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^d2v = dv .add (  )  ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^d2v = dv.add ( z.Complex ( d2v )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^d2v =  z.add ( z.multiply ( d2v )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^pv = coefficients[j].add ( z.multiply ( pv )  ) ;d2v = dv.add ( z.multiply ( d2v )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^dv = pv.add ( z.multiply ( dv )  ) ;d2v = dv.add ( z.multiply ( d2v )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^newc = oldc.add ( newc.multiply ( root[i] )  ) ;d2v = dv.add ( z.multiply ( d2v )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^G2 = G.multiply ( G ) ;d2v = dv.add ( z.multiply ( d2v )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^dv = dminus.add ( z.multiply ( dv )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^dv = pv.add ( dv.multiply ( dv )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^dv = pv.add ( z.multiply ( dplus )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^dv = dv.add ( z.multiply ( pv )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^dv = pv.add ( dv.multiply ( z )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^dv = pv .add (  )  ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^dv = pv.add ( z.Complex ( dv )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^pv = coefficients[j].add ( z.multiply ( pv )  ) ;dv = pv.add ( z.multiply ( dv )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^d2v = dv.add ( z.multiply ( d2v )  ) ;dv = pv.add ( z.multiply ( dv )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^newc = oldc.add ( newc.multiply ( root[i] )  ) ;dv = pv.add ( z.multiply ( dv )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^G2 = G.multiply ( G ) ;dv = pv.add ( z.multiply ( dv )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^pv = coefficients[j].add ( z.multiply ( initial )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^pv = pv[j].add ( z.multiply ( coefficients )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^pv = coefficients[j].add ( pv.multiply ( z )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^pv = coefficients[j] .add (  )  ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^pv = coefficients[j].add ( z.Complex ( pv )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^pv =  null[j].add ( z.multiply ( pv )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^dv = pv.add ( z.multiply ( dv )  ) ;pv = coefficients[j].add ( z.multiply ( pv )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^d2v = dv.add ( z.multiply ( d2v )  ) ;pv = coefficients[j].add ( z.multiply ( pv )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^d2v = pv.add ( z.multiply ( d2v )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^d2v = dv.add ( dminus.multiply ( d2v )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^d2v = dv.add ( z.multiply ( pv )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^d2v = denominator.add ( z.multiply ( d2v )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P14_Delete_Statement]^^282^283^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ; dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^d2v = dv.add ( dv.multiply ( d2v )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^d2v = dv.add ( z.multiply ( dv )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^d2v = dv.add ( z .multiply (  )   ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^d2v = dv.add ( pv.multiply ( d2v )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^dv = oldz.add ( z.multiply ( dv )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^dv = pv.add ( initial.multiply ( dv )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^dv = pv.add ( z.multiply ( dminus )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^dv = z.add ( pv.multiply ( dv )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^dv = pv.add ( z .multiply (  )   ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^dv = denominator.add ( z.multiply ( dv )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P14_Delete_Statement]^^283^284^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ; pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^dv = pv.add ( pv.multiply ( dv )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^dv = pv.add ( denominator.multiply ( dv )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P14_Delete_Statement]^^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^pv = coefficients[j].add ( oldz.multiply ( pv )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^pv = z[j].add ( coefficients.multiply ( pv )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^pv = coefficients[j].add ( denominator.multiply ( pv )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P14_Delete_Statement]^^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^pv = coefficients[j].add ( dminus.multiply ( pv )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^pv = coefficients[j].add ( z .multiply (  )   ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^pv =  null[n];^278^^^^^263^293^pv = coefficients[n];^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^c[i] = coefficients[i];pv = coefficients[n];^278^^^^^263^293^pv = coefficients[n];^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^dv  =  dv ;^279^^^^^264^294^dv = Complex.ZERO;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^d2v = Complex.ZERO;dv = Complex.ZERO;^279^^^^^264^294^dv = Complex.ZERO;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^d2v  =  d2v ;^280^^^^^265^295^d2v = Complex.ZERO;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^dv = Complex.ZERO;d2v = Complex.ZERO;^280^^^^^265^295^d2v = Complex.ZERO;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^d2v = oldz.add ( z.multiply ( d2v )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^d2v = dv.add ( z.multiply ( dplus )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^dv = pv.add ( dplus.multiply ( dv )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^dv = pv.add ( z.multiply ( denominator )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^pv = coefficients[j].add ( z.multiply ( denominator )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P4_Replace_Constructor]^d2v = d2v.multiply ( d2v = d2v.multiply (  new Complex (  ( 0.5 *  ( min + max )  ) , 0.0 )   ) ;^286^^^^^271^301^d2v = d2v.multiply ( new Complex ( 2.0, 0.0 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^d2v = dplus.multiply ( new Complex ( 2.0, 0.0 )  ) ;^286^^^^^271^301^d2v = d2v.multiply ( new Complex ( 2.0, 0.0 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^d2v = d2v.multiply ( new Complex ( 0.0d, 0.0 )  ) ;^286^^^^^271^301^d2v = d2v.multiply ( new Complex ( 2.0, 0.0 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P12_Insert_Condition]^if  ( denominator.equals ( new Complex ( 0.0, 0.0 )  )  )  { d2v = d2v.multiply ( new Complex ( 2.0, 0.0 )  ) ; }^286^^^^^271^301^d2v = d2v.multiply ( new Complex ( 2.0, 0.0 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^iterationCount =  null;^298^^^^^283^313^iterationCount = i;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^G = dminus.divide ( pv ) ;^303^^^^^288^318^G = dv.divide ( pv ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^G = dv.divide ( initial ) ;^303^^^^^288^318^G = dv.divide ( pv ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^G = pv.divide ( dv ) ;^303^^^^^288^318^G = dv.divide ( pv ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^G = dv.Complex ( pv ) ;^303^^^^^288^318^G = dv.divide ( pv ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^G = dv .getImaginary (  )  ;^303^^^^^288^318^G = dv.divide ( pv ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^G =  null.divide ( pv ) ;^303^^^^^288^318^G = dv.divide ( pv ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^H = G2.subtract ( d2v.divide ( pv )  ) ;G = dv.divide ( pv ) ;^303^^^^^288^318^G = dv.divide ( pv ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^G2 = dplus.multiply ( G ) ;^304^^^^^289^319^G2 = G.multiply ( G ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^G2 = G.Complex ( G ) ;^304^^^^^289^319^G2 = G.multiply ( G ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^G2 = G .multiply (  )  ;^304^^^^^289^319^G2 = G.multiply ( G ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^G2 =  initial.multiply ( initial ) ;^304^^^^^289^319^G2 = G.multiply ( G ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^dv = pv.add ( z.multiply ( dv )  ) ;G2 = G.multiply ( G ) ;^304^^^^^289^319^G2 = G.multiply ( G ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^d2v = dv.add ( z.multiply ( d2v )  ) ;G2 = G.multiply ( G ) ;^304^^^^^289^319^G2 = G.multiply ( G ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^H = initial.subtract ( d2v.divide ( pv )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^H = G2.subtract ( dplus.divide ( pv )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^H = G2.subtract ( d2v.divide ( dminus )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^H = pv.subtract ( d2v.divide ( G2 )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^H = d2v.subtract ( G2.divide ( pv )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^H = G2.subtract ( d2v.Complex ( pv )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^H =  oldz.subtract ( d2v.divide ( pv )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^z = z.subtract ( N.divide ( denominator )  ) ;H = G2.subtract ( d2v.divide ( pv )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^G = dv.divide ( pv ) ;H = G2.subtract ( d2v.divide ( pv )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^delta = initial.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^delta = z1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( z )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^delta = N.multiply (  ( N1.multiply ( H )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^delta = H1.multiply (  ( N.multiply ( N )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^delta = N1.multiply (  ( N.multiply ( G2 )  ) .subtract ( H )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^delta = G2.multiply (  ( N.multiply ( H )  ) .subtract ( N1 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^delta = N1.multiply (  ( N.multiply ( H )  ) .verifySequence ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^delta = N1.Complex (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^delta = N1 .multiply (  )  (  ( N^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P2_Replace_Operator]^denominator = dplus.abs (  )  >= dminus.abs (  )  ? dplus : dminus;^310^^^^^295^325^denominator = dplus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^denominator = z.abs (  )  > dminus.abs (  )  ? dplus : dminus;^310^^^^^295^325^denominator = dplus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^denominator = dplus.abs (  )  > oldz.abs (  )  ? dplus : dminus;^310^^^^^295^325^denominator = dplus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^denominator = dminus.abs (  )  > dplus.abs (  )  ? dplus : dminus;^310^^^^^295^325^denominator = dplus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P6_Replace_Expression]^denominator  =  dminus;^310^^^^^295^325^denominator = dplus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P6_Replace_Expression]^denominator  =  dplus ;^310^^^^^295^325^denominator = dplus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^denominator = dplus.add (  )  > dminus.abs (  )  ? dplus : dminus;^310^^^^^295^325^denominator = dplus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^denominator = dplus .add (  )   > dminus^310^^^^^295^325^denominator = dplus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^denominator =  dv.abs (  )  > dminus.abs (  )  ? dv : dminus;^310^^^^^295^325^denominator = dplus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = denominator.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^314^^^^^299^329^z = z.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^z =  pv.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^314^^^^^299^329^z = z.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^oldz = dplus;^318^^^^^303^333^oldz = z;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^oldc = c[j];oldz = z;^318^^^^^303^333^oldz = z;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = dminus.subtract ( N.divide ( denominator )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = z.subtract ( dminus.divide ( denominator )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = z.subtract ( N.divide ( dminus )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = N.subtract ( z.divide ( denominator )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = z.subtract ( denominator.divide ( N )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^z = z.subtract ( N.Complex ( denominator )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^z =  initial.subtract ( N.divide ( denominator )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^H = G2.subtract ( d2v.divide ( pv )  ) ;z = z.subtract ( N.divide ( denominator )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P3_Replace_Literal]^for  ( int j = n-j; j >= 0; j-- )  {^281^^^^^266^296^for  ( int j = n-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P1_Replace_Type]^int tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^289^290^^^^274^304^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P2_Replace_Operator]^double tolerance = Math.max ( relativeAccuracy + z.abs (  ) , absoluteAccuracy ) ;^289^290^^^^274^304^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^double tolerance = Math.max ( relativeAccuracy * oldz.abs (  ) , absoluteAccuracy ) ;^289^290^^^^274^304^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^double tolerance = Math.max ( relativeAccuracy * z.abs (  )  ) ;^289^290^^^^274^304^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^double tolerance = Math.max ( z * relativeAccuracy.abs (  ) , absoluteAccuracy ) ;^289^290^^^^274^304^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^double tolerance = Math.max ( absoluteAccuracy * z.abs (  ) , relativeAccuracy ) ;^289^290^^^^274^304^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^double tolerance = Math.max ( relativeAccuracy * absoluteAccuracy.abs (  ) , z ) ;^289^290^^^^274^304^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^double tolerance = Math.abs ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^289^290^^^^274^304^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^double tolerance = Math.max ( relativeAccuracy * z.add (  ) , absoluteAccuracy ) ;^289^290^^^^274^304^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^Complex dplus = initial.add ( ComplexUtils.sqrt ( delta )  ) ;^308^^^^^293^323^Complex dplus = G.add ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^Complex dplus = G.add ( ComplexUtils.sqrt ( dv )  ) ;^308^^^^^293^323^Complex dplus = G.add ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^Complex dplus = delta.add ( ComplexUtils.sqrt ( G )  ) ;^308^^^^^293^323^Complex dplus = G.add ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^Complex dplus = G.Complex ( ComplexUtils.sqrt ( delta )  ) ;^308^^^^^293^323^Complex dplus = G.add ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^Complex dplus = G .add (  )  ;^308^^^^^293^323^Complex dplus = G.add ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex dminus = G.subtract ( ComplexUtils.sqrt ( delta )  ) ;Complex dplus = G.add ( ComplexUtils.sqrt ( delta )  ) ;^308^^^^^293^323^Complex dplus = G.add ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^Complex dminus = dplus.subtract ( ComplexUtils.sqrt ( delta )  ) ;^309^^^^^294^324^Complex dminus = G.subtract ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^Complex dminus = G.subtract ( ComplexUtils.sqrt ( dplus )  ) ;^309^^^^^294^324^Complex dminus = G.subtract ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^Complex dminus = delta.subtract ( ComplexUtils.sqrt ( G )  ) ;^309^^^^^294^324^Complex dminus = G.subtract ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^Complex dminus = G.Complex ( ComplexUtils.sqrt ( delta )  ) ;^309^^^^^294^324^Complex dminus = G.subtract ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^Complex dminus = z .subtract ( d2v )  ;^309^^^^^294^324^Complex dminus = G.subtract ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P11_Insert_Donor_Statement]^Complex dplus = G.add ( ComplexUtils.sqrt ( delta )  ) ;Complex dminus = G.subtract ( ComplexUtils.sqrt ( delta )  ) ;^309^^^^^294^324^Complex dminus = G.subtract ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^d2v = dv.add ( z.multiply ( dminus )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P14_Delete_Statement]^^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^d2v = dv.add ( dplus.multiply ( d2v )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^d2v = dv.add ( z.multiply ( oldz )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^dv = pv.add ( dminus.multiply ( dv )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^pv = coefficients[j].add ( dv.multiply ( pv )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^pv = coefficients[j].add ( z.Complex ( denominator )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^pv = coefficients[j].add ( z.multiply ( dplus )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P3_Replace_Literal]^d2v = d2v.multiply ( new Complex ( 16.0, 0.0 )  ) ;^286^^^^^271^301^d2v = d2v.multiply ( new Complex ( 2.0, 0.0 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^d2v = d2v .multiply (  )  ;^286^^^^^271^301^d2v = d2v.multiply ( new Complex ( 2.0, 0.0 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^d2v = dminus.multiply ( new Complex ( 2.0, 0.0 )  ) ;^286^^^^^271^301^d2v = d2v.multiply ( new Complex ( 2.0, 0.0 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P14_Delete_Statement]^^286^^^^^271^301^d2v = d2v.multiply ( new Complex ( 2.0, 0.0 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^double tolerance = Math.max ( relativeAccuracy * dminus.abs (  ) , absoluteAccuracy ) ;^289^290^^^^274^304^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^double tolerance = Math.max ( relativeAccuracy * denominator.abs (  ) , absoluteAccuracy ) ;^289^290^^^^274^304^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P14_Delete_Statement]^^289^290^^^^274^304^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^double tolerance = Math.max ( relativeAccuracy * pv .add (  )  , absoluteAccuracy ) ;^289^290^^^^274^304^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^if  (  ( initial.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^291^^^^^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^if  (  ( z .subtract ( initial )   ) .abs (  )  <= tolerance )  {^291^^^^^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^if  (  ( z.subtract ( dplus )  ) .abs (  )  <= tolerance )  {^291^^^^^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^if  (  ( z.subtract ( pv )  ) .abs (  )  <= tolerance )  {^291^^^^^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^if  ( denominator.abs (  )  <= functionValueAccuracy )  {^296^^^^^281^311^if  ( pv.abs (  )  <= functionValueAccuracy )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^G = dplus.divide ( pv ) ;^303^^^^^288^318^G = dv.divide ( pv ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^G = dv.divide ( dminus ) ;^303^^^^^288^318^G = dv.divide ( pv ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^G = z.divide ( pv ) ;^303^^^^^288^318^G = dv.divide ( pv ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P14_Delete_Statement]^^303^304^^^^288^318^G = dv.divide ( pv ) ; G2 = G.multiply ( G ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^G2 = dv.multiply ( G ) ;^304^^^^^289^319^G2 = G.multiply ( G ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P14_Delete_Statement]^^304^^^^^289^319^G2 = G.multiply ( G ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^H = G2.subtract ( z.divide ( pv )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^H = G2.subtract ( pv.divide ( d2v )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^H = G2.subtract ( oldz.divide ( pv )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P14_Delete_Statement]^^305^306^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ; delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^H = G2.subtract ( d2v.divide ( dv )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^H = G2.subtract ( dplus.Complex ( pv )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^delta = dv1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^delta = N1.multiply (  ( N.multiply ( dv )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^delta = H.multiply (  ( N.multiply ( N1 )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P14_Delete_Statement]^^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^delta = N1.multiply (  ( N.multiply ( pv )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( dplus )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^delta = G21.multiply (  ( N.multiply ( H )  ) .subtract ( N )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^delta = N1.multiply (  ( N.multiply ( oldz )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^delta = initial1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^delta = N1.multiply (  ( N.multiply ( dplus )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^delta = dplus1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^Complex dplus = oldz.add ( ComplexUtils.sqrt ( delta )  ) ;^308^^^^^293^323^Complex dplus = G.add ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^Complex dplus = dplus.add ( ComplexUtils.sqrt ( delta )  ) ;^308^^^^^293^323^Complex dplus = G.add ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P14_Delete_Statement]^^308^309^^^^293^323^Complex dplus = G.add ( ComplexUtils.sqrt ( delta )  ) ; Complex dminus = G.subtract ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^Complex dplus = G.add ( ComplexUtils.sqrt ( dplus )  ) ;^308^^^^^293^323^Complex dplus = G.add ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^Complex dminus = G.Complex ( ComplexUtils.sqrt ( dplus )  ) ;^309^^^^^294^324^Complex dminus = G.subtract ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P14_Delete_Statement]^^309^^^^^294^324^Complex dminus = G.subtract ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^Complex dminus = G.subtract ( ComplexUtils.sqrt ( dv )  ) ;^309^^^^^294^324^Complex dminus = G.subtract ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^denominator = dminus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^310^^^^^295^325^denominator = dplus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^denominator = denominator.add (  )  > dminus.abs (  )  ? dplus : dminus;^310^^^^^295^325^denominator = dplus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P14_Delete_Statement]^^310^^^^^295^325^denominator = dplus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^denominator = dplus.abs (  )  > z.abs (  )  ? dplus : dminus;^310^^^^^295^325^denominator = dplus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^if  ( dplus.equals ( new Complex ( 0.0, 0.0 )  )  )  {^313^^^^^298^328^if  ( denominator.equals ( new Complex ( 0.0, 0.0 )  )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^if  ( initial.equals ( new Complex ( 0.0, 0.0 )  )  )  {^313^^^^^298^328^if  ( denominator.equals ( new Complex ( 0.0, 0.0 )  )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^z = dplus.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^314^^^^^299^329^z = z.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = dplus.subtract ( N.divide ( denominator )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = z.subtract ( pv.divide ( denominator )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = z.subtract ( N.divide ( dv )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = denominator.subtract ( N.divide ( z )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^z = dv.subtract ( N.divide ( denominator )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P14_Delete_Statement]^^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = z.subtract ( z.divide ( denominator )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = z.subtract ( N.divide ( dplus )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^z = z.subtract ( N .getImaginary (  )   ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^z = z.subtract ( pv .getImaginary (  )   ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^if  (  ( denominator.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^291^^^^^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^if  (  ( z.subtract ( dv )  ) .abs (  )  <= tolerance )  {^291^^^^^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^if  (  ( z.subtract ( oldz )  )  .abs (  )   <= tolerance )  {^291^^^^^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^if  (  ( dv.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^291^^^^^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^return dplus;^294^^^^^279^309^return z;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^return dv;^294^^^^^279^309^return z;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^if  ( functionValueAccuracy.abs (  )  <= pv )  {^296^^^^^281^311^if  ( pv.abs (  )  <= functionValueAccuracy )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^if  ( denominator.add (  )  <= functionValueAccuracy )  {^296^^^^^281^311^if  ( pv.abs (  )  <= functionValueAccuracy )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^return dminus;^299^^^^^284^314^return z;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P3_Replace_Literal]^if  ( denominator.equals ( new Complex ( NaN, NaN )  )  )  {^313^^^^^298^328^if  ( denominator.equals ( new Complex ( 0.0, 0.0 )  )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^if  ( denominator.equals ( new Complex ( 4.0d, 4.0d )  )  )  {^313^^^^^298^328^if  ( denominator.equals ( new Complex ( 0.0, 0.0 )  )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^oldz = dminus;^318^^^^^313^320^oldz = z;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^oldz =  denominator;^318^^^^^313^320^oldz = z;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = z.subtract ( N.divide ( z )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^z = z .subtract ( pv )  ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^z =  dplus.subtract ( N.divide ( denominator )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = oldz.subtract ( N.divide ( denominator )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^z = z.subtract ( N.Complex ( dplus )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = z.subtract ( oldz.divide ( denominator )  ) ;^319^^^^^313^320^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^oldz ;^315^316^^^^300^330^oldz = new Complex ( Double.POSITIVE_INFINITY, Double.POSITIVE_INFINITY ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^z = denominator .abs (  )  ;^314^^^^^299^329^z = z.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P1_Replace_Type]^for  (  long  j = n-1; j >= 0; j-- )  {^281^^^^^266^296^for  ( int j = n-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P2_Replace_Operator]^for  ( int j = n-1; j == 0; j-- )  {^281^^^^^266^296^for  ( int j = n-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P3_Replace_Literal]^for  ( int j = n-0; j >= 0; j-- )  {^281^^^^^266^296^for  ( int j = n-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P3_Replace_Literal]^for  ( int j = n-1; j >= 6; j-- )  {^281^^^^^266^296^for  ( int j = n-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^d2v =  dplus.add ( z.multiply ( d2v )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^dv = pv.add ( z.multiply ( initial )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^pv = coefficients[j].add ( dplus.multiply ( pv )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^pv = coefficients[j].add ( z.multiply ( z )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^d2v = dminus.add ( z.multiply ( d2v )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^dv = dplus.add ( z.multiply ( dv )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^dv = pv.add ( z.multiply ( oldz )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^pv = coefficients[j].add ( z.Complex ( initial )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^dv ;^279^^^^^264^294^dv = Complex.ZERO;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^d2v = dv.add ( z.multiply ( z )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^dv = dv.add ( z.multiply ( dv )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P3_Replace_Literal]^d2v = d2v.multiply ( new Complex ( 1.0, 0.0 )  ) ;^286^^^^^271^301^d2v = d2v.multiply ( new Complex ( 2.0, 0.0 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^d2v = initial.multiply ( new Complex ( 2.0, 0.0 )  ) ;^286^^^^^271^301^d2v = d2v.multiply ( new Complex ( 2.0, 0.0 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^d2v = d2v.multiply (  new Complex (  ( 0.5 *  ( min + max )  ) , 0.0 )   ) ;^286^^^^^271^301^d2v = d2v.multiply ( new Complex ( 2.0, 0.0 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^iterationCount =  null;^293^^^^^278^308^iterationCount = i;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^G2 = dminus.multiply ( G ) ;^304^^^^^289^319^G2 = G.multiply ( G ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^G2 =  dplus.multiply ( dplus ) ;^304^^^^^289^319^G2 = G.multiply ( G ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^H = dv.subtract ( d2v.divide ( pv )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^H = G2.subtract ( pv.divide ( pv )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^H = G2 .subtract ( denominator )  ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^H = G2.subtract ( d2v .getImaginary (  )   ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^H =  z.subtract ( d2v.divide ( pv )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^delta = dv.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^delta = oldz1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( initial )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^delta = N1.multiply (  ( N.multiply ( H )  )  .subtract ( N )   ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^delta =  null.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P2_Replace_Operator]^denominator = dplus.abs (  )  < dminus.abs (  )  ? dplus : dminus;^310^^^^^295^325^denominator = dplus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^denominator = denominator.abs (  )  > dminus.abs (  )  ? dplus : dminus;^310^^^^^295^325^denominator = dplus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^denominator = dplus.abs (  )  > dv.abs (  )  ? dplus : dminus;^310^^^^^295^325^denominator = dplus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^denominator =  z.abs (  )  > dminus.abs (  )  ? z : dminus;^310^^^^^295^325^denominator = dplus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = z.add ( new Complex ( this, absoluteAccuracy )  ) ;^314^^^^^299^329^z = z.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^oldz = denominator;^318^^^^^303^333^oldz = z;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^oldz =  pv;^318^^^^^303^333^oldz = z;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = z.subtract ( N.divide ( z )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^z =  denominator.subtract ( N.divide ( denominator )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^return dplus;^299^^^^^284^314^return z;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^z = z.add ( new Complex ( 0, absoluteAccuracy )  ) ;^314^^^^^299^329^z = z.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P3_Replace_Literal]^for  ( int j = n-2; j >= 0; j-- )  {^281^^^^^266^296^for  ( int j = n-1; j >= 0; j-- )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^double tolerance = Math.max ( relativeAccuracy * initial.abs (  ) , absoluteAccuracy ) ;^289^290^^^^274^304^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^Complex dplus = z.add ( ComplexUtils.sqrt ( delta )  ) ;^308^^^^^293^323^Complex dplus = G.add ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^Complex dplus = G.add ( ComplexUtils.sqrt ( dminus )  ) ;^308^^^^^293^323^Complex dplus = G.add ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^Complex dminus = z.subtract ( ComplexUtils.sqrt ( delta )  ) ;^309^^^^^294^324^Complex dminus = G.subtract ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^Complex dminus = G.subtract ( ComplexUtils.sqrt ( pv )  ) ;^309^^^^^294^324^Complex dminus = G.subtract ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^d2v = dv.add ( dv .multiply (  )   ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^d2v = dv.add ( dminus.Complex ( d2v )  ) ;^282^^^^^267^297^d2v = dv.add ( z.multiply ( d2v )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^dv = pv.add ( z.Complex ( denominator )  ) ;^283^^^^^268^298^dv = pv.add ( z.multiply ( dv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^pv = coefficients[j].add ( dminus.Complex ( pv )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^pv = coefficients[j].add ( oldz.Complex ( pv )  ) ;^284^^^^^269^299^pv = coefficients[j].add ( z.multiply ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P3_Replace_Literal]^d2v = d2v.multiply ( new Complex ( 0.25, 0.0 )  ) ;^286^^^^^271^301^d2v = d2v.multiply ( new Complex ( 2.0, 0.0 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P2_Replace_Operator]^double tolerance = Math.max ( relativeAccuracy / z.abs (  ) , absoluteAccuracy ) ;^289^290^^^^274^304^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^double tolerance = Math.max ( relativeAccuracy * dplus.add (  ) , absoluteAccuracy ) ;^289^290^^^^274^304^double tolerance = Math.max ( relativeAccuracy * z.abs (  ) , absoluteAccuracy ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^if  (  ( z.subtract ( dplus )  ) .setResult (  )  <= tolerance )  {^291^^^^^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^if  (  ( z.subtract ( denominator )  ) .abs (  )  <= tolerance )  {^291^^^^^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^if  (  ( z.Complex ( dv )  ) .abs (  )  <= tolerance )  {^291^^^^^276^306^if  (  ( z.subtract ( oldz )  ) .abs (  )  <= tolerance )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^if  ( oldz.abs (  )  <= functionValueAccuracy )  {^296^^^^^281^311^if  ( pv.abs (  )  <= functionValueAccuracy )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^G = dv.divide ( denominator ) ;^303^^^^^288^318^G = dv.divide ( pv ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^G = denominator.divide ( pv ) ;^303^^^^^288^318^G = dv.divide ( pv ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P14_Delete_Statement]^^303^^^^^288^318^G = dv.divide ( pv ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P14_Delete_Statement]^^304^305^^^^289^319^G2 = G.multiply ( G ) ; H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^H = dminus.subtract ( d2v.divide ( pv )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^H = G2 .subtract ( H )  ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^H = G2.subtract ( dv.Complex ( pv )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P14_Delete_Statement]^^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^H = G2.subtract ( initial.divide ( pv )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^H = G2.subtract ( d2v.divide ( dplus )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^H = G2.subtract ( dv.divide ( pv )  ) ;^305^^^^^290^320^H = G2.subtract ( d2v.divide ( pv )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^delta = oldz.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^delta = N11.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P7_Replace_Invocation]^delta = N1.multiply (  ( N.multiply ( H )  )  .subtract ( dminus )   ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( dv )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^delta = pv1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^306^^^^^291^321^delta = N1.multiply (  ( N.multiply ( H )  ) .subtract ( G2 )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^Complex dplus = G.add ( ComplexUtils.sqrt ( initial )  ) ;^308^^^^^293^323^Complex dplus = G.add ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^Complex dplus = G.add ( ComplexUtils.sqrt ( z )  ) ;^308^^^^^293^323^Complex dplus = G.add ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^Complex dminus = oldz.subtract ( ComplexUtils.sqrt ( delta )  ) ;^309^^^^^294^324^Complex dminus = G.subtract ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^Complex dminus = G.subtract ( ComplexUtils.sqrt ( oldz )  ) ;^309^^^^^294^324^Complex dminus = G.subtract ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^Complex dminus = G.subtract ( ComplexUtils.sqrt ( dminus )  ) ;^309^^^^^294^324^Complex dminus = G.subtract ( ComplexUtils.sqrt ( delta )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P14_Delete_Statement]^^309^310^^^^294^324^Complex dminus = G.subtract ( ComplexUtils.sqrt ( delta )  ) ; denominator = dplus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^denominator = dv.abs (  )  > dminus.abs (  )  ? dplus : dminus;^310^^^^^295^325^denominator = dplus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^denominator = dplus.abs (  )  > denominator.abs (  )  ? dplus : dminus;^310^^^^^295^325^denominator = dplus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^denominator = dplus.add (  )  > dv.abs (  )  ? dplus : dminus;^310^^^^^295^325^denominator = dplus.abs (  )  > dminus.abs (  )  ? dplus : dminus;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P8_Replace_Mix]^if  ( dminus .abs (  )   )  {^313^^^^^298^328^if  ( denominator.equals ( new Complex ( 0.0, 0.0 )  )  )  {^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = initial.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^314^^^^^299^329^z = z.add ( new Complex ( absoluteAccuracy, absoluteAccuracy )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = pv.subtract ( N.divide ( denominator )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = z.subtract ( dplus.divide ( denominator )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
[P5_Replace_Variable]^z = z.subtract ( N.divide ( initial )  ) ;^319^^^^^304^334^z = z.subtract ( N.divide ( denominator )  ) ;^[CLASS] LaguerreSolver  [METHOD] solve [RETURN_TYPE] Complex   Complex[] coefficients Complex initial [VARIABLES] Complex[]  coefficients  boolean  double  tolerance  PolynomialFunction  p  long  serialVersionUID  int  i  j  n  Complex  G  G2  H  N  N1  d2v  delta  denominator  dminus  dplus  dv  initial  oldz  pv  z  
