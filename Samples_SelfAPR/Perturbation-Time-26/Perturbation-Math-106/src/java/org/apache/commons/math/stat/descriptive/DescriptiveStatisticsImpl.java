[P1_Replace_Type]^private static final  short  serialVersionUID = -1868088725461221010L;^31^^^^^26^36^private static final long serialVersionUID = -1868088725461221010L;^[CLASS] DescriptiveStatisticsImpl   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID = -1868088725461221010;^31^^^^^26^36^private static final long serialVersionUID = -1868088725461221010L;^[CLASS] DescriptiveStatisticsImpl   [VARIABLES] 
[P1_Replace_Type]^protected  long  windowSize;^34^^^^^29^39^protected int windowSize;^[CLASS] DescriptiveStatisticsImpl   [VARIABLES] 
[P14_Delete_Statement]^^45^^^^^44^46^this ( INFINITE_WINDOW ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] <init> [RETURN_TYPE] DescriptiveStatisticsImpl()   [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  windowSize  
[P12_Insert_Condition]^if  ( windowSize != INFINITE_WINDOW )  { this ( INFINITE_WINDOW ) ; }^45^^^^^44^46^this ( INFINITE_WINDOW ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] <init> [RETURN_TYPE] DescriptiveStatisticsImpl()   [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  windowSize  
[P14_Delete_Statement]^^53^54^^^^52^56^super (  ) ; eDA = new ResizableDoubleArray (  ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] <init> [RETURN_TYPE] DescriptiveStatisticsImpl(int)   int window [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  window  windowSize  
[P11_Insert_Donor_Statement]^eDA.clear (  ) ;super (  ) ;^53^^^^^52^56^super (  ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] <init> [RETURN_TYPE] DescriptiveStatisticsImpl(int)   int window [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  window  windowSize  
[P8_Replace_Mix]^eDA  = null ;^54^^^^^52^56^eDA = new ResizableDoubleArray (  ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] <init> [RETURN_TYPE] DescriptiveStatisticsImpl(int)   int window [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  window  windowSize  
[P5_Replace_Variable]^setWindowSize ( windowSize ) ;^55^^^^^52^56^setWindowSize ( window ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] <init> [RETURN_TYPE] DescriptiveStatisticsImpl(int)   int window [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  window  windowSize  
[P7_Replace_Invocation]^getElement ( window ) ;^55^^^^^52^56^setWindowSize ( window ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] <init> [RETURN_TYPE] DescriptiveStatisticsImpl(int)   int window [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  window  windowSize  
[P8_Replace_Mix]^getElement ( windowSize ) ;^55^^^^^52^56^setWindowSize ( window ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] <init> [RETURN_TYPE] DescriptiveStatisticsImpl(int)   int window [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  window  windowSize  
[P14_Delete_Statement]^^55^^^^^52^56^setWindowSize ( window ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] <init> [RETURN_TYPE] DescriptiveStatisticsImpl(int)   int window [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  window  windowSize  
[P12_Insert_Condition]^if  ( windowSize != INFINITE_WINDOW )  { setWindowSize ( window ) ; }^55^^^^^52^56^setWindowSize ( window ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] <init> [RETURN_TYPE] DescriptiveStatisticsImpl(int)   int window [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  window  windowSize  
[P8_Replace_Mix]^return window;^63^^^^^62^64^return windowSize;^[CLASS] DescriptiveStatisticsImpl  [METHOD] getWindowSize [RETURN_TYPE] int   [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  window  windowSize  
[P7_Replace_Invocation]^double[] copiedArray = new double[eDA.getElements (  ) ];^71^^^^^69^79^double[] copiedArray = new double[eDA.getNumElements (  ) ];^[CLASS] DescriptiveStatisticsImpl  [METHOD] getValues [RETURN_TYPE] double[]   [VARIABLES] ResizableDoubleArray  eDA  boolean  double[]  copiedArray  long  serialVersionUID  int  window  windowSize  
[P14_Delete_Statement]^^71^^^^^69^79^double[] copiedArray = new double[eDA.getNumElements (  ) ];^[CLASS] DescriptiveStatisticsImpl  [METHOD] getValues [RETURN_TYPE] double[]   [VARIABLES] ResizableDoubleArray  eDA  boolean  double[]  copiedArray  long  serialVersionUID  int  window  windowSize  
[P3_Replace_Literal]^System.arraycopy ( eDA.getElements (  ) , window, copiedArray,^72^73^74^75^^69^79^System.arraycopy ( eDA.getElements (  ) , 0, copiedArray,^[CLASS] DescriptiveStatisticsImpl  [METHOD] getValues [RETURN_TYPE] double[]   [VARIABLES] ResizableDoubleArray  eDA  boolean  double[]  copiedArray  long  serialVersionUID  int  window  windowSize  
[P5_Replace_Variable]^System.arraycopy ( eDA.getElements (  ) , 0,^72^73^74^75^^69^79^System.arraycopy ( eDA.getElements (  ) , 0, copiedArray,^[CLASS] DescriptiveStatisticsImpl  [METHOD] getValues [RETURN_TYPE] double[]   [VARIABLES] ResizableDoubleArray  eDA  boolean  double[]  copiedArray  long  serialVersionUID  int  window  windowSize  
[P5_Replace_Variable]^System.arraycopy ( copiedArray.getElements (  ) , 0, eDA,^72^73^74^75^^69^79^System.arraycopy ( eDA.getElements (  ) , 0, copiedArray,^[CLASS] DescriptiveStatisticsImpl  [METHOD] getValues [RETURN_TYPE] double[]   [VARIABLES] ResizableDoubleArray  eDA  boolean  double[]  copiedArray  long  serialVersionUID  int  window  windowSize  
[P7_Replace_Invocation]^System.arraycopy ( eDA.getNumElements (  ) , 0, copiedArray,^72^73^74^75^^69^79^System.arraycopy ( eDA.getElements (  ) , 0, copiedArray,^[CLASS] DescriptiveStatisticsImpl  [METHOD] getValues [RETURN_TYPE] double[]   [VARIABLES] ResizableDoubleArray  eDA  boolean  double[]  copiedArray  long  serialVersionUID  int  window  windowSize  
[P7_Replace_Invocation]^eDA.getNumElements (  ) , 0, copiedArray, 0,^73^74^75^76^^69^79^eDA.getElements (  ) , 0, copiedArray, 0,^[CLASS] DescriptiveStatisticsImpl  [METHOD] getValues [RETURN_TYPE] double[]   [VARIABLES] ResizableDoubleArray  eDA  boolean  double[]  copiedArray  long  serialVersionUID  int  window  windowSize  
[P8_Replace_Mix]^eDA .getElement ( windowSize )  , 0, copiedArray, 0,^73^74^75^76^^69^79^eDA.getElements (  ) , 0, copiedArray, 0,^[CLASS] DescriptiveStatisticsImpl  [METHOD] getValues [RETURN_TYPE] double[]   [VARIABLES] ResizableDoubleArray  eDA  boolean  double[]  copiedArray  long  serialVersionUID  int  window  windowSize  
[P7_Replace_Invocation]^eDA.getElements (  )  ) ;^77^^^^^69^79^eDA.getNumElements (  )  ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] getValues [RETURN_TYPE] double[]   [VARIABLES] ResizableDoubleArray  eDA  boolean  double[]  copiedArray  long  serialVersionUID  int  window  windowSize  
[P14_Delete_Statement]^^77^78^^^^69^79^eDA.getNumElements (  )  ) ; return copiedArray;^[CLASS] DescriptiveStatisticsImpl  [METHOD] getValues [RETURN_TYPE] double[]   [VARIABLES] ResizableDoubleArray  eDA  boolean  double[]  copiedArray  long  serialVersionUID  int  window  windowSize  
[P5_Replace_Variable]^return eDA.getElement ( windowSize ) ;^85^^^^^84^86^return eDA.getElement ( index ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P5_Replace_Variable]^return index.getElement ( eDA ) ;^85^^^^^84^86^return eDA.getElement ( index ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P7_Replace_Invocation]^return eDA.addElement ( index ) ;^85^^^^^84^86^return eDA.getElement ( index ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P14_Delete_Statement]^^85^^^^^84^86^return eDA.getElement ( index ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] getElement [RETURN_TYPE] double   int index [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P7_Replace_Invocation]^return eDA.getElements (  ) ;^92^^^^^91^93^return eDA.getNumElements (  ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] getN [RETURN_TYPE] long   [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P14_Delete_Statement]^^92^^^^^91^93^return eDA.getNumElements (  ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] getN [RETURN_TYPE] long   [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P2_Replace_Operator]^if  ( windowSize == INFINITE_WINDOW )  {^99^^^^^98^108^if  ( windowSize != INFINITE_WINDOW )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[P5_Replace_Variable]^if  ( window != INFINITE_WINDOW )  {^99^^^^^98^108^if  ( windowSize != INFINITE_WINDOW )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[P6_Replace_Expression]^if  ( getN() == windowSize )  {^99^^^^^98^108^if  ( windowSize != INFINITE_WINDOW )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[P6_Replace_Expression]^if  ( getN() < windowSize )  {^99^^^^^98^108^if  ( windowSize != INFINITE_WINDOW )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[P15_Unwrap_Block]^if ((getN()) == (windowSize)) {    eDA.addElementRolling(v);}else    if ((getN()) < (windowSize)) {        eDA.addElement(v);    };^99^100^101^102^103^98^108^if  ( windowSize != INFINITE_WINDOW )  { if  ( getN (  )  == windowSize )  { eDA.addElementRolling ( v ) ; } else if  ( getN (  )  < windowSize )  { eDA.addElement ( v ) ; }^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[P16_Remove_Block]^^99^100^101^102^103^98^108^if  ( windowSize != INFINITE_WINDOW )  { if  ( getN (  )  == windowSize )  { eDA.addElementRolling ( v ) ; } else if  ( getN (  )  < windowSize )  { eDA.addElement ( v ) ; }^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[P13_Insert_Block]^if  (  ( getN (  )  )  ==  ( windowSize )  )  {     eDA.addElementRolling ( v ) ; }else     if  (  ( getN (  )  )  <  ( windowSize )  )  {         eDA.addElement ( v ) ;     }^99^^^^^98^108^[Delete]^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[P7_Replace_Invocation]^eDA.addElementRolling ( v ) ;^106^^^^^98^108^eDA.addElement ( v ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[P7_Replace_Invocation]^eDA .getElement ( windowSize )  ;^106^^^^^98^108^eDA.addElement ( v ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[P14_Delete_Statement]^^106^^^^^98^108^eDA.addElement ( v ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[P2_Replace_Operator]^if  ( getN (  )  <= windowSize )  {^100^^^^^98^108^if  ( getN (  )  == windowSize )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[P5_Replace_Variable]^if  ( getN (  )  == window )  {^100^^^^^98^108^if  ( getN (  )  == windowSize )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[P6_Replace_Expression]^if  ( getN() < windowSize )  {^100^^^^^98^108^if  ( getN (  )  == windowSize )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[P15_Unwrap_Block]^eDA.addElementRolling(v);^100^101^102^103^104^98^108^if  ( getN (  )  == windowSize )  { eDA.addElementRolling ( v ) ; } else if  ( getN (  )  < windowSize )  { eDA.addElement ( v ) ; }^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[P16_Remove_Block]^^100^101^102^103^104^98^108^if  ( getN (  )  == windowSize )  { eDA.addElementRolling ( v ) ; } else if  ( getN (  )  < windowSize )  { eDA.addElement ( v ) ; }^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[P13_Insert_Block]^if  (  ( windowSize )  !=  ( INFINITE_WINDOW )  )  {     if  (  ( getN (  )  )  ==  ( windowSize )  )  {         eDA.addElementRolling ( v ) ;     }else         if  (  ( getN (  )  )  <  ( windowSize )  )  {             eDA.addElement ( v ) ;         }      }else {     eDA.addElement ( v ) ; }^100^^^^^98^108^[Delete]^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[P2_Replace_Operator]^} else if  ( getN (  )  <= windowSize )  {^102^^^^^98^108^} else if  ( getN (  )  < windowSize )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[P5_Replace_Variable]^} else if  ( getN (  )  < window )  {^102^^^^^98^108^} else if  ( getN (  )  < windowSize )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[P6_Replace_Expression]^} else {^102^^^^^98^108^} else if  ( getN (  )  < windowSize )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[P8_Replace_Mix]^}  if  ( getN (  )  < window )  {^102^^^^^98^108^} else if  ( getN (  )  < windowSize )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[P15_Unwrap_Block]^eDA.addElement(v);^102^103^104^^^98^108^} else if  ( getN (  )  < windowSize )  { eDA.addElement ( v ) ; }^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[P16_Remove_Block]^^102^103^104^^^98^108^} else if  ( getN (  )  < windowSize )  { eDA.addElement ( v ) ; }^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[P7_Replace_Invocation]^eDA.addElementRolling ( v ) ;^103^^^^^98^108^eDA.addElement ( v ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[P7_Replace_Invocation]^eDA .getElement ( index )  ;^103^^^^^98^108^eDA.addElement ( v ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[P14_Delete_Statement]^^103^^^^^98^108^eDA.addElement ( v ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[P7_Replace_Invocation]^eDA.addElement ( v ) ;^101^^^^^98^108^eDA.addElementRolling ( v ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[P14_Delete_Statement]^^101^^^^^98^108^eDA.addElementRolling ( v ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[P11_Insert_Donor_Statement]^eDA.addElement ( v ) ;eDA.addElementRolling ( v ) ;^101^^^^^98^108^eDA.addElementRolling ( v ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[P2_Replace_Operator]^if  ( getN (  )  >= windowSize )  {^100^^^^^98^108^if  ( getN (  )  == windowSize )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[P8_Replace_Mix]^}  if  ( getN (  )  < windowSize )  {^102^^^^^98^108^} else if  ( getN (  )  < windowSize )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[P7_Replace_Invocation]^eDA .getElement ( window )  ;^106^^^^^98^108^eDA.addElement ( v ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] addValue [RETURN_TYPE] void   double v [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  double  v  
[P7_Replace_Invocation]^eDA.start (  ) ;^114^^^^^113^115^eDA.clear (  ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P14_Delete_Statement]^^114^^^^^113^115^eDA.clear (  ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P11_Insert_Donor_Statement]^super (  ) ;eDA.clear (  ) ;^114^^^^^113^115^eDA.clear (  ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P11_Insert_Donor_Statement]^eDA.addElement ( v ) ;eDA.clear (  ) ;^114^^^^^113^115^eDA.clear (  ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P2_Replace_Operator]^if  ( windowSize <= 1 )  {^121^^^^^120^135^if  ( windowSize < 1 )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P3_Replace_Literal]^if  ( windowSize < index )  {^121^^^^^120^135^if  ( windowSize < 1 )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P5_Replace_Variable]^if  ( window < 1 )  {^121^^^^^120^135^if  ( windowSize < 1 )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P6_Replace_Expression]^if  ( windowSize != INFINITE_WINDOW )  {^121^^^^^120^135^if  ( windowSize < 1 )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P8_Replace_Mix]^if  ( windowSize < 2 )  {^121^^^^^120^135^if  ( windowSize < 1 )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P15_Unwrap_Block]^if (windowSize != (INFINITE_WINDOW)) {    throw new java.lang.IllegalArgumentException("window size must be positive.");};^121^122^123^124^^120^135^if  ( windowSize < 1 )  { if  ( windowSize != INFINITE_WINDOW )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P16_Remove_Block]^^121^122^123^124^^120^135^if  ( windowSize < 1 )  { if  ( windowSize != INFINITE_WINDOW )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P13_Insert_Block]^if  ( windowSize !=  ( INFINITE_WINDOW )  )  {     throw new IllegalArgumentException ( "window size must be positive." ) ; }^121^^^^^120^135^[Delete]^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P2_Replace_Operator]^if  ( windowSize >= INFINITE_WINDOW )  {^122^^^^^120^135^if  ( windowSize != INFINITE_WINDOW )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P5_Replace_Variable]^if  ( window != INFINITE_WINDOW )  {^122^^^^^120^135^if  ( windowSize != INFINITE_WINDOW )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P5_Replace_Variable]^if  ( windowSize != null )  {^122^^^^^120^135^if  ( windowSize != INFINITE_WINDOW )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P5_Replace_Variable]^if  ( INFINITE_WINDOW != windowSize )  {^122^^^^^120^135^if  ( windowSize != INFINITE_WINDOW )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("window size must be positive.");^122^123^124^^^120^135^if  ( windowSize != INFINITE_WINDOW )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P16_Remove_Block]^^122^123^124^^^120^135^if  ( windowSize != INFINITE_WINDOW )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P13_Insert_Block]^if  ( windowSize < 1 )  {     if  ( windowSize !=  ( INFINITE_WINDOW )  )  {         throw new IllegalArgumentException ( "window size must be positive." ) ;     } }^122^^^^^120^135^[Delete]^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P13_Insert_Block]^if  ( windowSize !=  ( INFINITE_WINDOW )  )  {     throw new IllegalArgumentException ( "window size must be positive." ) ; }^123^^^^^120^135^[Delete]^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P8_Replace_Mix]^return ;^123^^^^^120^135^throw new IllegalArgumentException  (" ")  ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P2_Replace_Operator]^if  ( windowSize == INFINITE_WINDOW )  {^122^^^^^120^135^if  ( windowSize != INFINITE_WINDOW )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P5_Replace_Variable]^this.windowSize = window;^127^^^^^120^135^this.windowSize = windowSize;^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P2_Replace_Operator]^if  ( windowSize != INFINITE_WINDOW || windowSize < eDA.getNumElements (  )  )  {^132^^^^^120^135^if  ( windowSize != INFINITE_WINDOW && windowSize < eDA.getNumElements (  )  )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P2_Replace_Operator]^if  ( windowSize > INFINITE_WINDOW && windowSize < eDA.getNumElements (  )  )  {^132^^^^^120^135^if  ( windowSize != INFINITE_WINDOW && windowSize < eDA.getNumElements (  )  )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P2_Replace_Operator]^if  ( windowSize != INFINITE_WINDOW && windowSize <= eDA.getNumElements (  )  )  {^132^^^^^120^135^if  ( windowSize != INFINITE_WINDOW && windowSize < eDA.getNumElements (  )  )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P5_Replace_Variable]^if  ( window != INFINITE_WINDOW && windowSize < eDA.getNumElements (  )  )  {^132^^^^^120^135^if  ( windowSize != INFINITE_WINDOW && windowSize < eDA.getNumElements (  )  )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P5_Replace_Variable]^if  ( eDA != INFINITE_WINDOW && windowSize < windowSize.getNumElements (  )  )  {^132^^^^^120^135^if  ( windowSize != INFINITE_WINDOW && windowSize < eDA.getNumElements (  )  )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P5_Replace_Variable]^if  ( INFINITE_WINDOW != windowSize && windowSize < eDA.getNumElements (  )  )  {^132^^^^^120^135^if  ( windowSize != INFINITE_WINDOW && windowSize < eDA.getNumElements (  )  )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P5_Replace_Variable]^if  ( windowSize != eDA && windowSize < INFINITE_WINDOW.getNumElements (  )  )  {^132^^^^^120^135^if  ( windowSize != INFINITE_WINDOW && windowSize < eDA.getNumElements (  )  )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P6_Replace_Expression]^if  ( windowSize != INFINITE_WINDOW ) {^132^^^^^120^135^if  ( windowSize != INFINITE_WINDOW && windowSize < eDA.getNumElements (  )  )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P6_Replace_Expression]^if  (  windowSize < eDA.getNumElements (  )  )  {^132^^^^^120^135^if  ( windowSize != INFINITE_WINDOW && windowSize < eDA.getNumElements (  )  )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P6_Replace_Expression]^if  ( eDA.getNumElements (  )  - windowSize )  {^132^^^^^120^135^if  ( windowSize != INFINITE_WINDOW && windowSize < eDA.getNumElements (  )  )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P7_Replace_Invocation]^if  ( windowSize != INFINITE_WINDOW && windowSize < eDA.getElements (  )  )  {^132^^^^^120^135^if  ( windowSize != INFINITE_WINDOW && windowSize < eDA.getNumElements (  )  )  {^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P15_Unwrap_Block]^eDA.discardFrontElements(((eDA.getNumElements()) - windowSize));^132^133^134^^^120^135^if  ( windowSize != INFINITE_WINDOW && windowSize < eDA.getNumElements (  )  )  { eDA.discardFrontElements ( eDA.getNumElements (  )  - windowSize ) ; }^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P16_Remove_Block]^^132^133^134^^^120^135^if  ( windowSize != INFINITE_WINDOW && windowSize < eDA.getNumElements (  )  )  { eDA.discardFrontElements ( eDA.getNumElements (  )  - windowSize ) ; }^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P2_Replace_Operator]^eDA.discardFrontElements ( eDA.getNumElements (  )   &&  windowSize ) ;^133^^^^^120^135^eDA.discardFrontElements ( eDA.getNumElements (  )  - windowSize ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P5_Replace_Variable]^eDA.discardFrontElements ( eDA.getNumElements (  )  - window ) ;^133^^^^^120^135^eDA.discardFrontElements ( eDA.getNumElements (  )  - windowSize ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P5_Replace_Variable]^eDA.discardFrontElements ( windowSize.getNumElements (  )  - eDA ) ;^133^^^^^120^135^eDA.discardFrontElements ( eDA.getNumElements (  )  - windowSize ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P7_Replace_Invocation]^eDA.getElement ( eDA.getNumElements (  )  - windowSize ) ;^133^^^^^120^135^eDA.discardFrontElements ( eDA.getNumElements (  )  - windowSize ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P7_Replace_Invocation]^eDA.discardFrontElements ( eDA.getElements (  )  - windowSize ) ;^133^^^^^120^135^eDA.discardFrontElements ( eDA.getNumElements (  )  - windowSize ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P14_Delete_Statement]^^133^^^^^120^135^eDA.discardFrontElements ( eDA.getNumElements (  )  - windowSize ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P2_Replace_Operator]^eDA.discardFrontElements ( eDA.getNumElements (  )   <=  windowSize ) ;^133^^^^^120^135^eDA.discardFrontElements ( eDA.getNumElements (  )  - windowSize ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] setWindowSize [RETURN_TYPE] void   int windowSize [VARIABLES] ResizableDoubleArray  eDA  boolean  long  serialVersionUID  int  index  window  windowSize  
[P5_Replace_Variable]^return stat.evaluate ( eDA.getValues (  ) .start (  ) , eDA.getNumElements (  )  ) ;^143^^^^^142^144^return stat.evaluate ( eDA.getValues (  ) , eDA.start (  ) , eDA.getNumElements (  )  ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] apply [RETURN_TYPE] double   UnivariateStatistic stat [VARIABLES] ResizableDoubleArray  eDA  boolean  UnivariateStatistic  stat  long  serialVersionUID  int  index  window  windowSize  
[P5_Replace_Variable]^return eDA.evaluate ( stat.getValues (  ) , eDA.start (  ) , eDA.getNumElements (  )  ) ;^143^^^^^142^144^return stat.evaluate ( eDA.getValues (  ) , eDA.start (  ) , eDA.getNumElements (  )  ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] apply [RETURN_TYPE] double   UnivariateStatistic stat [VARIABLES] ResizableDoubleArray  eDA  boolean  UnivariateStatistic  stat  long  serialVersionUID  int  index  window  windowSize  
[P7_Replace_Invocation]^return stat.evaluate ( eDA.getElements (  ) , eDA.start (  ) , eDA.getNumElements (  )  ) ;^143^^^^^142^144^return stat.evaluate ( eDA.getValues (  ) , eDA.start (  ) , eDA.getNumElements (  )  ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] apply [RETURN_TYPE] double   UnivariateStatistic stat [VARIABLES] ResizableDoubleArray  eDA  boolean  UnivariateStatistic  stat  long  serialVersionUID  int  index  window  windowSize  
[P7_Replace_Invocation]^return stat.evaluate ( eDA.getValues (  ) , eDA.clear (  ) , eDA.getNumElements (  )  ) ;^143^^^^^142^144^return stat.evaluate ( eDA.getValues (  ) , eDA.start (  ) , eDA.getNumElements (  )  ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] apply [RETURN_TYPE] double   UnivariateStatistic stat [VARIABLES] ResizableDoubleArray  eDA  boolean  UnivariateStatistic  stat  long  serialVersionUID  int  index  window  windowSize  
[P7_Replace_Invocation]^return stat.evaluate ( eDA.getValues (  ) , eDA .getValues (  )  , eDA.getNumElements (  )  ) ;^143^^^^^142^144^return stat.evaluate ( eDA.getValues (  ) , eDA.start (  ) , eDA.getNumElements (  )  ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] apply [RETURN_TYPE] double   UnivariateStatistic stat [VARIABLES] ResizableDoubleArray  eDA  boolean  UnivariateStatistic  stat  long  serialVersionUID  int  index  window  windowSize  
[P7_Replace_Invocation]^return stat.evaluate ( eDA.getValues (  ) , eDA.start (  ) , eDA.getElements (  )  ) ;^143^^^^^142^144^return stat.evaluate ( eDA.getValues (  ) , eDA.start (  ) , eDA.getNumElements (  )  ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] apply [RETURN_TYPE] double   UnivariateStatistic stat [VARIABLES] ResizableDoubleArray  eDA  boolean  UnivariateStatistic  stat  long  serialVersionUID  int  index  window  windowSize  
[P14_Delete_Statement]^^143^^^^^142^144^return stat.evaluate ( eDA.getValues (  ) , eDA.start (  ) , eDA.getNumElements (  )  ) ;^[CLASS] DescriptiveStatisticsImpl  [METHOD] apply [RETURN_TYPE] double   UnivariateStatistic stat [VARIABLES] ResizableDoubleArray  eDA  boolean  UnivariateStatistic  stat  long  serialVersionUID  int  index  window  windowSize  
