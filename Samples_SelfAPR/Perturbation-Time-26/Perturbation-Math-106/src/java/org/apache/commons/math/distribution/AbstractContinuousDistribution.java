[P1_Replace_Type]^private static final  short  serialVersionUID = -38038050983108802L;^38^^^^^33^43^private static final long serialVersionUID = -38038050983108802L;^[CLASS] AbstractContinuousDistribution 1   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID = -38038050983108802;^38^^^^^33^43^private static final long serialVersionUID = -38038050983108802L;^[CLASS] AbstractContinuousDistribution 1   [VARIABLES] 
[P14_Delete_Statement]^^44^^^^^43^45^super (  ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] <init> [RETURN_TYPE] AbstractContinuousDistribution()   [VARIABLES] long  serialVersionUID  boolean  
[P2_Replace_Operator]^if  ( p < 0.0 && p > 1.0 )  {^60^^^^^45^75^if  ( p < 0.0 || p > 1.0 )  {^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P2_Replace_Operator]^if  ( p == 0.0 || p > 1.0 )  {^60^^^^^45^75^if  ( p < 0.0 || p > 1.0 )  {^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P2_Replace_Operator]^if  ( p < 0.0 || p < 1.0 )  {^60^^^^^45^75^if  ( p < 0.0 || p > 1.0 )  {^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P3_Replace_Literal]^if  ( p < 0.0 || p > Infinity )  {^60^^^^^45^75^if  ( p < 0.0 || p > 1.0 )  {^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^if  ( x < 0.0 || p > 1.0 )  {^60^^^^^45^75^if  ( p < 0.0 || p > 1.0 )  {^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P6_Replace_Expression]^if  ( p < 0.0 ) {^60^^^^^45^75^if  ( p < 0.0 || p > 1.0 )  {^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P6_Replace_Expression]^if  (  p > 1.0 )  {^60^^^^^45^75^if  ( p < 0.0 || p > 1.0 )  {^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P8_Replace_Mix]^if  ( p < 0.0D || p > 1.0 )  {^60^^^^^45^75^if  ( p < 0.0 || p > 1.0 )  {^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("p must be between 0.0 and 1.0, inclusive.");^60^61^62^^^45^75^if  ( p < 0.0 || p > 1.0 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P16_Remove_Block]^^60^61^62^^^45^75^if  ( p < 0.0 || p > 1.0 )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( p < 0.0 )  ||  ( p > 1.0 )  )  {     throw new IllegalArgumentException ( "p must be between 0.0 and 1.0, inclusive." ) ; }^61^^^^^46^76^[Delete]^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P8_Replace_Mix]^throw new FunctionEvaluationException ( x, "Error computing cdf", ex ) ; ;^61^^^^^46^76^throw new IllegalArgumentException  (" ")  ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P11_Insert_Donor_Statement]^throw new MathException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^61^^^^^46^76^throw new IllegalArgumentException  (" ")  ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P2_Replace_Operator]^return cumulativeProbability ( x )   <  p;^71^^^^^56^86^return cumulativeProbability ( x )  - p;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^return cumulativeProbability ( upperBound )  - p;^71^^^^^56^86^return cumulativeProbability ( x )  - p;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^return cumulativeProbability ( x )  - upperBound;^71^^^^^56^86^return cumulativeProbability ( x )  - p;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^return cumulativeProbability ( p )  - x;^71^^^^^56^86^return cumulativeProbability ( x )  - p;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P8_Replace_Mix]^return cumulativeProbability ( x )   ;^71^^^^^56^86^return cumulativeProbability ( x )  - p;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^return cumulativeProbability ( root )  - p;^71^^^^^56^86^return cumulativeProbability ( x )  - p;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P14_Delete_Statement]^^71^^^^^56^86^return cumulativeProbability ( x )  - p;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P2_Replace_Operator]^return cumulativeProbability ( x )   ==  p;^71^^^^^56^86^return cumulativeProbability ( x )  - p;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P3_Replace_Literal]^throw new FunctionEvaluationException ( x, "omrror computing cdf", ex ) ;^73^74^^^^58^88^throw new FunctionEvaluationException ( x, "Error computing cdf", ex ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P4_Replace_Constructor]^throw new FunctionEvaluationException (  "Error computing cdf", ex ) ;^73^74^^^^58^88^throw new FunctionEvaluationException ( x, "Error computing cdf", ex ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P4_Replace_Constructor]^throw new FunctionEvaluationException ( x, "Error computing cdf" ) ;^73^74^^^^58^88^throw new FunctionEvaluationException ( x, "Error computing cdf", ex ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^throw new FunctionEvaluationException ( upperBound, "Error computing cdf", ex ) ;^73^74^^^^58^88^throw new FunctionEvaluationException ( x, "Error computing cdf", ex ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^throw new FunctionEvaluationException ( ex, "Error computing cdf", x ) ;^73^74^^^^58^88^throw new FunctionEvaluationException ( x, "Error computing cdf", ex ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P8_Replace_Mix]^throw new FunctionEvaluationException ( root, "Error computing cdf", ex ) ;^73^74^^^^58^88^throw new FunctionEvaluationException ( x, "Error computing cdf", ex ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P3_Replace_Literal]^throw new FunctionEvaluationException ( x, "ng rror computing cdf", ex ) ;^73^74^^^^58^88^throw new FunctionEvaluationException ( x, "Error computing cdf", ex ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^} catch  ( MathException eupperBound )  {^72^^^^^57^87^} catch  ( MathException ex )  {^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P1_Replace_Type]^float lowerBound = getDomainLowerBound ( p ) ;^80^^^^^65^95^double lowerBound = getDomainLowerBound ( p ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^double lowerBound = getDomainLowerBound ( x ) ;^80^^^^^65^95^double lowerBound = getDomainLowerBound ( p ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P7_Replace_Invocation]^double lowerBound = getDomainUpperBound ( p ) ;^80^^^^^65^95^double lowerBound = getDomainLowerBound ( p ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P11_Insert_Donor_Statement]^double upperBound = getDomainUpperBound ( p ) ;double lowerBound = getDomainLowerBound ( p ) ;^80^^^^^65^95^double lowerBound = getDomainLowerBound ( p ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P14_Delete_Statement]^^80^81^^^^65^95^double lowerBound = getDomainLowerBound ( p ) ; double upperBound = getDomainUpperBound ( p ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P1_Replace_Type]^int upperBound = getDomainUpperBound ( p ) ;^81^^^^^66^96^double upperBound = getDomainUpperBound ( p ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^double upperBound = getDomainUpperBound ( x ) ;^81^^^^^66^96^double upperBound = getDomainUpperBound ( p ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P7_Replace_Invocation]^double upperBound = getDomainLowerBound ( p ) ;^81^^^^^66^96^double upperBound = getDomainUpperBound ( p ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P11_Insert_Donor_Statement]^double lowerBound = getDomainLowerBound ( p ) ;double upperBound = getDomainUpperBound ( p ) ;^81^^^^^66^96^double upperBound = getDomainUpperBound ( p ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P14_Delete_Statement]^^81^82^^^^66^96^double upperBound = getDomainUpperBound ( p ) ; double[] bracket = null;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P2_Replace_Operator]^if  ( Math.abs ( rootFindingFunction.value ( lowerBound )  )  <= 1E-6 )  {^96^^^^^81^111^if  ( Math.abs ( rootFindingFunction.value ( lowerBound )  )  < 1E-6 )  {^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^if  ( Math.abs ( rootFindingFunction.value ( x )  )  < 1E-6 )  {^96^^^^^81^111^if  ( Math.abs ( rootFindingFunction.value ( lowerBound )  )  < 1E-6 )  {^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^if  ( Math.abs ( lowerBound.value ( rootFindingFunction )  )  < 1E-6 )  {^96^^^^^81^111^if  ( Math.abs ( rootFindingFunction.value ( lowerBound )  )  < 1E-6 )  {^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P8_Replace_Mix]^if  ( Math.abs ( rootFindingFunction .value ( lowerBound )   )  < 1E-6 )  {^96^^^^^81^111^if  ( Math.abs ( rootFindingFunction.value ( lowerBound )  )  < 1E-6 )  {^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P9_Replace_Statement]^if  ( Math.abs ( rootFindingFunction.value ( upperBound )  )  < 1E-6 )  {^96^^^^^81^111^if  ( Math.abs ( rootFindingFunction.value ( lowerBound )  )  < 1E-6 )  {^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P15_Unwrap_Block]^return lowerBound;^96^97^98^^^81^111^if  ( Math.abs ( rootFindingFunction.value ( lowerBound )  )  < 1E-6 )  { return lowerBound; }^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P16_Remove_Block]^^96^97^98^^^81^111^if  ( Math.abs ( rootFindingFunction.value ( lowerBound )  )  < 1E-6 )  { return lowerBound; }^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( abs ( rootFindingFunction.value ( upperBound )  )  )  < 1.0E-6 )  {     return upperBound; }^96^^^^^81^111^[Delete]^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^return x;^97^^^^^82^112^return lowerBound;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P2_Replace_Operator]^if  ( Math.abs ( rootFindingFunction.value ( upperBound )  )  == 1E-6 )  {^99^^^^^84^114^if  ( Math.abs ( rootFindingFunction.value ( upperBound )  )  < 1E-6 )  {^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^if  ( Math.abs ( rootFindingFunction.value ( root )  )  < 1E-6 )  {^99^^^^^84^114^if  ( Math.abs ( rootFindingFunction.value ( upperBound )  )  < 1E-6 )  {^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^if  ( Math.abs ( upperBound.value ( rootFindingFunction )  )  < 1E-6 )  {^99^^^^^84^114^if  ( Math.abs ( rootFindingFunction.value ( upperBound )  )  < 1E-6 )  {^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P8_Replace_Mix]^if  ( Math.abs ( rootFindingFunction .value ( p )   )  < 1E-6 )  {^99^^^^^84^114^if  ( Math.abs ( rootFindingFunction.value ( upperBound )  )  < 1E-6 )  {^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P9_Replace_Statement]^if  ( Math.abs ( rootFindingFunction.value ( lowerBound )  )  < 1E-6 )  {^99^^^^^84^114^if  ( Math.abs ( rootFindingFunction.value ( upperBound )  )  < 1E-6 )  {^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P15_Unwrap_Block]^return upperBound;^99^100^101^^^84^114^if  ( Math.abs ( rootFindingFunction.value ( upperBound )  )  < 1E-6 )  { return upperBound; }^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P16_Remove_Block]^^99^100^101^^^84^114^if  ( Math.abs ( rootFindingFunction.value ( upperBound )  )  < 1E-6 )  { return upperBound; }^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( abs ( rootFindingFunction.value ( lowerBound )  )  )  < 1.0E-6 )  {     return lowerBound; }^99^^^^^84^114^[Delete]^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^return x;^100^^^^^85^115^return upperBound;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P8_Replace_Mix]^return root;^100^^^^^85^115^return upperBound;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) , lowerBound, x ) ;^84^85^86^^^69^99^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) , lowerBound, upperBound ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^bracket = UnivariateRealSolverUtils.bracket (  getInitialDomain ( p ) , lowerBound, upperBound ) ;^84^85^86^^^69^99^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) , lowerBound, upperBound ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) ,  upperBound ) ;^84^85^86^^^69^99^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) , lowerBound, upperBound ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) , lowerBound ) ;^84^85^86^^^69^99^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) , lowerBound, upperBound ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^bracket = UnivariateRealSolverUtils.bracket ( lowerBound, getInitialDomain ( p ) , rootFindingFunction, upperBound ) ;^84^85^86^^^69^99^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) , lowerBound, upperBound ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( upperBound ) , lowerBound, p ) ;^84^85^86^^^69^99^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) , lowerBound, upperBound ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) , upperBound, lowerBound ) ;^84^85^86^^^69^99^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) , lowerBound, upperBound ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P7_Replace_Invocation]^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getDomainLowerBound ( p ) , lowerBound, upperBound ) ;^84^85^86^^^69^99^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) , lowerBound, upperBound ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P8_Replace_Mix]^bracket =  UnivariateRealSolverUtils.bracket ( null, getInitialDomain ( p ) , lowerBound, upperBound ) ;^84^85^86^^^69^99^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) , lowerBound, upperBound ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( x ) , lowerBound, upperBound ) ;^84^85^86^^^69^99^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) , lowerBound, upperBound ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) , x, upperBound ) ;^84^85^86^^^69^99^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) , lowerBound, upperBound ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^bracket = UnivariateRealSolverUtils.bracket ( p, getInitialDomain ( rootFindingFunction ) , lowerBound, upperBound ) ;^84^85^86^^^69^99^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) , lowerBound, upperBound ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( lowerBound ) , p, upperBound ) ;^84^85^86^^^69^99^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) , lowerBound, upperBound ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P8_Replace_Mix]^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getDomainLowerBound ( x ) , lowerBound, upperBound ) ;^84^85^86^^^69^99^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) , lowerBound, upperBound ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P14_Delete_Statement]^^84^85^86^^^69^99^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) , lowerBound, upperBound ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^rootFindingFunction, getInitialDomain ( upperBound ) , lowerBound, upperBound ) ;^85^86^^^^70^100^rootFindingFunction, getInitialDomain ( p ) , lowerBound, upperBound ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P7_Replace_Invocation]^rootFindingFunction, getDomainLowerBound ( p ) , lowerBound, upperBound ) ;^85^86^^^^70^100^rootFindingFunction, getInitialDomain ( p ) , lowerBound, upperBound ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P8_Replace_Mix]^rootFindingFunction, getDomainLowerBound ( upperBound ) , lowerBound, upperBound ) ;^85^86^^^^70^100^rootFindingFunction, getInitialDomain ( p ) , lowerBound, upperBound ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P14_Delete_Statement]^^85^86^^^^70^100^rootFindingFunction, getInitialDomain ( p ) , lowerBound, upperBound ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new MathException  (" ")  ;^103^^^^^88^118^throw new MathException  (" ")  ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P7_Replace_Invocation]^bracket = UnivariateRealSolverUtils .solve ( rootFindingFunction , x , upperBound )  ;^84^85^86^^^69^99^bracket = UnivariateRealSolverUtils.bracket ( rootFindingFunction, getInitialDomain ( p ) , lowerBound, upperBound ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^rootFindingFunction, getInitialDomain ( x ) , lowerBound, upperBound ) ;^85^86^^^^70^100^rootFindingFunction, getInitialDomain ( p ) , lowerBound, upperBound ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P8_Replace_Mix]^rootFindingFunction, getDomainLowerBound ( x ) , lowerBound, upperBound ) ;^85^86^^^^70^100^rootFindingFunction, getInitialDomain ( p ) , lowerBound, upperBound ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( abs ( rootFindingFunction.value ( lowerBound )  )  )  < 1.0E-6 )  {     return lowerBound; }^96^^^^^81^111^[Delete]^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( Math.abs ( rootFindingFunction .value ( root )   )  < 1E-6 )  {^96^^^^^81^111^if  ( Math.abs ( rootFindingFunction.value ( lowerBound )  )  < 1E-6 )  {^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^if  ( Math.abs ( rootFindingFunction.value ( x )  )  < 1E-6 )  {^99^^^^^84^114^if  ( Math.abs ( rootFindingFunction.value ( upperBound )  )  < 1E-6 )  {^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( abs ( rootFindingFunction.value ( upperBound )  )  )  < 1.0E-6 )  {     return upperBound; }^99^^^^^84^114^[Delete]^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P1_Replace_Type]^int root = UnivariateRealSolverUtils.solve ( rootFindingFunction, bracket[0],bracket[1] ) ;^107^108^^^^92^122^double root = UnivariateRealSolverUtils.solve ( rootFindingFunction, bracket[0],bracket[1] ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P3_Replace_Literal]^double root = UnivariateRealSolverUtils.solve ( rootFindingFunction, bracket[null],bracket[1] ) ;^107^108^^^^92^122^double root = UnivariateRealSolverUtils.solve ( rootFindingFunction, bracket[0],bracket[1] ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P3_Replace_Literal]^double root = UnivariateRealSolverUtils.solve ( rootFindingFunction, bracket[0],bracket[-2] ) ;^107^108^^^^92^122^double root = UnivariateRealSolverUtils.solve ( rootFindingFunction, bracket[0],bracket[1] ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^double root = UnivariateRealSolverUtils.solve (  bracket[0],bracket[1] ) ;^107^108^^^^92^122^double root = UnivariateRealSolverUtils.solve ( rootFindingFunction, bracket[0],bracket[1] ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^double root = UnivariateRealSolverUtils.solve ( rootFindingFunction[0],bracket[1] ) ;^107^108^^^^92^122^double root = UnivariateRealSolverUtils.solve ( rootFindingFunction, bracket[0],bracket[1] ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^double root = UnivariateRealSolverUtils.solve ( bracket, rootFindingFunction[0],bracket[1] ) ;^107^108^^^^92^122^double root = UnivariateRealSolverUtils.solve ( rootFindingFunction, bracket[0],bracket[1] ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P3_Replace_Literal]^double root = UnivariateRealSolverUtils.solve ( rootFindingFunction, bracket[0],bracket[9] ) ;^107^108^^^^92^122^double root = UnivariateRealSolverUtils.solve ( rootFindingFunction, bracket[0],bracket[1] ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P7_Replace_Invocation]^double root = UnivariateRealSolverUtils .bracket ( rootFindingFunction , p , lowerBound , p )  ;^107^108^^^^92^122^double root = UnivariateRealSolverUtils.solve ( rootFindingFunction, bracket[0],bracket[1] ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P14_Delete_Statement]^^107^108^^^^92^122^double root = UnivariateRealSolverUtils.solve ( rootFindingFunction, bracket[0],bracket[1] ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P5_Replace_Variable]^return x;^109^^^^^94^124^return root;^[CLASS] AbstractContinuousDistribution 1  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] boolean  double[]  bracket  double  lowerBound  p  root  upperBound  x  MathException  ex  ConvergenceException  ex  UnivariateRealFunction  rootFindingFunction  long  serialVersionUID  
[P2_Replace_Operator]^return cumulativeProbability ( x )   <  p;^71^^^^^69^76^return cumulativeProbability ( x )  - p;^[CLASS] AbstractContinuousDistribution 1  [METHOD] value [RETURN_TYPE] double   double x [VARIABLES] boolean  long  serialVersionUID  double  x  MathException  ex  
[P5_Replace_Variable]^return cumulativeProbability ( p )  - x;^71^^^^^69^76^return cumulativeProbability ( x )  - p;^[CLASS] AbstractContinuousDistribution 1  [METHOD] value [RETURN_TYPE] double   double x [VARIABLES] boolean  long  serialVersionUID  double  x  MathException  ex  
[P8_Replace_Mix]^return cumulativeProbability ( x )   ||  p;^71^^^^^69^76^return cumulativeProbability ( x )  - p;^[CLASS] AbstractContinuousDistribution 1  [METHOD] value [RETURN_TYPE] double   double x [VARIABLES] boolean  long  serialVersionUID  double  x  MathException  ex  
[P14_Delete_Statement]^^71^^^^^69^76^return cumulativeProbability ( x )  - p;^[CLASS] AbstractContinuousDistribution 1  [METHOD] value [RETURN_TYPE] double   double x [VARIABLES] boolean  long  serialVersionUID  double  x  MathException  ex  
[P2_Replace_Operator]^return cumulativeProbability ( x )   <=  p;^71^^^^^69^76^return cumulativeProbability ( x )  - p;^[CLASS] AbstractContinuousDistribution 1  [METHOD] value [RETURN_TYPE] double   double x [VARIABLES] boolean  long  serialVersionUID  double  x  MathException  ex  
[P3_Replace_Literal]^throw new FunctionEvaluationException ( x, "ut", ex ) ;^73^74^^^^69^76^throw new FunctionEvaluationException ( x, "Error computing cdf", ex ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] value [RETURN_TYPE] double   double x [VARIABLES] boolean  long  serialVersionUID  double  x  MathException  ex  
[P4_Replace_Constructor]^throw new FunctionEvaluationException (  "Error computing cdf", ex ) ;^73^74^^^^69^76^throw new FunctionEvaluationException ( x, "Error computing cdf", ex ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] value [RETURN_TYPE] double   double x [VARIABLES] boolean  long  serialVersionUID  double  x  MathException  ex  
[P4_Replace_Constructor]^throw new FunctionEvaluationException ( x, "Error computing cdf" ) ;^73^74^^^^69^76^throw new FunctionEvaluationException ( x, "Error computing cdf", ex ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] value [RETURN_TYPE] double   double x [VARIABLES] boolean  long  serialVersionUID  double  x  MathException  ex  
[P5_Replace_Variable]^throw new FunctionEvaluationException ( ex, "Error computing cdf", x ) ;^73^74^^^^69^76^throw new FunctionEvaluationException ( x, "Error computing cdf", ex ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] value [RETURN_TYPE] double   double x [VARIABLES] boolean  long  serialVersionUID  double  x  MathException  ex  
[P3_Replace_Literal]^throw new FunctionEvaluationException ( x, " c", ex ) ;^73^74^^^^69^76^throw new FunctionEvaluationException ( x, "Error computing cdf", ex ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] value [RETURN_TYPE] double   double x [VARIABLES] boolean  long  serialVersionUID  double  x  MathException  ex  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^73^74^^^^69^76^throw new FunctionEvaluationException ( x, "Error computing cdf", ex ) ;^[CLASS] AbstractContinuousDistribution 1  [METHOD] value [RETURN_TYPE] double   double x [VARIABLES] boolean  long  serialVersionUID  double  x  MathException  ex  
[P2_Replace_Operator]^return cumulativeProbability ( x )   <=  p;^71^^^^^69^76^return cumulativeProbability ( x )  - p;^[CLASS] 1  [METHOD] value [RETURN_TYPE] double   double x [VARIABLES] boolean  double  x  MathException  ex  
[P5_Replace_Variable]^return cumulativeProbability ( p )  - x;^71^^^^^69^76^return cumulativeProbability ( x )  - p;^[CLASS] 1  [METHOD] value [RETURN_TYPE] double   double x [VARIABLES] boolean  double  x  MathException  ex  
[P8_Replace_Mix]^return false ;^71^^^^^69^76^return cumulativeProbability ( x )  - p;^[CLASS] 1  [METHOD] value [RETURN_TYPE] double   double x [VARIABLES] boolean  double  x  MathException  ex  
[P14_Delete_Statement]^^71^^^^^69^76^return cumulativeProbability ( x )  - p;^[CLASS] 1  [METHOD] value [RETURN_TYPE] double   double x [VARIABLES] boolean  double  x  MathException  ex  
[P2_Replace_Operator]^return cumulativeProbability ( x )   !=  p;^71^^^^^69^76^return cumulativeProbability ( x )  - p;^[CLASS] 1  [METHOD] value [RETURN_TYPE] double   double x [VARIABLES] boolean  double  x  MathException  ex  
[P8_Replace_Mix]^return cumulativeProbability ( x )   ||  p;^71^^^^^69^76^return cumulativeProbability ( x )  - p;^[CLASS] 1  [METHOD] value [RETURN_TYPE] double   double x [VARIABLES] boolean  double  x  MathException  ex  
[P3_Replace_Literal]^throw new FunctionEvaluationException ( x, "rror computing cdf", ex ) ;^73^74^^^^69^76^throw new FunctionEvaluationException ( x, "Error computing cdf", ex ) ;^[CLASS] 1  [METHOD] value [RETURN_TYPE] double   double x [VARIABLES] boolean  double  x  MathException  ex  
[P4_Replace_Constructor]^throw new FunctionEvaluationException (  "Error computing cdf", ex ) ;^73^74^^^^69^76^throw new FunctionEvaluationException ( x, "Error computing cdf", ex ) ;^[CLASS] 1  [METHOD] value [RETURN_TYPE] double   double x [VARIABLES] boolean  double  x  MathException  ex  
[P4_Replace_Constructor]^throw new FunctionEvaluationException ( x, "Error computing cdf" ) ;^73^74^^^^69^76^throw new FunctionEvaluationException ( x, "Error computing cdf", ex ) ;^[CLASS] 1  [METHOD] value [RETURN_TYPE] double   double x [VARIABLES] boolean  double  x  MathException  ex  
[P5_Replace_Variable]^throw new FunctionEvaluationException ( ex, "Error computing cdf", x ) ;^73^74^^^^69^76^throw new FunctionEvaluationException ( x, "Error computing cdf", ex ) ;^[CLASS] 1  [METHOD] value [RETURN_TYPE] double   double x [VARIABLES] boolean  double  x  MathException  ex  
[P3_Replace_Literal]^throw new FunctionEvaluationException ( x, "rro", ex ) ;^73^74^^^^69^76^throw new FunctionEvaluationException ( x, "Error computing cdf", ex ) ;^[CLASS] 1  [METHOD] value [RETURN_TYPE] double   double x [VARIABLES] boolean  double  x  MathException  ex  
[P8_Replace_Mix]^return ;^73^74^^^^69^76^throw new FunctionEvaluationException ( x, "Error computing cdf", ex ) ;^[CLASS] 1  [METHOD] value [RETURN_TYPE] double   double x [VARIABLES] boolean  double  x  MathException  ex  
