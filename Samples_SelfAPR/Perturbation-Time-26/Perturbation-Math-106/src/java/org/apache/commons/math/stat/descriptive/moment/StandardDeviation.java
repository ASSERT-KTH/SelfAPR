[P1_Replace_Type]^private static final  short  serialVersionUID = 5728716329662425188L;^43^^^^^38^48^private static final long serialVersionUID = 5728716329662425188L;^[CLASS] StandardDeviation   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID = 5728716329662425188;^43^^^^^38^48^private static final long serialVersionUID = 5728716329662425188L;^[CLASS] StandardDeviation   [VARIABLES] 
[P8_Replace_Mix]^private Variance variance = false;^46^^^^^41^51^private Variance variance = null;^[CLASS] StandardDeviation   [VARIABLES] 
[P4_Replace_Constructor]^variance = variance =  new Variance ( m2 )  ;^53^^^^^52^54^variance = new Variance (  ) ;^[CLASS] StandardDeviation  [METHOD] <init> [RETURN_TYPE] StandardDeviation()   [VARIABLES] long  serialVersionUID  Variance  variance  boolean  
[P8_Replace_Mix]^variance =  new Variance ( m2 )  ;^53^^^^^52^54^variance = new Variance (  ) ;^[CLASS] StandardDeviation  [METHOD] <init> [RETURN_TYPE] StandardDeviation()   [VARIABLES] long  serialVersionUID  Variance  variance  boolean  
[P11_Insert_Donor_Statement]^variance = new Variance ( m2 ) ;variance = new Variance (  ) ;^53^^^^^52^54^variance = new Variance (  ) ;^[CLASS] StandardDeviation  [METHOD] <init> [RETURN_TYPE] StandardDeviation()   [VARIABLES] long  serialVersionUID  Variance  variance  boolean  
[P11_Insert_Donor_Statement]^variance = new Variance ( isBiasCorrected ) ;variance = new Variance (  ) ;^53^^^^^52^54^variance = new Variance (  ) ;^[CLASS] StandardDeviation  [METHOD] <init> [RETURN_TYPE] StandardDeviation()   [VARIABLES] long  serialVersionUID  Variance  variance  boolean  
[P11_Insert_Donor_Statement]^variance = new Variance ( isBiasCorrected, m2 ) ;variance = new Variance (  ) ;^53^^^^^52^54^variance = new Variance (  ) ;^[CLASS] StandardDeviation  [METHOD] <init> [RETURN_TYPE] StandardDeviation()   [VARIABLES] long  serialVersionUID  Variance  variance  boolean  
[P8_Replace_Mix]^variance =  new Variance ( null ) ;^62^^^^^61^63^variance = new Variance ( m2 ) ;^[CLASS] StandardDeviation  [METHOD] <init> [RETURN_TYPE] SecondMoment)   SecondMoment m2 [VARIABLES] boolean  long  serialVersionUID  Variance  variance  SecondMoment  m2  
[P11_Insert_Donor_Statement]^variance = new Variance ( isBiasCorrected ) ;variance = new Variance ( m2 ) ;^62^^^^^61^63^variance = new Variance ( m2 ) ;^[CLASS] StandardDeviation  [METHOD] <init> [RETURN_TYPE] SecondMoment)   SecondMoment m2 [VARIABLES] boolean  long  serialVersionUID  Variance  variance  SecondMoment  m2  
[P11_Insert_Donor_Statement]^variance = new Variance ( isBiasCorrected, m2 ) ;variance = new Variance ( m2 ) ;^62^^^^^61^63^variance = new Variance ( m2 ) ;^[CLASS] StandardDeviation  [METHOD] <init> [RETURN_TYPE] SecondMoment)   SecondMoment m2 [VARIABLES] boolean  long  serialVersionUID  Variance  variance  SecondMoment  m2  
[P11_Insert_Donor_Statement]^variance = new Variance (  ) ;variance = new Variance ( m2 ) ;^62^^^^^61^63^variance = new Variance ( m2 ) ;^[CLASS] StandardDeviation  [METHOD] <init> [RETURN_TYPE] SecondMoment)   SecondMoment m2 [VARIABLES] boolean  long  serialVersionUID  Variance  variance  SecondMoment  m2  
[P4_Replace_Constructor]^variance = variance =  new Variance (  )  ;^76^^^^^75^77^variance = new Variance ( isBiasCorrected ) ;^[CLASS] StandardDeviation  [METHOD] <init> [RETURN_TYPE] StandardDeviation(boolean)   boolean isBiasCorrected [VARIABLES] long  serialVersionUID  Variance  variance  boolean  isBiasCorrected  
[P8_Replace_Mix]^variance =  new Variance ( null ) ;^76^^^^^75^77^variance = new Variance ( isBiasCorrected ) ;^[CLASS] StandardDeviation  [METHOD] <init> [RETURN_TYPE] StandardDeviation(boolean)   boolean isBiasCorrected [VARIABLES] long  serialVersionUID  Variance  variance  boolean  isBiasCorrected  
[P11_Insert_Donor_Statement]^variance = new Variance ( m2 ) ;variance = new Variance ( isBiasCorrected ) ;^76^^^^^75^77^variance = new Variance ( isBiasCorrected ) ;^[CLASS] StandardDeviation  [METHOD] <init> [RETURN_TYPE] StandardDeviation(boolean)   boolean isBiasCorrected [VARIABLES] long  serialVersionUID  Variance  variance  boolean  isBiasCorrected  
[P11_Insert_Donor_Statement]^variance = new Variance ( isBiasCorrected, m2 ) ;variance = new Variance ( isBiasCorrected ) ;^76^^^^^75^77^variance = new Variance ( isBiasCorrected ) ;^[CLASS] StandardDeviation  [METHOD] <init> [RETURN_TYPE] StandardDeviation(boolean)   boolean isBiasCorrected [VARIABLES] long  serialVersionUID  Variance  variance  boolean  isBiasCorrected  
[P11_Insert_Donor_Statement]^variance = new Variance (  ) ;variance = new Variance ( isBiasCorrected ) ;^76^^^^^75^77^variance = new Variance ( isBiasCorrected ) ;^[CLASS] StandardDeviation  [METHOD] <init> [RETURN_TYPE] StandardDeviation(boolean)   boolean isBiasCorrected [VARIABLES] long  serialVersionUID  Variance  variance  boolean  isBiasCorrected  
[P4_Replace_Constructor]^variance = new Variance (  m2 ) ;^91^^^^^90^92^variance = new Variance ( isBiasCorrected, m2 ) ;^[CLASS] StandardDeviation  [METHOD] <init> [RETURN_TYPE] SecondMoment)   boolean isBiasCorrected SecondMoment m2 [VARIABLES] boolean  isBiasCorrected  long  serialVersionUID  Variance  variance  SecondMoment  m2  
[P4_Replace_Constructor]^variance = new Variance ( isBiasCorrected ) ;^91^^^^^90^92^variance = new Variance ( isBiasCorrected, m2 ) ;^[CLASS] StandardDeviation  [METHOD] <init> [RETURN_TYPE] SecondMoment)   boolean isBiasCorrected SecondMoment m2 [VARIABLES] boolean  isBiasCorrected  long  serialVersionUID  Variance  variance  SecondMoment  m2  
[P5_Replace_Variable]^variance = new Variance ( m2, isBiasCorrected ) ;^91^^^^^90^92^variance = new Variance ( isBiasCorrected, m2 ) ;^[CLASS] StandardDeviation  [METHOD] <init> [RETURN_TYPE] SecondMoment)   boolean isBiasCorrected SecondMoment m2 [VARIABLES] boolean  isBiasCorrected  long  serialVersionUID  Variance  variance  SecondMoment  m2  
[P8_Replace_Mix]^variance =  new Variance ( null, m2 ) ;^91^^^^^90^92^variance = new Variance ( isBiasCorrected, m2 ) ;^[CLASS] StandardDeviation  [METHOD] <init> [RETURN_TYPE] SecondMoment)   boolean isBiasCorrected SecondMoment m2 [VARIABLES] boolean  isBiasCorrected  long  serialVersionUID  Variance  variance  SecondMoment  m2  
[P11_Insert_Donor_Statement]^variance = new Variance ( m2 ) ;variance = new Variance ( isBiasCorrected, m2 ) ;^91^^^^^90^92^variance = new Variance ( isBiasCorrected, m2 ) ;^[CLASS] StandardDeviation  [METHOD] <init> [RETURN_TYPE] SecondMoment)   boolean isBiasCorrected SecondMoment m2 [VARIABLES] boolean  isBiasCorrected  long  serialVersionUID  Variance  variance  SecondMoment  m2  
[P11_Insert_Donor_Statement]^variance = new Variance ( isBiasCorrected ) ;variance = new Variance ( isBiasCorrected, m2 ) ;^91^^^^^90^92^variance = new Variance ( isBiasCorrected, m2 ) ;^[CLASS] StandardDeviation  [METHOD] <init> [RETURN_TYPE] SecondMoment)   boolean isBiasCorrected SecondMoment m2 [VARIABLES] boolean  isBiasCorrected  long  serialVersionUID  Variance  variance  SecondMoment  m2  
[P11_Insert_Donor_Statement]^variance = new Variance (  ) ;variance = new Variance ( isBiasCorrected, m2 ) ;^91^^^^^90^92^variance = new Variance ( isBiasCorrected, m2 ) ;^[CLASS] StandardDeviation  [METHOD] <init> [RETURN_TYPE] SecondMoment)   boolean isBiasCorrected SecondMoment m2 [VARIABLES] boolean  isBiasCorrected  long  serialVersionUID  Variance  variance  SecondMoment  m2  
[P7_Replace_Invocation]^variance.evaluate ( d ) ;^98^^^^^97^99^variance.increment ( d ) ;^[CLASS] StandardDeviation  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] boolean  long  serialVersionUID  Variance  variance  double  d  
[P14_Delete_Statement]^^98^^^^^97^99^variance.increment ( d ) ;^[CLASS] StandardDeviation  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] boolean  long  serialVersionUID  Variance  variance  double  d  
[P11_Insert_Donor_Statement]^variance.clear (  ) ;variance.increment ( d ) ;^98^^^^^97^99^variance.increment ( d ) ;^[CLASS] StandardDeviation  [METHOD] increment [RETURN_TYPE] void   final double d [VARIABLES] boolean  long  serialVersionUID  Variance  variance  double  d  
[P7_Replace_Invocation]^return variance.clear (  ) ;^105^^^^^104^106^return variance.getN (  ) ;^[CLASS] StandardDeviation  [METHOD] getN [RETURN_TYPE] long   [VARIABLES] long  serialVersionUID  Variance  variance  boolean  
[P8_Replace_Mix]^return variance .getResult (  )  ;^105^^^^^104^106^return variance.getN (  ) ;^[CLASS] StandardDeviation  [METHOD] getN [RETURN_TYPE] long   [VARIABLES] long  serialVersionUID  Variance  variance  boolean  
[P14_Delete_Statement]^^105^^^^^104^106^return variance.getN (  ) ;^[CLASS] StandardDeviation  [METHOD] getN [RETURN_TYPE] long   [VARIABLES] long  serialVersionUID  Variance  variance  boolean  
[P7_Replace_Invocation]^return Math.sqrt ( variance.getN (  )  ) ;^112^^^^^111^113^return Math.sqrt ( variance.getResult (  )  ) ;^[CLASS] StandardDeviation  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] long  serialVersionUID  Variance  variance  boolean  
[P14_Delete_Statement]^^112^^^^^111^113^return Math.sqrt ( variance.getResult (  )  ) ;^[CLASS] StandardDeviation  [METHOD] getResult [RETURN_TYPE] double   [VARIABLES] long  serialVersionUID  Variance  variance  boolean  
[P7_Replace_Invocation]^variance.getN (  ) ;^119^^^^^118^120^variance.clear (  ) ;^[CLASS] StandardDeviation  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] long  serialVersionUID  Variance  variance  boolean  
[P14_Delete_Statement]^^119^^^^^118^120^variance.clear (  ) ;^[CLASS] StandardDeviation  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] long  serialVersionUID  Variance  variance  boolean  
[P11_Insert_Donor_Statement]^return variance.getN (  ) ;variance.clear (  ) ;^119^^^^^118^120^variance.clear (  ) ;^[CLASS] StandardDeviation  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] long  serialVersionUID  Variance  variance  boolean  
[P11_Insert_Donor_Statement]^variance.increment ( d ) ;variance.clear (  ) ;^119^^^^^118^120^variance.clear (  ) ;^[CLASS] StandardDeviation  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] long  serialVersionUID  Variance  variance  boolean  
[P5_Replace_Variable]^return Math.sqrt ( values.evaluate ( variance )  ) ;^137^^^^^136^138^return Math.sqrt ( variance.evaluate ( values )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  
[P7_Replace_Invocation]^return Math.sqrt ( variance.Variance ( values )  ) ;^137^^^^^136^138^return Math.sqrt ( variance.evaluate ( values )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  
[P14_Delete_Statement]^^137^^^^^136^138^return Math.sqrt ( variance.evaluate ( values )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  
[P5_Replace_Variable]^return Math.sqrt ( variance.evaluate ( values, length, length )  ) ;^159^^^^^158^160^return Math.sqrt ( variance.evaluate ( values, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  int  begin  length  
[P5_Replace_Variable]^return Math.sqrt ( variance.evaluate (  begin, length )  ) ;^159^^^^^158^160^return Math.sqrt ( variance.evaluate ( values, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  int  begin  length  
[P5_Replace_Variable]^return Math.sqrt ( variance.evaluate ( values,  length )  ) ;^159^^^^^158^160^return Math.sqrt ( variance.evaluate ( values, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  int  begin  length  
[P5_Replace_Variable]^return Math.sqrt ( variance.evaluate ( values, begin )  ) ;^159^^^^^158^160^return Math.sqrt ( variance.evaluate ( values, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  int  begin  length  
[P5_Replace_Variable]^return Math.sqrt ( variance.evaluate ( length, begin, values )  ) ;^159^^^^^158^160^return Math.sqrt ( variance.evaluate ( values, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  int  begin  length  
[P5_Replace_Variable]^return Math.sqrt ( variance.evaluate ( values, length, begin )  ) ;^159^^^^^158^160^return Math.sqrt ( variance.evaluate ( values, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  int  begin  length  
[P5_Replace_Variable]^return Math.sqrt ( length.evaluate ( values, begin, variance )  ) ;^159^^^^^158^160^return Math.sqrt ( variance.evaluate ( values, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  int  begin  length  
[P5_Replace_Variable]^return Math.sqrt ( begin.evaluate ( values, variance, length )  ) ;^159^^^^^158^160^return Math.sqrt ( variance.evaluate ( values, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  int  begin  length  
[P7_Replace_Invocation]^return Math.sqrt ( variance .evaluate ( values )   ) ;^159^^^^^158^160^return Math.sqrt ( variance.evaluate ( values, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  int  begin  length  
[P5_Replace_Variable]^return Math.sqrt ( variance.evaluate ( values, begin, begin )  ) ;^159^^^^^158^160^return Math.sqrt ( variance.evaluate ( values, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  int  begin  length  
[P5_Replace_Variable]^return Math.sqrt ( variance.evaluate ( begin, values, length )  ) ;^159^^^^^158^160^return Math.sqrt ( variance.evaluate ( values, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  int  begin  length  
[P14_Delete_Statement]^^159^^^^^158^160^return Math.sqrt ( variance.evaluate ( values, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  int  begin  length  
[P5_Replace_Variable]^return Math.sqrt ( values.evaluate ( variance, begin, length )  ) ;^159^^^^^158^160^return Math.sqrt ( variance.evaluate ( values, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  int  begin  length  
[P5_Replace_Variable]^return Math.sqrt ( variance.evaluate (  mean, begin, length )  ) ;^188^^^^^186^189^return Math.sqrt ( variance.evaluate ( values, mean, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  int  begin  length  
[P5_Replace_Variable]^return Math.sqrt ( variance.evaluate ( values,  begin, length )  ) ;^188^^^^^186^189^return Math.sqrt ( variance.evaluate ( values, mean, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  int  begin  length  
[P5_Replace_Variable]^return Math.sqrt ( variance.evaluate ( values, mean,  length )  ) ;^188^^^^^186^189^return Math.sqrt ( variance.evaluate ( values, mean, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  int  begin  length  
[P5_Replace_Variable]^return Math.sqrt ( variance.evaluate ( values, mean, begin )  ) ;^188^^^^^186^189^return Math.sqrt ( variance.evaluate ( values, mean, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  int  begin  length  
[P5_Replace_Variable]^return Math.sqrt ( values.evaluate ( variance, mean, begin, length )  ) ;^188^^^^^186^189^return Math.sqrt ( variance.evaluate ( values, mean, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  int  begin  length  
[P5_Replace_Variable]^return Math.sqrt ( mean.evaluate ( values, variance, begin, length )  ) ;^188^^^^^186^189^return Math.sqrt ( variance.evaluate ( values, mean, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  int  begin  length  
[P5_Replace_Variable]^return Math.sqrt ( variance.evaluate ( begin, mean, values, length )  ) ;^188^^^^^186^189^return Math.sqrt ( variance.evaluate ( values, mean, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  int  begin  length  
[P5_Replace_Variable]^return Math.sqrt ( variance.evaluate ( values, mean, length, begin )  ) ;^188^^^^^186^189^return Math.sqrt ( variance.evaluate ( values, mean, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  int  begin  length  
[P5_Replace_Variable]^return Math.sqrt ( length.evaluate ( values, mean, begin, variance )  ) ;^188^^^^^186^189^return Math.sqrt ( variance.evaluate ( values, mean, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  int  begin  length  
[P8_Replace_Mix]^return Math.sqrt ( variance.evaluate ( values, mean, begin, begin )  ) ;^188^^^^^186^189^return Math.sqrt ( variance.evaluate ( values, mean, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  int  begin  length  
[P5_Replace_Variable]^return Math.sqrt ( variance.evaluate ( values, mean, length, length )  ) ;^188^^^^^186^189^return Math.sqrt ( variance.evaluate ( values, mean, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  int  begin  length  
[P5_Replace_Variable]^return Math.sqrt ( variance.evaluate ( mean, values, begin, length )  ) ;^188^^^^^186^189^return Math.sqrt ( variance.evaluate ( values, mean, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  int  begin  length  
[P5_Replace_Variable]^return Math.sqrt ( variance.evaluate ( values, begin, mean, length )  ) ;^188^^^^^186^189^return Math.sqrt ( variance.evaluate ( values, mean, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  int  begin  length  
[P7_Replace_Invocation]^return Math.sqrt ( variance .evaluate ( values )   ) ;^188^^^^^186^189^return Math.sqrt ( variance.evaluate ( values, mean, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  int  begin  length  
[P14_Delete_Statement]^^188^^^^^186^189^return Math.sqrt ( variance.evaluate ( values, mean, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  int  begin  length  
[P5_Replace_Variable]^return Math.sqrt ( variance.evaluate ( values, length, begin, mean )  ) ;^188^^^^^186^189^return Math.sqrt ( variance.evaluate ( values, mean, begin, length )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean final int begin final int length [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  int  begin  length  
[P5_Replace_Variable]^return Math.sqrt ( variance.evaluate (  mean )  ) ;^213^^^^^212^214^return Math.sqrt ( variance.evaluate ( values, mean )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  
[P5_Replace_Variable]^return Math.sqrt ( variance.evaluate ( values )  ) ;^213^^^^^212^214^return Math.sqrt ( variance.evaluate ( values, mean )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  
[P5_Replace_Variable]^return Math.sqrt ( variance.evaluate ( mean, values )  ) ;^213^^^^^212^214^return Math.sqrt ( variance.evaluate ( values, mean )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  
[P5_Replace_Variable]^return Math.sqrt ( mean.evaluate ( values, variance )  ) ;^213^^^^^212^214^return Math.sqrt ( variance.evaluate ( values, mean )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  
[P5_Replace_Variable]^return Math.sqrt ( values.evaluate ( variance, mean )  ) ;^213^^^^^212^214^return Math.sqrt ( variance.evaluate ( values, mean )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  
[P14_Delete_Statement]^^213^^^^^212^214^return Math.sqrt ( variance.evaluate ( values, mean )  ) ;^[CLASS] StandardDeviation  [METHOD] evaluate [RETURN_TYPE] double   final double[] values final double mean [VARIABLES] boolean  double[]  values  long  serialVersionUID  Variance  variance  double  mean  
[P7_Replace_Invocation]^return variance.Variance (  ) ;^220^^^^^219^221^return variance.isBiasCorrected (  ) ;^[CLASS] StandardDeviation  [METHOD] isBiasCorrected [RETURN_TYPE] boolean   [VARIABLES] long  serialVersionUID  Variance  variance  boolean  
[P14_Delete_Statement]^^220^^^^^219^221^return variance.isBiasCorrected (  ) ;^[CLASS] StandardDeviation  [METHOD] isBiasCorrected [RETURN_TYPE] boolean   [VARIABLES] long  serialVersionUID  Variance  variance  boolean  
[P7_Replace_Invocation]^variance.Variance ( isBiasCorrected ) ;^227^^^^^226^228^variance.setBiasCorrected ( isBiasCorrected ) ;^[CLASS] StandardDeviation  [METHOD] setBiasCorrected [RETURN_TYPE] void   boolean isBiasCorrected [VARIABLES] long  serialVersionUID  Variance  variance  boolean  isBiasCorrected  
[P7_Replace_Invocation]^variance .isBiasCorrected (  )  ;^227^^^^^226^228^variance.setBiasCorrected ( isBiasCorrected ) ;^[CLASS] StandardDeviation  [METHOD] setBiasCorrected [RETURN_TYPE] void   boolean isBiasCorrected [VARIABLES] long  serialVersionUID  Variance  variance  boolean  isBiasCorrected  
[P14_Delete_Statement]^^227^^^^^226^228^variance.setBiasCorrected ( isBiasCorrected ) ;^[CLASS] StandardDeviation  [METHOD] setBiasCorrected [RETURN_TYPE] void   boolean isBiasCorrected [VARIABLES] long  serialVersionUID  Variance  variance  boolean  isBiasCorrected  
