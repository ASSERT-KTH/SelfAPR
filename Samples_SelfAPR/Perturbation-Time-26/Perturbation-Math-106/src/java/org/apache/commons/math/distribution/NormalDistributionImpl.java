[P1_Replace_Type]^private static final  short  serialVersionUID = 8589540077390120676L;^34^^^^^29^39^private static final long serialVersionUID = 8589540077390120676L;^[CLASS] NormalDistributionImpl   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID = 8589540077390120676;^34^^^^^29^39^private static final long serialVersionUID = 8589540077390120676L;^[CLASS] NormalDistributionImpl   [VARIABLES] 
[P1_Replace_Type]^private float mean = 0;^37^^^^^32^42^private double mean = 0;^[CLASS] NormalDistributionImpl   [VARIABLES] 
[P3_Replace_Literal]^private double mean = 1;^37^^^^^32^42^private double mean = 0;^[CLASS] NormalDistributionImpl   [VARIABLES] 
[P8_Replace_Mix]^private double mean  = null ;^37^^^^^32^42^private double mean = 0;^[CLASS] NormalDistributionImpl   [VARIABLES] 
[P1_Replace_Type]^private int standardDeviation = 1;^40^^^^^35^45^private double standardDeviation = 1;^[CLASS] NormalDistributionImpl   [VARIABLES] 
[P3_Replace_Literal]^private double standardDeviation = -6;^40^^^^^35^45^private double standardDeviation = 1;^[CLASS] NormalDistributionImpl   [VARIABLES] 
[P8_Replace_Mix]^private double standardDeviation  = null ;^40^^^^^35^45^private double standardDeviation = 1;^[CLASS] NormalDistributionImpl   [VARIABLES] 
[P14_Delete_Statement]^^48^^^^^47^51^super (  ) ;^[CLASS] NormalDistributionImpl  [METHOD] <init> [RETURN_TYPE] NormalDistributionImpl(double,double)   double mean double sd [VARIABLES] double  mean  sd  standardDeviation  long  serialVersionUID  boolean  
[P5_Replace_Variable]^setMean ( standardDeviation ) ;^49^^^^^47^51^setMean ( mean ) ;^[CLASS] NormalDistributionImpl  [METHOD] <init> [RETURN_TYPE] NormalDistributionImpl(double,double)   double mean double sd [VARIABLES] double  mean  sd  standardDeviation  long  serialVersionUID  boolean  
[P7_Replace_Invocation]^getInitialDomain ( mean ) ;^49^^^^^47^51^setMean ( mean ) ;^[CLASS] NormalDistributionImpl  [METHOD] <init> [RETURN_TYPE] NormalDistributionImpl(double,double)   double mean double sd [VARIABLES] double  mean  sd  standardDeviation  long  serialVersionUID  boolean  
[P14_Delete_Statement]^^49^^^^^47^51^setMean ( mean ) ;^[CLASS] NormalDistributionImpl  [METHOD] <init> [RETURN_TYPE] NormalDistributionImpl(double,double)   double mean double sd [VARIABLES] double  mean  sd  standardDeviation  long  serialVersionUID  boolean  
[P5_Replace_Variable]^setStandardDeviation ( standardDeviation ) ;^50^^^^^47^51^setStandardDeviation ( sd ) ;^[CLASS] NormalDistributionImpl  [METHOD] <init> [RETURN_TYPE] NormalDistributionImpl(double,double)   double mean double sd [VARIABLES] double  mean  sd  standardDeviation  long  serialVersionUID  boolean  
[P7_Replace_Invocation]^getInitialDomain ( sd ) ;^50^^^^^47^51^setStandardDeviation ( sd ) ;^[CLASS] NormalDistributionImpl  [METHOD] <init> [RETURN_TYPE] NormalDistributionImpl(double,double)   double mean double sd [VARIABLES] double  mean  sd  standardDeviation  long  serialVersionUID  boolean  
[P14_Delete_Statement]^^50^^^^^47^51^setStandardDeviation ( sd ) ;^[CLASS] NormalDistributionImpl  [METHOD] <init> [RETURN_TYPE] NormalDistributionImpl(double,double)   double mean double sd [VARIABLES] double  mean  sd  standardDeviation  long  serialVersionUID  boolean  
[P3_Replace_Literal]^this ( 0.0, 0.14285714285714285 ) ;^58^^^^^57^59^this ( 0.0, 1.0 ) ;^[CLASS] NormalDistributionImpl  [METHOD] <init> [RETURN_TYPE] NormalDistributionImpl()   [VARIABLES] double  mean  sd  standardDeviation  long  serialVersionUID  boolean  
[P14_Delete_Statement]^^58^^^^^57^59^this ( 0.0, 1.0 ) ;^[CLASS] NormalDistributionImpl  [METHOD] <init> [RETURN_TYPE] NormalDistributionImpl()   [VARIABLES] double  mean  sd  standardDeviation  long  serialVersionUID  boolean  
[P5_Replace_Variable]^return standardDeviation;^66^^^^^65^67^return mean;^[CLASS] NormalDistributionImpl  [METHOD] getMean [RETURN_TYPE] double   [VARIABLES] double  mean  sd  standardDeviation  long  serialVersionUID  boolean  
[P5_Replace_Variable]^this.mean = standardDeviation;^74^^^^^73^75^this.mean = mean;^[CLASS] NormalDistributionImpl  [METHOD] setMean [RETURN_TYPE] void   double mean [VARIABLES] double  mean  sd  standardDeviation  long  serialVersionUID  boolean  
[P5_Replace_Variable]^return sd;^82^^^^^81^83^return standardDeviation;^[CLASS] NormalDistributionImpl  [METHOD] getStandardDeviation [RETURN_TYPE] double   [VARIABLES] double  mean  sd  standardDeviation  long  serialVersionUID  boolean  
[P2_Replace_Operator]^if  ( sd < 0.0 )  {^91^^^^^90^96^if  ( sd <= 0.0 )  {^[CLASS] NormalDistributionImpl  [METHOD] setStandardDeviation [RETURN_TYPE] void   double sd [VARIABLES] double  mean  sd  standardDeviation  long  serialVersionUID  boolean  
[P5_Replace_Variable]^if  ( standardDeviation <= 0.0 )  {^91^^^^^90^96^if  ( sd <= 0.0 )  {^[CLASS] NormalDistributionImpl  [METHOD] setStandardDeviation [RETURN_TYPE] void   double sd [VARIABLES] double  mean  sd  standardDeviation  long  serialVersionUID  boolean  
[P8_Replace_Mix]^if  ( sd <= 2.0d )  {^91^^^^^90^96^if  ( sd <= 0.0 )  {^[CLASS] NormalDistributionImpl  [METHOD] setStandardDeviation [RETURN_TYPE] void   double sd [VARIABLES] double  mean  sd  standardDeviation  long  serialVersionUID  boolean  
[P9_Replace_Statement]^if  ( p == 1 )  {^91^^^^^90^96^if  ( sd <= 0.0 )  {^[CLASS] NormalDistributionImpl  [METHOD] setStandardDeviation [RETURN_TYPE] void   double sd [VARIABLES] double  mean  sd  standardDeviation  long  serialVersionUID  boolean  
[P9_Replace_Statement]^if  ( p < .5 )  {^91^^^^^90^96^if  ( sd <= 0.0 )  {^[CLASS] NormalDistributionImpl  [METHOD] setStandardDeviation [RETURN_TYPE] void   double sd [VARIABLES] double  mean  sd  standardDeviation  long  serialVersionUID  boolean  
[P9_Replace_Statement]^if  ( p == 0 )  {^91^^^^^90^96^if  ( sd <= 0.0 )  {^[CLASS] NormalDistributionImpl  [METHOD] setStandardDeviation [RETURN_TYPE] void   double sd [VARIABLES] double  mean  sd  standardDeviation  long  serialVersionUID  boolean  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("Standard deviation must be positive.");^91^92^93^94^^90^96^if  ( sd <= 0.0 )  { throw new IllegalArgumentException ( "Standard deviation must be positive." ) ; }^[CLASS] NormalDistributionImpl  [METHOD] setStandardDeviation [RETURN_TYPE] void   double sd [VARIABLES] double  mean  sd  standardDeviation  long  serialVersionUID  boolean  
[P16_Remove_Block]^^91^92^93^94^^90^96^if  ( sd <= 0.0 )  { throw new IllegalArgumentException ( "Standard deviation must be positive." ) ; }^[CLASS] NormalDistributionImpl  [METHOD] setStandardDeviation [RETURN_TYPE] void   double sd [VARIABLES] double  mean  sd  standardDeviation  long  serialVersionUID  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Standard deviation must be positive.Standard deviatio" ) ;^92^93^^^^90^96^throw new IllegalArgumentException ( "Standard deviation must be positive." ) ;^[CLASS] NormalDistributionImpl  [METHOD] setStandardDeviation [RETURN_TYPE] void   double sd [VARIABLES] double  mean  sd  standardDeviation  long  serialVersionUID  boolean  
[P13_Insert_Block]^if  ( sd <= 0.0 )  {     throw new IllegalArgumentException ( "Standard deviation must be positive." ) ; }^92^^^^^90^96^[Delete]^[CLASS] NormalDistributionImpl  [METHOD] setStandardDeviation [RETURN_TYPE] void   double sd [VARIABLES] double  mean  sd  standardDeviation  long  serialVersionUID  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Standard deviation must be positive.eviation" ) ;^92^93^^^^90^96^throw new IllegalArgumentException ( "Standard deviation must be positive." ) ;^[CLASS] NormalDistributionImpl  [METHOD] setStandardDeviation [RETURN_TYPE] void   double sd [VARIABLES] double  mean  sd  standardDeviation  long  serialVersionUID  boolean  
[P8_Replace_Mix]^return false;^92^93^^^^90^96^throw new IllegalArgumentException ( "Standard deviation must be positive." ) ;^[CLASS] NormalDistributionImpl  [METHOD] setStandardDeviation [RETURN_TYPE] void   double sd [VARIABLES] double  mean  sd  standardDeviation  long  serialVersionUID  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "tion must be potandard deviation must be positive." ) ;^92^93^^^^90^96^throw new IllegalArgumentException ( "Standard deviation must be positive." ) ;^[CLASS] NormalDistributionImpl  [METHOD] setStandardDeviation [RETURN_TYPE] void   double sd [VARIABLES] double  mean  sd  standardDeviation  long  serialVersionUID  boolean  
[P3_Replace_Literal]^throw new IllegalArgumentException ( "Standard deviation must be positive.t " ) ;^92^93^^^^90^96^throw new IllegalArgumentException ( "Standard deviation must be positive." ) ;^[CLASS] NormalDistributionImpl  [METHOD] setStandardDeviation [RETURN_TYPE] void   double sd [VARIABLES] double  mean  sd  standardDeviation  long  serialVersionUID  boolean  
[P5_Replace_Variable]^standardDeviation = standardDeviation;^95^^^^^90^96^standardDeviation = sd;^[CLASS] NormalDistributionImpl  [METHOD] setStandardDeviation [RETURN_TYPE] void   double sd [VARIABLES] double  mean  sd  standardDeviation  long  serialVersionUID  boolean  
[P8_Replace_Mix]^standardDeviation =  mean;^95^^^^^90^96^standardDeviation = sd;^[CLASS] NormalDistributionImpl  [METHOD] setStandardDeviation [RETURN_TYPE] void   double sd [VARIABLES] double  mean  sd  standardDeviation  long  serialVersionUID  boolean  
[P2_Replace_Operator]^return - 0.5 *  ( 1.0 + Erf.erf (  ( x - mean )  / ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^105^106^^^^104^107^return 0.5 *  ( 1.0 + Erf.erf (  ( x - mean )  / ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^[CLASS] NormalDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   double x [VARIABLES] double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P2_Replace_Operator]^return 0.5 *  <<  ( 1.0 + Erf.erf (  ( x - mean )  / ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^105^106^^^^104^107^return 0.5 *  ( 1.0 + Erf.erf (  ( x - mean )  / ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^[CLASS] NormalDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   double x [VARIABLES] double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P2_Replace_Operator]^return 0.5 *  ( 1.0 + Erf.erf (  ( x - mean )  + ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^105^106^^^^104^107^return 0.5 *  ( 1.0 + Erf.erf (  ( x - mean )  / ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^[CLASS] NormalDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   double x [VARIABLES] double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P2_Replace_Operator]^return 0.5 *  ( 1.0 + Erf.erf (  ( x  <  mean )  / ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^105^106^^^^104^107^return 0.5 *  ( 1.0 + Erf.erf (  ( x - mean )  / ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^[CLASS] NormalDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   double x [VARIABLES] double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P3_Replace_Literal]^return 0.07142857142857142 *  ( 1.0 + Erf.erf (  ( x - mean )  / ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^105^106^^^^104^107^return 0.5 *  ( 1.0 + Erf.erf (  ( x - mean )  / ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^[CLASS] NormalDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   double x [VARIABLES] double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P3_Replace_Literal]^return 0.5 *  ( 0.16666666666666666 + Erf.erf (  ( x - mean )  / ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^105^106^^^^104^107^return 0.5 *  ( 1.0 + Erf.erf (  ( x - mean )  / ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^[CLASS] NormalDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   double x [VARIABLES] double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P3_Replace_Literal]^return 0.5 *  ( 1.0 + Erf.erf (  ( x - mean )  / ( standardDeviation * Math.sqrt ( 4.0 )  )  )  ) ;^105^106^^^^104^107^return 0.5 *  ( 1.0 + Erf.erf (  ( x - mean )  / ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^[CLASS] NormalDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   double x [VARIABLES] double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P5_Replace_Variable]^return 0.5 *  ( 1.0 + Erf.erf (  ( sd - mean )  / ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^105^106^^^^104^107^return 0.5 *  ( 1.0 + Erf.erf (  ( x - mean )  / ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^[CLASS] NormalDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   double x [VARIABLES] double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P5_Replace_Variable]^return 0.5 *  ( 1.0 + Erf.erf (  ( x - x )  / ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^105^106^^^^104^107^return 0.5 *  ( 1.0 + Erf.erf (  ( x - mean )  / ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^[CLASS] NormalDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   double x [VARIABLES] double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P5_Replace_Variable]^return 0.5 *  ( 1.0 + Erf.erf (  ( x - mean )  / ( sd * Math.sqrt ( 2.0 )  )  )  ) ;^105^106^^^^104^107^return 0.5 *  ( 1.0 + Erf.erf (  ( x - mean )  / ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^[CLASS] NormalDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   double x [VARIABLES] double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P5_Replace_Variable]^return 0.5 *  ( 1.0 + Erf.erf (  ( mean - x )  / ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^105^106^^^^104^107^return 0.5 *  ( 1.0 + Erf.erf (  ( x - mean )  / ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^[CLASS] NormalDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   double x [VARIABLES] double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P5_Replace_Variable]^return 0.5 *  ( 1.0 + Erf.erf (  ( x - standardDeviation )  / ( mean * Math.sqrt ( 2.0 )  )  )  ) ;^105^106^^^^104^107^return 0.5 *  ( 1.0 + Erf.erf (  ( x - mean )  / ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^[CLASS] NormalDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   double x [VARIABLES] double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P8_Replace_Mix]^return 0.5  ;^105^106^^^^104^107^return 0.5 *  ( 1.0 + Erf.erf (  ( x - mean )  / ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^[CLASS] NormalDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   double x [VARIABLES] double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P2_Replace_Operator]^return 0.5 *  ( 1.0 + Erf.erf (  ( x - mean )  - ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^105^106^^^^104^107^return 0.5 *  ( 1.0 + Erf.erf (  ( x - mean )  / ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^[CLASS] NormalDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   double x [VARIABLES] double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P2_Replace_Operator]^return 0.5 *  ( 1.0 + Erf.erf (  ( x  ||  mean )  / ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^105^106^^^^104^107^return 0.5 *  ( 1.0 + Erf.erf (  ( x - mean )  / ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^[CLASS] NormalDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   double x [VARIABLES] double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P2_Replace_Operator]^return + 0.5 *  ( 1.0 + Erf.erf (  ( x - mean )  / ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^105^106^^^^104^107^return 0.5 *  ( 1.0 + Erf.erf (  ( x - mean )  / ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^[CLASS] NormalDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   double x [VARIABLES] double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P5_Replace_Variable]^return 0.5 *  ( 1.0 + Erf.erf (  ( x - mean )  / ( x * Math.sqrt ( 2.0 )  )  )  ) ;^105^106^^^^104^107^return 0.5 *  ( 1.0 + Erf.erf (  ( x - mean )  / ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^[CLASS] NormalDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   double x [VARIABLES] double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P5_Replace_Variable]^return 0.5 *  ( 1.0 + Erf.erf (  ( standardDeviation - mean )  / ( x * Math.sqrt ( 2.0 )  )  )  ) ;^105^106^^^^104^107^return 0.5 *  ( 1.0 + Erf.erf (  ( x - mean )  / ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^[CLASS] NormalDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   double x [VARIABLES] double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P14_Delete_Statement]^^105^106^^^^104^107^return 0.5 *  ( 1.0 + Erf.erf (  ( x - mean )  / ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^[CLASS] NormalDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   double x [VARIABLES] double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P3_Replace_Literal]^( standardDeviation * Math.sqrt ( 1.0 )  )  )  ) ;^106^^^^^104^107^( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^[CLASS] NormalDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   double x [VARIABLES] double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P14_Delete_Statement]^^106^^^^^104^107^( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^[CLASS] NormalDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   double x [VARIABLES] double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P11_Insert_Donor_Statement]^return 0.5 *  ( 1.0 + Erf.erf (  ( x - mean )  / ( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^106^^^^^104^107^( standardDeviation * Math.sqrt ( 2.0 )  )  )  ) ;^[CLASS] NormalDistributionImpl  [METHOD] cumulativeProbability [RETURN_TYPE] double   double x [VARIABLES] double  mean  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P2_Replace_Operator]^if  ( p <= 0 )  {^125^^^^^123^132^if  ( p == 0 )  {^[CLASS] NormalDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] double  mean  p  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P3_Replace_Literal]^if  ( p == 8 )  {^125^^^^^123^132^if  ( p == 0 )  {^[CLASS] NormalDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] double  mean  p  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P5_Replace_Variable]^if  ( x == 0 )  {^125^^^^^123^132^if  ( p == 0 )  {^[CLASS] NormalDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] double  mean  p  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P8_Replace_Mix]^if  ( p == 1 )  {^125^^^^^123^132^if  ( p == 0 )  {^[CLASS] NormalDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] double  mean  p  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P9_Replace_Statement]^if  ( p < .5 )  {^125^^^^^123^132^if  ( p == 0 )  {^[CLASS] NormalDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] double  mean  p  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P9_Replace_Statement]^if  ( sd <= 0.0 )  {^125^^^^^123^132^if  ( p == 0 )  {^[CLASS] NormalDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] double  mean  p  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P15_Unwrap_Block]^return java.lang.Double.NEGATIVE_INFINITY;^125^126^127^^^123^132^if  ( p == 0 )  { return Double.NEGATIVE_INFINITY; }^[CLASS] NormalDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] double  mean  p  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P16_Remove_Block]^^125^126^127^^^123^132^if  ( p == 0 )  { return Double.NEGATIVE_INFINITY; }^[CLASS] NormalDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] double  mean  p  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P13_Insert_Block]^if  ( p == 1 )  {     return POSITIVE_INFINITY; }^125^^^^^123^132^[Delete]^[CLASS] NormalDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] double  mean  p  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P13_Insert_Block]^if  ( p == 1 )  {     return POSITIVE_INFINITY; }^126^^^^^123^132^[Delete]^[CLASS] NormalDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] double  mean  p  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P13_Insert_Block]^if  ( p == 0 )  {     return NEGATIVE_INFINITY; }^126^^^^^123^132^[Delete]^[CLASS] NormalDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] double  mean  p  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P2_Replace_Operator]^if  ( p <= 1 )  {^128^^^^^123^132^if  ( p == 1 )  {^[CLASS] NormalDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] double  mean  p  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P3_Replace_Literal]^if  ( p == 10 )  {^128^^^^^123^132^if  ( p == 1 )  {^[CLASS] NormalDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] double  mean  p  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P5_Replace_Variable]^if  ( standardDeviation == 1 )  {^128^^^^^123^132^if  ( p == 1 )  {^[CLASS] NormalDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] double  mean  p  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P8_Replace_Mix]^if  ( p == 1 * 2 )  {^128^^^^^123^132^if  ( p == 1 )  {^[CLASS] NormalDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] double  mean  p  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P9_Replace_Statement]^if  ( p < .5 )  {^128^^^^^123^132^if  ( p == 1 )  {^[CLASS] NormalDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] double  mean  p  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P9_Replace_Statement]^if  ( sd <= 0.0 )  {^128^^^^^123^132^if  ( p == 1 )  {^[CLASS] NormalDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] double  mean  p  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P9_Replace_Statement]^if  ( p == 0 )  {^128^^^^^123^132^if  ( p == 1 )  {^[CLASS] NormalDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] double  mean  p  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P15_Unwrap_Block]^return java.lang.Double.POSITIVE_INFINITY;^128^129^130^^^123^132^if  ( p == 1 )  { return Double.POSITIVE_INFINITY; }^[CLASS] NormalDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] double  mean  p  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P16_Remove_Block]^^128^129^130^^^123^132^if  ( p == 1 )  { return Double.POSITIVE_INFINITY; }^[CLASS] NormalDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] double  mean  p  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P13_Insert_Block]^if  ( p == 0 )  {     return NEGATIVE_INFINITY; }^128^^^^^123^132^[Delete]^[CLASS] NormalDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] double  mean  p  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P13_Insert_Block]^if  ( p == 1 )  {     return POSITIVE_INFINITY; }^129^^^^^123^132^[Delete]^[CLASS] NormalDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] double  mean  p  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P13_Insert_Block]^if  ( p == 0 )  {     return NEGATIVE_INFINITY; }^129^^^^^123^132^[Delete]^[CLASS] NormalDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] double  mean  p  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P7_Replace_Invocation]^return super .cumulativeProbability ( x )  ;^131^^^^^123^132^return super.inverseCumulativeProbability ( p ) ;^[CLASS] NormalDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] double  mean  p  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P14_Delete_Statement]^^131^^^^^123^132^return super.inverseCumulativeProbability ( p ) ;^[CLASS] NormalDistributionImpl  [METHOD] inverseCumulativeProbability [RETURN_TYPE] double   final double p [VARIABLES] double  mean  p  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P1_Replace_Type]^int ret;^144^^^^^143^153^double ret;^[CLASS] NormalDistributionImpl  [METHOD] getDomainLowerBound [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P2_Replace_Operator]^if  ( p <= .5 )  {^146^^^^^143^153^if  ( p < .5 )  {^[CLASS] NormalDistributionImpl  [METHOD] getDomainLowerBound [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P5_Replace_Variable]^if  ( x < .5 )  {^146^^^^^143^153^if  ( p < .5 )  {^[CLASS] NormalDistributionImpl  [METHOD] getDomainLowerBound [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P9_Replace_Statement]^if  ( p == 1 )  {^146^^^^^143^153^if  ( p < .5 )  {^[CLASS] NormalDistributionImpl  [METHOD] getDomainLowerBound [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P15_Unwrap_Block]^ret = -(java.lang.Double.MAX_VALUE);^146^147^148^149^150^143^153^if  ( p < .5 )  { ret = -Double.MAX_VALUE; } else { ret = getMean (  ) ; }^[CLASS] NormalDistributionImpl  [METHOD] getDomainLowerBound [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P16_Remove_Block]^^146^147^148^149^150^143^153^if  ( p < .5 )  { ret = -Double.MAX_VALUE; } else { ret = getMean (  ) ; }^[CLASS] NormalDistributionImpl  [METHOD] getDomainLowerBound [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P7_Replace_Invocation]^ret = getStandardDeviation (  ) ;^149^^^^^143^153^ret = getMean (  ) ;^[CLASS] NormalDistributionImpl  [METHOD] getDomainLowerBound [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P8_Replace_Mix]^ret  = null ;^149^^^^^143^153^ret = getMean (  ) ;^[CLASS] NormalDistributionImpl  [METHOD] getDomainLowerBound [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P14_Delete_Statement]^^149^^^^^143^153^ret = getMean (  ) ;^[CLASS] NormalDistributionImpl  [METHOD] getDomainLowerBound [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P8_Replace_Mix]^ret  = null ;^147^^^^^143^153^ret = -Double.MAX_VALUE;^[CLASS] NormalDistributionImpl  [METHOD] getDomainLowerBound [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P11_Insert_Donor_Statement]^ret = Double.MAX_VALUE;ret = -Double.MAX_VALUE;^147^^^^^143^153^ret = -Double.MAX_VALUE;^[CLASS] NormalDistributionImpl  [METHOD] getDomainLowerBound [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P8_Replace_Mix]^ret ;^147^^^^^143^153^ret = -Double.MAX_VALUE;^[CLASS] NormalDistributionImpl  [METHOD] getDomainLowerBound [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P8_Replace_Mix]^ret  =  ret ;^149^^^^^143^153^ret = getMean (  ) ;^[CLASS] NormalDistributionImpl  [METHOD] getDomainLowerBound [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P5_Replace_Variable]^return standardDeviation;^152^^^^^143^153^return ret;^[CLASS] NormalDistributionImpl  [METHOD] getDomainLowerBound [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P8_Replace_Mix]^return x;^152^^^^^143^153^return ret;^[CLASS] NormalDistributionImpl  [METHOD] getDomainLowerBound [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P1_Replace_Type]^int ret;^165^^^^^164^174^double ret;^[CLASS] NormalDistributionImpl  [METHOD] getDomainUpperBound [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P2_Replace_Operator]^if  ( p <= .5 )  {^167^^^^^164^174^if  ( p < .5 )  {^[CLASS] NormalDistributionImpl  [METHOD] getDomainUpperBound [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P5_Replace_Variable]^if  ( x < .5 )  {^167^^^^^164^174^if  ( p < .5 )  {^[CLASS] NormalDistributionImpl  [METHOD] getDomainUpperBound [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P8_Replace_Mix]^if  ( standardDeviation < .5 )  {^167^^^^^164^174^if  ( p < .5 )  {^[CLASS] NormalDistributionImpl  [METHOD] getDomainUpperBound [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P9_Replace_Statement]^if  ( p == 1 )  {^167^^^^^164^174^if  ( p < .5 )  {^[CLASS] NormalDistributionImpl  [METHOD] getDomainUpperBound [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P15_Unwrap_Block]^ret = getMean();^167^168^169^170^171^164^174^if  ( p < .5 )  { ret = getMean (  ) ; } else { ret = Double.MAX_VALUE; }^[CLASS] NormalDistributionImpl  [METHOD] getDomainUpperBound [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P16_Remove_Block]^^167^168^169^170^171^164^174^if  ( p < .5 )  { ret = getMean (  ) ; } else { ret = Double.MAX_VALUE; }^[CLASS] NormalDistributionImpl  [METHOD] getDomainUpperBound [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P8_Replace_Mix]^ret ;^170^^^^^164^174^ret = Double.MAX_VALUE;^[CLASS] NormalDistributionImpl  [METHOD] getDomainUpperBound [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P11_Insert_Donor_Statement]^ret = -Double.MAX_VALUE;ret = Double.MAX_VALUE;^170^^^^^164^174^ret = Double.MAX_VALUE;^[CLASS] NormalDistributionImpl  [METHOD] getDomainUpperBound [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P7_Replace_Invocation]^ret = getStandardDeviation (  ) ;^168^^^^^164^174^ret = getMean (  ) ;^[CLASS] NormalDistributionImpl  [METHOD] getDomainUpperBound [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P8_Replace_Mix]^ret  =  ret ;^168^^^^^164^174^ret = getMean (  ) ;^[CLASS] NormalDistributionImpl  [METHOD] getDomainUpperBound [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P14_Delete_Statement]^^168^^^^^164^174^ret = getMean (  ) ;^[CLASS] NormalDistributionImpl  [METHOD] getDomainUpperBound [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P8_Replace_Mix]^ret  =  ret ;^170^^^^^164^174^ret = Double.MAX_VALUE;^[CLASS] NormalDistributionImpl  [METHOD] getDomainUpperBound [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P5_Replace_Variable]^return standardDeviation;^173^^^^^164^174^return ret;^[CLASS] NormalDistributionImpl  [METHOD] getDomainUpperBound [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P1_Replace_Type]^int ret;^185^^^^^184^196^double ret;^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P2_Replace_Operator]^if  ( p <= .5 )  {^187^^^^^184^196^if  ( p < .5 )  {^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P5_Replace_Variable]^if  ( x < .5 )  {^187^^^^^184^196^if  ( p < .5 )  {^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P6_Replace_Expression]^if  ( getMean() - getStandardDeviation() )  {^187^^^^^184^196^if  ( p < .5 )  {^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P6_Replace_Expression]^if  ( p > 0.5 )  {^187^^^^^184^196^if  ( p < .5 )  {^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P6_Replace_Expression]^if  ( getMean() + getStandardDeviation() )  {^187^^^^^184^196^if  ( p < .5 )  {^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P9_Replace_Statement]^if  ( p == 1 )  {^187^^^^^184^196^if  ( p < .5 )  {^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P2_Replace_Operator]^} else if  ( p >= .5 )  {^189^^^^^184^196^} else if  ( p > .5 )  {^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P5_Replace_Variable]^} else if  ( x > .5 )  {^189^^^^^184^196^} else if  ( p > .5 )  {^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P6_Replace_Expression]^} else if  ( getMean() + getStandardDeviation() )  {^189^^^^^184^196^} else if  ( p > .5 )  {^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P6_Replace_Expression]^} else {^189^^^^^184^196^} else if  ( p > .5 )  {^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P8_Replace_Mix]^}  if  ( x > .5 )  {^189^^^^^184^196^} else if  ( p > .5 )  {^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P15_Unwrap_Block]^ret = (getMean()) + (getStandardDeviation());^189^190^191^192^193^184^196^} else if  ( p > .5 )  { ret = getMean (  )  + getStandardDeviation (  ) ; } else { ret = getMean (  ) ; }^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P16_Remove_Block]^^189^190^191^192^193^184^196^} else if  ( p > .5 )  { ret = getMean (  )  + getStandardDeviation (  ) ; } else { ret = getMean (  ) ; }^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P13_Insert_Block]^if  ( p < 0.5 )  {     ret = - ( MAX_VALUE ) ; }else {     ret = getMean (  ) ; }^189^^^^^184^196^[Delete]^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P13_Insert_Block]^if  ( p < 0.5 )  {     ret =  ( getMean (  )  )  -  ( getStandardDeviation (  )  ) ; }else     if  ( p > 0.5 )  {         ret =  ( getMean (  )  )  +  ( getStandardDeviation (  )  ) ;     }else {         ret = getMean (  ) ;     }^189^^^^^184^196^[Delete]^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P7_Replace_Invocation]^ret = getStandardDeviation (  ) ;^192^^^^^184^196^ret = getMean (  ) ;^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P8_Replace_Mix]^ret  =  ret ;^192^^^^^184^196^ret = getMean (  ) ;^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P14_Delete_Statement]^^192^^^^^184^196^ret = getMean (  ) ;^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P2_Replace_Operator]^ret = getMean (  &  )  + getStandardDeviation (  ) ;^190^^^^^184^196^ret = getMean (  )  + getStandardDeviation (  ) ;^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P7_Replace_Invocation]^ret = getStandardDeviation (  )  + getStandardDeviation (  ) ;^190^^^^^184^196^ret = getMean (  )  + getStandardDeviation (  ) ;^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P7_Replace_Invocation]^ret = getMean (  )  + getMean (  ) ;^190^^^^^184^196^ret = getMean (  )  + getStandardDeviation (  ) ;^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P8_Replace_Mix]^ret ;^190^^^^^184^196^ret = getMean (  )  + getStandardDeviation (  ) ;^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P11_Insert_Donor_Statement]^ret = getMean (  )  - getStandardDeviation (  ) ;ret = getMean (  )  + getStandardDeviation (  ) ;^190^^^^^184^196^ret = getMean (  )  + getStandardDeviation (  ) ;^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P14_Delete_Statement]^^190^^^^^184^196^ret = getMean (  )  + getStandardDeviation (  ) ;^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P2_Replace_Operator]^ret = getMean (  ==  )  + getStandardDeviation (  ) ;^190^^^^^184^196^ret = getMean (  )  + getStandardDeviation (  ) ;^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P8_Replace_Mix]^ret  =  ret ;^190^^^^^184^196^ret = getMean (  )  + getStandardDeviation (  ) ;^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P8_Replace_Mix]^ret ;^192^^^^^184^196^ret = getMean (  ) ;^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P2_Replace_Operator]^ret = getMean (  )    instanceof   getStandardDeviation (  ) ;^188^^^^^184^196^ret = getMean (  )  - getStandardDeviation (  ) ;^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P7_Replace_Invocation]^ret = getStandardDeviation (  )  - getStandardDeviation (  ) ;^188^^^^^184^196^ret = getMean (  )  - getStandardDeviation (  ) ;^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P7_Replace_Invocation]^ret = getMean (  )  - getMean (  ) ;^188^^^^^184^196^ret = getMean (  )  - getStandardDeviation (  ) ;^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P8_Replace_Mix]^ret  = null ;^188^^^^^184^196^ret = getMean (  )  - getStandardDeviation (  ) ;^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P11_Insert_Donor_Statement]^ret = getMean (  )  + getStandardDeviation (  ) ;ret = getMean (  )  - getStandardDeviation (  ) ;^188^^^^^184^196^ret = getMean (  )  - getStandardDeviation (  ) ;^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P14_Delete_Statement]^^188^^^^^184^196^ret = getMean (  )  - getStandardDeviation (  ) ;^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P2_Replace_Operator]^} else if  ( p < .5 )  {^189^^^^^184^196^} else if  ( p > .5 )  {^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P2_Replace_Operator]^ret = getMean (  >=  )  + getStandardDeviation (  ) ;^190^^^^^184^196^ret = getMean (  )  + getStandardDeviation (  ) ;^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P2_Replace_Operator]^ret = getMean (  )   &  getStandardDeviation (  ) ;^188^^^^^184^196^ret = getMean (  )  - getStandardDeviation (  ) ;^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P8_Replace_Mix]^ret  =  ret ;^188^^^^^184^196^ret = getMean (  )  - getStandardDeviation (  ) ;^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P5_Replace_Variable]^return x;^195^^^^^184^196^return ret;^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
[P8_Replace_Mix]^return standardDeviation;^195^^^^^184^196^return ret;^[CLASS] NormalDistributionImpl  [METHOD] getInitialDomain [RETURN_TYPE] double   double p [VARIABLES] double  mean  p  ret  sd  standardDeviation  x  long  serialVersionUID  boolean  
