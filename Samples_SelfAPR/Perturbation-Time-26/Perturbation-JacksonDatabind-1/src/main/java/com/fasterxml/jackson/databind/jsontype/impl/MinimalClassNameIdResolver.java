[P1_Replace_Type]^protected final char _basePackageName;^16^^^^^11^21^protected final String _basePackageName;^[CLASS] MinimalClassNameIdResolver   [VARIABLES] 
[P1_Replace_Type]^protected final char _basePackagePrefix;^21^^^^^16^26^protected final String _basePackagePrefix;^[CLASS] MinimalClassNameIdResolver   [VARIABLES] 
[P5_Replace_Variable]^super (  typeFactory ) ;^25^^^^^23^35^super ( baseType, typeFactory ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P5_Replace_Variable]^super ( baseType ) ;^25^^^^^23^35^super ( baseType, typeFactory ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P5_Replace_Variable]^super ( typeFactory, baseType ) ;^25^^^^^23^35^super ( baseType, typeFactory ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P14_Delete_Statement]^^25^^^^^23^35^super ( baseType, typeFactory ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P1_Replace_Type]^char base = baseType.getRawClass (  ) .getName (  ) ;^26^^^^^23^35^String base = baseType.getRawClass (  ) .getName (  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P7_Replace_Invocation]^String base = baseType.getRawClass (  ) .typeFromId (  ) ;^26^^^^^23^35^String base = baseType.getRawClass (  ) .getName (  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P11_Insert_Donor_Statement]^String n = value.getClass (  ) .getName (  ) ;String base = baseType.getRawClass (  ) .getName (  ) ;^26^^^^^23^35^String base = baseType.getRawClass (  ) .getName (  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P14_Delete_Statement]^^26^^^^^23^35^String base = baseType.getRawClass (  ) .getName (  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P14_Delete_Statement]^^26^27^^^^23^35^String base = baseType.getRawClass (  ) .getName (  ) ; int ix = base.lastIndexOf ( '.' ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P1_Replace_Type]^long  ix = base.lastIndexOf ( '.' ) ;^27^^^^^23^35^int ix = base.lastIndexOf ( '.' ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P5_Replace_Variable]^int ix = _basePackagePrefix.lastIndexOf ( '.' ) ;^27^^^^^23^35^int ix = base.lastIndexOf ( '.' ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P7_Replace_Invocation]^int ix = base.substring ( '.' ) ;^27^^^^^23^35^int ix = base.lastIndexOf ( '.' ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P14_Delete_Statement]^^27^^^^^23^35^int ix = base.lastIndexOf ( '.' ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P2_Replace_Operator]^if  ( ix <= 0 )  {^28^^^^^23^35^if  ( ix < 0 )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P3_Replace_Literal]^if  ( ix < 8 )  {^28^^^^^23^35^if  ( ix < 0 )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P3_Replace_Literal]^if  ( ix < -4 )  {^28^^^^^23^35^if  ( ix < 0 )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P6_Replace_Expression]^if  ( ix + 1 )  {^28^^^^^23^35^if  ( ix < 0 )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P8_Replace_Mix]^if  ( ix < 1 )  {^28^^^^^23^35^if  ( ix < 0 )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P3_Replace_Literal]^_basePackagePrefix = base.substring ( -1, ix+1 ) ;^32^^^^^23^35^_basePackagePrefix = base.substring ( 0, ix+1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P3_Replace_Literal]^_basePackagePrefix = base.substring ( 0, ix+6 ) ;^32^^^^^23^35^_basePackagePrefix = base.substring ( 0, ix+1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P5_Replace_Variable]^_basePackagePrefix = _basePackagePrefix.substring ( 0, ix+1 ) ;^32^^^^^23^35^_basePackagePrefix = base.substring ( 0, ix+1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P5_Replace_Variable]^_basePackagePrefix = base.substring ( 0+1 ) ;^32^^^^^23^35^_basePackagePrefix = base.substring ( 0, ix+1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P5_Replace_Variable]^_basePackagePrefix = ix.substring ( 0, base+1 ) ;^32^^^^^23^35^_basePackagePrefix = base.substring ( 0, ix+1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P7_Replace_Invocation]^_basePackagePrefix = base .substring ( ix , ix )  ;^32^^^^^23^35^_basePackagePrefix = base.substring ( 0, ix+1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P8_Replace_Mix]^_basePackagePrefix = base.substring ( 0 - 2, ix+1 ) ;^32^^^^^23^35^_basePackagePrefix = base.substring ( 0, ix+1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P11_Insert_Donor_Statement]^_basePackageName = base.substring ( 0, ix ) ;_basePackagePrefix = base.substring ( 0, ix+1 ) ;^32^^^^^23^35^_basePackagePrefix = base.substring ( 0, ix+1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P3_Replace_Literal]^_basePackageName = base.substring ( ix, ix ) ;^33^^^^^23^35^_basePackageName = base.substring ( 0, ix ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P5_Replace_Variable]^_basePackageName = _basePackagePrefix.substring ( 0, ix ) ;^33^^^^^23^35^_basePackageName = base.substring ( 0, ix ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P5_Replace_Variable]^_basePackageName = base.substring ( 0 ) ;^33^^^^^23^35^_basePackageName = base.substring ( 0, ix ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P5_Replace_Variable]^_basePackageName = ix.substring ( 0, base ) ;^33^^^^^23^35^_basePackageName = base.substring ( 0, ix ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P8_Replace_Mix]^_basePackageName = base.substring ( 0 + 2, ix ) ;^33^^^^^23^35^_basePackageName = base.substring ( 0, ix ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P11_Insert_Donor_Statement]^_basePackagePrefix = base.substring ( 0, ix+1 ) ;_basePackageName = base.substring ( 0, ix ) ;^33^^^^^23^35^_basePackageName = base.substring ( 0, ix ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P3_Replace_Literal]^_basePackagePrefix = base.substring ( ix, ix+1 ) ;^32^^^^^23^35^_basePackagePrefix = base.substring ( 0, ix+1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P3_Replace_Literal]^_basePackagePrefix = base.substring ( 0, ix+ix ) ;^32^^^^^23^35^_basePackagePrefix = base.substring ( 0, ix+1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P14_Delete_Statement]^^32^^^^^23^35^_basePackagePrefix = base.substring ( 0, ix+1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P14_Delete_Statement]^^33^^^^^23^35^_basePackageName = base.substring ( 0, ix ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P11_Insert_Donor_Statement]^sb.append ( id.substring ( 1 )  ) ;_basePackageName = base.substring ( 0, ix ) ;^33^^^^^23^35^_basePackageName = base.substring ( 0, ix ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P8_Replace_Mix]^_basePackageName  =  _basePackageName ;^29^^^^^23^35^_basePackageName = "";^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P11_Insert_Donor_Statement]^_basePackagePrefix = ".";_basePackageName = "";^29^^^^^23^35^_basePackageName = "";^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P3_Replace_Literal]^_basePackagePrefix = "";^30^^^^^23^35^_basePackagePrefix = ".";^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P8_Replace_Mix]^_basePackagePrefix  =  _basePackagePrefix ;^30^^^^^23^35^_basePackagePrefix = ".";^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P11_Insert_Donor_Statement]^_basePackageName = "";_basePackagePrefix = ".";^30^^^^^23^35^_basePackagePrefix = ".";^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P8_Replace_Mix]^_basePackagePrefix ;^30^^^^^23^35^_basePackagePrefix = ".";^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P8_Replace_Mix]^_basePackagePrefix = base.substring ( 3, ix+1 ) ;^32^^^^^23^35^_basePackagePrefix = base.substring ( 0, ix+1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P3_Replace_Literal]^_basePackageName = base.substring ( 8, ix ) ;^33^^^^^23^35^_basePackageName = base.substring ( 0, ix ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P8_Replace_Mix]^_basePackageName = base.substring ( 0 + 1, ix ) ;^33^^^^^23^35^_basePackageName = base.substring ( 0, ix ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P3_Replace_Literal]^_basePackagePrefix = base.substring ( 4, ix+1 ) ;^32^^^^^23^35^_basePackagePrefix = base.substring ( 0, ix+1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P3_Replace_Literal]^_basePackagePrefix = base.substring ( 0, ix+-7 ) ;^32^^^^^23^35^_basePackagePrefix = base.substring ( 0, ix+1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] <init> [RETURN_TYPE] TypeFactory)   JavaType baseType TypeFactory typeFactory [VARIABLES] JavaType  baseType  String  _basePackageName  _basePackagePrefix  base  boolean  TypeFactory  typeFactory  int  ix  
[P1_Replace_Type]^char n = value.getClass (  ) .getName (  ) ;^43^^^^^41^49^String n = value.getClass (  ) .getName (  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[P8_Replace_Mix]^String n = value.getClass (  )  .typeFromId ( base )  ;^43^^^^^41^49^String n = value.getClass (  ) .getName (  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[P11_Insert_Donor_Statement]^String base = baseType.getRawClass (  ) .getName (  ) ;String n = value.getClass (  ) .getName (  ) ;^43^^^^^41^49^String n = value.getClass (  ) .getName (  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[P14_Delete_Statement]^^43^^^^^41^49^String n = value.getClass (  ) .getName (  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[P5_Replace_Variable]^if  ( n.startsWith ( base )  )  {^44^^^^^41^49^if  ( n.startsWith ( _basePackagePrefix )  )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[P5_Replace_Variable]^if  ( _basePackagePrefix.startsWith ( n )  )  {^44^^^^^41^49^if  ( n.startsWith ( _basePackagePrefix )  )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[P7_Replace_Invocation]^if  ( n.substring ( _basePackagePrefix )  )  {^44^^^^^41^49^if  ( n.startsWith ( _basePackagePrefix )  )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[P15_Unwrap_Block]^return n.substring(((_basePackagePrefix.length()) - 1));^44^45^46^47^^41^49^if  ( n.startsWith ( _basePackagePrefix )  )  {  return n.substring ( _basePackagePrefix.length (  ) -1 ) ; }^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[P16_Remove_Block]^^44^45^46^47^^41^49^if  ( n.startsWith ( _basePackagePrefix )  )  {  return n.substring ( _basePackagePrefix.length (  ) -1 ) ; }^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[P3_Replace_Literal]^return n.substring ( _basePackagePrefix.length (  ) -5 ) ;^46^^^^^41^49^return n.substring ( _basePackagePrefix.length (  ) -1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[P3_Replace_Literal]^return n.substring ( _basePackagePrefix.length() - 7 -1 ) ;^46^^^^^41^49^return n.substring ( _basePackagePrefix.length (  ) -1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[P5_Replace_Variable]^return n.substring ( base.length (  ) -1 ) ;^46^^^^^41^49^return n.substring ( _basePackagePrefix.length (  ) -1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[P5_Replace_Variable]^return _basePackagePrefix.substring ( n.length (  ) -1 ) ;^46^^^^^41^49^return n.substring ( _basePackagePrefix.length (  ) -1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[P12_Insert_Condition]^if  ( n.startsWith ( _basePackagePrefix )  )  { return n.substring ( _basePackagePrefix.length (  ) -1 ) ; }^46^^^^^41^49^return n.substring ( _basePackagePrefix.length (  ) -1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[P3_Replace_Literal]^return n.substring ( _basePackagePrefix.length (  ) - ) ;^46^^^^^41^49^return n.substring ( _basePackagePrefix.length (  ) -1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[P3_Replace_Literal]^return n.substring ( _basePackagePrefix.length() + 8 -1 ) ;^46^^^^^41^49^return n.substring ( _basePackagePrefix.length (  ) -1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[P7_Replace_Invocation]^return n.substring ( _basePackagePrefix .startsWith ( _basePackagePrefix )  -1 ) ;^46^^^^^41^49^return n.substring ( _basePackagePrefix.length (  ) -1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[P14_Delete_Statement]^^46^^^^^41^49^return n.substring ( _basePackagePrefix.length (  ) -1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[P3_Replace_Literal]^return n.substring ( _basePackagePrefix.length() - 4 -1 ) ;^46^^^^^41^49^return n.substring ( _basePackagePrefix.length (  ) -1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[P5_Replace_Variable]^return n.substring ( n.length (  ) -1 ) ;^46^^^^^41^49^return n.substring ( _basePackagePrefix.length (  ) -1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[P3_Replace_Literal]^return n.substring ( _basePackagePrefix.length (  ) --8 ) ;^46^^^^^41^49^return n.substring ( _basePackagePrefix.length (  ) -1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[P3_Replace_Literal]^return n.substring ( _basePackagePrefix.length() + 6 -1 ) ;^46^^^^^41^49^return n.substring ( _basePackagePrefix.length (  ) -1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[P5_Replace_Variable]^return base.substring ( _basePackagePrefix.length (  ) -1 ) ;^46^^^^^41^49^return n.substring ( _basePackagePrefix.length (  ) -1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[P8_Replace_Mix]^return base .substring ( null )  ;^46^^^^^41^49^return n.substring ( _basePackagePrefix.length (  ) -1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[P8_Replace_Mix]^if  ( base.substring ( _basePackagePrefix )  )  {^44^^^^^41^49^if  ( n.startsWith ( _basePackagePrefix )  )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[P3_Replace_Literal]^return n.substring ( _basePackagePrefix.length (  ) -4 ) ;^46^^^^^41^49^return n.substring ( _basePackagePrefix.length (  ) -1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[P3_Replace_Literal]^return n.substring ( _basePackagePrefix.length() + 2 -1 ) ;^46^^^^^41^49^return n.substring ( _basePackagePrefix.length (  ) -1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[P7_Replace_Invocation]^return n.substring ( _basePackagePrefix .startsWith ( base )  -1 ) ;^46^^^^^41^49^return n.substring ( _basePackagePrefix.length (  ) -1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[P3_Replace_Literal]^return n.substring ( _basePackagePrefix.length() - 1 -1 ) ;^46^^^^^41^49^return n.substring ( _basePackagePrefix.length (  ) -1 ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[P5_Replace_Variable]^return base;^48^^^^^41^49^return n;^[CLASS] MinimalClassNameIdResolver  [METHOD] idFromValue [RETURN_TYPE] String   Object value [VARIABLES] Object  value  String  _basePackageName  _basePackagePrefix  base  n  boolean  
[P3_Replace_Literal]^if  ( id.startsWith ( "" )  )  {^54^^^^^52^66^if  ( id.startsWith ( "." )  )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P5_Replace_Variable]^if  ( n.startsWith ( "." )  )  {^54^^^^^52^66^if  ( id.startsWith ( "." )  )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P6_Replace_Expression]^if  ( _basePackageName.length() == 0 )  {^54^^^^^52^66^if  ( id.startsWith ( "." )  )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P7_Replace_Invocation]^if  ( id.substring ( "." )  )  {^54^^^^^52^66^if  ( id.startsWith ( "." )  )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P2_Replace_Operator]^if   ( _basePackageName.length (  )  != 0 )  {^56^^^^^52^66^if   ( _basePackageName.length (  )  == 0 )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P3_Replace_Literal]^if   ( _basePackageName.length() + 3  == 0 )  {^56^^^^^52^66^if   ( _basePackageName.length (  )  == 0 )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P5_Replace_Variable]^if   ( n.length (  )  == 0 )  {^56^^^^^52^66^if   ( _basePackageName.length (  )  == 0 )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P7_Replace_Invocation]^if   ( _basePackageName .startsWith ( id )   == 0 )  {^56^^^^^52^66^if   ( _basePackageName.length (  )  == 0 )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P5_Replace_Variable]^sb.append ( _basePackageName ) .append ( base ) ;^61^^^^^52^66^sb.append ( _basePackageName ) .append ( id ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P5_Replace_Variable]^sb.append ( n ) .append ( id ) ;^61^^^^^52^66^sb.append ( _basePackageName ) .append ( id ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P5_Replace_Variable]^sb.append ( id ) .append ( _basePackageName ) ;^61^^^^^52^66^sb.append ( _basePackageName ) .append ( id ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P7_Replace_Invocation]^sb.StringBuilder ( _basePackageName ) .append ( id ) ;^61^^^^^52^66^sb.append ( _basePackageName ) .append ( id ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P8_Replace_Mix]^sb.append ( _basePackageName ) .append ( n ) ;^61^^^^^52^66^sb.append ( _basePackageName ) .append ( id ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P14_Delete_Statement]^^61^^^^^52^66^sb.append ( _basePackageName ) .append ( id ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P8_Replace_Mix]^sb.StringBuilder ( n ) .append ( id ) ;^61^^^^^52^66^sb.append ( _basePackageName ) .append ( id ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P3_Replace_Literal]^sb.append ( id.substring ( -2 )  ) ;^58^^^^^52^66^sb.append ( id.substring ( 1 )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P5_Replace_Variable]^sb.append ( n.substring ( 1 )  ) ;^58^^^^^52^66^sb.append ( id.substring ( 1 )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P14_Delete_Statement]^^58^^^^^52^66^sb.append ( id.substring ( 1 )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P11_Insert_Donor_Statement]^_basePackageName = base.substring ( 0, ix ) ;sb.append ( id.substring ( 1 )  ) ;^58^^^^^52^66^sb.append ( id.substring ( 1 )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P3_Replace_Literal]^sb.append ( id.substring ( 0 )  ) ;^58^^^^^52^66^sb.append ( id.substring ( 1 )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P1_Replace_Type]^id = sb.tochar (  ) ;^63^^^^^52^66^id = sb.toString (  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P7_Replace_Invocation]^id = sb.StringBuilder (  ) ;^63^^^^^52^66^id = sb.toString (  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P8_Replace_Mix]^id =  null.toString (  ) ;^63^^^^^52^66^id = sb.toString (  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P2_Replace_Operator]^StringBuilder sb = new StringBuilder ( id.length (  )   !=  _basePackageName.length (  )  ) ;^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P3_Replace_Literal]^StringBuilder sb = new StringBuilder ( id.length() - 6  + _basePackageName.length() - 6  ) ;^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P5_Replace_Variable]^StringBuilder sb = new StringBuilder ( n.length (  )  + _basePackageName.length (  )  ) ;^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P5_Replace_Variable]^StringBuilder sb = new StringBuilder ( _basePackageName.length (  )  + id.length (  )  ) ;^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P7_Replace_Invocation]^StringBuilder sb = new StringBuilder ( id.substring (  )  + _basePackageName.length (  )  ) ;^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P8_Replace_Mix]^StringBuilder sb = new StringBuilder ( id.length (  )  + n.length (  )  ) ;^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P2_Replace_Operator]^StringBuilder sb = new StringBuilder ( id.length (  )   ==  _basePackageName.length (  )  ) ;^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P3_Replace_Literal]^StringBuilder sb = new StringBuilder ( id.length() - 7  + _basePackageName.length() - 7  ) ;^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P8_Replace_Mix]^StringBuilder sb = new StringBuilder ( id.length (  )  + id.length (  )  ) ;^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P3_Replace_Literal]^StringBuilder sb = new StringBuilder ( id.length() - 2  + _basePackageName.length() - 2  ) ;^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P7_Replace_Invocation]^StringBuilder sb = new StringBuilder ( id .startsWith ( _basePackageName )   + _basePackageName^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P8_Replace_Mix]^StringBuilder sb = new StringBuilder ( n.substring (  )  + _basePackageName.length (  )  ) ;^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P14_Delete_Statement]^^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P3_Replace_Literal]^StringBuilder sb = new StringBuilder ( id.length() + 8  + _basePackageName.length() + 8  ) ;^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P3_Replace_Literal]^if   ( _basePackageName.length() - 0  == 0 )  {^56^^^^^52^66^if   ( _basePackageName.length (  )  == 0 )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P7_Replace_Invocation]^if   ( _basePackageName .startsWith ( _basePackageName )   == 0 )  {^56^^^^^52^66^if   ( _basePackageName.length (  )  == 0 )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P3_Replace_Literal]^sb.append ( id.substring ( 6 )  ) ;^58^^^^^52^66^sb.append ( id.substring ( 1 )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P5_Replace_Variable]^sb.append ( base.substring ( 1 )  ) ;^58^^^^^52^66^sb.append ( id.substring ( 1 )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P14_Delete_Statement]^^63^^^^^52^66^id = sb.toString (  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P3_Replace_Literal]^if   ( _basePackageName.length() + 8  == 0 )  {^56^^^^^52^66^if   ( _basePackageName.length (  )  == 0 )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P8_Replace_Mix]^if   ( _basePackageName.length (  )  == 0  )  {^56^^^^^52^66^if   ( _basePackageName.length (  )  == 0 )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P8_Replace_Mix]^sb.StringBuilder ( _basePackageName ) .append ( n ) ;^61^^^^^52^66^sb.append ( _basePackageName ) .append ( id ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P3_Replace_Literal]^sb.append ( id.substring ( -7 )  ) ;^58^^^^^52^66^sb.append ( id.substring ( 1 )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P3_Replace_Literal]^sb.append ( id.substring ( 2 )  ) ;^58^^^^^52^66^sb.append ( id.substring ( 1 )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P2_Replace_Operator]^StringBuilder sb = new StringBuilder ( id.length (  )   ||  _basePackageName.length (  )  ) ;^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P3_Replace_Literal]^StringBuilder sb = new StringBuilder ( id.length() + 1  + _basePackageName.length() + 1  ) ;^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P7_Replace_Invocation]^StringBuilder sb = new StringBuilder ( id .startsWith ( base )   + _basePackageName^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P2_Replace_Operator]^StringBuilder sb = new StringBuilder ( id.length (  )   >>  _basePackageName.length (  )  ) ;^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P3_Replace_Literal]^StringBuilder sb = new StringBuilder ( id.length() + 6  + _basePackageName.length() + 6  ) ;^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P7_Replace_Invocation]^StringBuilder sb = new StringBuilder ( id .startsWith ( n )   + _basePackageName^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P8_Replace_Mix]^StringBuilder sb = new StringBuilder ( base.length (  )  + _basePackageName.length (  )  ) ;^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P3_Replace_Literal]^StringBuilder sb = new StringBuilder ( id.length() + 5  + _basePackageName.length() + 5  ) ;^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P8_Replace_Mix]^StringBuilder sb = new StringBuilder ( n .startsWith ( base )   + _basePackageName^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P3_Replace_Literal]^StringBuilder sb = new StringBuilder ( id.length() + 7  + _basePackageName.length() + 7  ) ;^55^^^^^52^66^StringBuilder sb = new StringBuilder ( id.length (  )  + _basePackageName.length (  )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P3_Replace_Literal]^if   ( _basePackageName.length() + 0  == 0 )  {^56^^^^^52^66^if   ( _basePackageName.length (  )  == 0 )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P7_Replace_Invocation]^if   ( _basePackageName .startsWith ( n )   == 0 )  {^56^^^^^52^66^if   ( _basePackageName.length (  )  == 0 )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P8_Replace_Mix]^if   ( n .startsWith ( n )   == 0 )  {^56^^^^^52^66^if   ( _basePackageName.length (  )  == 0 )  {^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P3_Replace_Literal]^sb.append ( id.substring ( 8 )  ) ;^58^^^^^52^66^sb.append ( id.substring ( 1 )  ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
[P14_Delete_Statement]^^65^^^^^52^66^return super.typeFromId ( id ) ;^[CLASS] MinimalClassNameIdResolver  [METHOD] typeFromId [RETURN_TYPE] JavaType   String id [VARIABLES] StringBuilder  sb  String  _basePackageName  _basePackagePrefix  base  id  n  boolean  
