[P8_Replace_Mix]^private JsonTypeInfo.Id _idType;^24^^^^^19^29^protected JsonTypeInfo.Id _idType;^[CLASS] StdTypeResolverBuilder   [VARIABLES] 
[P1_Replace_Type]^protected char _typeProperty;^28^^^^^23^33^protected String _typeProperty;^[CLASS] StdTypeResolverBuilder   [VARIABLES] 
[P3_Replace_Literal]^protected boolean _typeIdVisible = true;^33^^^^^28^38^protected boolean _typeIdVisible = false;^[CLASS] StdTypeResolverBuilder   [VARIABLES] 
[P4_Replace_Constructor]^return return  new AsArrayTypeSerializer ( idRes, null )  .init ( JsonTypeInfo.Id.NONE, null ) ;^54^^^^^53^55^return new StdTypeResolverBuilder (  ) .init ( JsonTypeInfo.Id.NONE, null ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] noTypeInfoBuilder [RETURN_TYPE] StdTypeResolverBuilder   [VARIABLES] As  _includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  String  _typeProperty  TypeIdResolver  _customIdResolver  
[P7_Replace_Invocation]^return new StdTypeResolverBuilder (  ) .inclusion ( JsonTypeInfo.Id.NONE, null ) ;^54^^^^^53^55^return new StdTypeResolverBuilder (  ) .init ( JsonTypeInfo.Id.NONE, null ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] noTypeInfoBuilder [RETURN_TYPE] StdTypeResolverBuilder   [VARIABLES] As  _includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  String  _typeProperty  TypeIdResolver  _customIdResolver  
[P7_Replace_Invocation]^return new StdTypeResolverBuilder (  )  .inclusion ( _includeAs )  ;^54^^^^^53^55^return new StdTypeResolverBuilder (  ) .init ( JsonTypeInfo.Id.NONE, null ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] noTypeInfoBuilder [RETURN_TYPE] StdTypeResolverBuilder   [VARIABLES] As  _includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  String  _typeProperty  TypeIdResolver  _customIdResolver  
[P8_Replace_Mix]^return new StdTypeResolverBuilder (  ) .inclusion ( JsonTypeInfo.Id.NONE, false ) ;^54^^^^^53^55^return new StdTypeResolverBuilder (  ) .init ( JsonTypeInfo.Id.NONE, null ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] noTypeInfoBuilder [RETURN_TYPE] StdTypeResolverBuilder   [VARIABLES] As  _includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  String  _typeProperty  TypeIdResolver  _customIdResolver  
[P14_Delete_Statement]^^54^^^^^53^55^return new StdTypeResolverBuilder (  ) .init ( JsonTypeInfo.Id.NONE, null ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] noTypeInfoBuilder [RETURN_TYPE] StdTypeResolverBuilder   [VARIABLES] As  _includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  String  _typeProperty  TypeIdResolver  _customIdResolver  
[P2_Replace_Operator]^if  ( idType != null )  {^61^^^^^58^69^if  ( idType == null )  {^[CLASS] StdTypeResolverBuilder  [METHOD] init [RETURN_TYPE] StdTypeResolverBuilder   Id idType TypeIdResolver idRes [VARIABLES] As  _includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P8_Replace_Mix]^if  ( idType == this )  {^61^^^^^58^69^if  ( idType == null )  {^[CLASS] StdTypeResolverBuilder  [METHOD] init [RETURN_TYPE] StdTypeResolverBuilder   Id idType TypeIdResolver idRes [VARIABLES] As  _includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P9_Replace_Statement]^if  ( _idType == null )  {^61^^^^^58^69^if  ( idType == null )  {^[CLASS] StdTypeResolverBuilder  [METHOD] init [RETURN_TYPE] StdTypeResolverBuilder   Id idType TypeIdResolver idRes [VARIABLES] As  _includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P9_Replace_Statement]^if  ( includeAs == null )  {^61^^^^^58^69^if  ( idType == null )  {^[CLASS] StdTypeResolverBuilder  [METHOD] init [RETURN_TYPE] StdTypeResolverBuilder   Id idType TypeIdResolver idRes [VARIABLES] As  _includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("idType can not be null");^61^62^63^^^58^69^if  ( idType == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] StdTypeResolverBuilder  [METHOD] init [RETURN_TYPE] StdTypeResolverBuilder   Id idType TypeIdResolver idRes [VARIABLES] As  _includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P16_Remove_Block]^^61^62^63^^^58^69^if  ( idType == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] StdTypeResolverBuilder  [METHOD] init [RETURN_TYPE] StdTypeResolverBuilder   Id idType TypeIdResolver idRes [VARIABLES] As  _includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P13_Insert_Block]^if  ( includeAs == null )  {     throw new IllegalArgumentException ( "includeAs can not be null" ) ; }^61^^^^^58^69^[Delete]^[CLASS] StdTypeResolverBuilder  [METHOD] init [RETURN_TYPE] StdTypeResolverBuilder   Id idType TypeIdResolver idRes [VARIABLES] As  _includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P13_Insert_Block]^if  (  ( _idType )  == null )  {     throw new IllegalStateException ( "Can not build, 'init (  ) ' not yet called" ) ; }^61^^^^^58^69^[Delete]^[CLASS] StdTypeResolverBuilder  [METHOD] init [RETURN_TYPE] StdTypeResolverBuilder   Id idType TypeIdResolver idRes [VARIABLES] As  _includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "includeAs can not be null" )   ;^62^^^^^58^69^throw new IllegalArgumentException  (" ")  ;^[CLASS] StdTypeResolverBuilder  [METHOD] init [RETURN_TYPE] StdTypeResolverBuilder   Id idType TypeIdResolver idRes [VARIABLES] As  _includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P13_Insert_Block]^if  ( idType == null )  {     throw new IllegalArgumentException ( "idType can not be null" ) ; }^62^^^^^58^69^[Delete]^[CLASS] StdTypeResolverBuilder  [METHOD] init [RETURN_TYPE] StdTypeResolverBuilder   Id idType TypeIdResolver idRes [VARIABLES] As  _includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P13_Insert_Block]^if  ( includeAs == null )  {     throw new IllegalArgumentException ( "includeAs can not be null" ) ; }^62^^^^^58^69^[Delete]^[CLASS] StdTypeResolverBuilder  [METHOD] init [RETURN_TYPE] StdTypeResolverBuilder   Id idType TypeIdResolver idRes [VARIABLES] As  _includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^62^^^^^58^69^throw new IllegalArgumentException  (" ")  ;^[CLASS] StdTypeResolverBuilder  [METHOD] init [RETURN_TYPE] StdTypeResolverBuilder   Id idType TypeIdResolver idRes [VARIABLES] As  _includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P8_Replace_Mix]^throw new IllegalStateException  (" ")  ; ;^62^^^^^58^69^throw new IllegalArgumentException  (" ")  ;^[CLASS] StdTypeResolverBuilder  [METHOD] init [RETURN_TYPE] StdTypeResolverBuilder   Id idType TypeIdResolver idRes [VARIABLES] As  _includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P8_Replace_Mix]^_idType =  null;^64^^^^^58^69^_idType = idType;^[CLASS] StdTypeResolverBuilder  [METHOD] init [RETURN_TYPE] StdTypeResolverBuilder   Id idType TypeIdResolver idRes [VARIABLES] As  _includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^_customIdResolver = _customIdResolver;^65^^^^^58^69^_customIdResolver = idRes;^[CLASS] StdTypeResolverBuilder  [METHOD] init [RETURN_TYPE] StdTypeResolverBuilder   Id idType TypeIdResolver idRes [VARIABLES] As  _includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P8_Replace_Mix]^_customIdResolver =  null;^65^^^^^58^69^_customIdResolver = idRes;^[CLASS] StdTypeResolverBuilder  [METHOD] init [RETURN_TYPE] StdTypeResolverBuilder   Id idType TypeIdResolver idRes [VARIABLES] As  _includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P12_Insert_Condition]^if  ( _customIdResolver != null )  { _customIdResolver = idRes; }^65^^^^^58^69^_customIdResolver = idRes;^[CLASS] StdTypeResolverBuilder  [METHOD] init [RETURN_TYPE] StdTypeResolverBuilder   Id idType TypeIdResolver idRes [VARIABLES] As  _includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P8_Replace_Mix]^_typeProperty =  null.getDefaultPropertyName (  ) ;^67^^^^^58^69^_typeProperty = idType.getDefaultPropertyName (  ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] init [RETURN_TYPE] StdTypeResolverBuilder   Id idType TypeIdResolver idRes [VARIABLES] As  _includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P11_Insert_Donor_Statement]^_typeProperty = typeIdPropName;_typeProperty = idType.getDefaultPropertyName (  ) ;^67^^^^^58^69^_typeProperty = idType.getDefaultPropertyName (  ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] init [RETURN_TYPE] StdTypeResolverBuilder   Id idType TypeIdResolver idRes [VARIABLES] As  _includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P11_Insert_Donor_Statement]^typeIdPropName = _idType.getDefaultPropertyName (  ) ;_typeProperty = idType.getDefaultPropertyName (  ) ;^67^^^^^58^69^_typeProperty = idType.getDefaultPropertyName (  ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] init [RETURN_TYPE] StdTypeResolverBuilder   Id idType TypeIdResolver idRes [VARIABLES] As  _includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P14_Delete_Statement]^^67^68^^^^58^69^_typeProperty = idType.getDefaultPropertyName (  ) ; return this;^[CLASS] StdTypeResolverBuilder  [METHOD] init [RETURN_TYPE] StdTypeResolverBuilder   Id idType TypeIdResolver idRes [VARIABLES] As  _includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P8_Replace_Mix]^return null;^68^^^^^58^69^return this;^[CLASS] StdTypeResolverBuilder  [METHOD] init [RETURN_TYPE] StdTypeResolverBuilder   Id idType TypeIdResolver idRes [VARIABLES] As  _includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P2_Replace_Operator]^if  ( _idType != JsonTypeInfo.Id.NONE )  {^75^^^^^72^92^if  ( _idType == JsonTypeInfo.Id.NONE )  {^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P8_Replace_Mix]^if  ( _idType == JsonTypeInfo.Id.4 )  {^75^^^^^72^92^if  ( _idType == JsonTypeInfo.Id.NONE )  {^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P15_Unwrap_Block]^return null;^75^76^77^^^72^92^if  ( _idType == JsonTypeInfo.Id.NONE )  { return null; }^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P16_Remove_Block]^^75^76^77^^^72^92^if  ( _idType == JsonTypeInfo.Id.NONE )  { return null; }^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P8_Replace_Mix]^return this;^76^^^^^72^92^return null;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P8_Replace_Mix]^return true;^76^^^^^72^92^return null;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P3_Replace_Literal]^TypeIdResolver idRes = idResolver ( config, baseType, subtypes, false, false ) ;^78^^^^^72^92^TypeIdResolver idRes = idResolver ( config, baseType, subtypes, true, false ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^TypeIdResolver idRes = idResolver (  baseType, subtypes, true, false ) ;^78^^^^^72^92^TypeIdResolver idRes = idResolver ( config, baseType, subtypes, true, false ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^TypeIdResolver idRes = idResolver ( config,  subtypes, true, false ) ;^78^^^^^72^92^TypeIdResolver idRes = idResolver ( config, baseType, subtypes, true, false ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^TypeIdResolver idRes = idResolver ( config, baseType,  true, false ) ;^78^^^^^72^92^TypeIdResolver idRes = idResolver ( config, baseType, subtypes, true, false ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^TypeIdResolver idRes = idResolver ( baseType, config, subtypes, true, false ) ;^78^^^^^72^92^TypeIdResolver idRes = idResolver ( config, baseType, subtypes, true, false ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^TypeIdResolver idRes = idResolver ( config, subtypes, baseType, true, false ) ;^78^^^^^72^92^TypeIdResolver idRes = idResolver ( config, baseType, subtypes, true, false ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P8_Replace_Mix]^TypeIdResolver idRes = idResolver ( config, baseType, this, true, false ) ;^78^^^^^72^92^TypeIdResolver idRes = idResolver ( config, baseType, subtypes, true, false ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P11_Insert_Donor_Statement]^TypeIdResolver idRes = idResolver ( config, baseType, subtypes, false, true ) ;TypeIdResolver idRes = idResolver ( config, baseType, subtypes, true, false ) ;^78^^^^^72^92^TypeIdResolver idRes = idResolver ( config, baseType, subtypes, true, false ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^TypeIdResolver idRes = idResolver ( subtypes, baseType, config, true, false ) ;^78^^^^^72^92^TypeIdResolver idRes = idResolver ( config, baseType, subtypes, true, false ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P14_Delete_Statement]^^78^^^^^72^92^TypeIdResolver idRes = idResolver ( config, baseType, subtypes, true, false ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P11_Insert_Donor_Statement]^return TypeNameIdResolver.construct ( config, baseType, subtypes, forSer, forDeser ) ;TypeIdResolver idRes = idResolver ( config, baseType, subtypes, true, false ) ;^78^^^^^72^92^TypeIdResolver idRes = idResolver ( config, baseType, subtypes, true, false ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsArrayTypeSerializer ( _customIdResolver, null ) ;^81^^^^^72^92^return new AsArrayTypeSerializer ( idRes, null ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P8_Replace_Mix]^return new AsArrayTypeSerializer ( idRes, true ) ;^81^^^^^72^92^return new AsArrayTypeSerializer ( idRes, null ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsPropertyTypeSerializer ( _customIdResolver, null, _typeProperty ) ;^83^84^^^^72^92^return new AsPropertyTypeSerializer ( idRes, null, _typeProperty ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsPropertyTypeSerializer (  null, _typeProperty ) ;^83^84^^^^72^92^return new AsPropertyTypeSerializer ( idRes, null, _typeProperty ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsPropertyTypeSerializer ( idRes, null ) ;^83^84^^^^72^92^return new AsPropertyTypeSerializer ( idRes, null, _typeProperty ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsPropertyTypeSerializer ( _typeProperty, null, idRes ) ;^83^84^^^^72^92^return new AsPropertyTypeSerializer ( idRes, null, _typeProperty ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P8_Replace_Mix]^return new AsPropertyTypeSerializer ( idRes, true, _typeProperty ) ;^83^84^^^^72^92^return new AsPropertyTypeSerializer ( idRes, null, _typeProperty ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsWrapperTypeSerializer ( _customIdResolver, null ) ;^86^^^^^72^92^return new AsWrapperTypeSerializer ( idRes, null ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P8_Replace_Mix]^return new AsWrapperTypeSerializer ( idRes, this ) ;^86^^^^^72^92^return new AsWrapperTypeSerializer ( idRes, null ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsExternalTypeSerializer ( _customIdResolver, null, _typeProperty ) ;^88^89^^^^72^92^return new AsExternalTypeSerializer ( idRes, null, _typeProperty ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsExternalTypeSerializer (  null, _typeProperty ) ;^88^89^^^^72^92^return new AsExternalTypeSerializer ( idRes, null, _typeProperty ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsExternalTypeSerializer ( idRes, null ) ;^88^89^^^^72^92^return new AsExternalTypeSerializer ( idRes, null, _typeProperty ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsExternalTypeSerializer ( _typeProperty, null, idRes ) ;^88^89^^^^72^92^return new AsExternalTypeSerializer ( idRes, null, _typeProperty ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P8_Replace_Mix]^return new AsExternalTypeSerializer ( _customIdResolver, true, _typeProperty ) ;^88^89^^^^72^92^return new AsExternalTypeSerializer ( idRes, null, _typeProperty ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P4_Replace_Constructor]^throw throw  new IllegalStateException (  ( "Do not know how to construct standard type id resolver for idType: " +  ( _idType )  )  )   ;^91^^^^^72^92^throw new IllegalStateException  (" ")  ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^91^^^^^72^92^throw new IllegalStateException  (" ")  ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeSerializer [RETURN_TYPE] TypeSerializer   SerializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  SerializationConfig  config  Collection  subtypes  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P2_Replace_Operator]^if  ( _idType > JsonTypeInfo.Id.NONE )  {^98^^^^^95^120^if  ( _idType == JsonTypeInfo.Id.NONE )  {^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P15_Unwrap_Block]^return null;^98^99^100^^^95^120^if  ( _idType == JsonTypeInfo.Id.NONE )  { return null; }^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P16_Remove_Block]^^98^99^100^^^95^120^if  ( _idType == JsonTypeInfo.Id.NONE )  { return null; }^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P8_Replace_Mix]^return this;^99^^^^^95^120^return null;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P8_Replace_Mix]^return true;^99^^^^^95^120^return null;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P3_Replace_Literal]^TypeIdResolver idRes = idResolver ( config, baseType, subtypes, false, false ) ;^102^^^^^95^120^TypeIdResolver idRes = idResolver ( config, baseType, subtypes, false, true ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^TypeIdResolver idRes = idResolver ( config, baseType, 3, false, true ) ;^102^^^^^95^120^TypeIdResolver idRes = idResolver ( config, baseType, subtypes, false, true ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^TypeIdResolver idRes = idResolver (  baseType, subtypes, false, true ) ;^102^^^^^95^120^TypeIdResolver idRes = idResolver ( config, baseType, subtypes, false, true ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^TypeIdResolver idRes = idResolver ( config,  subtypes, false, true ) ;^102^^^^^95^120^TypeIdResolver idRes = idResolver ( config, baseType, subtypes, false, true ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^TypeIdResolver idRes = idResolver ( config, baseType,  false, true ) ;^102^^^^^95^120^TypeIdResolver idRes = idResolver ( config, baseType, subtypes, false, true ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^TypeIdResolver idRes = idResolver ( subtypes, baseType, config, false, true ) ;^102^^^^^95^120^TypeIdResolver idRes = idResolver ( config, baseType, subtypes, false, true ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^TypeIdResolver idRes = idResolver ( baseType, config, subtypes, false, true ) ;^102^^^^^95^120^TypeIdResolver idRes = idResolver ( config, baseType, subtypes, false, true ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P11_Insert_Donor_Statement]^TypeIdResolver idRes = idResolver ( config, baseType, subtypes, true, false ) ;TypeIdResolver idRes = idResolver ( config, baseType, subtypes, false, true ) ;^102^^^^^95^120^TypeIdResolver idRes = idResolver ( config, baseType, subtypes, false, true ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P14_Delete_Statement]^^102^^^^^95^120^TypeIdResolver idRes = idResolver ( config, baseType, subtypes, false, true ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P11_Insert_Donor_Statement]^return TypeNameIdResolver.construct ( config, baseType, subtypes, forSer, forDeser ) ;TypeIdResolver idRes = idResolver ( config, baseType, subtypes, false, true ) ;^102^^^^^95^120^TypeIdResolver idRes = idResolver ( config, baseType, subtypes, false, true ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P4_Replace_Constructor]^return new AsArrayTypeDeserializer (  idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^107^108^^^^95^120^return new AsArrayTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P4_Replace_Constructor]^return new AsArrayTypeDeserializer ( baseType,  _typeProperty, _typeIdVisible, _defaultImpl ) ;^107^108^^^^95^120^return new AsArrayTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsArrayTypeDeserializer ( baseType, _customIdResolver, _typeProperty, _typeIdVisible, _defaultImpl ) ;^107^108^^^^95^120^return new AsArrayTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsArrayTypeDeserializer ( baseType, idRes,  _typeIdVisible, _defaultImpl ) ;^107^108^^^^95^120^return new AsArrayTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsArrayTypeDeserializer ( baseType, idRes, _typeProperty,  _defaultImpl ) ;^107^108^^^^95^120^return new AsArrayTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsArrayTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible ) ;^107^108^^^^95^120^return new AsArrayTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsArrayTypeDeserializer ( _typeIdVisible, idRes, _typeProperty, baseType, _defaultImpl ) ;^107^108^^^^95^120^return new AsArrayTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsArrayTypeDeserializer ( baseType, _defaultImpl, _typeProperty, _typeIdVisible, idRes ) ;^107^108^^^^95^120^return new AsArrayTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsArrayTypeDeserializer ( baseType, idRes, _typeIdVisible, _typeProperty, _defaultImpl ) ;^107^108^^^^95^120^return new AsArrayTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsArrayTypeDeserializer ( baseType, _typeIdVisible, _typeProperty, idRes, _defaultImpl ) ;^107^108^^^^95^120^return new AsArrayTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P4_Replace_Constructor]^return new AsPropertyTypeDeserializer (  idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^110^111^^^^95^120^return new AsPropertyTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P4_Replace_Constructor]^return new AsPropertyTypeDeserializer ( baseType,  _typeProperty, _typeIdVisible, _defaultImpl ) ;^110^111^^^^95^120^return new AsPropertyTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsPropertyTypeDeserializer ( baseType, _customIdResolver, _typeProperty, _typeIdVisible, _defaultImpl ) ;^110^111^^^^95^120^return new AsPropertyTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsPropertyTypeDeserializer ( baseType, idRes,  _typeIdVisible, _defaultImpl ) ;^110^111^^^^95^120^return new AsPropertyTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsPropertyTypeDeserializer ( baseType, idRes, _typeProperty,  _defaultImpl ) ;^110^111^^^^95^120^return new AsPropertyTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsPropertyTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible ) ;^110^111^^^^95^120^return new AsPropertyTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsPropertyTypeDeserializer ( idRes, baseType, _typeProperty, _typeIdVisible, _defaultImpl ) ;^110^111^^^^95^120^return new AsPropertyTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsPropertyTypeDeserializer ( baseType, _defaultImpl, _typeProperty, _typeIdVisible, idRes ) ;^110^111^^^^95^120^return new AsPropertyTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsPropertyTypeDeserializer ( _typeProperty, idRes, baseType, _typeIdVisible, _defaultImpl ) ;^110^111^^^^95^120^return new AsPropertyTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsPropertyTypeDeserializer ( baseType, idRes, _typeIdVisible, _typeProperty, _defaultImpl ) ;^110^111^^^^95^120^return new AsPropertyTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsPropertyTypeDeserializer ( baseType, idRes, _typeProperty, _defaultImpl, _typeIdVisible ) ;^110^111^^^^95^120^return new AsPropertyTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P4_Replace_Constructor]^return new AsWrapperTypeDeserializer (  idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^113^114^^^^95^120^return new AsWrapperTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P4_Replace_Constructor]^return new AsWrapperTypeDeserializer ( baseType,  _typeProperty, _typeIdVisible, _defaultImpl ) ;^113^114^^^^95^120^return new AsWrapperTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsWrapperTypeDeserializer ( baseType, _customIdResolver, _typeProperty, _typeIdVisible, _defaultImpl ) ;^113^114^^^^95^120^return new AsWrapperTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsWrapperTypeDeserializer ( baseType, idRes,  _typeIdVisible, _defaultImpl ) ;^113^114^^^^95^120^return new AsWrapperTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsWrapperTypeDeserializer ( baseType, idRes, _typeProperty,  _defaultImpl ) ;^113^114^^^^95^120^return new AsWrapperTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsWrapperTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible ) ;^113^114^^^^95^120^return new AsWrapperTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsWrapperTypeDeserializer ( _typeProperty, idRes, baseType, _typeIdVisible, _defaultImpl ) ;^113^114^^^^95^120^return new AsWrapperTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsWrapperTypeDeserializer ( idRes, baseType, _typeProperty, _typeIdVisible, _defaultImpl ) ;^113^114^^^^95^120^return new AsWrapperTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsWrapperTypeDeserializer ( baseType, idRes, _defaultImpl, _typeIdVisible, _typeProperty ) ;^113^114^^^^95^120^return new AsWrapperTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsWrapperTypeDeserializer ( baseType, _typeIdVisible, _typeProperty, idRes, _defaultImpl ) ;^113^114^^^^95^120^return new AsWrapperTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsWrapperTypeDeserializer ( baseType, _defaultImpl, _typeProperty, _typeIdVisible, idRes ) ;^113^114^^^^95^120^return new AsWrapperTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P4_Replace_Constructor]^return new AsExternalTypeDeserializer (  idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^116^117^^^^95^120^return new AsExternalTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P4_Replace_Constructor]^return new AsExternalTypeDeserializer ( baseType,  _typeProperty, _typeIdVisible, _defaultImpl ) ;^116^117^^^^95^120^return new AsExternalTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsExternalTypeDeserializer ( baseType, _customIdResolver, _typeProperty, _typeIdVisible, _defaultImpl ) ;^116^117^^^^95^120^return new AsExternalTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsExternalTypeDeserializer ( baseType, idRes,  _typeIdVisible, _defaultImpl ) ;^116^117^^^^95^120^return new AsExternalTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsExternalTypeDeserializer ( baseType, idRes, _typeProperty,  _defaultImpl ) ;^116^117^^^^95^120^return new AsExternalTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsExternalTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible ) ;^116^117^^^^95^120^return new AsExternalTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsExternalTypeDeserializer ( _typeIdVisible, idRes, _typeProperty, baseType, _defaultImpl ) ;^116^117^^^^95^120^return new AsExternalTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsExternalTypeDeserializer ( baseType, _defaultImpl, _typeProperty, _typeIdVisible, idRes ) ;^116^117^^^^95^120^return new AsExternalTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsExternalTypeDeserializer ( baseType, idRes, _typeIdVisible, _typeProperty, _defaultImpl ) ;^116^117^^^^95^120^return new AsExternalTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsExternalTypeDeserializer ( baseType, idRes, _typeProperty, _defaultImpl, _typeIdVisible ) ;^116^117^^^^95^120^return new AsExternalTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsArrayTypeDeserializer ( idRes, baseType, _typeProperty, _typeIdVisible, _defaultImpl ) ;^107^108^^^^95^120^return new AsArrayTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsArrayTypeDeserializer ( baseType, idRes, _defaultImpl, _typeIdVisible, _typeProperty ) ;^107^108^^^^95^120^return new AsArrayTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsArrayTypeDeserializer ( baseType, idRes, _typeProperty, _defaultImpl, _typeIdVisible ) ;^107^108^^^^95^120^return new AsArrayTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsPropertyTypeDeserializer ( _typeIdVisible, idRes, _typeProperty, baseType, _defaultImpl ) ;^110^111^^^^95^120^return new AsPropertyTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsPropertyTypeDeserializer ( _defaultImpl, idRes, _typeProperty, _typeIdVisible, baseType ) ;^110^111^^^^95^120^return new AsPropertyTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsWrapperTypeDeserializer ( _typeIdVisible, idRes, _typeProperty, baseType, _defaultImpl ) ;^113^114^^^^95^120^return new AsWrapperTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsWrapperTypeDeserializer ( baseType, _typeProperty, idRes, _typeIdVisible, _defaultImpl ) ;^113^114^^^^95^120^return new AsWrapperTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsWrapperTypeDeserializer ( baseType, idRes, _typeProperty, _defaultImpl, _typeIdVisible ) ;^113^114^^^^95^120^return new AsWrapperTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsExternalTypeDeserializer ( _typeProperty, idRes, baseType, _typeIdVisible, _defaultImpl ) ;^116^117^^^^95^120^return new AsExternalTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new AsExternalTypeDeserializer ( baseType, _typeIdVisible, _typeProperty, idRes, _defaultImpl ) ;^116^117^^^^95^120^return new AsExternalTypeDeserializer ( baseType, idRes, _typeProperty, _typeIdVisible, _defaultImpl ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P4_Replace_Constructor]^throw throw  new IllegalStateException (  ( "Do not know how to construct standard type id resolver for idType: " +  ( _idType )  )  )   ;^119^^^^^95^120^throw new IllegalStateException  (" ")  ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^119^^^^^95^120^throw new IllegalStateException  (" ")  ;^[CLASS] StdTypeResolverBuilder  [METHOD] buildTypeDeserializer [RETURN_TYPE] TypeDeserializer   DeserializationConfig config JavaType baseType NamedType> subtypes [VARIABLES] As  _includeAs  JavaType  baseType  boolean  _typeIdVisible  Collection  subtypes  Class  _defaultImpl  DeserializationConfig  config  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P2_Replace_Operator]^if  ( includeAs != null )  {^130^^^^^129^135^if  ( includeAs == null )  {^[CLASS] StdTypeResolverBuilder  [METHOD] inclusion [RETURN_TYPE] StdTypeResolverBuilder   As includeAs [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P8_Replace_Mix]^if  ( includeAs == false )  {^130^^^^^129^135^if  ( includeAs == null )  {^[CLASS] StdTypeResolverBuilder  [METHOD] inclusion [RETURN_TYPE] StdTypeResolverBuilder   As includeAs [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P9_Replace_Statement]^if  ( _idType == null )  {^130^^^^^129^135^if  ( includeAs == null )  {^[CLASS] StdTypeResolverBuilder  [METHOD] inclusion [RETURN_TYPE] StdTypeResolverBuilder   As includeAs [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P9_Replace_Statement]^if  ( idType == null )  {^130^^^^^129^135^if  ( includeAs == null )  {^[CLASS] StdTypeResolverBuilder  [METHOD] inclusion [RETURN_TYPE] StdTypeResolverBuilder   As includeAs [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("includeAs can not be null");^130^131^132^^^129^135^if  ( includeAs == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] StdTypeResolverBuilder  [METHOD] inclusion [RETURN_TYPE] StdTypeResolverBuilder   As includeAs [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P16_Remove_Block]^^130^131^132^^^129^135^if  ( includeAs == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] StdTypeResolverBuilder  [METHOD] inclusion [RETURN_TYPE] StdTypeResolverBuilder   As includeAs [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P13_Insert_Block]^if  ( idType == null )  {     throw new IllegalArgumentException ( "idType can not be null" ) ; }^130^^^^^129^135^[Delete]^[CLASS] StdTypeResolverBuilder  [METHOD] inclusion [RETURN_TYPE] StdTypeResolverBuilder   As includeAs [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P13_Insert_Block]^if  (  ( _idType )  == null )  {     throw new IllegalStateException ( "Can not build, 'init (  ) ' not yet called" ) ; }^130^^^^^129^135^[Delete]^[CLASS] StdTypeResolverBuilder  [METHOD] inclusion [RETURN_TYPE] StdTypeResolverBuilder   As includeAs [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException ( "idType can not be null" )   ;^131^^^^^129^135^throw new IllegalArgumentException  (" ")  ;^[CLASS] StdTypeResolverBuilder  [METHOD] inclusion [RETURN_TYPE] StdTypeResolverBuilder   As includeAs [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P13_Insert_Block]^if  ( idType == null )  {     throw new IllegalArgumentException ( "idType can not be null" ) ; }^131^^^^^129^135^[Delete]^[CLASS] StdTypeResolverBuilder  [METHOD] inclusion [RETURN_TYPE] StdTypeResolverBuilder   As includeAs [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P13_Insert_Block]^if  ( includeAs == null )  {     throw new IllegalArgumentException ( "includeAs can not be null" ) ; }^131^^^^^129^135^[Delete]^[CLASS] StdTypeResolverBuilder  [METHOD] inclusion [RETURN_TYPE] StdTypeResolverBuilder   As includeAs [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^131^^^^^129^135^throw new IllegalArgumentException  (" ")  ;^[CLASS] StdTypeResolverBuilder  [METHOD] inclusion [RETURN_TYPE] StdTypeResolverBuilder   As includeAs [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^_includeAs = null;^133^^^^^129^135^_includeAs = includeAs;^[CLASS] StdTypeResolverBuilder  [METHOD] inclusion [RETURN_TYPE] StdTypeResolverBuilder   As includeAs [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P8_Replace_Mix]^return null;^134^^^^^129^135^return this;^[CLASS] StdTypeResolverBuilder  [METHOD] inclusion [RETURN_TYPE] StdTypeResolverBuilder   As includeAs [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  TypeIdResolver  _customIdResolver  idRes  
[P2_Replace_Operator]^if  ( typeIdPropName == null && typeIdPropName.length (  )  == 0 )  {^145^^^^^142^150^if  ( typeIdPropName == null || typeIdPropName.length (  )  == 0 )  {^[CLASS] StdTypeResolverBuilder  [METHOD] typeProperty [RETURN_TYPE] StdTypeResolverBuilder   String typeIdPropName [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P2_Replace_Operator]^if  ( typeIdPropName != null || typeIdPropName.length (  )  == 0 )  {^145^^^^^142^150^if  ( typeIdPropName == null || typeIdPropName.length (  )  == 0 )  {^[CLASS] StdTypeResolverBuilder  [METHOD] typeProperty [RETURN_TYPE] StdTypeResolverBuilder   String typeIdPropName [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P2_Replace_Operator]^if  ( typeIdPropName == null || typeIdPropName.length (  )  != 0 )  {^145^^^^^142^150^if  ( typeIdPropName == null || typeIdPropName.length (  )  == 0 )  {^[CLASS] StdTypeResolverBuilder  [METHOD] typeProperty [RETURN_TYPE] StdTypeResolverBuilder   String typeIdPropName [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P3_Replace_Literal]^if  ( typeIdPropName == null || typeIdPropName.length (  )  == 2 )  {^145^^^^^142^150^if  ( typeIdPropName == null || typeIdPropName.length (  )  == 0 )  {^[CLASS] StdTypeResolverBuilder  [METHOD] typeProperty [RETURN_TYPE] StdTypeResolverBuilder   String typeIdPropName [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P3_Replace_Literal]^if  ( typeIdPropName == null || typeIdPropName.length() - 7  == 0 )  {^145^^^^^142^150^if  ( typeIdPropName == null || typeIdPropName.length (  )  == 0 )  {^[CLASS] StdTypeResolverBuilder  [METHOD] typeProperty [RETURN_TYPE] StdTypeResolverBuilder   String typeIdPropName [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^if  ( _typeProperty == null || typeIdPropName.length (  )  == 0 )  {^145^^^^^142^150^if  ( typeIdPropName == null || typeIdPropName.length (  )  == 0 )  {^[CLASS] StdTypeResolverBuilder  [METHOD] typeProperty [RETURN_TYPE] StdTypeResolverBuilder   String typeIdPropName [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P6_Replace_Expression]^if  ( typeIdPropName == null ) {^145^^^^^142^150^if  ( typeIdPropName == null || typeIdPropName.length (  )  == 0 )  {^[CLASS] StdTypeResolverBuilder  [METHOD] typeProperty [RETURN_TYPE] StdTypeResolverBuilder   String typeIdPropName [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P6_Replace_Expression]^if  (  typeIdPropName.length (  )  == 0 )  {^145^^^^^142^150^if  ( typeIdPropName == null || typeIdPropName.length (  )  == 0 )  {^[CLASS] StdTypeResolverBuilder  [METHOD] typeProperty [RETURN_TYPE] StdTypeResolverBuilder   String typeIdPropName [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P8_Replace_Mix]^if  ( typeIdPropName == this ) {^145^^^^^142^150^if  ( typeIdPropName == null || typeIdPropName.length (  )  == 0 )  {^[CLASS] StdTypeResolverBuilder  [METHOD] typeProperty [RETURN_TYPE] StdTypeResolverBuilder   String typeIdPropName [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P15_Unwrap_Block]^typeIdPropName = _idType.getDefaultPropertyName();^145^146^147^^^142^150^if  ( typeIdPropName == null || typeIdPropName.length (  )  == 0 )  { typeIdPropName = _idType.getDefaultPropertyName (  ) ; }^[CLASS] StdTypeResolverBuilder  [METHOD] typeProperty [RETURN_TYPE] StdTypeResolverBuilder   String typeIdPropName [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P16_Remove_Block]^^145^146^147^^^142^150^if  ( typeIdPropName == null || typeIdPropName.length (  )  == 0 )  { typeIdPropName = _idType.getDefaultPropertyName (  ) ; }^[CLASS] StdTypeResolverBuilder  [METHOD] typeProperty [RETURN_TYPE] StdTypeResolverBuilder   String typeIdPropName [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P8_Replace_Mix]^typeIdPropName ;^146^^^^^142^150^typeIdPropName = _idType.getDefaultPropertyName (  ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] typeProperty [RETURN_TYPE] StdTypeResolverBuilder   String typeIdPropName [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P11_Insert_Donor_Statement]^_typeProperty = idType.getDefaultPropertyName (  ) ;typeIdPropName = _idType.getDefaultPropertyName (  ) ;^146^^^^^142^150^typeIdPropName = _idType.getDefaultPropertyName (  ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] typeProperty [RETURN_TYPE] StdTypeResolverBuilder   String typeIdPropName [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P14_Delete_Statement]^^146^^^^^142^150^typeIdPropName = _idType.getDefaultPropertyName (  ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] typeProperty [RETURN_TYPE] StdTypeResolverBuilder   String typeIdPropName [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P8_Replace_Mix]^typeIdPropName  =  typeIdPropName ;^146^^^^^142^150^typeIdPropName = _idType.getDefaultPropertyName (  ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] typeProperty [RETURN_TYPE] StdTypeResolverBuilder   String typeIdPropName [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P3_Replace_Literal]^if  ( typeIdPropName == null || typeIdPropName.length() + 8  == 0 )  {^145^^^^^142^150^if  ( typeIdPropName == null || typeIdPropName.length (  )  == 0 )  {^[CLASS] StdTypeResolverBuilder  [METHOD] typeProperty [RETURN_TYPE] StdTypeResolverBuilder   String typeIdPropName [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P8_Replace_Mix]^_typeProperty =  null;^148^^^^^142^150^_typeProperty = typeIdPropName;^[CLASS] StdTypeResolverBuilder  [METHOD] typeProperty [RETURN_TYPE] StdTypeResolverBuilder   String typeIdPropName [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P11_Insert_Donor_Statement]^_typeProperty = idType.getDefaultPropertyName (  ) ;_typeProperty = typeIdPropName;^148^^^^^142^150^_typeProperty = typeIdPropName;^[CLASS] StdTypeResolverBuilder  [METHOD] typeProperty [RETURN_TYPE] StdTypeResolverBuilder   String typeIdPropName [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P8_Replace_Mix]^return null;^149^^^^^142^150^return this;^[CLASS] StdTypeResolverBuilder  [METHOD] typeProperty [RETURN_TYPE] StdTypeResolverBuilder   String typeIdPropName [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P8_Replace_Mix]^_defaultImpl =  null;^155^^^^^153^157^_defaultImpl = defaultImpl;^[CLASS] StdTypeResolverBuilder  [METHOD] defaultImpl [RETURN_TYPE] StdTypeResolverBuilder   Class<?> defaultImpl [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P8_Replace_Mix]^return null;^156^^^^^153^157^return this;^[CLASS] StdTypeResolverBuilder  [METHOD] defaultImpl [RETURN_TYPE] StdTypeResolverBuilder   Class<?> defaultImpl [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^_typeIdVisible = _typeIdVisible;^161^^^^^160^163^_typeIdVisible = isVisible;^[CLASS] StdTypeResolverBuilder  [METHOD] typeIdVisibility [RETURN_TYPE] StdTypeResolverBuilder   boolean isVisible [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  isVisible  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P8_Replace_Mix]^_typeIdVisible =  null;^161^^^^^160^163^_typeIdVisible = isVisible;^[CLASS] StdTypeResolverBuilder  [METHOD] typeIdVisibility [RETURN_TYPE] StdTypeResolverBuilder   boolean isVisible [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  isVisible  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P8_Replace_Mix]^return null;^162^^^^^160^163^return this;^[CLASS] StdTypeResolverBuilder  [METHOD] typeIdVisibility [RETURN_TYPE] StdTypeResolverBuilder   boolean isVisible [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  isVisible  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^public String getTypeProperty (  )  { return typeIdPropName; }^171^^^^^166^176^public String getTypeProperty (  )  { return _typeProperty; }^[CLASS] StdTypeResolverBuilder  [METHOD] getTypeProperty [RETURN_TYPE] String   [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  isVisible  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^public boolean isTypeIdVisible (  )  { return isVisible; }^178^^^^^173^183^public boolean isTypeIdVisible (  )  { return _typeIdVisible; }^[CLASS] StdTypeResolverBuilder  [METHOD] isTypeIdVisible [RETURN_TYPE] boolean   [VARIABLES] As  _includeAs  includeAs  boolean  _typeIdVisible  isVisible  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P2_Replace_Operator]^if  ( _customIdResolver == null )  {^196^^^^^191^214^if  ( _customIdResolver != null )  {^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^if  ( idRes != null )  {^196^^^^^191^214^if  ( _customIdResolver != null )  {^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P8_Replace_Mix]^if  ( _customIdResolver != true )  {^196^^^^^191^214^if  ( _customIdResolver != null )  {^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P15_Unwrap_Block]^return _customIdResolver;^196^197^198^^^191^214^if  ( _customIdResolver != null )  { return _customIdResolver; }^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P16_Remove_Block]^^196^197^198^^^191^214^if  ( _customIdResolver != null )  { return _customIdResolver; }^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return idRes;^197^^^^^191^214^return _customIdResolver;^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P2_Replace_Operator]^if  ( _idType != null )  {^199^^^^^191^214^if  ( _idType == null )  {^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^if  ( 2 == null )  {^199^^^^^191^214^if  ( _idType == null )  {^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P8_Replace_Mix]^if  ( _idType == this )  {^199^^^^^191^214^if  ( _idType == null )  {^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P9_Replace_Statement]^if  ( idType == null )  {^199^^^^^191^214^if  ( _idType == null )  {^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P9_Replace_Statement]^if  ( includeAs == null )  {^199^^^^^191^214^if  ( _idType == null )  {^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException("Can not build, 'init()' not yet called");^199^200^201^^^191^214^if  ( _idType == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P16_Remove_Block]^^199^200^201^^^191^214^if  ( _idType == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P13_Insert_Block]^if  ( idType == null )  {     throw new IllegalArgumentException ( "idType can not be null" ) ; }^199^^^^^191^214^[Delete]^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P13_Insert_Block]^if  ( includeAs == null )  {     throw new IllegalArgumentException ( "includeAs can not be null" ) ; }^199^^^^^191^214^[Delete]^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P13_Insert_Block]^if  (  ( _idType )  == null )  {     throw new IllegalStateException ( "Can not build, 'init (  ) ' not yet called" ) ; }^200^^^^^191^214^[Delete]^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^200^^^^^191^214^throw new IllegalStateException  (" ")  ;^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P4_Replace_Constructor]^return new ClassNameIdResolver (  config.getTypeFactory (  )  ) ;^204^^^^^191^214^return new ClassNameIdResolver ( baseType, config.getTypeFactory (  )  ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P4_Replace_Constructor]^return new ClassNameIdResolver ( baseType.getTypeFactory (  )  ) ;^204^^^^^191^214^return new ClassNameIdResolver ( baseType, config.getTypeFactory (  )  ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new ClassNameIdResolver ( config, baseType.getTypeFactory (  )  ) ;^204^^^^^191^214^return new ClassNameIdResolver ( baseType, config.getTypeFactory (  )  ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P4_Replace_Constructor]^return new MinimalClassNameIdResolver (  config.getTypeFactory (  )  ) ;^206^^^^^191^214^return new MinimalClassNameIdResolver ( baseType, config.getTypeFactory (  )  ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P4_Replace_Constructor]^return new MinimalClassNameIdResolver ( baseType.getTypeFactory (  )  ) ;^206^^^^^191^214^return new MinimalClassNameIdResolver ( baseType, config.getTypeFactory (  )  ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return new MinimalClassNameIdResolver ( config, baseType.getTypeFactory (  )  ) ;^206^^^^^191^214^return new MinimalClassNameIdResolver ( baseType, config.getTypeFactory (  )  ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return TypeNameIdResolver.construct ( config, baseType, subtypes, isVisible, forDeser ) ;^208^^^^^191^214^return TypeNameIdResolver.construct ( config, baseType, subtypes, forSer, forDeser ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return TypeNameIdResolver.construct ( config, baseType, subtypes, forSer, isVisible ) ;^208^^^^^191^214^return TypeNameIdResolver.construct ( config, baseType, subtypes, forSer, forDeser ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return TypeNameIdResolver.construct (  baseType, subtypes, forSer, forDeser ) ;^208^^^^^191^214^return TypeNameIdResolver.construct ( config, baseType, subtypes, forSer, forDeser ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return TypeNameIdResolver.construct ( config,  subtypes, forSer, forDeser ) ;^208^^^^^191^214^return TypeNameIdResolver.construct ( config, baseType, subtypes, forSer, forDeser ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return TypeNameIdResolver.construct ( config, baseType,  forSer, forDeser ) ;^208^^^^^191^214^return TypeNameIdResolver.construct ( config, baseType, subtypes, forSer, forDeser ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return TypeNameIdResolver.construct ( config, baseType, subtypes,  forDeser ) ;^208^^^^^191^214^return TypeNameIdResolver.construct ( config, baseType, subtypes, forSer, forDeser ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return TypeNameIdResolver.construct ( config, baseType, subtypes, forSer ) ;^208^^^^^191^214^return TypeNameIdResolver.construct ( config, baseType, subtypes, forSer, forDeser ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return TypeNameIdResolver.construct ( forDeser, baseType, subtypes, forSer, config ) ;^208^^^^^191^214^return TypeNameIdResolver.construct ( config, baseType, subtypes, forSer, forDeser ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return TypeNameIdResolver.construct ( config, subtypes, baseType, forSer, forDeser ) ;^208^^^^^191^214^return TypeNameIdResolver.construct ( config, baseType, subtypes, forSer, forDeser ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return TypeNameIdResolver.construct ( config, baseType, forDeser, forSer, subtypes ) ;^208^^^^^191^214^return TypeNameIdResolver.construct ( config, baseType, subtypes, forSer, forDeser ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return TypeNameIdResolver.construct ( config, baseType, subtypes, forDeser, forSer ) ;^208^^^^^191^214^return TypeNameIdResolver.construct ( config, baseType, subtypes, forSer, forDeser ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P8_Replace_Mix]^return true;^210^^^^^191^214^return null;^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P8_Replace_Mix]^return new ClassNameIdResolver ( baseType, 0.getTypeFactory (  )  ) ;^204^^^^^191^214^return new ClassNameIdResolver ( baseType, config.getTypeFactory (  )  ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P14_Delete_Statement]^^204^^^^^191^214^return new ClassNameIdResolver ( baseType, config.getTypeFactory (  )  ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P14_Delete_Statement]^^206^^^^^191^214^return new MinimalClassNameIdResolver ( baseType, config.getTypeFactory (  )  ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return TypeNameIdResolver.construct ( 2, baseType, subtypes, forSer, forDeser ) ;^208^^^^^191^214^return TypeNameIdResolver.construct ( config, baseType, subtypes, forSer, forDeser ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P5_Replace_Variable]^return TypeNameIdResolver.construct ( baseType, config, subtypes, forSer, forDeser ) ;^208^^^^^191^214^return TypeNameIdResolver.construct ( config, baseType, subtypes, forSer, forDeser ) ;^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P14_Delete_Statement]^^208^209^210^211^212^191^214^return TypeNameIdResolver.construct ( config, baseType, subtypes, forSer, forDeser ) ; case NONE: return null; case CUSTOM: }^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P4_Replace_Constructor]^throw throw  new IllegalStateException (  ( "Do not know how to construct standard type serializer for inclusion type: " +  ( _includeAs )  )  )   ;^213^^^^^191^214^throw new IllegalStateException  (" ")  ;^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^213^^^^^191^214^throw new IllegalStateException  (" ")  ;^[CLASS] StdTypeResolverBuilder  [METHOD] idResolver [RETURN_TYPE] TypeIdResolver   MapperConfig<?> config JavaType baseType NamedType> subtypes boolean forSer boolean forDeser [VARIABLES] As  _includeAs  includeAs  JavaType  baseType  boolean  _typeIdVisible  forDeser  forSer  isVisible  MapperConfig  config  Collection  subtypes  Class  _defaultImpl  defaultImpl  Id  _idType  idType  String  _typeProperty  typeIdPropName  TypeIdResolver  _customIdResolver  idRes  
