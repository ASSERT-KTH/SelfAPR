[P1_Replace_Type]^private static final  short  serialVersionUID = 1L;^15^^^^^10^20^private static final long serialVersionUID = 1L;^[CLASS] EnumResolver   [VARIABLES] 
[P8_Replace_Mix]^private static  long serialVersionUID = 1;^15^^^^^10^20^private static final long serialVersionUID = 1L;^[CLASS] EnumResolver   [VARIABLES] 
[P8_Replace_Mix]^protected  HashMap<String, T> _enumsById;^21^^^^^16^26^protected final HashMap<String, T> _enumsById;^[CLASS] EnumResolver   [VARIABLES] 
[P8_Replace_Mix]^_enumClass =  null;^25^^^^^23^28^_enumClass = enumClass;^[CLASS] EnumResolver  [METHOD] <init> [RETURN_TYPE] Class,T   Class<T> enumClass T[] enums String, T> map [VARIABLES] Class  _enumClass  enumClass  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[P11_Insert_Donor_Statement]^_enums = enums;_enumClass = enumClass;^25^^^^^23^28^_enumClass = enumClass;^[CLASS] EnumResolver  [METHOD] <init> [RETURN_TYPE] Class,T   Class<T> enumClass T[] enums String, T> map [VARIABLES] Class  _enumClass  enumClass  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[P5_Replace_Variable]^_enums = _enums;^26^^^^^23^28^_enums = enums;^[CLASS] EnumResolver  [METHOD] <init> [RETURN_TYPE] Class,T   Class<T> enumClass T[] enums String, T> map [VARIABLES] Class  _enumClass  enumClass  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[P8_Replace_Mix]^_enums =  null;^26^^^^^23^28^_enums = enums;^[CLASS] EnumResolver  [METHOD] <init> [RETURN_TYPE] Class,T   Class<T> enumClass T[] enums String, T> map [VARIABLES] Class  _enumClass  enumClass  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[P11_Insert_Donor_Statement]^_enumClass = enumClass;_enums = enums;^26^^^^^23^28^_enums = enums;^[CLASS] EnumResolver  [METHOD] <init> [RETURN_TYPE] Class,T   Class<T> enumClass T[] enums String, T> map [VARIABLES] Class  _enumClass  enumClass  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[P8_Replace_Mix]^_enumsById =  null;^27^^^^^23^28^_enumsById = map;^[CLASS] EnumResolver  [METHOD] <init> [RETURN_TYPE] Class,T   Class<T> enumClass T[] enums String, T> map [VARIABLES] Class  _enumClass  enumClass  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[P14_Delete_Statement]^^36^^^^^34^45^ET[] enumValues = enumCls.getEnumConstants (  ) ;^[CLASS] EnumResolver  [METHOD] constructFor [RETURN_TYPE] <ET   Class<ET> enumCls AnnotationIntrospector ai [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  ET  e  
[P2_Replace_Operator]^if  ( enumValues != null )  {^37^^^^^34^45^if  ( enumValues == null )  {^[CLASS] EnumResolver  [METHOD] constructFor [RETURN_TYPE] <ET   Class<ET> enumCls AnnotationIntrospector ai [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  ET  e  
[P6_Replace_Expression]^if  ( "No enum constants for class " + enumCls.getName (  ) )  {^37^^^^^34^45^if  ( enumValues == null )  {^[CLASS] EnumResolver  [METHOD] constructFor [RETURN_TYPE] <ET   Class<ET> enumCls AnnotationIntrospector ai [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  ET  e  
[P8_Replace_Mix]^if  ( enumValues == true )  {^37^^^^^34^45^if  ( enumValues == null )  {^[CLASS] EnumResolver  [METHOD] constructFor [RETURN_TYPE] <ET   Class<ET> enumCls AnnotationIntrospector ai [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  ET  e  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException(("No enum constants for class " + (enumCls.getName())));^37^38^39^^^34^45^if  ( enumValues == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] EnumResolver  [METHOD] constructFor [RETURN_TYPE] <ET   Class<ET> enumCls AnnotationIntrospector ai [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  ET  e  
[P16_Remove_Block]^^37^38^39^^^34^45^if  ( enumValues == null )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] EnumResolver  [METHOD] constructFor [RETURN_TYPE] <ET   Class<ET> enumCls AnnotationIntrospector ai [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  ET  e  
[P13_Insert_Block]^if  ( enumValues == null )  {     throw new IllegalArgumentException (  ( "No enum constants for class " +  ( enumCls.getName (  )  )  )  ) ; }^38^^^^^34^45^[Delete]^[CLASS] EnumResolver  [METHOD] constructFor [RETURN_TYPE] <ET   Class<ET> enumCls AnnotationIntrospector ai [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  ET  e  
[P8_Replace_Mix]^return ;^38^^^^^34^45^throw new IllegalArgumentException  (" ")  ;^[CLASS] EnumResolver  [METHOD] constructFor [RETURN_TYPE] <ET   Class<ET> enumCls AnnotationIntrospector ai [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  ET  e  
[P14_Delete_Statement]^^38^^^^^34^45^throw new IllegalArgumentException  (" ")  ;^[CLASS] EnumResolver  [METHOD] constructFor [RETURN_TYPE] <ET   Class<ET> enumCls AnnotationIntrospector ai [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  ET  e  
[P8_Replace_Mix]^return 0;^38^^^^^34^45^throw new IllegalArgumentException  (" ")  ;^[CLASS] EnumResolver  [METHOD] constructFor [RETURN_TYPE] <ET   Class<ET> enumCls AnnotationIntrospector ai [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  ET  e  
[P5_Replace_Variable]^map.put ( ai.findEnumValue ( e )  ) ;^42^^^^^34^45^map.put ( ai.findEnumValue ( e ) , e ) ;^[CLASS] EnumResolver  [METHOD] constructFor [RETURN_TYPE] <ET   Class<ET> enumCls AnnotationIntrospector ai [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  ET  e  
[P5_Replace_Variable]^map.put ( e.findEnumValue ( ai ) , e ) ;^42^^^^^34^45^map.put ( ai.findEnumValue ( e ) , e ) ;^[CLASS] EnumResolver  [METHOD] constructFor [RETURN_TYPE] <ET   Class<ET> enumCls AnnotationIntrospector ai [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  ET  e  
[P14_Delete_Statement]^^42^^^^^34^45^map.put ( ai.findEnumValue ( e ) , e ) ;^[CLASS] EnumResolver  [METHOD] constructFor [RETURN_TYPE] <ET   Class<ET> enumCls AnnotationIntrospector ai [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  ET  e  
[P11_Insert_Donor_Statement]^map.put ( o.toString (  ) , en ) ;map.put ( ai.findEnumValue ( e ) , e ) ;^42^^^^^34^45^map.put ( ai.findEnumValue ( e ) , e ) ;^[CLASS] EnumResolver  [METHOD] constructFor [RETURN_TYPE] <ET   Class<ET> enumCls AnnotationIntrospector ai [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  ET  e  
[P11_Insert_Donor_Statement]^map.put ( e.toString (  ) , e ) ;map.put ( ai.findEnumValue ( e ) , e ) ;^42^^^^^34^45^map.put ( ai.findEnumValue ( e ) , e ) ;^[CLASS] EnumResolver  [METHOD] constructFor [RETURN_TYPE] <ET   Class<ET> enumCls AnnotationIntrospector ai [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  ET  e  
[P4_Replace_Constructor]^return new EnumResolver<ET> (  enumValues, map ) ;^44^^^^^34^45^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructFor [RETURN_TYPE] <ET   Class<ET> enumCls AnnotationIntrospector ai [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  ET  e  
[P4_Replace_Constructor]^return new EnumResolver<ET> ( enumCls,  map ) ;^44^^^^^34^45^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructFor [RETURN_TYPE] <ET   Class<ET> enumCls AnnotationIntrospector ai [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  ET  e  
[P4_Replace_Constructor]^return new EnumResolver<ET> ( enumCls, enumValues ) ;^44^^^^^34^45^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructFor [RETURN_TYPE] <ET   Class<ET> enumCls AnnotationIntrospector ai [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  ET  e  
[P5_Replace_Variable]^return new EnumResolver<ET> ( enumValues, enumCls, map ) ;^44^^^^^34^45^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructFor [RETURN_TYPE] <ET   Class<ET> enumCls AnnotationIntrospector ai [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  ET  e  
[P5_Replace_Variable]^return new EnumResolver<ET> ( enumCls, map, enumValues ) ;^44^^^^^34^45^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructFor [RETURN_TYPE] <ET   Class<ET> enumCls AnnotationIntrospector ai [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  ET  e  
[P5_Replace_Variable]^return new EnumResolver<ET> ( enumCls, enumValues, this ) ;^44^^^^^34^45^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructFor [RETURN_TYPE] <ET   Class<ET> enumCls AnnotationIntrospector ai [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  ET  e  
[P5_Replace_Variable]^return new EnumResolver<ET> ( map, enumValues, enumCls ) ;^44^^^^^34^45^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructFor [RETURN_TYPE] <ET   Class<ET> enumCls AnnotationIntrospector ai [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  ET  e  
[P7_Replace_Invocation]^ET[] enumValues = enumCls .getName (  )  ;^53^^^^^51^61^ET[] enumValues = enumCls.getEnumConstants (  ) ;^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[P14_Delete_Statement]^^53^54^^^^51^61^ET[] enumValues = enumCls.getEnumConstants (  ) ; HashMap<String, ET> map = new HashMap<String, ET> (  ) ;^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[P1_Replace_Type]^for  (  short  i = enumValues.length; --i >= 0;  )  {^56^^^^^51^61^for  ( int i = enumValues.length; --i >= 0;  )  {^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[P2_Replace_Operator]^for  ( int i = enumValues.length; --i == 0;  )  {^56^^^^^51^61^for  ( int i = enumValues.length; --i >= 0;  )  {^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[P3_Replace_Literal]^for  ( int i = enumValues.length; --i >= -4;  )  {^56^^^^^51^61^for  ( int i = enumValues.length; --i >= 0;  )  {^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[P5_Replace_Variable]^for  ( int i = enumValues.lengthnumValues.length; --i >= 0;  )  {^56^^^^^51^61^for  ( int i = enumValues.length; --i >= 0;  )  {^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[P5_Replace_Variable]^for  ( enumValues.lengthnt i = i; --i >= 0;  )  {^56^^^^^51^61^for  ( int i = enumValues.length; --i >= 0;  )  {^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[P11_Insert_Donor_Statement]^ET en = enumValues[i];ET e = enumValues[i];^57^^^^^51^61^ET e = enumValues[i];^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[P5_Replace_Variable]^map.put ( e.toString (  )  ) ;^58^^^^^51^61^map.put ( e.toString (  ) , e ) ;^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[P8_Replace_Mix]^map .get ( this )  ;^58^^^^^51^61^map.put ( e.toString (  ) , e ) ;^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[P14_Delete_Statement]^^58^^^^^51^61^map.put ( e.toString (  ) , e ) ;^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[P11_Insert_Donor_Statement]^map.put ( ai.findEnumValue ( e ) , e ) ;map.put ( e.toString (  ) , e ) ;^58^^^^^51^61^map.put ( e.toString (  ) , e ) ;^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[P11_Insert_Donor_Statement]^map.put ( o.toString (  ) , en ) ;map.put ( e.toString (  ) , e ) ;^58^^^^^51^61^map.put ( e.toString (  ) , e ) ;^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[P5_Replace_Variable]^for  ( int i = enumValues.length.length; --i >= 0;  )  {^56^^^^^51^61^for  ( int i = enumValues.length; --i >= 0;  )  {^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[P5_Replace_Variable]^for  ( int i = enumValues; --i >= 0;  )  {^56^^^^^51^61^for  ( int i = enumValues.length; --i >= 0;  )  {^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[P4_Replace_Constructor]^return new EnumResolver<ET> (  enumValues, map ) ;^60^^^^^51^61^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[P4_Replace_Constructor]^return new EnumResolver<ET> ( enumCls,  map ) ;^60^^^^^51^61^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[P4_Replace_Constructor]^return new EnumResolver<ET> ( enumCls, enumValues ) ;^60^^^^^51^61^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[P5_Replace_Variable]^return new EnumResolver<ET> ( map, enumValues, enumCls ) ;^60^^^^^51^61^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[P5_Replace_Variable]^return new EnumResolver<ET> ( enumValues, enumCls, map ) ;^60^^^^^51^61^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[P8_Replace_Mix]^return new EnumResolver<ET> ( enumCls, enumValues, 4 ) ;^60^^^^^51^61^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[P5_Replace_Variable]^return new EnumResolver<ET> ( enumCls, map, enumValues ) ;^60^^^^^51^61^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructUsingToString [RETURN_TYPE] <ET   Class<ET> enumCls [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  long  serialVersionUID  int  i  ET  e  
[P14_Delete_Statement]^^66^^^^^63^81^ET[] enumValues = enumCls.getEnumConstants (  ) ;^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[P2_Replace_Operator]^if  ( o == null )  {^73^^^^^63^81^if  ( o != null )  {^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[P8_Replace_Mix]^if  ( o != true )  {^73^^^^^63^81^if  ( o != null )  {^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[P15_Unwrap_Block]^map.put(o.toString(), en);^73^74^75^^^63^81^if  ( o != null )  { map.put ( o.toString (  ) , en ) ; }^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[P16_Remove_Block]^^73^74^75^^^63^81^if  ( o != null )  { map.put ( o.toString (  ) , en ) ; }^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[P5_Replace_Variable]^map.put ( o.toString (  )  ) ;^74^^^^^63^81^map.put ( o.toString (  ) , en ) ;^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[P5_Replace_Variable]^map.put ( en.toString (  ) , o ) ;^74^^^^^63^81^map.put ( o.toString (  ) , en ) ;^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[P14_Delete_Statement]^^74^^^^^63^81^map.put ( o.toString (  ) , en ) ;^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[P11_Insert_Donor_Statement]^map.put ( ai.findEnumValue ( e ) , e ) ;map.put ( o.toString (  ) , en ) ;^74^^^^^63^81^map.put ( o.toString (  ) , en ) ;^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[P11_Insert_Donor_Statement]^map.put ( e.toString (  ) , e ) ;map.put ( o.toString (  ) , en ) ;^74^^^^^63^81^map.put ( o.toString (  ) , en ) ;^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[P13_Insert_Block]^if  ( o != null )  {     map.put ( o.toString (  ) , en ) ; }^74^^^^^63^81^[Delete]^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[P1_Replace_Type]^for  (  long  i = enumValues.length; --i >= 0;  )  {^69^^^^^63^81^for  ( int i = enumValues.length; --i >= 0;  )  {^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[P2_Replace_Operator]^for  ( int i = enumValues.length; --i > 0;  )  {^69^^^^^63^81^for  ( int i = enumValues.length; --i >= 0;  )  {^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[P3_Replace_Literal]^for  ( int i = enumValues.length; --i >= i;  )  {^69^^^^^63^81^for  ( int i = enumValues.length; --i >= 0;  )  {^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[P5_Replace_Variable]^for  ( int i = enumValues.length.length; --i >= 0;  )  {^69^^^^^63^81^for  ( int i = enumValues.length; --i >= 0;  )  {^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[P5_Replace_Variable]^for  ( ent i = inumValues.length; --i >= 0;  )  {^69^^^^^63^81^for  ( int i = enumValues.length; --i >= 0;  )  {^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[P5_Replace_Variable]^for  ( int i = en; --i >= 0;  )  {^69^^^^^63^81^for  ( int i = enumValues.length; --i >= 0;  )  {^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[P7_Replace_Invocation]^map .get ( o )  ;^74^^^^^63^81^map.put ( o.toString (  ) , en ) ;^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[P5_Replace_Variable]^Object o = en.invoke ( accessor ) ;^72^^^^^63^81^Object o = accessor.invoke ( en ) ;^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[P14_Delete_Statement]^^72^^^^^63^81^Object o = accessor.invoke ( en ) ;^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[P11_Insert_Donor_Statement]^ET e = enumValues[i];ET en = enumValues[i];^70^^^^^63^81^ET en = enumValues[i];^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[P8_Replace_Mix]^return ;^77^^^^^63^81^throw new IllegalArgumentException  (" ")  ;^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[P14_Delete_Statement]^^77^^^^^63^81^throw new IllegalArgumentException  (" ")  ;^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[P5_Replace_Variable]^for  ( int i = enumValues; --i >= 0;  )  {^69^^^^^63^81^for  ( int i = enumValues.length; --i >= 0;  )  {^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[P4_Replace_Constructor]^return new EnumResolver<ET> (  enumValues, map ) ;^80^^^^^63^81^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[P4_Replace_Constructor]^return new EnumResolver<ET> ( enumCls,  map ) ;^80^^^^^63^81^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[P4_Replace_Constructor]^return new EnumResolver<ET> ( enumCls, enumValues ) ;^80^^^^^63^81^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[P5_Replace_Variable]^return new EnumResolver<ET> ( enumValues, enumCls, map ) ;^80^^^^^63^81^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[P5_Replace_Variable]^return new EnumResolver<ET> ( enumCls, map, enumValues ) ;^80^^^^^63^81^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[P5_Replace_Variable]^return new EnumResolver<ET> ( map, enumValues, enumCls ) ;^80^^^^^63^81^return new EnumResolver<ET> ( enumCls, enumValues, map ) ;^[CLASS] EnumResolver  [METHOD] constructUsingMethod [RETURN_TYPE] <ET   Class<ET> enumCls Method accessor [VARIABLES] ET[]  enumValues  boolean  HashMap  _enumsById  map  T[]  _enums  enums  Class  _enumClass  enumClass  enumCls  Object  o  Method  accessor  long  serialVersionUID  int  i  Exception  e  ET  en  
[P5_Replace_Variable]^return constructFor (  ai ) ;^94^^^^^88^95^return constructFor ( enumCls, ai ) ;^[CLASS] EnumResolver  [METHOD] constructUnsafe [RETURN_TYPE] EnumResolver   Class<?> rawEnumCls AnnotationIntrospector ai [VARIABLES] AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[P5_Replace_Variable]^return constructFor ( enumCls ) ;^94^^^^^88^95^return constructFor ( enumCls, ai ) ;^[CLASS] EnumResolver  [METHOD] constructUnsafe [RETURN_TYPE] EnumResolver   Class<?> rawEnumCls AnnotationIntrospector ai [VARIABLES] AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[P5_Replace_Variable]^return constructFor ( ai, enumCls ) ;^94^^^^^88^95^return constructFor ( enumCls, ai ) ;^[CLASS] EnumResolver  [METHOD] constructUnsafe [RETURN_TYPE] EnumResolver   Class<?> rawEnumCls AnnotationIntrospector ai [VARIABLES] AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[P7_Replace_Invocation]^return constructUnsafe ( enumCls, ai ) ;^94^^^^^88^95^return constructFor ( enumCls, ai ) ;^[CLASS] EnumResolver  [METHOD] constructUnsafe [RETURN_TYPE] EnumResolver   Class<?> rawEnumCls AnnotationIntrospector ai [VARIABLES] AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[P14_Delete_Statement]^^94^^^^^88^95^return constructFor ( enumCls, ai ) ;^[CLASS] EnumResolver  [METHOD] constructUnsafe [RETURN_TYPE] EnumResolver   Class<?> rawEnumCls AnnotationIntrospector ai [VARIABLES] AnnotationIntrospector  ai  Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[P7_Replace_Invocation]^return constructUnsafeUsingToString ( enumCls ) ;^106^^^^^102^107^return constructUsingToString ( enumCls ) ;^[CLASS] EnumResolver  [METHOD] constructUnsafeUsingToString [RETURN_TYPE] EnumResolver   Class<?> rawEnumCls [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[P14_Delete_Statement]^^106^^^^^102^107^return constructUsingToString ( enumCls ) ;^[CLASS] EnumResolver  [METHOD] constructUnsafeUsingToString [RETURN_TYPE] EnumResolver   Class<?> rawEnumCls [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[P5_Replace_Variable]^return constructUsingMethod (  accessor ) ;^118^^^^^114^119^return constructUsingMethod ( enumCls, accessor ) ;^[CLASS] EnumResolver  [METHOD] constructUnsafeUsingMethod [RETURN_TYPE] EnumResolver   Class<?> rawEnumCls Method accessor [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  Method  accessor  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[P5_Replace_Variable]^return constructUsingMethod ( enumCls ) ;^118^^^^^114^119^return constructUsingMethod ( enumCls, accessor ) ;^[CLASS] EnumResolver  [METHOD] constructUnsafeUsingMethod [RETURN_TYPE] EnumResolver   Class<?> rawEnumCls Method accessor [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  Method  accessor  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[P5_Replace_Variable]^return constructUsingMethod ( accessor, enumCls ) ;^118^^^^^114^119^return constructUsingMethod ( enumCls, accessor ) ;^[CLASS] EnumResolver  [METHOD] constructUnsafeUsingMethod [RETURN_TYPE] EnumResolver   Class<?> rawEnumCls Method accessor [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  Method  accessor  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[P7_Replace_Invocation]^return constructUnsafeUsingMethod ( enumCls, accessor ) ;^118^^^^^114^119^return constructUsingMethod ( enumCls, accessor ) ;^[CLASS] EnumResolver  [METHOD] constructUnsafeUsingMethod [RETURN_TYPE] EnumResolver   Class<?> rawEnumCls Method accessor [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  Method  accessor  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[P5_Replace_Variable]^return constructUsingMethod ( 1, accessor ) ;^118^^^^^114^119^return constructUsingMethod ( enumCls, accessor ) ;^[CLASS] EnumResolver  [METHOD] constructUnsafeUsingMethod [RETURN_TYPE] EnumResolver   Class<?> rawEnumCls Method accessor [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  Method  accessor  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[P8_Replace_Mix]^return constructUnsafeUsingMethod ( 1, accessor ) ;^118^^^^^114^119^return constructUsingMethod ( enumCls, accessor ) ;^[CLASS] EnumResolver  [METHOD] constructUnsafeUsingMethod [RETURN_TYPE] EnumResolver   Class<?> rawEnumCls Method accessor [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  Method  accessor  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[P14_Delete_Statement]^^118^^^^^114^119^return constructUsingMethod ( enumCls, accessor ) ;^[CLASS] EnumResolver  [METHOD] constructUnsafeUsingMethod [RETURN_TYPE] EnumResolver   Class<?> rawEnumCls Method accessor [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  Method  accessor  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[P5_Replace_Variable]^return key.get ( _enumsById ) ;^123^^^^^121^124^return _enumsById.get ( key ) ;^[CLASS] EnumResolver  [METHOD] findEnum [RETURN_TYPE] T   String key [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  String  key  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[P14_Delete_Statement]^^123^^^^^121^124^return _enumsById.get ( key ) ;^[CLASS] EnumResolver  [METHOD] findEnum [RETURN_TYPE] T   String key [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  String  key  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[P2_Replace_Operator]^if  ( index < 0 && index >= _enums.length )  {^128^^^^^126^132^if  ( index < 0 || index >= _enums.length )  {^[CLASS] EnumResolver  [METHOD] getEnum [RETURN_TYPE] T   int index [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  int  index  T[]  _enums  enums  
[P2_Replace_Operator]^if  ( index == 0 || index >= _enums.length )  {^128^^^^^126^132^if  ( index < 0 || index >= _enums.length )  {^[CLASS] EnumResolver  [METHOD] getEnum [RETURN_TYPE] T   int index [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  int  index  T[]  _enums  enums  
[P2_Replace_Operator]^if  ( index < 0 || index < _enums.length )  {^128^^^^^126^132^if  ( index < 0 || index >= _enums.length )  {^[CLASS] EnumResolver  [METHOD] getEnum [RETURN_TYPE] T   int index [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  int  index  T[]  _enums  enums  
[P3_Replace_Literal]^if  ( index < index || index >= _enums.length )  {^128^^^^^126^132^if  ( index < 0 || index >= _enums.length )  {^[CLASS] EnumResolver  [METHOD] getEnum [RETURN_TYPE] T   int index [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  int  index  T[]  _enums  enums  
[P5_Replace_Variable]^if  ( index < 0 || index >= index )  {^128^^^^^126^132^if  ( index < 0 || index >= _enums.length )  {^[CLASS] EnumResolver  [METHOD] getEnum [RETURN_TYPE] T   int index [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  int  index  T[]  _enums  enums  
[P5_Replace_Variable]^if  ( index < 0 || index >= enums.length )  {^128^^^^^126^132^if  ( index < 0 || index >= _enums.length )  {^[CLASS] EnumResolver  [METHOD] getEnum [RETURN_TYPE] T   int index [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  int  index  T[]  _enums  enums  
[P5_Replace_Variable]^if  ( _enums.length < 0 || index >= index )  {^128^^^^^126^132^if  ( index < 0 || index >= _enums.length )  {^[CLASS] EnumResolver  [METHOD] getEnum [RETURN_TYPE] T   int index [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  int  index  T[]  _enums  enums  
[P5_Replace_Variable]^if  ( index < 0 || index >= _enums )  {^128^^^^^126^132^if  ( index < 0 || index >= _enums.length )  {^[CLASS] EnumResolver  [METHOD] getEnum [RETURN_TYPE] T   int index [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  int  index  T[]  _enums  enums  
[P5_Replace_Variable]^if  ( _enums < 0 || index >= index.length )  {^128^^^^^126^132^if  ( index < 0 || index >= _enums.length )  {^[CLASS] EnumResolver  [METHOD] getEnum [RETURN_TYPE] T   int index [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  int  index  T[]  _enums  enums  
[P6_Replace_Expression]^if  ( index < 0 ) {^128^^^^^126^132^if  ( index < 0 || index >= _enums.length )  {^[CLASS] EnumResolver  [METHOD] getEnum [RETURN_TYPE] T   int index [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  int  index  T[]  _enums  enums  
[P6_Replace_Expression]^if  (  index >= _enums.length )  {^128^^^^^126^132^if  ( index < 0 || index >= _enums.length )  {^[CLASS] EnumResolver  [METHOD] getEnum [RETURN_TYPE] T   int index [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  int  index  T[]  _enums  enums  
[P15_Unwrap_Block]^return null;^128^129^130^^^126^132^if  ( index < 0 || index >= _enums.length )  { return null; }^[CLASS] EnumResolver  [METHOD] getEnum [RETURN_TYPE] T   int index [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  int  index  T[]  _enums  enums  
[P16_Remove_Block]^^128^129^130^^^126^132^if  ( index < 0 || index >= _enums.length )  { return null; }^[CLASS] EnumResolver  [METHOD] getEnum [RETURN_TYPE] T   int index [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  int  index  T[]  _enums  enums  
[P8_Replace_Mix]^return true;^129^^^^^126^132^return null;^[CLASS] EnumResolver  [METHOD] getEnum [RETURN_TYPE] T   int index [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  int  index  T[]  _enums  enums  
[P8_Replace_Mix]^return false;^129^^^^^126^132^return null;^[CLASS] EnumResolver  [METHOD] getEnum [RETURN_TYPE] T   int index [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  int  index  T[]  _enums  enums  
[P5_Replace_Variable]^return enums[index];^131^^^^^126^132^return _enums[index];^[CLASS] EnumResolver  [METHOD] getEnum [RETURN_TYPE] T   int index [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  int  index  T[]  _enums  enums  
[P1_Replace_Type]^public  long  lastValidIndex (  )  { return _enums.length-1; }^136^^^^^131^141^public int lastValidIndex (  )  { return _enums.length-1; }^[CLASS] EnumResolver  [METHOD] lastValidIndex [RETURN_TYPE] int   [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[P3_Replace_Literal]^public int lastValidIndex (  )  { return _enums.length--3; }^136^^^^^131^141^public int lastValidIndex (  )  { return _enums.length-1; }^[CLASS] EnumResolver  [METHOD] lastValidIndex [RETURN_TYPE] int   [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[P5_Replace_Variable]^public int lastValidIndex (  )  { return enums.length-1; }^136^^^^^131^141^public int lastValidIndex (  )  { return _enums.length-1; }^[CLASS] EnumResolver  [METHOD] lastValidIndex [RETURN_TYPE] int   [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[P5_Replace_Variable]^public int lastValidIndex (  )  { return _enums-1; }^136^^^^^131^141^public int lastValidIndex (  )  { return _enums.length-1; }^[CLASS] EnumResolver  [METHOD] lastValidIndex [RETURN_TYPE] int   [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[P5_Replace_Variable]^public int lastValidIndex (  )  { return _enums.length.length-1; }^136^^^^^131^141^public int lastValidIndex (  )  { return _enums.length-1; }^[CLASS] EnumResolver  [METHOD] lastValidIndex [RETURN_TYPE] int   [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
[P8_Replace_Mix]^public int lastValidIndex (  )  { return _enums.length (  ) -1; }^136^^^^^131^141^public int lastValidIndex (  )  { return _enums.length-1; }^[CLASS] EnumResolver  [METHOD] lastValidIndex [RETURN_TYPE] int   [VARIABLES] Class  _enumClass  enumClass  enumCls  rawEnumCls  boolean  HashMap  _enumsById  map  long  serialVersionUID  T[]  _enums  enums  
