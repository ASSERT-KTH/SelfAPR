[P8_Replace_Mix]^private final DateFormat _customFormat;^35^^^^^30^40^protected final DateFormat _customFormat;^[CLASS] DateTimeSerializerBase   [VARIABLES] 
[P14_Delete_Statement]^^40^^^^^37^43^super ( type ) ;^[CLASS] DateTimeSerializerBase  [METHOD] <init> [RETURN_TYPE] DateFormat)   Class<T> type boolean useTimestamp DateFormat customFormat [VARIABLES] Class  type  boolean  _useTimestamp  useTimestamp  DateFormat  _customFormat  customFormat  
[P5_Replace_Variable]^_useTimestamp = _useTimestamp;^41^^^^^37^43^_useTimestamp = useTimestamp;^[CLASS] DateTimeSerializerBase  [METHOD] <init> [RETURN_TYPE] DateFormat)   Class<T> type boolean useTimestamp DateFormat customFormat [VARIABLES] Class  type  boolean  _useTimestamp  useTimestamp  DateFormat  _customFormat  customFormat  
[P8_Replace_Mix]^_useTimestamp =  null;^41^^^^^37^43^_useTimestamp = useTimestamp;^[CLASS] DateTimeSerializerBase  [METHOD] <init> [RETURN_TYPE] DateFormat)   Class<T> type boolean useTimestamp DateFormat customFormat [VARIABLES] Class  type  boolean  _useTimestamp  useTimestamp  DateFormat  _customFormat  customFormat  
[P5_Replace_Variable]^_customFormat = _customFormat;^42^^^^^37^43^_customFormat = customFormat;^[CLASS] DateTimeSerializerBase  [METHOD] <init> [RETURN_TYPE] DateFormat)   Class<T> type boolean useTimestamp DateFormat customFormat [VARIABLES] Class  type  boolean  _useTimestamp  useTimestamp  DateFormat  _customFormat  customFormat  
[P8_Replace_Mix]^_customFormat =  null;^42^^^^^37^43^_customFormat = customFormat;^[CLASS] DateTimeSerializerBase  [METHOD] <init> [RETURN_TYPE] DateFormat)   Class<T> type boolean useTimestamp DateFormat customFormat [VARIABLES] Class  type  boolean  _useTimestamp  useTimestamp  DateFormat  _customFormat  customFormat  
[P2_Replace_Operator]^if  ( property == null )  {^51^^^^^36^66^if  ( property != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P6_Replace_Expression]^if  ( format != null )  {^51^^^^^36^66^if  ( property != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P6_Replace_Expression]^if  ( pattern.length() > 0 )  {^51^^^^^36^66^if  ( property != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P6_Replace_Expression]^if  ( loc == null )  {^51^^^^^36^66^if  ( property != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P6_Replace_Expression]^if  ( tz == null )  {^51^^^^^36^66^if  ( property != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P6_Replace_Expression]^if  ( tz != null )  {^51^^^^^36^66^if  ( property != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P6_Replace_Expression]^if  ( df.getClass() == class )  {^51^^^^^36^66^if  ( property != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P8_Replace_Mix]^if  ( property != false )  {^51^^^^^36^66^if  ( property != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P9_Replace_Statement]^if  ( v2 != null )  {^51^^^^^36^66^if  ( property != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P2_Replace_Operator]^if  ( format == null )  {^53^^^^^38^68^if  ( format != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P6_Replace_Expression]^if  ( pattern.length() > 0 )  {^53^^^^^38^68^if  ( format != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P6_Replace_Expression]^if  ( loc == null )  {^53^^^^^38^68^if  ( format != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P6_Replace_Expression]^if  ( tz == null )  {^53^^^^^38^68^if  ( format != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P6_Replace_Expression]^if  ( tz != null )  {^53^^^^^38^68^if  ( format != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P6_Replace_Expression]^if  ( df.getClass() == class )  {^53^^^^^38^68^if  ( format != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P8_Replace_Mix]^if  ( format != false )  {^53^^^^^38^68^if  ( format != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P9_Replace_Statement]^if  ( v2 != null )  {^53^^^^^38^68^if  ( format != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P9_Replace_Statement]^if  ( _customFormat == null )  {^53^^^^^38^68^if  ( format != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P9_Replace_Statement]^if  ( property != null )  {^53^^^^^38^68^if  ( format != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P15_Unwrap_Block]^if (format.getShape().isNumeric()) {    return withFormat(true, null);}; java.util.TimeZone tz = format.getTimeZone(); java.lang.String pattern = format.getPattern(); if ((pattern.length()) > 0) {    java.util.Locale loc = format.getLocale();    if (loc == null) {        loc = prov.getLocale();    }    java.text.SimpleDateFormat df = new java.text.SimpleDateFormat(pattern, loc);    if (tz == null) {        tz = prov.getTimeZone();    }    df.setTimeZone(tz);    return withFormat(false, df);}; if (tz != null) {    java.text.DateFormat df = prov.getConfig().getDateFormat();    if ((df.getClass()) == (com.fasterxml.jackson.databind.util.StdDateFormat.class)) {        df = com.fasterxml.jackson.databind.util.StdDateFormat.getISO8601Format(tz);    }else {        df = ((java.text.DateFormat) (df.clone()));        df.setTimeZone(tz);    }    return withFormat(false, df);};^53^54^55^56^57^38^68^if  ( format != null )  {  if  ( format.getShape (  ) .isNumeric (  )  )  { return withFormat ( true, null ) ; }^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P16_Remove_Block]^^53^54^55^56^57^38^68^if  ( format != null )  {  if  ( format.getShape (  ) .isNumeric (  )  )  { return withFormat ( true, null ) ; }^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P7_Replace_Invocation]^if  ( format.getShape (  ) .findFormat (  )  )  {^55^^^^^40^70^if  ( format.getShape (  ) .isNumeric (  )  )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P7_Replace_Invocation]^if  ( format .getLocale (  )  .isNumeric (  )  )  {^55^^^^^40^70^if  ( format.getShape (  ) .isNumeric (  )  )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P15_Unwrap_Block]^return withFormat(true, null);^55^56^57^^^40^70^if  ( format.getShape (  ) .isNumeric (  )  )  { return withFormat ( true, null ) ; }^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P16_Remove_Block]^^55^56^57^^^40^70^if  ( format.getShape (  ) .isNumeric (  )  )  { return withFormat ( true, null ) ; }^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P3_Replace_Literal]^return withFormat ( false, null ) ;^56^^^^^41^71^return withFormat ( true, null ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P7_Replace_Invocation]^return createSchemaNode ( true, null ) ;^56^^^^^41^71^return withFormat ( true, null ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P14_Delete_Statement]^^56^^^^^41^71^return withFormat ( true, null ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P2_Replace_Operator]^if  ( pattern.length (  )  == 0 ) {^61^^^^^46^76^if  ( pattern.length (  )  > 0 ) {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P3_Replace_Literal]^if  ( pattern.length (  )  > -5 ) {^61^^^^^46^76^if  ( pattern.length (  )  > 0 ) {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P3_Replace_Literal]^if  ( pattern.length() - 2  > 0 ) {^61^^^^^46^76^if  ( pattern.length (  )  > 0 ) {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P6_Replace_Expression]^if  ( loc == null ) {^61^^^^^46^76^if  ( pattern.length (  )  > 0 ) {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P6_Replace_Expression]^if  ( tz == null ) {^61^^^^^46^76^if  ( pattern.length (  )  > 0 ) {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P8_Replace_Mix]^if  ( pattern.length (  )  > 0  ) {^61^^^^^46^76^if  ( pattern.length (  )  > 0 ) {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P15_Unwrap_Block]^java.util.Locale loc = format.getLocale(); if (loc == null) {    loc = prov.getLocale();}; java.text.SimpleDateFormat df = new java.text.SimpleDateFormat(pattern, loc); if (tz == null) {    tz = prov.getTimeZone();}; df.setTimeZone(tz); return withFormat(false, df);^61^62^63^64^65^46^76^if  ( pattern.length (  )  > 0 ) { Locale loc = format.getLocale (  ) ; if  ( loc == null )  { loc = prov.getLocale (  ) ; }^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P16_Remove_Block]^^61^62^63^64^65^46^76^if  ( pattern.length (  )  > 0 ) { Locale loc = format.getLocale (  ) ; if  ( loc == null )  { loc = prov.getLocale (  ) ; }^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P2_Replace_Operator]^if  ( loc != null )  {^63^^^^^48^78^if  ( loc == null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P8_Replace_Mix]^if  ( loc == this )  {^63^^^^^48^78^if  ( loc == null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P9_Replace_Statement]^if  ( tz != null )  {^63^^^^^48^78^if  ( loc == null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P9_Replace_Statement]^if  ( format != null )  {^63^^^^^48^78^if  ( loc == null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P9_Replace_Statement]^if  ( v2 != null )  {^63^^^^^48^78^if  ( loc == null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P9_Replace_Statement]^if  ( property != null )  {^63^^^^^48^78^if  ( loc == null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P9_Replace_Statement]^if  ( tz == null )  {^63^^^^^48^78^if  ( loc == null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P15_Unwrap_Block]^loc = prov.getLocale();^63^64^65^^^48^78^if  ( loc == null )  { loc = prov.getLocale (  ) ; }^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P16_Remove_Block]^^63^64^65^^^48^78^if  ( loc == null )  { loc = prov.getLocale (  ) ; }^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P13_Insert_Block]^if  ( tz == null )  {     tz = prov.getTimeZone (  ) ; }^63^^^^^48^78^[Delete]^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P8_Replace_Mix]^loc =  null.getLocale (  ) ;^64^^^^^49^79^loc = prov.getLocale (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P11_Insert_Donor_Statement]^tz = prov.getTimeZone (  ) ;loc = prov.getLocale (  ) ;^64^^^^^49^79^loc = prov.getLocale (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P14_Delete_Statement]^^64^^^^^49^79^loc = prov.getLocale (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P11_Insert_Donor_Statement]^Locale loc = format.getLocale (  ) ;loc = prov.getLocale (  ) ;^64^^^^^49^79^loc = prov.getLocale (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P2_Replace_Operator]^if  ( tz != null )  {^67^^^^^52^82^if  ( tz == null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P8_Replace_Mix]^if  ( tz == true )  {^67^^^^^52^82^if  ( tz == null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P9_Replace_Statement]^if  ( loc == null )  {^67^^^^^52^82^if  ( tz == null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P9_Replace_Statement]^if  ( format != null )  {^67^^^^^52^82^if  ( tz == null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P9_Replace_Statement]^if  ( v2 != null )  {^67^^^^^52^82^if  ( tz == null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P9_Replace_Statement]^if  ( property != null )  {^67^^^^^52^82^if  ( tz == null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P15_Unwrap_Block]^tz = prov.getTimeZone();^67^68^69^^^52^82^if  ( tz == null )  { tz = prov.getTimeZone (  ) ; }^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P16_Remove_Block]^^67^68^69^^^52^82^if  ( tz == null )  { tz = prov.getTimeZone (  ) ; }^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P13_Insert_Block]^if  ( loc == null )  {     loc = prov.getLocale (  ) ; }^67^^^^^52^82^[Delete]^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P8_Replace_Mix]^tz =  null.getTimeZone (  ) ;^68^^^^^53^83^tz = prov.getTimeZone (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P11_Insert_Donor_Statement]^loc = prov.getLocale (  ) ;tz = prov.getTimeZone (  ) ;^68^^^^^53^83^tz = prov.getTimeZone (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P7_Replace_Invocation]^tz = prov .getShape (  )  ;^68^^^^^53^83^tz = prov.getTimeZone (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P14_Delete_Statement]^^68^^^^^53^83^tz = prov.getTimeZone (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P11_Insert_Donor_Statement]^TimeZone tz = format.getTimeZone (  ) ;tz = prov.getTimeZone (  ) ;^68^^^^^53^83^tz = prov.getTimeZone (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P11_Insert_Donor_Statement]^df.setTimeZone ( tz ) ;tz = prov.getTimeZone (  ) ;^68^^^^^53^83^tz = prov.getTimeZone (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P7_Replace_Invocation]^loc = prov .getShape (  )  ;^64^^^^^49^79^loc = prov.getLocale (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P3_Replace_Literal]^return withFormat ( true, df ) ;^71^^^^^56^86^return withFormat ( false, df ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P7_Replace_Invocation]^return createSchemaNode ( false, df ) ;^71^^^^^56^86^return withFormat ( false, df ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P4_Replace_Constructor]^SimpleDateFormat df = new SimpleDateFormat (  loc ) ;^66^^^^^51^81^SimpleDateFormat df = new SimpleDateFormat ( pattern, loc ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P4_Replace_Constructor]^SimpleDateFormat df = new SimpleDateFormat ( pattern ) ;^66^^^^^51^81^SimpleDateFormat df = new SimpleDateFormat ( pattern, loc ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P5_Replace_Variable]^SimpleDateFormat df = new SimpleDateFormat ( loc, pattern ) ;^66^^^^^51^81^SimpleDateFormat df = new SimpleDateFormat ( pattern, loc ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P11_Insert_Donor_Statement]^TimeZone tz = format.getTimeZone (  ) ;Locale loc = format.getLocale (  ) ;^62^^^^^47^77^Locale loc = format.getLocale (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P11_Insert_Donor_Statement]^String pattern = format.getPattern (  ) ;Locale loc = format.getLocale (  ) ;^62^^^^^47^77^Locale loc = format.getLocale (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P14_Delete_Statement]^^62^63^64^65^^47^77^Locale loc = format.getLocale (  ) ; if  ( loc == null )  { loc = prov.getLocale (  ) ; }^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P14_Delete_Statement]^^70^^^^^55^85^df.setTimeZone ( tz ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P11_Insert_Donor_Statement]^tz = prov.getTimeZone (  ) ;df.setTimeZone ( tz ) ;^70^^^^^55^85^df.setTimeZone ( tz ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P14_Delete_Statement]^^71^^^^^56^86^return withFormat ( false, df ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P8_Replace_Mix]^if  ( loc == false )  {^63^^^^^48^78^if  ( loc == null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P2_Replace_Operator]^if  ( tz == null )  {^74^^^^^59^89^if  ( tz != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P6_Replace_Expression]^if  ( df.getClass() == class )  {^74^^^^^59^89^if  ( tz != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P8_Replace_Mix]^if  ( tz != this )  {^74^^^^^59^89^if  ( tz != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P9_Replace_Statement]^if  ( loc == null )  {^74^^^^^59^89^if  ( tz != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P9_Replace_Statement]^if  ( format != null )  {^74^^^^^59^89^if  ( tz != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P9_Replace_Statement]^if  ( v2 != null )  {^74^^^^^59^89^if  ( tz != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P9_Replace_Statement]^if  ( property != null )  {^74^^^^^59^89^if  ( tz != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P2_Replace_Operator]^if  ( df.getClass (  )  != StdDateFormat.class )  {^77^^^^^62^92^if  ( df.getClass (  )  == StdDateFormat.class )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P5_Replace_Variable]^if  ( customFormat.getClass (  )  == StdDateFormat.class )  {^77^^^^^62^92^if  ( df.getClass (  )  == StdDateFormat.class )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P7_Replace_Invocation]^df =  ( DateFormat )  df.setTimeZone (  ) ;^81^^^^^77^83^df =  ( DateFormat )  df.clone (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P7_Replace_Invocation]^df =  ( DateFormat )  df .setTimeZone ( tz )  ;^81^^^^^77^83^df =  ( DateFormat )  df.clone (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P8_Replace_Mix]^df =   ( DateFormat )  customFormat.clone (  ) ;^81^^^^^77^83^df =  ( DateFormat )  df.clone (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P11_Insert_Donor_Statement]^df = StdDateFormat.getISO8601Format ( tz ) ;df =  ( DateFormat )  df.clone (  ) ;^81^^^^^77^83^df =  ( DateFormat )  df.clone (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P14_Delete_Statement]^^81^82^^^^77^83^df =  ( DateFormat )  df.clone (  ) ; df.setTimeZone ( tz ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P7_Replace_Invocation]^df .clone (  )  ;^82^^^^^77^83^df.setTimeZone ( tz ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P14_Delete_Statement]^^82^^^^^77^83^df.setTimeZone ( tz ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P11_Insert_Donor_Statement]^tz = prov.getTimeZone (  ) ;df.setTimeZone ( tz ) ;^82^^^^^77^83^df.setTimeZone ( tz ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P8_Replace_Mix]^df =  StdDateFormat.getISO8601Format ( null ) ;^78^^^^^63^93^df = StdDateFormat.getISO8601Format ( tz ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P11_Insert_Donor_Statement]^df =  ( DateFormat )  df.clone (  ) ;df = StdDateFormat.getISO8601Format ( tz ) ;^78^^^^^63^93^df = StdDateFormat.getISO8601Format ( tz ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P14_Delete_Statement]^^78^^^^^63^93^df = StdDateFormat.getISO8601Format ( tz ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P5_Replace_Variable]^df =  ( DateFormat )  customFormat.clone (  ) ;^81^^^^^66^96^df =  ( DateFormat )  df.clone (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P7_Replace_Invocation]^df =  ( DateFormat )  df.setTimeZone (  ) ;^81^^^^^66^96^df =  ( DateFormat )  df.clone (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P7_Replace_Invocation]^df =  ( DateFormat )  df .setTimeZone ( tz )  ;^81^^^^^66^96^df =  ( DateFormat )  df.clone (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P11_Insert_Donor_Statement]^df = StdDateFormat.getISO8601Format ( tz ) ;df =  ( DateFormat )  df.clone (  ) ;^81^^^^^66^96^df =  ( DateFormat )  df.clone (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P3_Replace_Literal]^return withFormat ( true, df ) ;^84^^^^^69^99^return withFormat ( false, df ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P5_Replace_Variable]^return withFormat ( false, customFormat ) ;^84^^^^^69^99^return withFormat ( false, df ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P7_Replace_Invocation]^return createSchemaNode ( false, df ) ;^84^^^^^69^99^return withFormat ( false, df ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P7_Replace_Invocation]^DateFormat df = prov.getConfig (  ) .findFormat (  ) ;^75^^^^^60^90^DateFormat df = prov.getConfig (  ) .getDateFormat (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P7_Replace_Invocation]^DateFormat df = prov.getConfig (  )  .findFormat ( null )  ;^75^^^^^60^90^DateFormat df = prov.getConfig (  ) .getDateFormat (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P14_Delete_Statement]^^75^^^^^60^90^DateFormat df = prov.getConfig (  ) .getDateFormat (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P8_Replace_Mix]^df =  ( DateFormat )  customFormat.setTimeZone (  ) ;^81^^^^^66^96^df =  ( DateFormat )  df.clone (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P14_Delete_Statement]^^81^^^^^66^96^df =  ( DateFormat )  df.clone (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P14_Delete_Statement]^^82^^^^^67^97^df.setTimeZone ( tz ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P11_Insert_Donor_Statement]^tz = prov.getTimeZone (  ) ;df.setTimeZone ( tz ) ;^82^^^^^67^97^df.setTimeZone ( tz ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P14_Delete_Statement]^^84^^^^^69^99^return withFormat ( false, df ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P5_Replace_Variable]^if  ( df.getClass (  )  == StdDateFormat.null )  {^77^^^^^62^92^if  ( df.getClass (  )  == StdDateFormat.class )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P14_Delete_Statement]^^81^^^^^77^83^df =  ( DateFormat )  df.clone (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P8_Replace_Mix]^return createSchemaNode ( true, df ) ;^84^^^^^69^99^return withFormat ( false, df ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P11_Insert_Donor_Statement]^String pattern = format.getPattern (  ) ;TimeZone tz = format.getTimeZone (  ) ;^59^^^^^44^74^TimeZone tz = format.getTimeZone (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P11_Insert_Donor_Statement]^Locale loc = format.getLocale (  ) ;TimeZone tz = format.getTimeZone (  ) ;^59^^^^^44^74^TimeZone tz = format.getTimeZone (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P1_Replace_Type]^char pattern = format.getPattern (  ) ;^60^^^^^45^75^String pattern = format.getPattern (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P8_Replace_Mix]^String pattern = format .getShape (  )  ;^60^^^^^45^75^String pattern = format.getPattern (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P11_Insert_Donor_Statement]^TimeZone tz = format.getTimeZone (  ) ;String pattern = format.getPattern (  ) ;^60^^^^^45^75^String pattern = format.getPattern (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P11_Insert_Donor_Statement]^Locale loc = format.getLocale (  ) ;String pattern = format.getPattern (  ) ;^60^^^^^45^75^String pattern = format.getPattern (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P5_Replace_Variable]^Locale loc = 0.getLocale (  ) ;^62^^^^^47^77^Locale loc = format.getLocale (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P7_Replace_Invocation]^DateFormat df = prov .getLocale (  )  .getDateFormat (  ) ;^75^^^^^60^90^DateFormat df = prov.getConfig (  ) .getDateFormat (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P7_Replace_Invocation]^if  ( format.getShape (  )  .isEnabled (  )   )  {^55^^^^^40^70^if  ( format.getShape (  ) .isNumeric (  )  )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P5_Replace_Variable]^if  ( this.getShape (  ) .isNumeric (  )  )  {^55^^^^^40^70^if  ( format.getShape (  ) .isNumeric (  )  )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P8_Replace_Mix]^TimeZone tz = format .getShape (  )  ;^59^^^^^44^74^TimeZone tz = format.getTimeZone (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P11_Insert_Donor_Statement]^tz = prov.getTimeZone (  ) ;TimeZone tz = format.getTimeZone (  ) ;^59^^^^^44^74^TimeZone tz = format.getTimeZone (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P14_Delete_Statement]^^60^61^62^63^64^45^75^String pattern = format.getPattern (  ) ; if  ( pattern.length (  )  > 0 ) { Locale loc = format.getLocale (  ) ; if  ( loc == null )  { loc = prov.getLocale (  ) ; }^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P3_Replace_Literal]^if  ( pattern.length() + 7  > 0 ) {^61^^^^^46^76^if  ( pattern.length (  )  > 0 ) {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P5_Replace_Variable]^Locale loc = this.getLocale (  ) ;^62^^^^^47^77^Locale loc = format.getLocale (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P8_Replace_Mix]^Locale loc = format .getShape (  )  ;^62^^^^^47^77^Locale loc = format.getLocale (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P14_Delete_Statement]^^70^71^^^^55^85^df.setTimeZone ( tz ) ; return withFormat ( false, df ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P8_Replace_Mix]^return createSchemaNode ( false, null ) ;^56^^^^^41^71^return withFormat ( true, null ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P2_Replace_Operator]^if  ( pattern.length (  )  >= 0 ) {^61^^^^^46^76^if  ( pattern.length (  )  > 0 ) {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P3_Replace_Literal]^if  ( pattern.length (  )  > -4 ) {^61^^^^^46^76^if  ( pattern.length (  )  > 0 ) {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P3_Replace_Literal]^if  ( pattern.length() + 2  > 0 ) {^61^^^^^46^76^if  ( pattern.length (  )  > 0 ) {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P8_Replace_Mix]^if  ( loc == true )  {^63^^^^^48^78^if  ( loc == null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P8_Replace_Mix]^if  ( tz == this )  {^67^^^^^52^82^if  ( tz == null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P7_Replace_Invocation]^df .clone (  )  ;^70^^^^^55^85^df.setTimeZone ( tz ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P8_Replace_Mix]^if  ( tz == false )  {^67^^^^^52^82^if  ( tz == null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P8_Replace_Mix]^if  ( tz != false )  {^74^^^^^59^89^if  ( tz != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P8_Replace_Mix]^df .clone (  )  ;^82^^^^^67^97^df.setTimeZone ( tz ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P8_Replace_Mix]^return createSchemaNode ( false, customFormat ) ;^84^^^^^69^99^return withFormat ( false, df ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P8_Replace_Mix]^df =  ( DateFormat )  customFormat.setTimeZone (  ) ;^81^^^^^77^83^df =  ( DateFormat )  df.clone (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P5_Replace_Variable]^JsonFormat.Value format = property.getAnnotationIntrospector (  ) .findFormat (  ( Annotated ) prov.getMember (  )  ) ;^52^^^^^37^67^JsonFormat.Value format = prov.getAnnotationIntrospector (  ) .findFormat (  ( Annotated ) property.getMember (  )  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P7_Replace_Invocation]^JsonFormat.Value format = prov.getAnnotationIntrospector (  )  .getDateFormat (  )   ) ;^52^^^^^37^67^JsonFormat.Value format = prov.getAnnotationIntrospector (  ) .findFormat (  ( Annotated ) property.getMember (  )  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P7_Replace_Invocation]^JsonFormat.Value format = prov .getTimeZone (  )  .findFormat (  ( Annotated ) property.getMember (  )  ) ;^52^^^^^37^67^JsonFormat.Value format = prov.getAnnotationIntrospector (  ) .findFormat (  ( Annotated ) property.getMember (  )  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P5_Replace_Variable]^String pattern = null.getPattern (  ) ;^60^^^^^45^75^String pattern = format.getPattern (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P14_Delete_Statement]^^52^53^^55^56^37^67^JsonFormat.Value format = prov.getAnnotationIntrospector (  ) .findFormat (  ( Annotated ) property.getMember (  )  ) ; if  ( format != null )  { if  ( format.getShape (  ) .isNumeric (  )  )  { return withFormat ( true, null ) ; }^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P3_Replace_Literal]^if  ( pattern.length() + 8  > 0 ) {^61^^^^^46^76^if  ( pattern.length (  )  > 0 ) {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P3_Replace_Literal]^if  ( pattern.length() + 0  > 0 ) {^61^^^^^46^76^if  ( pattern.length (  )  > 0 ) {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P8_Replace_Mix]^if  ( tz != true )  {^74^^^^^59^89^if  ( tz != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P8_Replace_Mix]^df =   ( DateFormat )  null.clone (  ) ;^81^^^^^77^83^df =  ( DateFormat )  df.clone (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P2_Replace_Operator]^if  ( df.getClass (  )  <= StdDateFormat.class )  {^77^^^^^62^92^if  ( df.getClass (  )  == StdDateFormat.class )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P5_Replace_Variable]^if  ( 4.getShape (  ) .isNumeric (  )  )  {^55^^^^^40^70^if  ( format.getShape (  ) .isNumeric (  )  )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P3_Replace_Literal]^if  ( pattern.length() - 8  > 0 ) {^61^^^^^46^76^if  ( pattern.length (  )  > 0 ) {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P14_Delete_Statement]^^81^82^^^^66^96^df =  ( DateFormat )  df.clone (  ) ; df.setTimeZone ( tz ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P3_Replace_Literal]^if  ( pattern.length() + 6  > 0 ) {^61^^^^^46^76^if  ( pattern.length (  )  > 0 ) {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P2_Replace_Operator]^if  ( df.getClass (  )  >= StdDateFormat.class )  {^77^^^^^62^92^if  ( df.getClass (  )  == StdDateFormat.class )  {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P8_Replace_Mix]^Locale loc = null.getLocale (  ) ;^62^^^^^47^77^Locale loc = format.getLocale (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P8_Replace_Mix]^String pattern = this.getPattern (  ) ;^60^^^^^45^75^String pattern = format.getPattern (  ) ;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P3_Replace_Literal]^if  ( pattern.length() + 1  > 0 ) {^61^^^^^46^76^if  ( pattern.length (  )  > 0 ) {^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P8_Replace_Mix]^return null;^88^^^^^73^103^return this;^[CLASS] DateTimeSerializerBase  [METHOD] createContextual [RETURN_TYPE] JsonSerializer   SerializerProvider prov BeanProperty property [VARIABLES] Locale  loc  TimeZone  tz  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  Value  format  String  pattern  SerializerProvider  prov  SimpleDateFormat  df  BeanProperty  property  
[P2_Replace_Operator]^return  ( value == null )  &&  ( _timestamp ( value )  == 0L ) ;^100^^^^^98^101^return  ( value == null )  ||  ( _timestamp ( value )  == 0L ) ;^[CLASS] DateTimeSerializerBase  [METHOD] isEmpty [RETURN_TYPE] boolean   T value [VARIABLES] T  value  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  
[P2_Replace_Operator]^return  ( value != null )  ||  ( _timestamp ( value )  == 0L ) ;^100^^^^^98^101^return  ( value == null )  ||  ( _timestamp ( value )  == 0L ) ;^[CLASS] DateTimeSerializerBase  [METHOD] isEmpty [RETURN_TYPE] boolean   T value [VARIABLES] T  value  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  
[P2_Replace_Operator]^return  ( value == null )  ||  ( _timestamp ( value )  != 0L ) ;^100^^^^^98^101^return  ( value == null )  ||  ( _timestamp ( value )  == 0L ) ;^[CLASS] DateTimeSerializerBase  [METHOD] isEmpty [RETURN_TYPE] boolean   T value [VARIABLES] T  value  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  
[P7_Replace_Invocation]^return  ( value == null )  ||  ( isEmpty ( value )  == 0L ) ;^100^^^^^98^101^return  ( value == null )  ||  ( _timestamp ( value )  == 0L ) ;^[CLASS] DateTimeSerializerBase  [METHOD] isEmpty [RETURN_TYPE] boolean   T value [VARIABLES] T  value  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  
[P14_Delete_Statement]^^100^^^^^98^101^return  ( value == null )  ||  ( _timestamp ( value )  == 0L ) ;^[CLASS] DateTimeSerializerBase  [METHOD] isEmpty [RETURN_TYPE] boolean   T value [VARIABLES] T  value  boolean  _useTimestamp  timestamp  useTimestamp  DateFormat  _customFormat  customFormat  df  
[P5_Replace_Variable]^boolean asNumber = useTimestamp;^109^^^^^106^116^boolean asNumber = _useTimestamp;^[CLASS] DateTimeSerializerBase  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  SerializerProvider  provider  DateFormat  _customFormat  customFormat  df  
[P5_Replace_Variable]^if  ( !useTimestamp )  {^110^^^^^106^116^if  ( !asNumber )  {^[CLASS] DateTimeSerializerBase  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  SerializerProvider  provider  DateFormat  _customFormat  customFormat  df  
[P9_Replace_Statement]^if  ( asNumber )  {^110^^^^^106^116^if  ( !asNumber )  {^[CLASS] DateTimeSerializerBase  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  SerializerProvider  provider  DateFormat  _customFormat  customFormat  df  
[P15_Unwrap_Block]^if ((_customFormat) == null) {    asNumber = provider.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);};^110^111^112^113^^106^116^if  ( !asNumber )  { if  ( _customFormat == null )  { asNumber = provider.isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ; }^[CLASS] DateTimeSerializerBase  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  SerializerProvider  provider  DateFormat  _customFormat  customFormat  df  
[P16_Remove_Block]^^110^111^112^113^^106^116^if  ( !asNumber )  { if  ( _customFormat == null )  { asNumber = provider.isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ; }^[CLASS] DateTimeSerializerBase  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  SerializerProvider  provider  DateFormat  _customFormat  customFormat  df  
[P13_Insert_Block]^if  (  ( _customFormat )  == null )  {     asNumber = provider.isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ; }^110^^^^^106^116^[Delete]^[CLASS] DateTimeSerializerBase  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  SerializerProvider  provider  DateFormat  _customFormat  customFormat  df  
[P13_Insert_Block]^if  (  ( _customFormat )  == null )  {     asNumber = visitor.getProvider (  ) .isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ; }^110^^^^^106^116^[Delete]^[CLASS] DateTimeSerializerBase  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  SerializerProvider  provider  DateFormat  _customFormat  customFormat  df  
[P13_Insert_Block]^if  ( !asNumber )  {     if  (  ( _customFormat )  == null )  {         asNumber = visitor.getProvider (  ) .isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ;     } }^110^^^^^106^116^[Delete]^[CLASS] DateTimeSerializerBase  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  SerializerProvider  provider  DateFormat  _customFormat  customFormat  df  
[P2_Replace_Operator]^if  ( _customFormat != null )  {^111^^^^^106^116^if  ( _customFormat == null )  {^[CLASS] DateTimeSerializerBase  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  SerializerProvider  provider  DateFormat  _customFormat  customFormat  df  
[P5_Replace_Variable]^if  ( df == null )  {^111^^^^^106^116^if  ( _customFormat == null )  {^[CLASS] DateTimeSerializerBase  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  SerializerProvider  provider  DateFormat  _customFormat  customFormat  df  
[P8_Replace_Mix]^if  ( df == false )  {^111^^^^^106^116^if  ( _customFormat == null )  {^[CLASS] DateTimeSerializerBase  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  SerializerProvider  provider  DateFormat  _customFormat  customFormat  df  
[P9_Replace_Statement]^if  ( format != null )  {^111^^^^^106^116^if  ( _customFormat == null )  {^[CLASS] DateTimeSerializerBase  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  SerializerProvider  provider  DateFormat  _customFormat  customFormat  df  
[P15_Unwrap_Block]^asNumber = provider.isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);^111^112^113^^^106^116^if  ( _customFormat == null )  { asNumber = provider.isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ; }^[CLASS] DateTimeSerializerBase  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  SerializerProvider  provider  DateFormat  _customFormat  customFormat  df  
[P16_Remove_Block]^^111^112^113^^^106^116^if  ( _customFormat == null )  { asNumber = provider.isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ; }^[CLASS] DateTimeSerializerBase  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  SerializerProvider  provider  DateFormat  _customFormat  customFormat  df  
[P13_Insert_Block]^if  ( !asNumber )  {     if  (  ( _customFormat )  == null )  {         asNumber = provider.isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ;     } }^111^^^^^106^116^[Delete]^[CLASS] DateTimeSerializerBase  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  SerializerProvider  provider  DateFormat  _customFormat  customFormat  df  
[P13_Insert_Block]^if  (  ( _customFormat )  == null )  {     asNumber = visitor.getProvider (  ) .isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ; }^111^^^^^106^116^[Delete]^[CLASS] DateTimeSerializerBase  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  SerializerProvider  provider  DateFormat  _customFormat  customFormat  df  
[P13_Insert_Block]^if  ( !asNumber )  {     if  (  ( _customFormat )  == null )  {         asNumber = visitor.getProvider (  ) .isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ;     } }^111^^^^^106^116^[Delete]^[CLASS] DateTimeSerializerBase  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  SerializerProvider  provider  DateFormat  _customFormat  customFormat  df  
[P7_Replace_Invocation]^asNumber = provider .getAnnotationIntrospector (  )  ;^112^^^^^106^116^asNumber = provider.isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ;^[CLASS] DateTimeSerializerBase  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  SerializerProvider  provider  DateFormat  _customFormat  customFormat  df  
[P8_Replace_Mix]^asNumber =  null.isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ;^112^^^^^106^116^asNumber = provider.isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ;^[CLASS] DateTimeSerializerBase  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  SerializerProvider  provider  DateFormat  _customFormat  customFormat  df  
[P11_Insert_Donor_Statement]^asNumber = visitor.getProvider (  ) .isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ;asNumber = provider.isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ;^112^^^^^106^116^asNumber = provider.isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ;^[CLASS] DateTimeSerializerBase  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  SerializerProvider  provider  DateFormat  _customFormat  customFormat  df  
[P13_Insert_Block]^if  ( !asNumber )  {     if  (  ( _customFormat )  == null )  {         asNumber = provider.isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ;     } }^112^^^^^106^116^[Delete]^[CLASS] DateTimeSerializerBase  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  SerializerProvider  provider  DateFormat  _customFormat  customFormat  df  
[P13_Insert_Block]^if  (  ( _customFormat )  == null )  {     asNumber = provider.isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ; }^112^^^^^106^116^[Delete]^[CLASS] DateTimeSerializerBase  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  SerializerProvider  provider  DateFormat  _customFormat  customFormat  df  
[P13_Insert_Block]^if  (  ( _customFormat )  == null )  {     asNumber = visitor.getProvider (  ) .isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ; }^112^^^^^106^116^[Delete]^[CLASS] DateTimeSerializerBase  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  SerializerProvider  provider  DateFormat  _customFormat  customFormat  df  
[P14_Delete_Statement]^^112^^^^^106^116^asNumber = provider.isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ;^[CLASS] DateTimeSerializerBase  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  SerializerProvider  provider  DateFormat  _customFormat  customFormat  df  
[P3_Replace_Literal]^return createSchemaNode ( asNumber ? "um" : "string", true ) ;^115^^^^^106^116^return createSchemaNode ( asNumber ? "number" : "string", true ) ;^[CLASS] DateTimeSerializerBase  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  SerializerProvider  provider  DateFormat  _customFormat  customFormat  df  
[P3_Replace_Literal]^return createSchemaNode ( asNumber ? "number" : "sttring", true ) ;^115^^^^^106^116^return createSchemaNode ( asNumber ? "number" : "string", true ) ;^[CLASS] DateTimeSerializerBase  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  SerializerProvider  provider  DateFormat  _customFormat  customFormat  df  
[P3_Replace_Literal]^return createSchemaNode ( asNumber ? "number" : "string", false ) ;^115^^^^^106^116^return createSchemaNode ( asNumber ? "number" : "string", true ) ;^[CLASS] DateTimeSerializerBase  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  SerializerProvider  provider  DateFormat  _customFormat  customFormat  df  
[P5_Replace_Variable]^return createSchemaNode ( useTimestamp ? "number" : "string", true ) ;^115^^^^^106^116^return createSchemaNode ( asNumber ? "number" : "string", true ) ;^[CLASS] DateTimeSerializerBase  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  SerializerProvider  provider  DateFormat  _customFormat  customFormat  df  
[P3_Replace_Literal]^return createSchemaNode ( asNumber ? "umbumber" : "string", true ) ;^115^^^^^106^116^return createSchemaNode ( asNumber ? "number" : "string", true ) ;^[CLASS] DateTimeSerializerBase  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  SerializerProvider  provider  DateFormat  _customFormat  customFormat  df  
[P3_Replace_Literal]^return createSchemaNode ( asNumber ? "number" : "s", true ) ;^115^^^^^106^116^return createSchemaNode ( asNumber ? "number" : "string", true ) ;^[CLASS] DateTimeSerializerBase  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  SerializerProvider  provider  DateFormat  _customFormat  customFormat  df  
[P14_Delete_Statement]^^115^^^^^106^116^return createSchemaNode ( asNumber ? "number" : "string", true ) ;^[CLASS] DateTimeSerializerBase  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  SerializerProvider  provider  DateFormat  _customFormat  customFormat  df  
[P5_Replace_Variable]^boolean asNumber = useTimestamp;^122^^^^^119^140^boolean asNumber = _useTimestamp;^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P5_Replace_Variable]^if  ( !useTimestamp )  {^123^^^^^119^140^if  ( !asNumber )  {^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P9_Replace_Statement]^if  ( asNumber )  {^123^^^^^119^140^if  ( !asNumber )  {^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P15_Unwrap_Block]^if ((_customFormat) == null) {    asNumber = visitor.getProvider().isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);};^123^124^125^126^^119^140^if  ( !asNumber )  { if  ( _customFormat == null )  { asNumber = visitor.getProvider (  ) .isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ; }^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P16_Remove_Block]^^123^124^125^126^^119^140^if  ( !asNumber )  { if  ( _customFormat == null )  { asNumber = visitor.getProvider (  ) .isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ; }^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P13_Insert_Block]^if  ( !asNumber )  {     if  (  ( _customFormat )  == null )  {         asNumber = provider.isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ;     } }^123^^^^^119^140^[Delete]^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P13_Insert_Block]^if  (  ( _customFormat )  == null )  {     asNumber = provider.isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ; }^123^^^^^119^140^[Delete]^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P13_Insert_Block]^if  (  ( _customFormat )  == null )  {     asNumber = visitor.getProvider (  ) .isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ; }^123^^^^^119^140^[Delete]^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P2_Replace_Operator]^if  ( _customFormat != null )  {^124^^^^^119^140^if  ( _customFormat == null )  {^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P5_Replace_Variable]^if  ( df == null )  {^124^^^^^119^140^if  ( _customFormat == null )  {^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P8_Replace_Mix]^if  ( _customFormat == this )  {^124^^^^^119^140^if  ( _customFormat == null )  {^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P9_Replace_Statement]^if  ( format != null )  {^124^^^^^119^140^if  ( _customFormat == null )  {^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P15_Unwrap_Block]^asNumber = visitor.getProvider().isEnabled(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS);^124^125^126^^^119^140^if  ( _customFormat == null )  { asNumber = visitor.getProvider (  ) .isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ; }^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P16_Remove_Block]^^124^125^126^^^119^140^if  ( _customFormat == null )  { asNumber = visitor.getProvider (  ) .isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ; }^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P13_Insert_Block]^if  ( !asNumber )  {     if  (  ( _customFormat )  == null )  {         asNumber = provider.isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ;     } }^124^^^^^119^140^[Delete]^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P13_Insert_Block]^if  (  ( _customFormat )  == null )  {     asNumber = provider.isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ; }^124^^^^^119^140^[Delete]^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P13_Insert_Block]^if  ( !asNumber )  {     if  (  ( _customFormat )  == null )  {         asNumber = visitor.getProvider (  ) .isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ;     } }^124^^^^^119^140^[Delete]^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P7_Replace_Invocation]^asNumber = visitor.getProvider (  ) .findFormat ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ;^125^^^^^119^140^asNumber = visitor.getProvider (  ) .isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ;^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P7_Replace_Invocation]^asNumber = visitor.getProvider (  )  .getAnnotationIntrospector (  )  ;^125^^^^^119^140^asNumber = visitor.getProvider (  ) .isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ;^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P7_Replace_Invocation]^asNumber = visitor.expectIntegerFormat (  ) .isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ;^125^^^^^119^140^asNumber = visitor.getProvider (  ) .isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ;^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P8_Replace_Mix]^asNumber =  null.getProvider (  ) .isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ;^125^^^^^119^140^asNumber = visitor.getProvider (  ) .isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ;^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P11_Insert_Donor_Statement]^asNumber = provider.isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ;asNumber = visitor.getProvider (  ) .isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ;^125^^^^^119^140^asNumber = visitor.getProvider (  ) .isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ;^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P13_Insert_Block]^if  ( !asNumber )  {     if  (  ( _customFormat )  == null )  {         asNumber = provider.isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ;     } }^125^^^^^119^140^[Delete]^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P13_Insert_Block]^if  (  ( _customFormat )  == null )  {     asNumber = provider.isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ; }^125^^^^^119^140^[Delete]^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P13_Insert_Block]^if  (  ( _customFormat )  == null )  {     asNumber = visitor.getProvider (  ) .isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ; }^125^^^^^119^140^[Delete]^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P13_Insert_Block]^if  ( !asNumber )  {     if  (  ( _customFormat )  == null )  {         asNumber = visitor.getProvider (  ) .isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ;     } }^125^^^^^119^140^[Delete]^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P14_Delete_Statement]^^125^^^^^119^140^asNumber = visitor.getProvider (  ) .isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ;^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P7_Replace_Invocation]^asNumber = visitor .expectStringFormat ( typeHint )  .isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ;^125^^^^^119^140^asNumber = visitor.getProvider (  ) .isEnabled ( SerializationFeature.WRITE_DATES_AS_TIMESTAMPS ) ;^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P8_Replace_Mix]^if  ( df == false )  {^124^^^^^119^140^if  ( _customFormat == null )  {^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P5_Replace_Variable]^if  ( useTimestamp )  {^128^^^^^119^140^if  ( asNumber )  {^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P6_Replace_Expression]^if  ( v2 != null )  {^128^^^^^119^140^if  ( asNumber )  {^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P9_Replace_Statement]^if  ( !asNumber )  {^128^^^^^119^140^if  ( asNumber )  {^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P15_Unwrap_Block]^com.fasterxml.jackson.databind.ser.std.JsonIntegerFormatVisitor v2 = visitor.expectIntegerFormat(typeHint); if (v2 != null) {    v2.numberType(JsonParser.NumberType.LONG);    v2.format(JsonValueFormat.UTC_MILLISEC);};^128^129^130^131^132^119^140^if  ( asNumber )  { JsonIntegerFormatVisitor v2 = visitor.expectIntegerFormat ( typeHint ) ; if  ( v2 != null )  { v2.numberType ( JsonParser.NumberType.LONG ) ; v2.format ( JsonValueFormat.UTC_MILLISEC ) ; }^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P16_Remove_Block]^^128^129^130^131^132^119^140^if  ( asNumber )  { JsonIntegerFormatVisitor v2 = visitor.expectIntegerFormat ( typeHint ) ; if  ( v2 != null )  { v2.numberType ( JsonParser.NumberType.LONG ) ; v2.format ( JsonValueFormat.UTC_MILLISEC ) ; }^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P2_Replace_Operator]^if  ( v2 == null )  {^136^^^^^119^140^if  ( v2 != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P8_Replace_Mix]^if  ( v2 != true )  {^136^^^^^119^140^if  ( v2 != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P9_Replace_Statement]^if  ( loc == null )  {^136^^^^^119^140^if  ( v2 != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P9_Replace_Statement]^if  ( tz != null )  {^136^^^^^119^140^if  ( v2 != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P9_Replace_Statement]^if  ( format != null )  {^136^^^^^119^140^if  ( v2 != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P9_Replace_Statement]^if  ( property != null )  {^136^^^^^119^140^if  ( v2 != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P9_Replace_Statement]^if  ( tz == null )  {^136^^^^^119^140^if  ( v2 != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P15_Unwrap_Block]^v2.format(JsonValueFormat.DATE_TIME);^136^137^138^^^119^140^if  ( v2 != null )  { v2.format ( JsonValueFormat.DATE_TIME ) ; }^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P16_Remove_Block]^^136^137^138^^^119^140^if  ( v2 != null )  { v2.format ( JsonValueFormat.DATE_TIME ) ; }^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P7_Replace_Invocation]^v2 .numberType (  )  ;^137^^^^^119^140^v2.format ( JsonValueFormat.DATE_TIME ) ;^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P14_Delete_Statement]^^137^138^^^^119^140^v2.format ( JsonValueFormat.DATE_TIME ) ; }^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P11_Insert_Donor_Statement]^v2.format ( JsonValueFormat.UTC_MILLISEC ) ;v2.format ( JsonValueFormat.DATE_TIME ) ;^137^^^^^119^140^v2.format ( JsonValueFormat.DATE_TIME ) ;^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P13_Insert_Block]^if  ( v2 != null )  {     v2.format ( JsonValueFormat.DATE_TIME ) ; }^137^^^^^119^140^[Delete]^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P5_Replace_Variable]^JsonStringFormatVisitor v2 = typeHint.expectStringFormat ( visitor ) ;^135^^^^^119^140^JsonStringFormatVisitor v2 = visitor.expectStringFormat ( typeHint ) ;^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P11_Insert_Donor_Statement]^JsonIntegerFormatVisitor v2 = visitor.expectIntegerFormat ( typeHint ) ;JsonStringFormatVisitor v2 = visitor.expectStringFormat ( typeHint ) ;^135^^^^^119^140^JsonStringFormatVisitor v2 = visitor.expectStringFormat ( typeHint ) ;^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P7_Replace_Invocation]^JsonStringFormatVisitor v2 = visitor .expectIntegerFormat ( typeHint )  ;^135^^^^^119^140^JsonStringFormatVisitor v2 = visitor.expectStringFormat ( typeHint ) ;^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P14_Delete_Statement]^^135^^^^^119^140^JsonStringFormatVisitor v2 = visitor.expectStringFormat ( typeHint ) ;^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P2_Replace_Operator]^if  ( v2 == null )  {^130^^^^^119^140^if  ( v2 != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P8_Replace_Mix]^if  ( v2 != this )  {^130^^^^^119^140^if  ( v2 != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P9_Replace_Statement]^if  ( loc == null )  {^130^^^^^119^140^if  ( v2 != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P9_Replace_Statement]^if  ( tz != null )  {^130^^^^^119^140^if  ( v2 != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P9_Replace_Statement]^if  ( format != null )  {^130^^^^^119^140^if  ( v2 != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P9_Replace_Statement]^if  ( property != null )  {^130^^^^^119^140^if  ( v2 != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P9_Replace_Statement]^if  ( tz == null )  {^130^^^^^119^140^if  ( v2 != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P15_Unwrap_Block]^v2.numberType(JsonParser.NumberType.LONG); v2.format(JsonValueFormat.UTC_MILLISEC);^130^131^132^133^^119^140^if  ( v2 != null )  { v2.numberType ( JsonParser.NumberType.LONG ) ; v2.format ( JsonValueFormat.UTC_MILLISEC ) ; }^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P16_Remove_Block]^^130^131^132^133^^119^140^if  ( v2 != null )  { v2.numberType ( JsonParser.NumberType.LONG ) ; v2.format ( JsonValueFormat.UTC_MILLISEC ) ; }^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P8_Replace_Mix]^v2 .format (  )  ;^131^^^^^119^140^v2.numberType ( JsonParser.NumberType.LONG ) ;^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P14_Delete_Statement]^^131^^^^^119^140^v2.numberType ( JsonParser.NumberType.LONG ) ;^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P14_Delete_Statement]^^132^133^^^^119^140^v2.format ( JsonValueFormat.UTC_MILLISEC ) ; }^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P11_Insert_Donor_Statement]^v2.format ( JsonValueFormat.DATE_TIME ) ;v2.format ( JsonValueFormat.UTC_MILLISEC ) ;^132^^^^^119^140^v2.format ( JsonValueFormat.UTC_MILLISEC ) ;^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P5_Replace_Variable]^JsonIntegerFormatVisitor v2 = typeHint.expectIntegerFormat ( visitor ) ;^129^^^^^119^140^JsonIntegerFormatVisitor v2 = visitor.expectIntegerFormat ( typeHint ) ;^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P11_Insert_Donor_Statement]^JsonStringFormatVisitor v2 = visitor.expectStringFormat ( typeHint ) ;JsonIntegerFormatVisitor v2 = visitor.expectIntegerFormat ( typeHint ) ;^129^^^^^119^140^JsonIntegerFormatVisitor v2 = visitor.expectIntegerFormat ( typeHint ) ;^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P8_Replace_Mix]^JsonIntegerFormatVisitor v2 = visitor .expectStringFormat ( typeHint )  ;^129^^^^^119^140^JsonIntegerFormatVisitor v2 = visitor.expectIntegerFormat ( typeHint ) ;^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P14_Delete_Statement]^^129^^^^^119^140^JsonIntegerFormatVisitor v2 = visitor.expectIntegerFormat ( typeHint ) ;^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P14_Delete_Statement]^^131^132^^^^119^140^v2.numberType ( JsonParser.NumberType.LONG ) ; v2.format ( JsonValueFormat.UTC_MILLISEC ) ;^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
[P8_Replace_Mix]^if  ( v2 != this )  {^136^^^^^119^140^if  ( v2 != null )  {^[CLASS] DateTimeSerializerBase  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JsonIntegerFormatVisitor  v2  JavaType  typeHint  boolean  _useTimestamp  asNumber  timestamp  useTimestamp  JsonStringFormatVisitor  v2  JsonFormatVisitorWrapper  visitor  DateFormat  _customFormat  customFormat  df  
