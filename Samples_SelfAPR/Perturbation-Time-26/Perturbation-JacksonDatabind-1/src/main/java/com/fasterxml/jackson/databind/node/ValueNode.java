[P8_Replace_Mix]^public <T extends JsonNode> T deepCopy (  )  { return  ( T )  null; }^28^^^^^23^33^public <T extends JsonNode> T deepCopy (  )  { return  ( T )  this; }^[CLASS] ValueNode  [METHOD] deepCopy [RETURN_TYPE] <T   [VARIABLES] boolean  
[P5_Replace_Variable]^typeSer.writeTypePrefixForScalar ( this ) ;^37^^^^^33^40^typeSer.writeTypePrefixForScalar ( this, jg ) ;^[CLASS] ValueNode  [METHOD] serializeWithType [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider TypeSerializer typeSer [VARIABLES] boolean  TypeSerializer  typeSer  JsonGenerator  jg  SerializerProvider  provider  
[P7_Replace_Invocation]^typeSer.writeTypeSuffixForScalar ( this, jg ) ;^37^^^^^33^40^typeSer.writeTypePrefixForScalar ( this, jg ) ;^[CLASS] ValueNode  [METHOD] serializeWithType [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider TypeSerializer typeSer [VARIABLES] boolean  TypeSerializer  typeSer  JsonGenerator  jg  SerializerProvider  provider  
[P14_Delete_Statement]^^37^^^^^33^40^typeSer.writeTypePrefixForScalar ( this, jg ) ;^[CLASS] ValueNode  [METHOD] serializeWithType [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider TypeSerializer typeSer [VARIABLES] boolean  TypeSerializer  typeSer  JsonGenerator  jg  SerializerProvider  provider  
[P11_Insert_Donor_Statement]^typeSer.writeTypeSuffixForScalar ( this, jg ) ;typeSer.writeTypePrefixForScalar ( this, jg ) ;^37^^^^^33^40^typeSer.writeTypePrefixForScalar ( this, jg ) ;^[CLASS] ValueNode  [METHOD] serializeWithType [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider TypeSerializer typeSer [VARIABLES] boolean  TypeSerializer  typeSer  JsonGenerator  jg  SerializerProvider  provider  
[P5_Replace_Variable]^serialize (  provider ) ;^38^^^^^33^40^serialize ( jg, provider ) ;^[CLASS] ValueNode  [METHOD] serializeWithType [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider TypeSerializer typeSer [VARIABLES] boolean  TypeSerializer  typeSer  JsonGenerator  jg  SerializerProvider  provider  
[P5_Replace_Variable]^serialize ( jg ) ;^38^^^^^33^40^serialize ( jg, provider ) ;^[CLASS] ValueNode  [METHOD] serializeWithType [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider TypeSerializer typeSer [VARIABLES] boolean  TypeSerializer  typeSer  JsonGenerator  jg  SerializerProvider  provider  
[P5_Replace_Variable]^serialize ( provider, jg ) ;^38^^^^^33^40^serialize ( jg, provider ) ;^[CLASS] ValueNode  [METHOD] serializeWithType [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider TypeSerializer typeSer [VARIABLES] boolean  TypeSerializer  typeSer  JsonGenerator  jg  SerializerProvider  provider  
[P14_Delete_Statement]^^38^39^^^^33^40^serialize ( jg, provider ) ; typeSer.writeTypeSuffixForScalar ( this, jg ) ;^[CLASS] ValueNode  [METHOD] serializeWithType [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider TypeSerializer typeSer [VARIABLES] boolean  TypeSerializer  typeSer  JsonGenerator  jg  SerializerProvider  provider  
[P5_Replace_Variable]^typeSer.writeTypeSuffixForScalar ( this ) ;^39^^^^^33^40^typeSer.writeTypeSuffixForScalar ( this, jg ) ;^[CLASS] ValueNode  [METHOD] serializeWithType [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider TypeSerializer typeSer [VARIABLES] boolean  TypeSerializer  typeSer  JsonGenerator  jg  SerializerProvider  provider  
[P14_Delete_Statement]^^39^^^^^33^40^typeSer.writeTypeSuffixForScalar ( this, jg ) ;^[CLASS] ValueNode  [METHOD] serializeWithType [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider TypeSerializer typeSer [VARIABLES] boolean  TypeSerializer  typeSer  JsonGenerator  jg  SerializerProvider  provider  
[P11_Insert_Donor_Statement]^typeSer.writeTypePrefixForScalar ( this, jg ) ;typeSer.writeTypeSuffixForScalar ( this, jg ) ;^39^^^^^33^40^typeSer.writeTypeSuffixForScalar ( this, jg ) ;^[CLASS] ValueNode  [METHOD] serializeWithType [RETURN_TYPE] void   JsonGenerator jg SerializerProvider provider TypeSerializer typeSer [VARIABLES] boolean  TypeSerializer  typeSer  JsonGenerator  jg  SerializerProvider  provider  
[P8_Replace_Mix]^return this;^60^^^^^58^61^return null;^[CLASS] ValueNode  [METHOD] get [RETURN_TYPE] JsonNode   int index [VARIABLES] boolean  int  index  
[P14_Delete_Statement]^^66^^^^^64^67^return MissingNode.getInstance (  ) ;^[CLASS] ValueNode  [METHOD] path [RETURN_TYPE] JsonNode   int index [VARIABLES] boolean  int  index  
[P3_Replace_Literal]^return true;^72^^^^^70^73^return false;^[CLASS] ValueNode  [METHOD] has [RETURN_TYPE] boolean   int index [VARIABLES] boolean  int  index  
[P3_Replace_Literal]^return true;^78^^^^^76^79^return false;^[CLASS] ValueNode  [METHOD] hasNonNull [RETURN_TYPE] boolean   int index [VARIABLES] boolean  int  index  
[P8_Replace_Mix]^return true;^84^^^^^82^85^return null;^[CLASS] ValueNode  [METHOD] get [RETURN_TYPE] JsonNode   String fieldName [VARIABLES] boolean  String  fieldName  
[P14_Delete_Statement]^^90^^^^^88^91^return MissingNode.getInstance (  ) ;^[CLASS] ValueNode  [METHOD] path [RETURN_TYPE] JsonNode   String fieldName [VARIABLES] boolean  String  fieldName  
[P3_Replace_Literal]^return true;^96^^^^^94^97^return false;^[CLASS] ValueNode  [METHOD] has [RETURN_TYPE] boolean   String fieldName [VARIABLES] boolean  String  fieldName  
[P3_Replace_Literal]^return true;^102^^^^^100^103^return false;^[CLASS] ValueNode  [METHOD] hasNonNull [RETURN_TYPE] boolean   String fieldName [VARIABLES] boolean  String  fieldName  
[P8_Replace_Mix]^return false;^114^^^^^112^115^return null;^[CLASS] ValueNode  [METHOD] findValue [RETURN_TYPE] JsonNode   String fieldName [VARIABLES] boolean  String  fieldName  
[P8_Replace_Mix]^return true;^121^^^^^119^122^return null;^[CLASS] ValueNode  [METHOD] findParent [RETURN_TYPE] ObjectNode   String fieldName [VARIABLES] boolean  String  fieldName  
[P5_Replace_Variable]^return 4;^133^^^^^131^134^return foundSoFar;^[CLASS] ValueNode  [METHOD] findValuesAsText [RETURN_TYPE] List   String fieldName String> foundSoFar [VARIABLES] boolean  List  foundSoFar  String  fieldName  
[P8_Replace_Mix]^return 2;^133^^^^^131^134^return foundSoFar;^[CLASS] ValueNode  [METHOD] findValuesAsText [RETURN_TYPE] List   String fieldName String> foundSoFar [VARIABLES] boolean  List  foundSoFar  String  fieldName  
