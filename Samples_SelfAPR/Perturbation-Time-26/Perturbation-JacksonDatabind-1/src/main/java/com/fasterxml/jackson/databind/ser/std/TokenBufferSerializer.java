[P14_Delete_Statement]^^33^^^^^30^34^value.serialize ( jgen ) ;^[CLASS] TokenBufferSerializer  [METHOD] serialize [RETURN_TYPE] void   TokenBuffer value JsonGenerator jgen SerializerProvider provider [VARIABLES] boolean  TokenBuffer  value  JsonGenerator  jgen  SerializerProvider  provider  
[P5_Replace_Variable]^typeSer.writeTypePrefixForScalar (  jgen ) ;^53^^^^^49^56^typeSer.writeTypePrefixForScalar ( value, jgen ) ;^[CLASS] TokenBufferSerializer  [METHOD] serializeWithType [RETURN_TYPE] void   TokenBuffer value JsonGenerator jgen SerializerProvider provider TypeSerializer typeSer [VARIABLES] boolean  TokenBuffer  value  TypeSerializer  typeSer  JsonGenerator  jgen  SerializerProvider  provider  
[P5_Replace_Variable]^typeSer.writeTypePrefixForScalar ( value ) ;^53^^^^^49^56^typeSer.writeTypePrefixForScalar ( value, jgen ) ;^[CLASS] TokenBufferSerializer  [METHOD] serializeWithType [RETURN_TYPE] void   TokenBuffer value JsonGenerator jgen SerializerProvider provider TypeSerializer typeSer [VARIABLES] boolean  TokenBuffer  value  TypeSerializer  typeSer  JsonGenerator  jgen  SerializerProvider  provider  
[P8_Replace_Mix]^typeSer .writeTypeSuffixForScalar ( value , jgen )  ;^53^^^^^49^56^typeSer.writeTypePrefixForScalar ( value, jgen ) ;^[CLASS] TokenBufferSerializer  [METHOD] serializeWithType [RETURN_TYPE] void   TokenBuffer value JsonGenerator jgen SerializerProvider provider TypeSerializer typeSer [VARIABLES] boolean  TokenBuffer  value  TypeSerializer  typeSer  JsonGenerator  jgen  SerializerProvider  provider  
[P14_Delete_Statement]^^53^^^^^49^56^typeSer.writeTypePrefixForScalar ( value, jgen ) ;^[CLASS] TokenBufferSerializer  [METHOD] serializeWithType [RETURN_TYPE] void   TokenBuffer value JsonGenerator jgen SerializerProvider provider TypeSerializer typeSer [VARIABLES] boolean  TokenBuffer  value  TypeSerializer  typeSer  JsonGenerator  jgen  SerializerProvider  provider  
[P11_Insert_Donor_Statement]^typeSer.writeTypeSuffixForScalar ( value, jgen ) ;typeSer.writeTypePrefixForScalar ( value, jgen ) ;^53^^^^^49^56^typeSer.writeTypePrefixForScalar ( value, jgen ) ;^[CLASS] TokenBufferSerializer  [METHOD] serializeWithType [RETURN_TYPE] void   TokenBuffer value JsonGenerator jgen SerializerProvider provider TypeSerializer typeSer [VARIABLES] boolean  TokenBuffer  value  TypeSerializer  typeSer  JsonGenerator  jgen  SerializerProvider  provider  
[P5_Replace_Variable]^serialize (  jgen, provider ) ;^54^^^^^49^56^serialize ( value, jgen, provider ) ;^[CLASS] TokenBufferSerializer  [METHOD] serializeWithType [RETURN_TYPE] void   TokenBuffer value JsonGenerator jgen SerializerProvider provider TypeSerializer typeSer [VARIABLES] boolean  TokenBuffer  value  TypeSerializer  typeSer  JsonGenerator  jgen  SerializerProvider  provider  
[P5_Replace_Variable]^serialize ( value,  provider ) ;^54^^^^^49^56^serialize ( value, jgen, provider ) ;^[CLASS] TokenBufferSerializer  [METHOD] serializeWithType [RETURN_TYPE] void   TokenBuffer value JsonGenerator jgen SerializerProvider provider TypeSerializer typeSer [VARIABLES] boolean  TokenBuffer  value  TypeSerializer  typeSer  JsonGenerator  jgen  SerializerProvider  provider  
[P5_Replace_Variable]^serialize ( value, jgen ) ;^54^^^^^49^56^serialize ( value, jgen, provider ) ;^[CLASS] TokenBufferSerializer  [METHOD] serializeWithType [RETURN_TYPE] void   TokenBuffer value JsonGenerator jgen SerializerProvider provider TypeSerializer typeSer [VARIABLES] boolean  TokenBuffer  value  TypeSerializer  typeSer  JsonGenerator  jgen  SerializerProvider  provider  
[P5_Replace_Variable]^serialize ( jgen, value, provider ) ;^54^^^^^49^56^serialize ( value, jgen, provider ) ;^[CLASS] TokenBufferSerializer  [METHOD] serializeWithType [RETURN_TYPE] void   TokenBuffer value JsonGenerator jgen SerializerProvider provider TypeSerializer typeSer [VARIABLES] boolean  TokenBuffer  value  TypeSerializer  typeSer  JsonGenerator  jgen  SerializerProvider  provider  
[P5_Replace_Variable]^serialize ( value, provider, jgen ) ;^54^^^^^49^56^serialize ( value, jgen, provider ) ;^[CLASS] TokenBufferSerializer  [METHOD] serializeWithType [RETURN_TYPE] void   TokenBuffer value JsonGenerator jgen SerializerProvider provider TypeSerializer typeSer [VARIABLES] boolean  TokenBuffer  value  TypeSerializer  typeSer  JsonGenerator  jgen  SerializerProvider  provider  
[P14_Delete_Statement]^^54^55^^^^49^56^serialize ( value, jgen, provider ) ; typeSer.writeTypeSuffixForScalar ( value, jgen ) ;^[CLASS] TokenBufferSerializer  [METHOD] serializeWithType [RETURN_TYPE] void   TokenBuffer value JsonGenerator jgen SerializerProvider provider TypeSerializer typeSer [VARIABLES] boolean  TokenBuffer  value  TypeSerializer  typeSer  JsonGenerator  jgen  SerializerProvider  provider  
[P5_Replace_Variable]^typeSer.writeTypeSuffixForScalar (  jgen ) ;^55^^^^^49^56^typeSer.writeTypeSuffixForScalar ( value, jgen ) ;^[CLASS] TokenBufferSerializer  [METHOD] serializeWithType [RETURN_TYPE] void   TokenBuffer value JsonGenerator jgen SerializerProvider provider TypeSerializer typeSer [VARIABLES] boolean  TokenBuffer  value  TypeSerializer  typeSer  JsonGenerator  jgen  SerializerProvider  provider  
[P5_Replace_Variable]^typeSer.writeTypeSuffixForScalar ( value ) ;^55^^^^^49^56^typeSer.writeTypeSuffixForScalar ( value, jgen ) ;^[CLASS] TokenBufferSerializer  [METHOD] serializeWithType [RETURN_TYPE] void   TokenBuffer value JsonGenerator jgen SerializerProvider provider TypeSerializer typeSer [VARIABLES] boolean  TokenBuffer  value  TypeSerializer  typeSer  JsonGenerator  jgen  SerializerProvider  provider  
[P5_Replace_Variable]^typeSer.writeTypeSuffixForScalar ( jgen, value ) ;^55^^^^^49^56^typeSer.writeTypeSuffixForScalar ( value, jgen ) ;^[CLASS] TokenBufferSerializer  [METHOD] serializeWithType [RETURN_TYPE] void   TokenBuffer value JsonGenerator jgen SerializerProvider provider TypeSerializer typeSer [VARIABLES] boolean  TokenBuffer  value  TypeSerializer  typeSer  JsonGenerator  jgen  SerializerProvider  provider  
[P7_Replace_Invocation]^typeSer .writeTypePrefixForScalar ( value , jgen )  ;^55^^^^^49^56^typeSer.writeTypeSuffixForScalar ( value, jgen ) ;^[CLASS] TokenBufferSerializer  [METHOD] serializeWithType [RETURN_TYPE] void   TokenBuffer value JsonGenerator jgen SerializerProvider provider TypeSerializer typeSer [VARIABLES] boolean  TokenBuffer  value  TypeSerializer  typeSer  JsonGenerator  jgen  SerializerProvider  provider  
[P14_Delete_Statement]^^55^^^^^49^56^typeSer.writeTypeSuffixForScalar ( value, jgen ) ;^[CLASS] TokenBufferSerializer  [METHOD] serializeWithType [RETURN_TYPE] void   TokenBuffer value JsonGenerator jgen SerializerProvider provider TypeSerializer typeSer [VARIABLES] boolean  TokenBuffer  value  TypeSerializer  typeSer  JsonGenerator  jgen  SerializerProvider  provider  
[P11_Insert_Donor_Statement]^typeSer.writeTypePrefixForScalar ( value, jgen ) ;typeSer.writeTypeSuffixForScalar ( value, jgen ) ;^55^^^^^49^56^typeSer.writeTypeSuffixForScalar ( value, jgen ) ;^[CLASS] TokenBufferSerializer  [METHOD] serializeWithType [RETURN_TYPE] void   TokenBuffer value JsonGenerator jgen SerializerProvider provider TypeSerializer typeSer [VARIABLES] boolean  TokenBuffer  value  TypeSerializer  typeSer  JsonGenerator  jgen  SerializerProvider  provider  
[P3_Replace_Literal]^return createSchemaNode ( "any", false ) ;^65^^^^^59^66^return createSchemaNode ( "any", true ) ;^[CLASS] TokenBufferSerializer  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  SerializerProvider  provider  
[P3_Replace_Literal]^return createSchemaNode ( "nny", true ) ;^65^^^^^59^66^return createSchemaNode ( "any", true ) ;^[CLASS] TokenBufferSerializer  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  SerializerProvider  provider  
[P14_Delete_Statement]^^65^^^^^59^66^return createSchemaNode ( "any", true ) ;^[CLASS] TokenBufferSerializer  [METHOD] getSchema [RETURN_TYPE] JsonNode   SerializerProvider provider Type typeHint [VARIABLES] Type  typeHint  boolean  SerializerProvider  provider  
[P14_Delete_Statement]^^76^^^^^69^77^visitor.expectAnyFormat ( typeHint ) ;^[CLASS] TokenBufferSerializer  [METHOD] acceptJsonFormatVisitor [RETURN_TYPE] void   JsonFormatVisitorWrapper visitor JavaType typeHint [VARIABLES] JavaType  typeHint  boolean  JsonFormatVisitorWrapper  visitor  
