[P1_Replace_Type]^private static final  int  serialVersionUID = 1L;^16^^^^^11^21^private static final long serialVersionUID = 1L;^[CLASS] FromStringDeserializer   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID = 1;^16^^^^^11^21^private static final long serialVersionUID = 1L;^[CLASS] FromStringDeserializer   [VARIABLES] 
[P14_Delete_Statement]^^19^^^^^18^20^super ( vc ) ;^[CLASS] FromStringDeserializer  [METHOD] <init> [RETURN_TYPE] Class)   Class<?> vc [VARIABLES] long  serialVersionUID  Class  vc  boolean  
[P1_Replace_Type]^char text = jp.getValueAschar (  ) ;^34^^^^^32^62^String text = jp.getValueAsString (  ) ;^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P8_Replace_Mix]^String text = jp .getCurrentToken (  )  ;^34^^^^^32^62^String text = jp.getValueAsString (  ) ;^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P14_Delete_Statement]^^34^^^^^32^62^String text = jp.getValueAsString (  ) ;^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P2_Replace_Operator]^if  ( text == null )  {^35^^^^^32^62^if  ( text != null )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P6_Replace_Expression]^if  ( text.length() == 0 || ((text = length()) == 0 )  {^35^^^^^32^62^if  ( text != null )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P6_Replace_Expression]^if  ( text.length (  )  == 0 )  {^35^^^^^32^62^if  ( text != null )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P6_Replace_Expression]^if  (  ( text = text.trim (  )  ) .length (  )  == 0 )  {^35^^^^^32^62^if  ( text != null )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P6_Replace_Expression]^if  ( result != null )  {^35^^^^^32^62^if  ( text != null )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P8_Replace_Mix]^if  ( text != this )  {^35^^^^^32^62^if  ( text != null )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P9_Replace_Statement]^if  ( ob == null )  {^35^^^^^32^62^if  ( text != null )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P15_Unwrap_Block]^if (((text.length()) == 0) || (((text = text.trim()).length()) == 0)) {    return null;}; try {    T result = _deserialize(text, ctxt);    if (result != null) {        return result;    }} catch (java.lang.IllegalArgumentException iae) {}; throw ctxt.weirdStringException(text, _valueClass, "not a valid textual representation");^35^36^^38^39^32^62^if  ( text != null )  { if  ( text.length (  )  == 0 ||  ( text = text.trim (  )  ) .length (  )  == 0 )  { return null; }^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P16_Remove_Block]^^35^36^^38^39^32^62^if  ( text != null )  { if  ( text.length (  )  == 0 ||  ( text = text.trim (  )  ) .length (  )  == 0 )  { return null; }^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P2_Replace_Operator]^if  ( text.length (  )  == 0 &&  ( text = text.trim (  )  ) .length (  )  == 0 )  {^36^^^^^32^62^if  ( text.length (  )  == 0 ||  ( text = text.trim (  )  ) .length (  )  == 0 )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P2_Replace_Operator]^if  ( text.length (  )  <= 0 ||  ( text = text.trim (  )  ) .length (  )  == 0 )  {^36^^^^^32^62^if  ( text.length (  )  == 0 ||  ( text = text.trim (  )  ) .length (  )  == 0 )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P2_Replace_Operator]^if  ( text.length (  )  == 0 ||  ( text = text.trim (  )  ) .length (  )  != 0 )  {^36^^^^^32^62^if  ( text.length (  )  == 0 ||  ( text = text.trim (  )  ) .length (  )  == 0 )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P3_Replace_Literal]^if  ( text.length (  )  == 1 ||  ( text = text.trim (  )  ) .length (  )  == 1 )  {^36^^^^^32^62^if  ( text.length (  )  == 0 ||  ( text = text.trim (  )  ) .length (  )  == 0 )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P3_Replace_Literal]^if  ( text.length (  )  == 4 ||  ( text = text.trim (  )  ) .length (  )  == 4 )  {^36^^^^^32^62^if  ( text.length (  )  == 0 ||  ( text = text.trim (  )  ) .length (  )  == 0 )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P3_Replace_Literal]^if  ( text.length() + 3  == 0 ||  ( text = text.trim (  )  ) .length() + 3  == 0 )  {^36^^^^^32^62^if  ( text.length (  )  == 0 ||  ( text = text.trim (  )  ) .length (  )  == 0 )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P6_Replace_Expression]^if  ( text.length (  )  == 0 ) {^36^^^^^32^62^if  ( text.length (  )  == 0 ||  ( text = text.trim (  )  ) .length (  )  == 0 )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P6_Replace_Expression]^if  (   ( text = text.trim (  )  ) .length (  )  == 0 )  {^36^^^^^32^62^if  ( text.length (  )  == 0 ||  ( text = text.trim (  )  ) .length (  )  == 0 )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P8_Replace_Mix]^if  ( text.length (  )  == 0  ||  ( text = text.trim (  )  ) .length (  )  == 0  )  {^36^^^^^32^62^if  ( text.length (  )  == 0 ||  ( text = text.trim (  )  ) .length (  )  == 0 )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P15_Unwrap_Block]^return null;^36^37^38^39^^32^62^if  ( text.length (  )  == 0 ||  ( text = text.trim (  )  ) .length (  )  == 0 )  {  return null; }^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P16_Remove_Block]^^36^37^38^39^^32^62^if  ( text.length (  )  == 0 ||  ( text = text.trim (  )  ) .length (  )  == 0 )  {  return null; }^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P8_Replace_Mix]^return true;^38^^^^^32^62^return null;^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P2_Replace_Operator]^if  ( result == null )  {^42^^^^^32^62^if  ( result != null )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P8_Replace_Mix]^if  ( result != this )  {^42^^^^^32^62^if  ( result != null )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P9_Replace_Statement]^if  ( ob == null )  {^42^^^^^32^62^if  ( result != null )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P9_Replace_Statement]^if  ( text != null )  {^42^^^^^32^62^if  ( result != null )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P15_Unwrap_Block]^return result;^42^43^44^^^32^62^if  ( result != null )  { return result; }^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P16_Remove_Block]^^42^43^44^^^32^62^if  ( result != null )  { return result; }^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P13_Insert_Block]^if  ( ob == null )  {     return null; }^42^^^^^32^62^[Delete]^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P8_Replace_Mix]^if  ( result != true )  {^42^^^^^32^62^if  ( result != null )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P5_Replace_Variable]^T result = _deserialize (  ctxt ) ;^41^^^^^32^62^T result = _deserialize ( text, ctxt ) ;^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P5_Replace_Variable]^T result = _deserialize ( text ) ;^41^^^^^32^62^T result = _deserialize ( text, ctxt ) ;^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P5_Replace_Variable]^T result = _deserialize ( ctxt, text ) ;^41^^^^^32^62^T result = _deserialize ( text, ctxt ) ;^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P7_Replace_Invocation]^T result = _deserializeEmbedded ( text, ctxt ) ;^41^^^^^32^62^T result = _deserialize ( text, ctxt ) ;^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P14_Delete_Statement]^^41^^^^^32^62^T result = _deserialize ( text, ctxt ) ;^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P11_Insert_Donor_Statement]^return _deserializeEmbedded ( ob, ctxt ) ;T result = _deserialize ( text, ctxt ) ;^41^^^^^32^62^T result = _deserialize ( text, ctxt ) ;^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P3_Replace_Literal]^if  ( text.length() + 1  == 0 ||  ( text = text.trim (  )  ) .length() + 1  == 0 )  {^36^^^^^32^62^if  ( text.length (  )  == 0 ||  ( text = text.trim (  )  ) .length (  )  == 0 )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P8_Replace_Mix]^if  ( text.length (  )  =^36^^^^^32^62^if  ( text.length (  )  == 0 ||  ( text = text.trim (  )  ) .length (  )  == 0 )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P8_Replace_Mix]^return true;^48^^^^^32^62^throw ctxt.weirdStringException  (" ")  ;^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P11_Insert_Donor_Statement]^throw ctxt.mappingException  (" ")  ;throw ctxt.weirdStringException  (" ")  ;^48^^^^^32^62^throw ctxt.weirdStringException  (" ")  ;^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P3_Replace_Literal]^if  ( text.length() - 8  == 0 ||  ( text = text.trim (  )  ) .length() - 8  == 0 )  {^36^^^^^32^62^if  ( text.length (  )  == 0 ||  ( text = text.trim (  )  ) .length (  )  == 0 )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P3_Replace_Literal]^if  ( text.length() - 3  == 0 ||  ( text = text.trim (  )  ) .length() - 3  == 0 )  {^36^^^^^32^62^if  ( text.length (  )  == 0 ||  ( text = text.trim (  )  ) .length (  )  == 0 )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P3_Replace_Literal]^if  ( text.length() - 2  == 0 ||  ( text = text.trim (  )  ) .length() - 2  == 0 )  {^36^^^^^32^62^if  ( text.length (  )  == 0 ||  ( text = text.trim (  )  ) .length (  )  == 0 )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P14_Delete_Statement]^^48^^^^^32^62^throw ctxt.weirdStringException  (" ")  ;^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P3_Replace_Literal]^if  ( text.length (  )  == 2 ||  ( text = text.trim (  )  ) .length (  )  == 2 )  {^36^^^^^32^62^if  ( text.length (  )  == 0 ||  ( text = text.trim (  )  ) .length (  )  == 0 )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P3_Replace_Literal]^if  ( text.length() - 5  == 0 ||  ( text = text.trim (  )  ) .length() - 5  == 0 )  {^36^^^^^32^62^if  ( text.length (  )  == 0 ||  ( text = text.trim (  )  ) .length (  )  == 0 )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P8_Replace_Mix]^return this;^38^^^^^32^62^return null;^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P8_Replace_Mix]^if  ( result != false )  {^42^^^^^32^62^if  ( result != null )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P3_Replace_Literal]^if  ( text.length() + 5  == 0 ||  ( text = text.trim (  )  ) .length() + 5  == 0 )  {^36^^^^^32^62^if  ( text.length (  )  == 0 ||  ( text = text.trim (  )  ) .length (  )  == 0 )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P7_Replace_Invocation]^throw ctxt .mappingException (  )   ;^48^^^^^32^62^throw ctxt.weirdStringException  (" ")  ;^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P3_Replace_Literal]^if  ( text.length() + 8  == 0 ||  ( text = text.trim (  )  ) .length() + 8  == 0 )  {^36^^^^^32^62^if  ( text.length (  )  == 0 ||  ( text = text.trim (  )  ) .length (  )  == 0 )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P2_Replace_Operator]^if  ( jp.getCurrentToken (  )  >= JsonToken.VALUE_EMBEDDED_OBJECT )  {^50^^^^^32^62^if  ( jp.getCurrentToken (  )  == JsonToken.VALUE_EMBEDDED_OBJECT )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P2_Replace_Operator]^if  ( jp.getCurrentToken (  )  <= JsonToken.VALUE_EMBEDDED_OBJECT )  {^50^^^^^32^62^if  ( jp.getCurrentToken (  )  == JsonToken.VALUE_EMBEDDED_OBJECT )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P6_Replace_Expression]^if  ( ob == null )  {^50^^^^^32^62^if  ( jp.getCurrentToken (  )  == JsonToken.VALUE_EMBEDDED_OBJECT )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P15_Unwrap_Block]^java.lang.Object ob = jp.getEmbeddedObject(); if (ob == null) {    return null;}; if (_valueClass.isAssignableFrom(ob.getClass())) {    return ((T) (ob));}; return _deserializeEmbedded(ob, ctxt);^50^51^52^53^54^32^62^if  ( jp.getCurrentToken (  )  == JsonToken.VALUE_EMBEDDED_OBJECT )  {  Object ob = jp.getEmbeddedObject (  ) ; if  ( ob == null )  { return null; }^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P16_Remove_Block]^^50^51^52^53^54^32^62^if  ( jp.getCurrentToken (  )  == JsonToken.VALUE_EMBEDDED_OBJECT )  {  Object ob = jp.getEmbeddedObject (  ) ; if  ( ob == null )  { return null; }^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P2_Replace_Operator]^if  ( ob != null )  {^53^^^^^32^62^if  ( ob == null )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P8_Replace_Mix]^if  ( ob == this )  {^53^^^^^32^62^if  ( ob == null )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P9_Replace_Statement]^if  ( result != null )  {^53^^^^^32^62^if  ( ob == null )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P9_Replace_Statement]^if  ( text != null )  {^53^^^^^32^62^if  ( ob == null )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P15_Unwrap_Block]^return null;^53^54^55^^^32^62^if  ( ob == null )  { return null; }^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P16_Remove_Block]^^53^54^55^^^32^62^if  ( ob == null )  { return null; }^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P13_Insert_Block]^if  ( result != null )  {     return result; }^53^^^^^32^62^[Delete]^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P8_Replace_Mix]^return false;^54^^^^^32^62^return null;^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P5_Replace_Variable]^if  ( ob.isAssignableFrom ( _valueClass.getClass (  )  )  )  {^56^^^^^32^62^if  ( _valueClass.isAssignableFrom ( ob.getClass (  )  )  )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P7_Replace_Invocation]^if  ( _valueClass .getName (  )   )  {^56^^^^^32^62^if  ( _valueClass.isAssignableFrom ( ob.getClass (  )  )  )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P15_Unwrap_Block]^return ((T) (ob));^56^57^58^^^32^62^if  ( _valueClass.isAssignableFrom ( ob.getClass (  )  )  )  { return  ( T )  ob; }^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P16_Remove_Block]^^56^57^58^^^32^62^if  ( _valueClass.isAssignableFrom ( ob.getClass (  )  )  )  { return  ( T )  ob; }^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P8_Replace_Mix]^return true;^54^^^^^32^62^return null;^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P5_Replace_Variable]^return _deserializeEmbedded (  ctxt ) ;^59^^^^^32^62^return _deserializeEmbedded ( ob, ctxt ) ;^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P5_Replace_Variable]^return _deserializeEmbedded ( ob ) ;^59^^^^^32^62^return _deserializeEmbedded ( ob, ctxt ) ;^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P5_Replace_Variable]^return _deserializeEmbedded ( ctxt, ob ) ;^59^^^^^32^62^return _deserializeEmbedded ( ob, ctxt ) ;^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P7_Replace_Invocation]^return _deserialize ( ob, ctxt ) ;^59^^^^^32^62^return _deserializeEmbedded ( ob, ctxt ) ;^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P8_Replace_Mix]^Object ob = jp .getCurrentToken (  )  ;^52^^^^^32^62^Object ob = jp.getEmbeddedObject (  ) ;^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P14_Delete_Statement]^^52^^^^^32^62^Object ob = jp.getEmbeddedObject (  ) ;^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P13_Insert_Block]^if  ( _valueClass.isAssignableFrom ( ob.getClass (  )  )  )  {     return  (  ( T )   ( ob )  ) ; }^56^^^^^32^62^[Delete]^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P14_Delete_Statement]^^59^^^^^32^62^return _deserializeEmbedded ( ob, ctxt ) ;^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P8_Replace_Mix]^if  ( ob == true )  {^53^^^^^32^62^if  ( ob == null )  {^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P8_Replace_Mix]^return this;^54^^^^^32^62^return null;^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P7_Replace_Invocation]^throw ctxt .weirdStringException ( text , text )   ;^61^^^^^32^62^throw ctxt.mappingException  (" ")  ;^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P11_Insert_Donor_Statement]^throw ctxt.weirdStringException  (" ")  ;throw ctxt.mappingException  (" ")  ;^61^^^^^32^62^throw ctxt.mappingException  (" ")  ;^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P14_Delete_Statement]^^61^^^^^32^62^throw ctxt.mappingException  (" ")  ;^[CLASS] FromStringDeserializer  [METHOD] deserialize [RETURN_TYPE] T   JsonParser jp DeserializationContext ctxt [VARIABLES] boolean  T  result  DeserializationContext  ctxt  Object  ob  String  text  long  serialVersionUID  IllegalArgumentException  iae  JsonParser  jp  
[P2_Replace_Operator]^throw ctxt.mappingException ( "Don't know how to convert embedded Object of type " +ob.getClass (  |  ) .getName (  ) +" into "+_valueClass.getName (  )  ) ;^71^72^^^^67^73^throw ctxt.mappingException ( "Don't know how to convert embedded Object of type " +ob.getClass (  ) .getName (  ) +" into "+_valueClass.getName (  )  ) ;^[CLASS] FromStringDeserializer  [METHOD] _deserializeEmbedded [RETURN_TYPE] T   Object ob DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  Object  ob  boolean  long  serialVersionUID  
[P2_Replace_Operator]^throw ctxt.mappingException ( "Don't know how to convert embedded Object of type " +ob.getClass (   instanceof   ) .getName (  ) +" into "+_valueClass.getName (  )  ) ;^71^72^^^^67^73^throw ctxt.mappingException ( "Don't know how to convert embedded Object of type " +ob.getClass (  ) .getName (  ) +" into "+_valueClass.getName (  )  ) ;^[CLASS] FromStringDeserializer  [METHOD] _deserializeEmbedded [RETURN_TYPE] T   Object ob DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  Object  ob  boolean  long  serialVersionUID  
[P2_Replace_Operator]^throw ctxt.mappingException ( "Don't know how to convert embedded Object of type " +ob.getClass (  ||  ) .getName (  ) +" into "+_valueClass.getName (  )  ) ;^71^72^^^^67^73^throw ctxt.mappingException ( "Don't know how to convert embedded Object of type " +ob.getClass (  ) .getName (  ) +" into "+_valueClass.getName (  )  ) ;^[CLASS] FromStringDeserializer  [METHOD] _deserializeEmbedded [RETURN_TYPE] T   Object ob DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  Object  ob  boolean  long  serialVersionUID  
[P3_Replace_Literal]^throw ctxt.mappingException ( "dde" +ob.getClass (  ) .getName (  ) +" into "+_valueClass.getName (  )  ) ;^71^72^^^^67^73^throw ctxt.mappingException ( "Don't know how to convert embedded Object of type " +ob.getClass (  ) .getName (  ) +" into "+_valueClass.getName (  )  ) ;^[CLASS] FromStringDeserializer  [METHOD] _deserializeEmbedded [RETURN_TYPE] T   Object ob DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  Object  ob  boolean  long  serialVersionUID  
[P3_Replace_Literal]^throw ctxt.mappingException ( "Don't know how to convert embedded Object of type " +ob.getClass (  ) .getName (  ) +"ininto "+_valueClass.getName (  )  ) ;^71^72^^^^67^73^throw ctxt.mappingException ( "Don't know how to convert embedded Object of type " +ob.getClass (  ) .getName (  ) +" into "+_valueClass.getName (  )  ) ;^[CLASS] FromStringDeserializer  [METHOD] _deserializeEmbedded [RETURN_TYPE] T   Object ob DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  Object  ob  boolean  long  serialVersionUID  
[P2_Replace_Operator]^throw ctxt.mappingException ( "Don't know how to convert embedded Object of type " +ob.getClass (  >  ) .getName (  ) +" into "+_valueClass.getName (  )  ) ;^71^72^^^^67^73^throw ctxt.mappingException ( "Don't know how to convert embedded Object of type " +ob.getClass (  ) .getName (  ) +" into "+_valueClass.getName (  )  ) ;^[CLASS] FromStringDeserializer  [METHOD] _deserializeEmbedded [RETURN_TYPE] T   Object ob DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  Object  ob  boolean  long  serialVersionUID  
[P2_Replace_Operator]^throw ctxt.mappingException ( "Don't know how to convert embedded Object of type " +ob.getClass (  <<  ) .getName (  ) +" into "+_valueClass.getName (  )  ) ;^71^72^^^^67^73^throw ctxt.mappingException ( "Don't know how to convert embedded Object of type " +ob.getClass (  ) .getName (  ) +" into "+_valueClass.getName (  )  ) ;^[CLASS] FromStringDeserializer  [METHOD] _deserializeEmbedded [RETURN_TYPE] T   Object ob DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  Object  ob  boolean  long  serialVersionUID  
[P3_Replace_Literal]^throw ctxt.mappingException ( "on't know how to convert embedded Object ofon't know how to convert embedded Object of type " +ob.getClass (  ) .getName (  ) +" into "+_valueClass.getName (  )  ) ;^71^72^^^^67^73^throw ctxt.mappingException ( "Don't know how to convert embedded Object of type " +ob.getClass (  ) .getName (  ) +" into "+_valueClass.getName (  )  ) ;^[CLASS] FromStringDeserializer  [METHOD] _deserializeEmbedded [RETURN_TYPE] T   Object ob DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  Object  ob  boolean  long  serialVersionUID  
[P3_Replace_Literal]^throw ctxt.mappingException ( "Don't know how to convert embedded Object of type " +ob.getClass (  ) .getName (  ) +"tointo "+_valueClass.getName (  )  ) ;^71^72^^^^67^73^throw ctxt.mappingException ( "Don't know how to convert embedded Object of type " +ob.getClass (  ) .getName (  ) +" into "+_valueClass.getName (  )  ) ;^[CLASS] FromStringDeserializer  [METHOD] _deserializeEmbedded [RETURN_TYPE] T   Object ob DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  Object  ob  boolean  long  serialVersionUID  
[P14_Delete_Statement]^^71^72^^^^67^73^throw ctxt.mappingException ( "Don't know how to convert embedded Object of type " +ob.getClass (  ) .getName (  ) +" into "+_valueClass.getName (  )  ) ;^[CLASS] FromStringDeserializer  [METHOD] _deserializeEmbedded [RETURN_TYPE] T   Object ob DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  Object  ob  boolean  long  serialVersionUID  
[P14_Delete_Statement]^^72^^^^^67^73^+ob.getClass (  ) .getName (  ) +" into "+_valueClass.getName (  )  ) ;^[CLASS] FromStringDeserializer  [METHOD] _deserializeEmbedded [RETURN_TYPE] T   Object ob DeserializationContext ctxt [VARIABLES] DeserializationContext  ctxt  Object  ob  boolean  long  serialVersionUID  
