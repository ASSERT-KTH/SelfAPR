[P8_Replace_Mix]^private NodeCursor _nodeCursor;^34^^^^^29^39^protected NodeCursor _nodeCursor;^[CLASS] TreeTraversingParser   [VARIABLES] 
[P8_Replace_Mix]^private JsonToken _nextToken;^46^^^^^41^51^protected JsonToken _nextToken;^[CLASS] TreeTraversingParser   [VARIABLES] 
[P8_Replace_Mix]^private boolean _closed;^59^^^^^54^64^protected boolean _closed;^[CLASS] TreeTraversingParser   [VARIABLES] 
[P7_Replace_Invocation]^public readBinaryValue ( JsonNode n )  { this ( n, null ) ; }^67^^^^^62^72^public TreeTraversingParser ( JsonNode n )  { this ( n, null ) ; }^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] JsonNode)   JsonNode n [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  
[P3_Replace_Literal]^super ( -5 ) ;^71^^^^^69^82^super ( 0 ) ;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P14_Delete_Statement]^^71^72^^^^69^82^super ( 0 ) ; _objectCodec = codec;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P5_Replace_Variable]^_objectCodec = _objectCodec;^72^^^^^69^82^_objectCodec = codec;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P8_Replace_Mix]^_objectCodec =  null;^72^^^^^69^82^_objectCodec = codec;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P11_Insert_Donor_Statement]^_objectCodec = c;_objectCodec = codec;^72^^^^^69^82^_objectCodec = codec;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P7_Replace_Invocation]^if  ( n .isBinary (  )   )  {^73^^^^^69^82^if  ( n.isArray (  )  )  {^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P9_Replace_Statement]^if  ( n.isPojo (  )  )  {^73^^^^^69^82^if  ( n.isArray (  )  )  {^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P13_Insert_Block]^if  ( n.isObject (  )  )  {     _nextToken = JsonToken.START_OBJECT;     _nodeCursor = new Object ( n, null ) ; }else {     _nodeCursor = new RootValue ( n, null ) ; }^73^^^^^69^82^[Delete]^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P6_Replace_Expression]^} else {^76^^^^^69^82^} else if  ( n.isObject (  )  )  {^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P8_Replace_Mix]^}  if  ( n.isObject (  )  )  {^76^^^^^69^82^} else if  ( n.isObject (  )  )  {^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P15_Unwrap_Block]^_nextToken = JsonToken.START_OBJECT; _nodeCursor = new com.fasterxml.jackson.databind.node.NodeCursor.Object(n, null);^76^77^78^79^80^69^82^} else if  ( n.isObject (  )  )  { _nextToken = JsonToken.START_OBJECT; _nodeCursor = new NodeCursor.Object ( n, null ) ; } else { _nodeCursor = new NodeCursor.RootValue ( n, null ) ; }^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P16_Remove_Block]^^76^77^78^79^80^69^82^} else if  ( n.isObject (  )  )  { _nextToken = JsonToken.START_OBJECT; _nodeCursor = new NodeCursor.Object ( n, null ) ; } else { _nodeCursor = new NodeCursor.RootValue ( n, null ) ; }^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P13_Insert_Block]^if  ( n.isArray (  )  )  {     _nextToken = JsonToken.START_ARRAY;     _nodeCursor = new Array ( n, null ) ; }else     if  ( n.isObject (  )  )  {         _nextToken = JsonToken.START_OBJECT;         _nodeCursor = new Object ( n, null ) ;     }else {         _nodeCursor = new RootValue ( n, null ) ;     }^76^^^^^69^82^[Delete]^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P8_Replace_Mix]^_nodeCursor = new NodeCursor.RootValue ( n, true ) ;^80^^^^^69^82^_nodeCursor = new NodeCursor.RootValue ( n, null ) ;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P11_Insert_Donor_Statement]^_nodeCursor = new NodeCursor.Object ( n, null ) ;_nodeCursor = new NodeCursor.RootValue ( n, null ) ;^80^^^^^69^82^_nodeCursor = new NodeCursor.RootValue ( n, null ) ;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P11_Insert_Donor_Statement]^_nodeCursor = new NodeCursor.Array ( n, null ) ;_nodeCursor = new NodeCursor.RootValue ( n, null ) ;^80^^^^^69^82^_nodeCursor = new NodeCursor.RootValue ( n, null ) ;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P11_Insert_Donor_Statement]^_nodeCursor = _nodeCursor.iterateChildren (  ) ;_nodeCursor = new NodeCursor.RootValue ( n, null ) ;^80^^^^^69^82^_nodeCursor = new NodeCursor.RootValue ( n, null ) ;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P11_Insert_Donor_Statement]^_nodeCursor = _nodeCursor.getParent (  ) ;_nodeCursor = new NodeCursor.RootValue ( n, null ) ;^80^^^^^69^82^_nodeCursor = new NodeCursor.RootValue ( n, null ) ;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P8_Replace_Mix]^_nextToken ;^77^^^^^69^82^_nextToken = JsonToken.START_OBJECT;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P11_Insert_Donor_Statement]^_currToken = JsonToken.END_ARRAY;_nextToken = JsonToken.START_OBJECT;^77^^^^^69^82^_nextToken = JsonToken.START_OBJECT;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P11_Insert_Donor_Statement]^_nextToken = JsonToken.START_ARRAY;_nextToken = JsonToken.START_OBJECT;^77^^^^^69^82^_nextToken = JsonToken.START_OBJECT;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P11_Insert_Donor_Statement]^_currToken = JsonToken.END_OBJECT;_nextToken = JsonToken.START_OBJECT;^77^^^^^69^82^_nextToken = JsonToken.START_OBJECT;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P4_Replace_Constructor]^_nodeCursor = _nodeCursor =  NodeCursor.new Array ( n, null )  ;^78^^^^^69^82^_nodeCursor = new NodeCursor.Object ( n, null ) ;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P8_Replace_Mix]^_nodeCursor = new NodeCursor.Object ( n, true ) ;^78^^^^^69^82^_nodeCursor = new NodeCursor.Object ( n, null ) ;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P11_Insert_Donor_Statement]^_nodeCursor = new NodeCursor.Array ( n, null ) ;_nodeCursor = new NodeCursor.Object ( n, null ) ;^78^^^^^69^82^_nodeCursor = new NodeCursor.Object ( n, null ) ;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P11_Insert_Donor_Statement]^_nodeCursor = _nodeCursor.iterateChildren (  ) ;_nodeCursor = new NodeCursor.Object ( n, null ) ;^78^^^^^69^82^_nodeCursor = new NodeCursor.Object ( n, null ) ;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P11_Insert_Donor_Statement]^_nodeCursor = _nodeCursor.getParent (  ) ;_nodeCursor = new NodeCursor.Object ( n, null ) ;^78^^^^^69^82^_nodeCursor = new NodeCursor.Object ( n, null ) ;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P11_Insert_Donor_Statement]^_nodeCursor = new NodeCursor.RootValue ( n, null ) ;_nodeCursor = new NodeCursor.Object ( n, null ) ;^78^^^^^69^82^_nodeCursor = new NodeCursor.Object ( n, null ) ;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P8_Replace_Mix]^_nextToken  = null ;^77^^^^^69^82^_nextToken = JsonToken.START_OBJECT;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P12_Insert_Condition]^if  ( _currToken == JsonToken.START_OBJECT )  { _nextToken = JsonToken.START_OBJECT; }^77^^^^^69^82^_nextToken = JsonToken.START_OBJECT;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P8_Replace_Mix]^_nodeCursor = new NodeCursor.RootValue ( n, this ) ;^80^^^^^69^82^_nodeCursor = new NodeCursor.RootValue ( n, null ) ;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P8_Replace_Mix]^} else if  ( n .asText (  )   )  {^76^^^^^69^82^} else if  ( n.isObject (  )  )  {^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P8_Replace_Mix]^_nextToken  =  _nextToken ;^74^^^^^69^82^_nextToken = JsonToken.START_ARRAY;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P11_Insert_Donor_Statement]^_currToken = JsonToken.END_ARRAY;_nextToken = JsonToken.START_ARRAY;^74^^^^^69^82^_nextToken = JsonToken.START_ARRAY;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P11_Insert_Donor_Statement]^_currToken = JsonToken.END_OBJECT;_nextToken = JsonToken.START_ARRAY;^74^^^^^69^82^_nextToken = JsonToken.START_ARRAY;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P11_Insert_Donor_Statement]^_nextToken = JsonToken.START_OBJECT;_nextToken = JsonToken.START_ARRAY;^74^^^^^69^82^_nextToken = JsonToken.START_ARRAY;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P8_Replace_Mix]^_nodeCursor = new NodeCursor.Array ( n, this ) ;^75^^^^^69^82^_nodeCursor = new NodeCursor.Array ( n, null ) ;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P11_Insert_Donor_Statement]^_nodeCursor = new NodeCursor.Object ( n, null ) ;_nodeCursor = new NodeCursor.Array ( n, null ) ;^75^^^^^69^82^_nodeCursor = new NodeCursor.Array ( n, null ) ;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P11_Insert_Donor_Statement]^_nodeCursor = _nodeCursor.iterateChildren (  ) ;_nodeCursor = new NodeCursor.Array ( n, null ) ;^75^^^^^69^82^_nodeCursor = new NodeCursor.Array ( n, null ) ;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P11_Insert_Donor_Statement]^_nodeCursor = _nodeCursor.getParent (  ) ;_nodeCursor = new NodeCursor.Array ( n, null ) ;^75^^^^^69^82^_nodeCursor = new NodeCursor.Array ( n, null ) ;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P11_Insert_Donor_Statement]^_nodeCursor = new NodeCursor.RootValue ( n, null ) ;_nodeCursor = new NodeCursor.Array ( n, null ) ;^75^^^^^69^82^_nodeCursor = new NodeCursor.Array ( n, null ) ;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P8_Replace_Mix]^_nodeCursor = new NodeCursor.Object ( n, this ) ;^78^^^^^69^82^_nodeCursor = new NodeCursor.Object ( n, null ) ;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P8_Replace_Mix]^_nextToken ;^74^^^^^69^82^_nextToken = JsonToken.START_ARRAY;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P8_Replace_Mix]^_nodeCursor = new NodeCursor.Array ( n, false ) ;^75^^^^^69^82^_nodeCursor = new NodeCursor.Array ( n, null ) ;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P8_Replace_Mix]^_nextToken  =  _nextToken ;^77^^^^^69^82^_nextToken = JsonToken.START_OBJECT;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P8_Replace_Mix]^_nodeCursor = new NodeCursor.Object ( n, false ) ;^78^^^^^69^82^_nodeCursor = new NodeCursor.Object ( n, null ) ;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P8_Replace_Mix]^_nodeCursor = new NodeCursor.RootValue ( n, false ) ;^80^^^^^69^82^_nodeCursor = new NodeCursor.RootValue ( n, null ) ;^[CLASS] TreeTraversingParser  [METHOD] <init> [RETURN_TYPE] ObjectCodec)   JsonNode n ObjectCodec codec [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  codec  
[P5_Replace_Variable]^_objectCodec = codec;^86^^^^^85^87^_objectCodec = c;^[CLASS] TreeTraversingParser  [METHOD] setCodec [RETURN_TYPE] void   ObjectCodec c [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_objectCodec = codec;_objectCodec = c;^86^^^^^85^87^_objectCodec = c;^[CLASS] TreeTraversingParser  [METHOD] setCodec [RETURN_TYPE] void   ObjectCodec c [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^return codec;^91^^^^^90^92^return _objectCodec;^[CLASS] TreeTraversingParser  [METHOD] getCodec [RETURN_TYPE] ObjectCodec   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^if  ( !_startContainer )  {^108^^^^^106^113^if  ( !_closed )  {^[CLASS] TreeTraversingParser  [METHOD] close [RETURN_TYPE] void   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( _closed )  {^108^^^^^106^113^if  ( !_closed )  {^[CLASS] TreeTraversingParser  [METHOD] close [RETURN_TYPE] void   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P15_Unwrap_Block]^_closed = true; _nodeCursor = null; _currToken = null;^108^109^110^111^112^106^113^if  ( !_closed )  { _closed = true; _nodeCursor = null; _currToken = null; }^[CLASS] TreeTraversingParser  [METHOD] close [RETURN_TYPE] void   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P16_Remove_Block]^^108^109^110^111^112^106^113^if  ( !_closed )  { _closed = true; _nodeCursor = null; _currToken = null; }^[CLASS] TreeTraversingParser  [METHOD] close [RETURN_TYPE] void   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P13_Insert_Block]^if  (  ( _closed )  ||  (  ( _nodeCursor )  == null )  )  {     return null; }^108^^^^^106^113^[Delete]^[CLASS] TreeTraversingParser  [METHOD] close [RETURN_TYPE] void   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P3_Replace_Literal]^_closed = false;^109^^^^^106^113^_closed = true;^[CLASS] TreeTraversingParser  [METHOD] close [RETURN_TYPE] void   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^_nodeCursor = this;^110^^^^^106^113^_nodeCursor = null;^[CLASS] TreeTraversingParser  [METHOD] close [RETURN_TYPE] void   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_currToken = null;_nodeCursor = null;^110^^^^^106^113^_nodeCursor = null;^[CLASS] TreeTraversingParser  [METHOD] close [RETURN_TYPE] void   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_nextToken = null;_nodeCursor = null;^110^^^^^106^113^_nodeCursor = null;^[CLASS] TreeTraversingParser  [METHOD] close [RETURN_TYPE] void   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^_currToken = false;^111^^^^^106^113^_currToken = null;^[CLASS] TreeTraversingParser  [METHOD] close [RETURN_TYPE] void   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_nextToken = null;_currToken = null;^111^^^^^106^113^_currToken = null;^[CLASS] TreeTraversingParser  [METHOD] close [RETURN_TYPE] void   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_nodeCursor = null;_currToken = null;^111^^^^^106^113^_currToken = null;^[CLASS] TreeTraversingParser  [METHOD] close [RETURN_TYPE] void   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_currToken = _nextToken;_currToken = null;^111^^^^^106^113^_currToken = null;^[CLASS] TreeTraversingParser  [METHOD] close [RETURN_TYPE] void   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P12_Insert_Condition]^if  ( _currToken != null )  { _currToken = null; }^111^^^^^106^113^_currToken = null;^[CLASS] TreeTraversingParser  [METHOD] close [RETURN_TYPE] void   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P12_Insert_Condition]^if  ( _closed || _nodeCursor == null )  { _closed = true; _nodeCursor = null; }^109^110^^^^106^113^_closed = true; _nodeCursor = null;^[CLASS] TreeTraversingParser  [METHOD] close [RETURN_TYPE] void   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^if  ( _nextToken == null )  {^124^^^^^109^139^if  ( _nextToken != null )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^if  ( _nextToken != true )  {^124^^^^^109^139^if  ( _nextToken != null )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( _nodeCursor != null )  {^124^^^^^109^139^if  ( _nextToken != null )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( _nodeCursor == null )  {^124^^^^^109^139^if  ( _nextToken != null )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( _currToken != null )  {^124^^^^^109^139^if  ( _nextToken != null )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( n != null )  {^124^^^^^109^139^if  ( _nextToken != null )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( data != null )  {^124^^^^^109^139^if  ( _nextToken != null )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P15_Unwrap_Block]^_currToken = _nextToken; _nextToken = null; return _currToken;^124^125^126^127^128^109^139^if  ( _nextToken != null )  { _currToken = _nextToken; _nextToken = null; return _currToken; }^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P16_Remove_Block]^^124^125^126^127^128^109^139^if  ( _nextToken != null )  { _currToken = _nextToken; _nextToken = null; return _currToken; }^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^_currToken  = null ;^125^^^^^110^140^_currToken = _nextToken;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_currToken = _nodeCursor.nextToken (  ) ;_currToken = _nextToken;^125^^^^^110^140^_currToken = _nextToken;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_currToken = JsonToken.END_ARRAY;_currToken = _nextToken;^125^^^^^110^140^_currToken = _nextToken;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_currToken = null;_currToken = _nextToken;^125^^^^^110^140^_currToken = _nextToken;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_currToken = JsonToken.END_OBJECT;_currToken = _nextToken;^125^^^^^110^140^_currToken = _nextToken;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_currToken = _nodeCursor.endToken (  ) ;_currToken = _nextToken;^125^^^^^110^140^_currToken = _nextToken;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^_nextToken = true;^126^^^^^111^141^_nextToken = null;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_currToken = null;_nextToken = null;^126^^^^^111^141^_nextToken = null;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_nodeCursor = null;_nextToken = null;^126^^^^^111^141^_nextToken = null;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P12_Insert_Condition]^if  ( _nextToken != null )  { _nextToken = null; }^126^^^^^111^141^_nextToken = null;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^_currToken  =  _currToken ;^125^^^^^110^140^_currToken = _nextToken;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^return this;^127^^^^^112^142^return _currToken;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^if  ( _closed )  {^130^^^^^115^145^if  ( _startContainer )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P6_Replace_Expression]^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^130^^^^^115^145^if  ( _startContainer )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P6_Replace_Expression]^if  ( _currToken == JsonToken.START_OBJECT )  {^130^^^^^115^145^if  ( _startContainer )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P6_Replace_Expression]^if  ( _currToken == JsonToken.START_ARRAY )  {^130^^^^^115^145^if  ( _startContainer )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^if  ( !_nodeCursor.iterateChildren (  )  )  {^133^^^^^118^148^if  ( !_nodeCursor.currentHasChildren (  )  )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P15_Unwrap_Block]^_currToken = ((_currToken) == (JsonToken.START_OBJECT)) ? JsonToken.END_OBJECT : JsonToken.END_ARRAY; return _currToken;^133^134^135^136^137^118^148^if  ( !_nodeCursor.currentHasChildren (  )  )  { _currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY; return _currToken; }^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P16_Remove_Block]^^133^134^135^136^137^118^148^if  ( !_nodeCursor.currentHasChildren (  )  )  { _currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY; return _currToken; }^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^_currToken =  ( _currToken != JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^134^135^^^^119^149^_currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^_currToken =  ( JsonToken.END_ARRAY == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : _currToken;^134^135^^^^119^149^_currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^_currToken =  ( JsonToken.START_OBJECT == _currToken )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^134^135^^^^119^149^_currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^_currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_ARRAY : JsonToken.END_OBJECT;^134^135^^^^119^149^_currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P6_Replace_Expression]^_currToken =  ( JsonToken.END_ARRAY;^134^135^^^^119^149^_currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^_currToken  =  _currToken ;^134^135^^^^119^149^_currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P13_Insert_Block]^if  ( ! ( _nodeCursor.currentHasChildren (  )  )  )  {     _currToken =  (  ( _currToken )  ==  ( JsonToken.START_OBJECT )  )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;     return _currToken; }^134^^^^^119^149^[Delete]^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^if  ( _currToken == JsonToken.START_OBJECT && _currToken == JsonToken.START_ARRAY )  {^140^^^^^125^155^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^if  ( _currToken >= JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^140^^^^^125^155^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^if  ( _currToken == JsonToken.START_OBJECT || _currToken != JsonToken.START_ARRAY )  {^140^^^^^125^155^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^if  ( _currToken == JsonToken.START_OBJECT || _currToken == this )  {^140^^^^^125^155^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^if  ( JsonToken.START_ARRAY == JsonToken.START_OBJECT || _currToken == _currToken )  {^140^^^^^125^155^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^if  ( _currToken == JsonToken.START_ARRAY || _currToken == JsonToken.START_OBJECT )  {^140^^^^^125^155^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P6_Replace_Expression]^if  ( _currToken == JsonToken.START_OBJECT ) {^140^^^^^125^155^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P6_Replace_Expression]^if  (  _currToken == JsonToken.START_ARRAY )  {^140^^^^^125^155^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P15_Unwrap_Block]^_startContainer = true;^140^141^142^^^125^155^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  { _startContainer = true; }^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P16_Remove_Block]^^140^141^142^^^125^155^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  { _startContainer = true; }^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P13_Insert_Block]^if  (  ( _currToken )  != null )  {     if  (  (  ( _currToken )  ==  ( JsonToken.START_OBJECT )  )  ||  (  ( _currToken )  ==  ( JsonToken.START_ARRAY )  )  )  {         _startContainer = true;     }     return _currToken; }^140^^^^^125^155^[Delete]^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P3_Replace_Literal]^_startContainer = false;^141^^^^^126^156^_startContainer = true;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_startContainer = false;_startContainer = true;^141^^^^^126^156^_startContainer = true;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P12_Insert_Condition]^if  ( _startContainer )  { _startContainer = true; }^141^^^^^126^156^_startContainer = true;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P3_Replace_Literal]^_startContainer = true;^131^^^^^116^146^_startContainer = false;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_startContainer = true;_startContainer = false;^131^^^^^116^146^_startContainer = false;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^_currToken =  ( _currToken >= JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^134^135^^^^119^149^_currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^_currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : 2;^134^135^^^^119^149^_currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^_currToken =  ( _currToken == JsonToken.END_ARRAY )  ? JsonToken.END_OBJECT : JsonToken.START_OBJECT;^134^135^^^^119^149^_currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^_currToken ;^134^135^^^^119^149^_currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^_nodeCursor = _nodeCursor.currentHasChildren (  ) ;^138^^^^^123^153^_nodeCursor = _nodeCursor.iterateChildren (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^_nodeCursor  = null ;^138^^^^^123^153^_nodeCursor = _nodeCursor.iterateChildren (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_currToken = _nodeCursor.nextToken (  ) ;_nodeCursor = _nodeCursor.iterateChildren (  ) ;^138^^^^^123^153^_nodeCursor = _nodeCursor.iterateChildren (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_nodeCursor = new NodeCursor.Object ( n, null ) ;_nodeCursor = _nodeCursor.iterateChildren (  ) ;^138^^^^^123^153^_nodeCursor = _nodeCursor.iterateChildren (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_nodeCursor = new NodeCursor.Array ( n, null ) ;_nodeCursor = _nodeCursor.iterateChildren (  ) ;^138^^^^^123^153^_nodeCursor = _nodeCursor.iterateChildren (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_nodeCursor = _nodeCursor.getParent (  ) ;_nodeCursor = _nodeCursor.iterateChildren (  ) ;^138^^^^^123^153^_nodeCursor = _nodeCursor.iterateChildren (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_nodeCursor = new NodeCursor.RootValue ( n, null ) ;_nodeCursor = _nodeCursor.iterateChildren (  ) ;^138^^^^^123^153^_nodeCursor = _nodeCursor.iterateChildren (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_currToken = _nodeCursor.endToken (  ) ;_nodeCursor = _nodeCursor.iterateChildren (  ) ;^138^^^^^123^153^_nodeCursor = _nodeCursor.iterateChildren (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^_currToken = _nodeCursor.endToken (  ) ;^139^^^^^124^154^_currToken = _nodeCursor.nextToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^_currToken ;^139^^^^^124^154^_currToken = _nodeCursor.nextToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_nodeCursor = _nodeCursor.iterateChildren (  ) ;_currToken = _nodeCursor.nextToken (  ) ;^139^^^^^124^154^_currToken = _nodeCursor.nextToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_nodeCursor = _nodeCursor.getParent (  ) ;_currToken = _nodeCursor.nextToken (  ) ;^139^^^^^124^154^_currToken = _nodeCursor.nextToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_currToken = _nextToken;_currToken = _nodeCursor.nextToken (  ) ;^139^^^^^124^154^_currToken = _nodeCursor.nextToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_currToken = _nodeCursor.endToken (  ) ;_currToken = _nodeCursor.nextToken (  ) ;^139^^^^^124^154^_currToken = _nodeCursor.nextToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^138^139^^^^123^153^_nodeCursor = _nodeCursor.iterateChildren (  ) ; _currToken = _nodeCursor.nextToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^return _nodeCursor.currentNode (  ) ;_nodeCursor = _nodeCursor.iterateChildren (  ) ;^138^^^^^123^153^_nodeCursor = _nodeCursor.iterateChildren (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^return _nodeCursor.getCurrentName (  ) ;_nodeCursor = _nodeCursor.iterateChildren (  ) ;^138^^^^^123^153^_nodeCursor = _nodeCursor.iterateChildren (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^139^^^^^124^154^_currToken = _nodeCursor.nextToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^return _nodeCursor.currentNode (  ) ;_currToken = _nodeCursor.nextToken (  ) ;^139^^^^^124^154^_currToken = _nodeCursor.nextToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^return _nodeCursor.getCurrentName (  ) ;_currToken = _nodeCursor.nextToken (  ) ;^139^^^^^124^154^_currToken = _nodeCursor.nextToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^_currToken =  ( _currToken <= JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^134^135^^^^119^149^_currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^_currToken =  ( JsonToken.END_OBJECT == JsonToken.START_OBJECT )  ? _currToken : JsonToken.END_ARRAY;^134^135^^^^119^149^_currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^_currToken =  ( _currToken == JsonToken.END_OBJECT )  ? JsonToken.START_OBJECT : JsonToken.END_ARRAY;^134^135^^^^119^149^_currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^if  ( _currToken != JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^140^^^^^125^155^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^if  ( _currToken == JsonToken.START_OBJECT || _currToken > JsonToken.START_ARRAY )  {^140^^^^^125^155^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^_currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : null;^134^135^^^^119^149^_currToken =  ( _currToken == JsonToken.START_OBJECT )  ? JsonToken.END_OBJECT : JsonToken.END_ARRAY;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^_currToken  =  _currToken ;^139^^^^^124^154^_currToken = _nodeCursor.nextToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^138^^^^^123^153^_nodeCursor = _nodeCursor.iterateChildren (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^if  ( _nodeCursor != null )  {^146^^^^^131^161^if  ( _nodeCursor == null )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^if  ( _nodeCursor == this )  {^146^^^^^131^161^if  ( _nodeCursor == null )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( _closed || _nodeCursor == null )  {^146^^^^^131^161^if  ( _nodeCursor == null )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( _currToken != null )  {^146^^^^^131^161^if  ( _nodeCursor == null )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( _nextToken != null )  {^146^^^^^131^161^if  ( _nodeCursor == null )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P15_Unwrap_Block]^_closed = true; return null;^146^147^148^149^^131^161^if  ( _nodeCursor == null )  { _closed = true; return null; }^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P16_Remove_Block]^^146^147^148^149^^131^161^if  ( _nodeCursor == null )  { _closed = true; return null; }^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P13_Insert_Block]^if  (  ( _nodeCursor )  != null )  {     _nodeCursor.overrideCurrentName ( name ) ; }^146^^^^^131^161^[Delete]^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P3_Replace_Literal]^_closed = false;^147^^^^^132^162^_closed = true;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^return true;^148^^^^^133^163^return null;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^return false;^148^^^^^133^163^return null;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^_currToken = _nodeCursor.endToken (  ) ;^151^^^^^136^166^_currToken = _nodeCursor.nextToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^_currToken  =  _currToken ;^151^^^^^136^166^_currToken = _nodeCursor.nextToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_nodeCursor = _nodeCursor.iterateChildren (  ) ;_currToken = _nodeCursor.nextToken (  ) ;^151^^^^^136^166^_currToken = _nodeCursor.nextToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_nodeCursor = _nodeCursor.getParent (  ) ;_currToken = _nodeCursor.nextToken (  ) ;^151^^^^^136^166^_currToken = _nodeCursor.nextToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_currToken = _nextToken;_currToken = _nodeCursor.nextToken (  ) ;^151^^^^^136^166^_currToken = _nodeCursor.nextToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_currToken = _nodeCursor.endToken (  ) ;_currToken = _nodeCursor.nextToken (  ) ;^151^^^^^136^166^_currToken = _nodeCursor.nextToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^151^^^^^136^166^_currToken = _nodeCursor.nextToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^return _nodeCursor.currentNode (  ) ;_currToken = _nodeCursor.nextToken (  ) ;^151^^^^^136^166^_currToken = _nodeCursor.nextToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^return _nodeCursor.getCurrentName (  ) ;_currToken = _nodeCursor.nextToken (  ) ;^151^^^^^136^166^_currToken = _nodeCursor.nextToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^if  ( _currToken == null )  {^152^^^^^137^167^if  ( _currToken != null )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P6_Replace_Expression]^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^152^^^^^137^167^if  ( _currToken != null )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P6_Replace_Expression]^if  ( _currToken == JsonToken.START_OBJECT )  {^152^^^^^137^167^if  ( _currToken != null )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P6_Replace_Expression]^if  ( _currToken == JsonToken.START_ARRAY )  {^152^^^^^137^167^if  ( _currToken != null )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^if  ( _currToken != true )  {^152^^^^^137^167^if  ( _currToken != null )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( _nodeCursor != null )  {^152^^^^^137^167^if  ( _currToken != null )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( _nodeCursor == null )  {^152^^^^^137^167^if  ( _currToken != null )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( n != null )  {^152^^^^^137^167^if  ( _currToken != null )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( _nextToken != null )  {^152^^^^^137^167^if  ( _currToken != null )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( data != null )  {^152^^^^^137^167^if  ( _currToken != null )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P15_Unwrap_Block]^if (((_currToken) == (JsonToken.START_OBJECT)) || ((_currToken) == (JsonToken.START_ARRAY))) {    _startContainer = true;}; return _currToken;^152^153^154^155^^137^167^if  ( _currToken != null )  { if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  { _startContainer = true; }^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P16_Remove_Block]^^152^153^154^155^^137^167^if  ( _currToken != null )  { if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  { _startContainer = true; }^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P13_Insert_Block]^if  (  ( _currToken )  ==  ( JsonToken.START_OBJECT )  )  {     _startContainer = false;     _currToken = JsonToken.END_OBJECT; }else     if  (  ( _currToken )  ==  ( JsonToken.START_ARRAY )  )  {         _startContainer = false;         _currToken = JsonToken.END_ARRAY;     }^152^^^^^137^167^[Delete]^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P13_Insert_Block]^if  (  (  ( _currToken )  ==  ( JsonToken.START_OBJECT )  )  ||  (  ( _currToken )  ==  ( JsonToken.START_ARRAY )  )  )  {     _startContainer = true; }^152^^^^^137^167^[Delete]^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^if  ( _currToken == JsonToken.START_OBJECT && _currToken == JsonToken.START_ARRAY )  {^153^^^^^138^168^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^if  ( _currToken != JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^153^^^^^138^168^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^if  ( _currToken == JsonToken.START_OBJECT || _currToken >= JsonToken.START_ARRAY )  {^153^^^^^138^168^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^if  ( 1 == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^153^^^^^138^168^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^if  ( JsonToken.START_OBJECT == _currToken || _currToken == JsonToken.START_ARRAY )  {^153^^^^^138^168^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^if  ( JsonToken.START_ARRAY == JsonToken.START_OBJECT || _currToken == _currToken )  {^153^^^^^138^168^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P6_Replace_Expression]^if  ( _currToken == JsonToken.START_OBJECT ) {^153^^^^^138^168^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P6_Replace_Expression]^if  (  _currToken == JsonToken.START_ARRAY )  {^153^^^^^138^168^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P15_Unwrap_Block]^_startContainer = true;^153^154^155^^^138^168^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  { _startContainer = true; }^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P16_Remove_Block]^^153^154^155^^^138^168^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  { _startContainer = true; }^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P13_Insert_Block]^if  (  ( _currToken )  != null )  {     if  (  (  ( _currToken )  ==  ( JsonToken.START_OBJECT )  )  ||  (  ( _currToken )  ==  ( JsonToken.START_ARRAY )  )  )  {         _startContainer = true;     }     return _currToken; }^153^^^^^138^168^[Delete]^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P3_Replace_Literal]^_startContainer = false;^154^^^^^139^169^_startContainer = true;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_startContainer = false;_startContainer = true;^154^^^^^139^169^_startContainer = true;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P12_Insert_Condition]^if  ( _startContainer )  { _startContainer = true; }^154^^^^^139^169^_startContainer = true;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^if  ( _currToken == JsonToken.START_OBJECT || _currToken != JsonToken.START_ARRAY )  {^153^^^^^138^168^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^if  ( _currToken == JsonToken.START_ARRAY || _currToken == JsonToken.START_OBJECT )  {^153^^^^^138^168^if  ( _currToken == JsonToken.START_OBJECT || _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^_currToken = _nodeCursor.nextToken (  ) ;^159^^^^^144^174^_currToken = _nodeCursor.endToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^_currToken  = null ;^159^^^^^144^174^_currToken = _nodeCursor.endToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_currToken = _nodeCursor.nextToken (  ) ;_currToken = _nodeCursor.endToken (  ) ;^159^^^^^144^174^_currToken = _nodeCursor.endToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_nodeCursor = _nodeCursor.iterateChildren (  ) ;_currToken = _nodeCursor.endToken (  ) ;^159^^^^^144^174^_currToken = _nodeCursor.endToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_nodeCursor = _nodeCursor.getParent (  ) ;_currToken = _nodeCursor.endToken (  ) ;^159^^^^^144^174^_currToken = _nodeCursor.endToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_currToken = _nextToken;_currToken = _nodeCursor.endToken (  ) ;^159^^^^^144^174^_currToken = _nodeCursor.endToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^159^^^^^144^174^_currToken = _nodeCursor.endToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^return _nodeCursor.currentNode (  ) ;_currToken = _nodeCursor.endToken (  ) ;^159^^^^^144^174^_currToken = _nodeCursor.endToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^_nodeCursor = _nodeCursor.nextToken (  ) ;^160^^^^^145^175^_nodeCursor = _nodeCursor.getParent (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^_nodeCursor  =  _nodeCursor ;^160^^^^^145^175^_nodeCursor = _nodeCursor.getParent (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_currToken = _nodeCursor.nextToken (  ) ;_nodeCursor = _nodeCursor.getParent (  ) ;^160^^^^^145^175^_nodeCursor = _nodeCursor.getParent (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_nodeCursor = new NodeCursor.Object ( n, null ) ;_nodeCursor = _nodeCursor.getParent (  ) ;^160^^^^^145^175^_nodeCursor = _nodeCursor.getParent (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_nodeCursor = new NodeCursor.Array ( n, null ) ;_nodeCursor = _nodeCursor.getParent (  ) ;^160^^^^^145^175^_nodeCursor = _nodeCursor.getParent (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_nodeCursor = _nodeCursor.iterateChildren (  ) ;_nodeCursor = _nodeCursor.getParent (  ) ;^160^^^^^145^175^_nodeCursor = _nodeCursor.getParent (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_nodeCursor = new NodeCursor.RootValue ( n, null ) ;_nodeCursor = _nodeCursor.getParent (  ) ;^160^^^^^145^175^_nodeCursor = _nodeCursor.getParent (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_currToken = _nodeCursor.endToken (  ) ;_nodeCursor = _nodeCursor.getParent (  ) ;^160^^^^^145^175^_nodeCursor = _nodeCursor.getParent (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^160^^^^^145^175^_nodeCursor = _nodeCursor.getParent (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^return _nodeCursor.currentNode (  ) ;_nodeCursor = _nodeCursor.getParent (  ) ;^160^^^^^145^175^_nodeCursor = _nodeCursor.getParent (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^return  ( _nodeCursor == null )  ? null : _nodeCursor.getCurrentName (  ) ;_nodeCursor = _nodeCursor.getParent (  ) ;^160^^^^^145^175^_nodeCursor = _nodeCursor.getParent (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_nodeCursor.overrideCurrentName ( name ) ;_nodeCursor = _nodeCursor.getParent (  ) ;^160^^^^^145^175^_nodeCursor = _nodeCursor.getParent (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^return _nodeCursor.getCurrentName (  ) ;_nodeCursor = _nodeCursor.getParent (  ) ;^160^^^^^145^175^_nodeCursor = _nodeCursor.getParent (  ) ;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^return 0;^161^^^^^146^176^return _currToken;^[CLASS] TreeTraversingParser  [METHOD] nextToken [RETURN_TYPE] JsonToken   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^if  ( _currToken != JsonToken.START_OBJECT )  {^170^^^^^168^178^if  ( _currToken == JsonToken.START_OBJECT )  {^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^if  ( _currToken <= JsonToken.START_OBJECT )  {^170^^^^^168^178^if  ( _currToken == JsonToken.START_OBJECT )  {^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P6_Replace_Expression]^if  ( _currToken == JsonToken.START_ARRAY )  {^170^^^^^168^178^if  ( _currToken == JsonToken.START_OBJECT )  {^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P13_Insert_Block]^if  (  ( _currToken )  != null )  {     if  (  (  ( _currToken )  ==  ( JsonToken.START_OBJECT )  )  ||  (  ( _currToken )  ==  ( JsonToken.START_ARRAY )  )  )  {         _startContainer = true;     }     return _currToken; }^170^^^^^168^178^[Delete]^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^} else if  ( _currToken != JsonToken.START_ARRAY )  {^173^^^^^168^178^} else if  ( _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^} else if  ( 1 == JsonToken.START_ARRAY )  {^173^^^^^168^178^} else if  ( _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P6_Replace_Expression]^} else {^173^^^^^168^178^} else if  ( _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P15_Unwrap_Block]^_startContainer = false; _currToken = JsonToken.END_ARRAY;^173^174^175^176^^168^178^} else if  ( _currToken == JsonToken.START_ARRAY )  { _startContainer = false; _currToken = JsonToken.END_ARRAY; }^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P16_Remove_Block]^^173^174^175^176^^168^178^} else if  ( _currToken == JsonToken.START_ARRAY )  { _startContainer = false; _currToken = JsonToken.END_ARRAY; }^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P3_Replace_Literal]^_startContainer = true;^174^^^^^168^178^_startContainer = false;^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_startContainer = true;_startContainer = false;^174^^^^^168^178^_startContainer = false;^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^_currToken  =  _currToken ;^175^^^^^168^178^_currToken = JsonToken.END_ARRAY;^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_nextToken = JsonToken.START_ARRAY;_currToken = JsonToken.END_ARRAY;^175^^^^^168^178^_currToken = JsonToken.END_ARRAY;^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_currToken = JsonToken.END_OBJECT;_currToken = JsonToken.END_ARRAY;^175^^^^^168^178^_currToken = JsonToken.END_ARRAY;^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_nextToken = JsonToken.START_OBJECT;_currToken = JsonToken.END_ARRAY;^175^^^^^168^178^_currToken = JsonToken.END_ARRAY;^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_currToken = _nextToken;_currToken = JsonToken.END_ARRAY;^175^^^^^168^178^_currToken = JsonToken.END_ARRAY;^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^_currToken ;^175^^^^^168^178^_currToken = JsonToken.END_ARRAY;^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P3_Replace_Literal]^_startContainer = true;^171^^^^^168^178^_startContainer = false;^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_startContainer = true;_startContainer = false;^171^^^^^168^178^_startContainer = false;^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^_currToken  = null ;^172^^^^^168^178^_currToken = JsonToken.END_OBJECT;^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_currToken = JsonToken.END_ARRAY;_currToken = JsonToken.END_OBJECT;^172^^^^^168^178^_currToken = JsonToken.END_OBJECT;^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_nextToken = JsonToken.START_ARRAY;_currToken = JsonToken.END_OBJECT;^172^^^^^168^178^_currToken = JsonToken.END_OBJECT;^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_nextToken = JsonToken.START_OBJECT;_currToken = JsonToken.END_OBJECT;^172^^^^^168^178^_currToken = JsonToken.END_OBJECT;^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^_currToken = _nextToken;_currToken = JsonToken.END_OBJECT;^172^^^^^168^178^_currToken = JsonToken.END_OBJECT;^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P12_Insert_Condition]^if  ( _currToken == JsonToken.START_OBJECT )  { _currToken = JsonToken.END_OBJECT; }^172^^^^^168^178^_currToken = JsonToken.END_OBJECT;^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^} else if  ( _currToken > JsonToken.START_ARRAY )  {^173^^^^^168^178^} else if  ( _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^} else if  ( _currToken == 1 )  {^173^^^^^168^178^} else if  ( _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^} else if  ( JsonToken.START_ARRAY == _currToken )  {^173^^^^^168^178^} else if  ( _currToken == JsonToken.START_ARRAY )  {^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^_currToken ;^172^^^^^168^178^_currToken = JsonToken.END_OBJECT;^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^_currToken  = null ;^175^^^^^168^178^_currToken = JsonToken.END_ARRAY;^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^return null;^177^^^^^168^178^return this;^[CLASS] TreeTraversingParser  [METHOD] skipChildren [RETURN_TYPE] JsonParser   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^return _startContainer;^182^^^^^181^183^return _closed;^[CLASS] TreeTraversingParser  [METHOD] isClosed [RETURN_TYPE] boolean   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^return  ( _nodeCursor != null )  ? null : _nodeCursor.getCurrentName (  ) ;^193^^^^^192^194^return  ( _nodeCursor == null )  ? null : _nodeCursor.getCurrentName (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getCurrentName [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P6_Replace_Expression]^return  ( _nodeCursor.getCurrentName (  ) ;^193^^^^^192^194^return  ( _nodeCursor == null )  ? null : _nodeCursor.getCurrentName (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getCurrentName [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return  ( _nodeCursor == null )  ? null : _nodeCursor.currentNode (  ) ;^193^^^^^192^194^return  ( _nodeCursor == null )  ? null : _nodeCursor.getCurrentName (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getCurrentName [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^193^^^^^192^194^return  ( _nodeCursor == null )  ? null : _nodeCursor.getCurrentName (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getCurrentName [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^if  ( _nodeCursor == null )  {^199^^^^^197^202^if  ( _nodeCursor != null )  {^[CLASS] TreeTraversingParser  [METHOD] overrideCurrentName [RETURN_TYPE] void   String name [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  String  name  
[P8_Replace_Mix]^if  ( _nodeCursor != false )  {^199^^^^^197^202^if  ( _nodeCursor != null )  {^[CLASS] TreeTraversingParser  [METHOD] overrideCurrentName [RETURN_TYPE] void   String name [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  String  name  
[P9_Replace_Statement]^if  ( _closed || _nodeCursor == null )  {^199^^^^^197^202^if  ( _nodeCursor != null )  {^[CLASS] TreeTraversingParser  [METHOD] overrideCurrentName [RETURN_TYPE] void   String name [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  String  name  
[P9_Replace_Statement]^if  ( _currToken != null )  {^199^^^^^197^202^if  ( _nodeCursor != null )  {^[CLASS] TreeTraversingParser  [METHOD] overrideCurrentName [RETURN_TYPE] void   String name [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  String  name  
[P9_Replace_Statement]^if  ( n != null )  {^199^^^^^197^202^if  ( _nodeCursor != null )  {^[CLASS] TreeTraversingParser  [METHOD] overrideCurrentName [RETURN_TYPE] void   String name [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  String  name  
[P9_Replace_Statement]^if  ( _nextToken != null )  {^199^^^^^197^202^if  ( _nodeCursor != null )  {^[CLASS] TreeTraversingParser  [METHOD] overrideCurrentName [RETURN_TYPE] void   String name [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  String  name  
[P9_Replace_Statement]^if  ( data != null )  {^199^^^^^197^202^if  ( _nodeCursor != null )  {^[CLASS] TreeTraversingParser  [METHOD] overrideCurrentName [RETURN_TYPE] void   String name [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  String  name  
[P15_Unwrap_Block]^_nodeCursor.overrideCurrentName(name);^199^200^201^^^197^202^if  ( _nodeCursor != null )  { _nodeCursor.overrideCurrentName ( name ) ; }^[CLASS] TreeTraversingParser  [METHOD] overrideCurrentName [RETURN_TYPE] void   String name [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  String  name  
[P16_Remove_Block]^^199^200^201^^^197^202^if  ( _nodeCursor != null )  { _nodeCursor.overrideCurrentName ( name ) ; }^[CLASS] TreeTraversingParser  [METHOD] overrideCurrentName [RETURN_TYPE] void   String name [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  String  name  
[P13_Insert_Block]^if  (  ( _nodeCursor )  == null )  {     _closed = true;     return null; }^199^^^^^197^202^[Delete]^[CLASS] TreeTraversingParser  [METHOD] overrideCurrentName [RETURN_TYPE] void   String name [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  String  name  
[P8_Replace_Mix]^_nodeCursor .getCurrentName (  )  ;^200^^^^^197^202^_nodeCursor.overrideCurrentName ( name ) ;^[CLASS] TreeTraversingParser  [METHOD] overrideCurrentName [RETURN_TYPE] void   String name [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  String  name  
[P14_Delete_Statement]^^200^^^^^197^202^_nodeCursor.overrideCurrentName ( name ) ;^[CLASS] TreeTraversingParser  [METHOD] overrideCurrentName [RETURN_TYPE] void   String name [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  String  name  
[P11_Insert_Donor_Statement]^_nodeCursor = _nodeCursor.getParent (  ) ;_nodeCursor.overrideCurrentName ( name ) ;^200^^^^^197^202^_nodeCursor.overrideCurrentName ( name ) ;^[CLASS] TreeTraversingParser  [METHOD] overrideCurrentName [RETURN_TYPE] void   String name [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  String  name  
[P11_Insert_Donor_Statement]^return _nodeCursor.getCurrentName (  ) ;_nodeCursor.overrideCurrentName ( name ) ;^200^^^^^197^202^_nodeCursor.overrideCurrentName ( name ) ;^[CLASS] TreeTraversingParser  [METHOD] overrideCurrentName [RETURN_TYPE] void   String name [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  String  name  
[P13_Insert_Block]^if  (  ( _nodeCursor )  != null )  {     _nodeCursor.overrideCurrentName ( name ) ; }^200^^^^^197^202^[Delete]^[CLASS] TreeTraversingParser  [METHOD] overrideCurrentName [RETURN_TYPE] void   String name [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  String  name  
[P8_Replace_Mix]^return this;^216^^^^^215^217^return JsonLocation.NA;^[CLASS] TreeTraversingParser  [METHOD] getCurrentLocation [RETURN_TYPE] JsonLocation   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^if  ( _startContainer )  {^228^^^^^226^249^if  ( _closed )  {^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( !_closed )  {^228^^^^^226^249^if  ( _closed )  {^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P15_Unwrap_Block]^return null;^228^229^230^^^226^249^if  ( _closed )  { return null; }^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P16_Remove_Block]^^228^229^230^^^226^249^if  ( _closed )  { return null; }^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P13_Insert_Block]^if  (  ( _closed )  ||  (  ( _nodeCursor )  == null )  )  {     return null; }^228^^^^^226^249^[Delete]^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P13_Insert_Block]^if  ( data != null )  {     return data; }^228^^^^^226^249^[Delete]^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^return true;^229^^^^^226^249^return null;^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^if  ( n != null || n.isBinary (  )  )  {^242^^^^^226^249^if  ( n != null && n.isBinary (  )  )  {^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^if  ( n == null && n.isBinary (  )  )  {^242^^^^^226^249^if  ( n != null && n.isBinary (  )  )  {^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P6_Replace_Expression]^if  ( n != null ) {^242^^^^^226^249^if  ( n != null && n.isBinary (  )  )  {^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P6_Replace_Expression]^if  (  n.isBinary (  )  )  {^242^^^^^226^249^if  ( n != null && n.isBinary (  )  )  {^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^if  ( n != null && n .isArray (  )   )  {^242^^^^^226^249^if  ( n != null && n.isBinary (  )  )  {^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^if  ( n != false ) {^242^^^^^226^249^if  ( n != null && n.isBinary (  )  )  {^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( n == null || !n.isNumber (  )  )  {^242^^^^^226^249^if  ( n != null && n.isBinary (  )  )  {^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P15_Unwrap_Block]^return n.asText();^242^243^244^245^^226^249^if  ( n != null && n.isBinary (  )  )  {  return n.asText (  ) ; }^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P16_Remove_Block]^^242^243^244^245^^226^249^if  ( n != null && n.isBinary (  )  )  {  return n.asText (  ) ; }^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return n .asToken (  )  ;^244^^^^^226^249^return n.asText (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^244^^^^^226^249^return n.asText (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return _nodeCursor.currentNode (  ) ;^234^^^^^226^249^return _nodeCursor.getCurrentName (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return currentNode (  ) .intValue (  ) ;^236^^^^^226^249^return currentNode (  ) .textValue (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return currentNumericNode (  ) .textValue (  ) ;^236^^^^^226^249^return currentNode (  ) .textValue (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return String.length ( currentNode (  ) .numberValue (  )  ) ;^239^^^^^226^249^return String.valueOf ( currentNode (  ) .numberValue (  )  ) ;^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return String.valueOf ( currentNode (  ) .numberType (  )  ) ;^239^^^^^226^249^return String.valueOf ( currentNode (  ) .numberValue (  )  ) ;^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return String.valueOf ( currentNumericNode (  ) .numberValue (  )  ) ;^239^^^^^226^249^return String.valueOf ( currentNode (  ) .numberValue (  )  ) ;^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^return  ( _currToken != null )  ? null : _currToken.asString (  ) ;^247^^^^^226^249^return  ( _currToken == null )  ? null : _currToken.asString (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P6_Replace_Expression]^return  ( _currToken.asString (  ) ;^247^^^^^226^249^return  ( _currToken == null )  ? null : _currToken.asString (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^return _currToken.asString (  ) ;^247^^^^^226^249^return  ( _currToken == null )  ? null : _currToken.asString (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^JsonNode n = currentNumericNode (  ) ;^241^^^^^226^249^JsonNode n = currentNode (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^JsonNode n = currentNumericNode (  ) ;JsonNode n = currentNode (  ) ;^241^^^^^226^249^JsonNode n = currentNode (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^234^^^^^226^249^return _nodeCursor.getCurrentName (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^236^^^^^226^249^return currentNode (  ) .textValue (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^return String .toCharArray (  )   ) ;^239^^^^^226^249^return String.valueOf ( currentNode (  ) .numberValue (  )  ) ;^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^239^^^^^226^249^return String.valueOf ( currentNode (  ) .numberValue (  )  ) ;^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^241^^^^^226^249^JsonNode n = currentNode (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^return _nodeCursor.currentNode (  ) ;JsonNode n = currentNode (  ) ;^241^^^^^226^249^JsonNode n = currentNode (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^return _nodeCursor.getCurrentName (  ) ;JsonNode n = currentNode (  ) ;^241^^^^^226^249^JsonNode n = currentNode (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^247^^^^^226^249^return  ( _currToken == null )  ? null : _currToken.asString (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getText [RETURN_TYPE] String   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return getText (  ) .length (  ) ;^253^^^^^252^254^return getText (  ) .toCharArray (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getTextCharacters [RETURN_TYPE] char[]   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return currentNode (  ) .toCharArray (  ) ;^253^^^^^252^254^return getText (  ) .toCharArray (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getTextCharacters [RETURN_TYPE] char[]   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^253^^^^^252^254^return getText (  ) .toCharArray (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getTextCharacters [RETURN_TYPE] char[]   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P3_Replace_Literal]^return getText (  ) .length() - 4 ;^258^^^^^257^259^return getText (  ) .length (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getTextLength [RETURN_TYPE] int   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return getText (  ) .toCharArray (  ) ;^258^^^^^257^259^return getText (  ) .length (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getTextLength [RETURN_TYPE] int   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return currentNode (  ) .length (  ) ;^258^^^^^257^259^return getText (  ) .length (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getTextLength [RETURN_TYPE] int   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P3_Replace_Literal]^return getText (  ) .length() - 3 ;^258^^^^^257^259^return getText (  ) .length (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getTextLength [RETURN_TYPE] int   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^258^^^^^257^259^return getText (  ) .length (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getTextLength [RETURN_TYPE] int   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P3_Replace_Literal]^return getText (  ) .length() - 1 ;^258^^^^^257^259^return getText (  ) .length (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getTextLength [RETURN_TYPE] int   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P3_Replace_Literal]^return null;^263^^^^^262^264^return 0;^[CLASS] TreeTraversingParser  [METHOD] getTextOffset [RETURN_TYPE] int   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^return 0 + 3;^263^^^^^262^264^return 0;^[CLASS] TreeTraversingParser  [METHOD] getTextOffset [RETURN_TYPE] int   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P3_Replace_Literal]^return true;^269^^^^^267^270^return false;^[CLASS] TreeTraversingParser  [METHOD] hasTextCharacters [RETURN_TYPE] boolean   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^JsonNode n = currentNode (  ) ;^282^^^^^281^284^JsonNode n = currentNumericNode (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getNumberType [RETURN_TYPE] NumberType   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^JsonNode n = currentNode (  ) ;JsonNode n = currentNumericNode (  ) ;^282^^^^^281^284^JsonNode n = currentNumericNode (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getNumberType [RETURN_TYPE] NumberType   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^282^283^^^^281^284^JsonNode n = currentNumericNode (  ) ; return  ( n == null )  ? null : n.numberType (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getNumberType [RETURN_TYPE] NumberType   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^return  ( n != null )  ? null : n.numberType (  ) ;^283^^^^^281^284^return  ( n == null )  ? null : n.numberType (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getNumberType [RETURN_TYPE] NumberType   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P6_Replace_Expression]^return  ( n.numberType (  ) ;^283^^^^^281^284^return  ( n == null )  ? null : n.numberType (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getNumberType [RETURN_TYPE] NumberType   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return  ( n == null )  ? null : n .numberValue (  )  ;^283^^^^^281^284^return  ( n == null )  ? null : n.numberType (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getNumberType [RETURN_TYPE] NumberType   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^return n.numberType (  ) ;^283^^^^^281^284^return  ( n == null )  ? null : n.numberType (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getNumberType [RETURN_TYPE] NumberType   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P12_Insert_Condition]^if  ( n == null || !n.isNumber (  )  )  { return  ( n == null )  ? null : n.numberType (  ) ; }^283^^^^^281^284^return  ( n == null )  ? null : n.numberType (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getNumberType [RETURN_TYPE] NumberType   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^283^^^^^281^284^return  ( n == null )  ? null : n.numberType (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getNumberType [RETURN_TYPE] NumberType   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return currentNumericNode (  ) .numberValue (  ) ;^289^^^^^287^290^return currentNumericNode (  ) .bigIntegerValue (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getBigIntegerValue [RETURN_TYPE] BigInteger   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return currentNode (  ) .bigIntegerValue (  ) ;^289^^^^^287^290^return currentNumericNode (  ) .bigIntegerValue (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getBigIntegerValue [RETURN_TYPE] BigInteger   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^289^^^^^287^290^return currentNumericNode (  ) .bigIntegerValue (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getBigIntegerValue [RETURN_TYPE] BigInteger   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return currentNumericNode (  ) .textValue (  ) ;^294^^^^^293^295^return currentNumericNode (  ) .decimalValue (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getDecimalValue [RETURN_TYPE] BigDecimal   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return currentNode (  ) .decimalValue (  ) ;^294^^^^^293^295^return currentNumericNode (  ) .decimalValue (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getDecimalValue [RETURN_TYPE] BigDecimal   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^294^^^^^293^295^return currentNumericNode (  ) .decimalValue (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getDecimalValue [RETURN_TYPE] BigDecimal   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return currentNumericNode (  ) .numberValue (  ) ;^299^^^^^298^300^return currentNumericNode (  ) .doubleValue (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getDoubleValue [RETURN_TYPE] double   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return currentNode (  ) .doubleValue (  ) ;^299^^^^^298^300^return currentNumericNode (  ) .doubleValue (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getDoubleValue [RETURN_TYPE] double   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^299^^^^^298^300^return currentNumericNode (  ) .doubleValue (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getDoubleValue [RETURN_TYPE] double   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P1_Replace_Type]^return  ( int )  currentNumericNode (  ) .doubleValue (  ) ;^304^^^^^303^305^return  ( float )  currentNumericNode (  ) .doubleValue (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getFloatValue [RETURN_TYPE] float   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return  ( float )  currentNumericNode (  ) .numberValue (  ) ;^304^^^^^303^305^return  ( float )  currentNumericNode (  ) .doubleValue (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getFloatValue [RETURN_TYPE] float   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return  ( float )  currentNode (  ) .doubleValue (  ) ;^304^^^^^303^305^return  ( float )  currentNumericNode (  ) .doubleValue (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getFloatValue [RETURN_TYPE] float   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^304^^^^^303^305^return  ( float )  currentNumericNode (  ) .doubleValue (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getFloatValue [RETURN_TYPE] float   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return currentNumericNode (  ) .intValue (  ) ;^309^^^^^308^310^return currentNumericNode (  ) .longValue (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getLongValue [RETURN_TYPE] long   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return currentNode (  ) .longValue (  ) ;^309^^^^^308^310^return currentNumericNode (  ) .longValue (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getLongValue [RETURN_TYPE] long   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^309^^^^^308^310^return currentNumericNode (  ) .longValue (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getLongValue [RETURN_TYPE] long   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return currentNumericNode (  ) .textValue (  ) ;^314^^^^^313^315^return currentNumericNode (  ) .intValue (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getIntValue [RETURN_TYPE] int   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return currentNode (  ) .intValue (  ) ;^314^^^^^313^315^return currentNumericNode (  ) .intValue (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getIntValue [RETURN_TYPE] int   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^314^^^^^313^315^return currentNumericNode (  ) .intValue (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getIntValue [RETURN_TYPE] int   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return currentNumericNode (  ) .numberType (  ) ;^319^^^^^318^320^return currentNumericNode (  ) .numberValue (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getNumberValue [RETURN_TYPE] Number   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return currentNode (  ) .numberValue (  ) ;^319^^^^^318^320^return currentNumericNode (  ) .numberValue (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getNumberValue [RETURN_TYPE] Number   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^319^^^^^318^320^return currentNumericNode (  ) .numberValue (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getNumberValue [RETURN_TYPE] Number   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^if  ( !_startContainer )  {^325^^^^^323^337^if  ( !_closed )  {^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( _closed )  {^325^^^^^323^337^if  ( !_closed )  {^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P15_Unwrap_Block]^com.fasterxml.jackson.databind.JsonNode n = currentNode(); if (n != null) {    if (n.isPojo()) {        return ((com.fasterxml.jackson.databind.node.POJONode) (n)).getPojo();    }    if (n.isBinary()) {        return ((com.fasterxml.jackson.databind.node.BinaryNode) (n)).binaryValue();    }};^325^326^327^328^329^323^337^if  ( !_closed )  { JsonNode n = currentNode (  ) ; if  ( n != null )  { if  ( n.isPojo (  )  )  { return  (  ( POJONode )  n ) .getPojo (  ) ; }^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P16_Remove_Block]^^325^326^327^328^329^323^337^if  ( !_closed )  { JsonNode n = currentNode (  ) ; if  ( n != null )  { if  ( n.isPojo (  )  )  { return  (  ( POJONode )  n ) .getPojo (  ) ; }^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^if  ( n == null )  {^327^^^^^323^337^if  ( n != null )  {^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^if  ( n != this )  {^327^^^^^323^337^if  ( n != null )  {^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( _nodeCursor != null )  {^327^^^^^323^337^if  ( n != null )  {^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( _currToken != null )  {^327^^^^^323^337^if  ( n != null )  {^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( _nextToken != null )  {^327^^^^^323^337^if  ( n != null )  {^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( data != null )  {^327^^^^^323^337^if  ( n != null )  {^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P15_Unwrap_Block]^if (n.isPojo()) {    return ((com.fasterxml.jackson.databind.node.POJONode) (n)).getPojo();}; if (n.isBinary()) {    return ((com.fasterxml.jackson.databind.node.BinaryNode) (n)).binaryValue();};^327^328^329^330^^323^337^if  ( n != null )  { if  ( n.isPojo (  )  )  { return  (  ( POJONode )  n ) .getPojo (  ) ; }^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P16_Remove_Block]^^327^328^329^330^^323^337^if  ( n != null )  { if  ( n.isPojo (  )  )  { return  (  ( POJONode )  n ) .getPojo (  ) ; }^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^if  ( n .isObject (  )   )  {^328^^^^^323^337^if  ( n.isPojo (  )  )  {^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( n.isArray (  )  )  {^328^^^^^323^337^if  ( n.isPojo (  )  )  {^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( n.isBinary (  )  )  {^328^^^^^323^337^if  ( n.isPojo (  )  )  {^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P15_Unwrap_Block]^return ((com.fasterxml.jackson.databind.node.POJONode) (n)).getPojo();^328^329^330^^^323^337^if  ( n.isPojo (  )  )  { return  (  ( POJONode )  n ) .getPojo (  ) ; }^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P16_Remove_Block]^^328^329^330^^^323^337^if  ( n.isPojo (  )  )  { return  (  ( POJONode )  n ) .getPojo (  ) ; }^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P13_Insert_Block]^if  ( n.isBinary (  )  )  {     return  (  ( BinaryNode )   ( n )  ) .binaryValue (  ) ; }^328^^^^^323^337^[Delete]^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P13_Insert_Block]^if  ( n.isPojo (  )  )  {     Object ob =  (  ( POJONode )   ( n )  ) .getPojo (  ) ;     if  ( ob instanceof byte[] )  {         return  (  ( byte[] )   ( ob )  ) ;     } }^328^^^^^323^337^[Delete]^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return  (  ( POJONode )  n ) ._constructError (  ) ;^329^^^^^323^337^return  (  ( POJONode )  n ) .getPojo (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P13_Insert_Block]^if  ( n.isPojo (  )  )  {     return  (  ( POJONode )   ( n )  ) .getPojo (  ) ; }^329^^^^^323^337^[Delete]^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P13_Insert_Block]^if  ( n.isBinary (  )  )  {     return  (  ( BinaryNode )   ( n )  ) .binaryValue (  ) ; }^329^^^^^323^337^[Delete]^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^329^^^^^323^337^return  (  ( POJONode )  n ) .getPojo (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( n.isPojo (  )  )  {^331^^^^^323^337^if  ( n.isBinary (  )  )  {^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( n.isArray (  )  )  {^331^^^^^323^337^if  ( n.isBinary (  )  )  {^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( n != null && n.isBinary (  )  )  {^331^^^^^323^337^if  ( n.isBinary (  )  )  {^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P15_Unwrap_Block]^return ((com.fasterxml.jackson.databind.node.BinaryNode) (n)).binaryValue();^331^332^333^^^323^337^if  ( n.isBinary (  )  )  { return  (  ( BinaryNode )  n ) .binaryValue (  ) ; }^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P16_Remove_Block]^^331^332^333^^^323^337^if  ( n.isBinary (  )  )  { return  (  ( BinaryNode )  n ) .binaryValue (  ) ; }^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P13_Insert_Block]^if  ( n.isPojo (  )  )  {     return  (  ( POJONode )   ( n )  ) .getPojo (  ) ; }^331^^^^^323^337^[Delete]^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return  (  ( BinaryNode )  n ) ._constructError (  ) ;^332^^^^^323^337^return  (  ( BinaryNode )  n ) .binaryValue (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P13_Insert_Block]^if  ( n.isPojo (  )  )  {     return  (  ( POJONode )   ( n )  ) .getPojo (  ) ; }^332^^^^^323^337^[Delete]^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P13_Insert_Block]^if  ( n.isBinary (  )  )  {     return  (  ( BinaryNode )   ( n )  ) .binaryValue (  ) ; }^332^^^^^323^337^[Delete]^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return  (  ( BinaryNode )  n )  ._throwInternal (  )  ;^332^^^^^323^337^return  (  ( BinaryNode )  n ) .binaryValue (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^332^^^^^323^337^return  (  ( BinaryNode )  n ) .binaryValue (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^JsonNode n = currentNumericNode (  ) ;^326^^^^^323^337^JsonNode n = currentNode (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^JsonNode n = currentNumericNode (  ) ;JsonNode n = currentNode (  ) ;^326^^^^^323^337^JsonNode n = currentNode (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^326^^^^^323^337^JsonNode n = currentNode (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^return _nodeCursor.currentNode (  ) ;JsonNode n = currentNode (  ) ;^326^^^^^323^337^JsonNode n = currentNode (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^return _nodeCursor.getCurrentName (  ) ;JsonNode n = currentNode (  ) ;^326^^^^^323^337^JsonNode n = currentNode (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return  (  ( POJONode )  n )  ._constructError ( 4 )  ;^329^^^^^323^337^return  (  ( POJONode )  n ) .getPojo (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^if  ( n != true )  {^327^^^^^323^337^if  ( n != null )  {^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^return  (  ( POJONode )  n )  ._constructError ( null )  ;^329^^^^^323^337^return  (  ( POJONode )  n ) .getPojo (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^return true;^336^^^^^323^337^return null;^[CLASS] TreeTraversingParser  [METHOD] getEmbeddedObject [RETURN_TYPE] Object   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^JsonNode n = currentNumericNode (  ) ;^350^^^^^346^367^JsonNode n = currentNode (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^JsonNode n = currentNumericNode (  ) ;JsonNode n = currentNode (  ) ;^350^^^^^346^367^JsonNode n = currentNode (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^350^^^^^346^367^JsonNode n = currentNode (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^return _nodeCursor.currentNode (  ) ;JsonNode n = currentNode (  ) ;^350^^^^^346^367^JsonNode n = currentNode (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^return _nodeCursor.getCurrentName (  ) ;JsonNode n = currentNode (  ) ;^350^^^^^346^367^JsonNode n = currentNode (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^if  ( n == null )  {^351^^^^^346^367^if  ( n != null )  {^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P6_Replace_Expression]^if  ( data != null )  {^351^^^^^346^367^if  ( n != null )  {^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P6_Replace_Expression]^if  ( ob instanceof byte[] )  {^351^^^^^346^367^if  ( n != null )  {^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^if  ( n != false )  {^351^^^^^346^367^if  ( n != null )  {^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( _nodeCursor != null )  {^351^^^^^346^367^if  ( n != null )  {^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( _currToken != null )  {^351^^^^^346^367^if  ( n != null )  {^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( _nextToken != null )  {^351^^^^^346^367^if  ( n != null )  {^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P15_Unwrap_Block]^byte[] data = n.binaryValue(); if (data != null) {    return data;}; if (n.isPojo()) {    java.lang.Object ob = ((com.fasterxml.jackson.databind.node.POJONode) (n)).getPojo();    if (ob instanceof byte[]) {        return ((byte[]) (ob));    }};^351^352^^354^355^346^367^if  ( n != null )  { byte[] data = n.binaryValue (  ) ; if  ( data != null )  { return data; }^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P16_Remove_Block]^^351^352^^354^355^346^367^if  ( n != null )  { byte[] data = n.binaryValue (  ) ; if  ( data != null )  { return data; }^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P13_Insert_Block]^if  ( n.isPojo (  )  )  {     Object ob =  (  ( POJONode )   ( n )  ) .getPojo (  ) ;     if  ( ob instanceof byte[] )  {         return  (  ( byte[] )   ( ob )  ) ;     } }^351^^^^^346^367^[Delete]^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^if  ( data == null )  {^354^^^^^346^367^if  ( data != null )  {^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^if  ( data != this )  {^354^^^^^346^367^if  ( data != null )  {^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( _nodeCursor != null )  {^354^^^^^346^367^if  ( data != null )  {^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( _currToken != null )  {^354^^^^^346^367^if  ( data != null )  {^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( n != null )  {^354^^^^^346^367^if  ( data != null )  {^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( _nextToken != null )  {^354^^^^^346^367^if  ( data != null )  {^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P15_Unwrap_Block]^return data;^354^355^356^^^346^367^if  ( data != null )  { return data; }^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P16_Remove_Block]^^354^355^356^^^346^367^if  ( data != null )  { return data; }^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P13_Insert_Block]^if  ( _closed )  {     return null; }^354^^^^^346^367^[Delete]^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^if  ( n .isObject (  )   )  {^358^^^^^346^367^if  ( n.isPojo (  )  )  {^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( n.isArray (  )  )  {^358^^^^^346^367^if  ( n.isPojo (  )  )  {^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( n.isBinary (  )  )  {^358^^^^^346^367^if  ( n.isPojo (  )  )  {^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P15_Unwrap_Block]^java.lang.Object ob = ((com.fasterxml.jackson.databind.node.POJONode) (n)).getPojo(); if (ob instanceof byte[]) {    return ((byte[]) (ob));};^358^359^360^361^362^346^367^if  ( n.isPojo (  )  )  { Object ob =  (  ( POJONode )  n ) .getPojo (  ) ; if  ( ob instanceof byte[] )  { return  ( byte[] )  ob; }^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P16_Remove_Block]^^358^359^360^361^362^346^367^if  ( n.isPojo (  )  )  { Object ob =  (  ( POJONode )  n ) .getPojo (  ) ; if  ( ob instanceof byte[] )  { return  ( byte[] )  ob; }^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^if  ( ob  >  byte[] )  {^360^^^^^346^367^if  ( ob instanceof byte[] )  {^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P15_Unwrap_Block]^return ((byte[]) (ob));^360^361^362^^^346^367^if  ( ob instanceof byte[] )  { return  ( byte[] )  ob; }^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P16_Remove_Block]^^360^361^362^^^346^367^if  ( ob instanceof byte[] )  { return  ( byte[] )  ob; }^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^Object ob =  (  ( POJONode )  n ) ._constructError (  ) ;^359^^^^^346^367^Object ob =  (  ( POJONode )  n ) .getPojo (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P13_Insert_Block]^if  ( n.isPojo (  )  )  {     return  (  ( POJONode )   ( n )  ) .getPojo (  ) ; }^359^^^^^346^367^[Delete]^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P13_Insert_Block]^if  ( n.isBinary (  )  )  {     return  (  ( BinaryNode )   ( n )  ) .binaryValue (  ) ; }^359^^^^^346^367^[Delete]^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^359^^^^^346^367^Object ob =  (  ( POJONode )  n ) .getPojo (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^if  ( ob  &&  byte[] )  {^360^^^^^346^367^if  ( ob instanceof byte[] )  {^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^byte[] data = n ._throwInternal (  )  ;^352^^^^^346^367^byte[] data = n.binaryValue (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^byte[] data = getBinaryValue ( b64variant ) ;byte[] data = n.binaryValue (  ) ;^352^^^^^346^367^byte[] data = n.binaryValue (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^352^^^^^346^367^byte[] data = n.binaryValue (  ) ;^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^if  ( data != true )  {^354^^^^^346^367^if  ( data != null )  {^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^if  ( ob  |  byte[] )  {^360^^^^^346^367^if  ( ob instanceof byte[] )  {^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^return true;^366^^^^^346^367^return null;^[CLASS] TreeTraversingParser  [METHOD] getBinaryValue [RETURN_TYPE] byte[]   Base64Variant b64variant [VARIABLES] byte[]  data  boolean  _closed  _startContainer  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  JsonNode  n  Object  ob  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^byte[] data = setCodec ( b64variant ) ;^374^^^^^371^380^byte[] data = getBinaryValue ( b64variant ) ;^[CLASS] TreeTraversingParser  [METHOD] readBinaryValue [RETURN_TYPE] int   Base64Variant b64variant OutputStream out [VARIABLES] byte[]  data  boolean  _closed  _startContainer  OutputStream  out  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^byte[] data = n.binaryValue (  ) ;byte[] data = getBinaryValue ( b64variant ) ;^374^^^^^371^380^byte[] data = getBinaryValue ( b64variant ) ;^[CLASS] TreeTraversingParser  [METHOD] readBinaryValue [RETURN_TYPE] int   Base64Variant b64variant OutputStream out [VARIABLES] byte[]  data  boolean  _closed  _startContainer  OutputStream  out  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^374^^^^^371^380^byte[] data = getBinaryValue ( b64variant ) ;^[CLASS] TreeTraversingParser  [METHOD] readBinaryValue [RETURN_TYPE] int   Base64Variant b64variant OutputStream out [VARIABLES] byte[]  data  boolean  _closed  _startContainer  OutputStream  out  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^if  ( data == null )  {^375^^^^^371^380^if  ( data != null )  {^[CLASS] TreeTraversingParser  [METHOD] readBinaryValue [RETURN_TYPE] int   Base64Variant b64variant OutputStream out [VARIABLES] byte[]  data  boolean  _closed  _startContainer  OutputStream  out  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^if  ( data != false )  {^375^^^^^371^380^if  ( data != null )  {^[CLASS] TreeTraversingParser  [METHOD] readBinaryValue [RETURN_TYPE] int   Base64Variant b64variant OutputStream out [VARIABLES] byte[]  data  boolean  _closed  _startContainer  OutputStream  out  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( _nodeCursor != null )  {^375^^^^^371^380^if  ( data != null )  {^[CLASS] TreeTraversingParser  [METHOD] readBinaryValue [RETURN_TYPE] int   Base64Variant b64variant OutputStream out [VARIABLES] byte[]  data  boolean  _closed  _startContainer  OutputStream  out  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( _currToken != null )  {^375^^^^^371^380^if  ( data != null )  {^[CLASS] TreeTraversingParser  [METHOD] readBinaryValue [RETURN_TYPE] int   Base64Variant b64variant OutputStream out [VARIABLES] byte[]  data  boolean  _closed  _startContainer  OutputStream  out  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( n != null )  {^375^^^^^371^380^if  ( data != null )  {^[CLASS] TreeTraversingParser  [METHOD] readBinaryValue [RETURN_TYPE] int   Base64Variant b64variant OutputStream out [VARIABLES] byte[]  data  boolean  _closed  _startContainer  OutputStream  out  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( _nextToken != null )  {^375^^^^^371^380^if  ( data != null )  {^[CLASS] TreeTraversingParser  [METHOD] readBinaryValue [RETURN_TYPE] int   Base64Variant b64variant OutputStream out [VARIABLES] byte[]  data  boolean  _closed  _startContainer  OutputStream  out  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  ObjectCodec  _objectCodec  c  codec  
[P15_Unwrap_Block]^out.write(data, 0, data.length); return data.length;^375^376^377^378^^371^380^if  ( data != null )  { out.write ( data, 0, data.length ) ; return data.length; }^[CLASS] TreeTraversingParser  [METHOD] readBinaryValue [RETURN_TYPE] int   Base64Variant b64variant OutputStream out [VARIABLES] byte[]  data  boolean  _closed  _startContainer  OutputStream  out  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  ObjectCodec  _objectCodec  c  codec  
[P16_Remove_Block]^^375^376^377^378^^371^380^if  ( data != null )  { out.write ( data, 0, data.length ) ; return data.length; }^[CLASS] TreeTraversingParser  [METHOD] readBinaryValue [RETURN_TYPE] int   Base64Variant b64variant OutputStream out [VARIABLES] byte[]  data  boolean  _closed  _startContainer  OutputStream  out  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^return data.length.length;^377^^^^^371^380^return data.length;^[CLASS] TreeTraversingParser  [METHOD] readBinaryValue [RETURN_TYPE] int   Base64Variant b64variant OutputStream out [VARIABLES] byte[]  data  boolean  _closed  _startContainer  OutputStream  out  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^return data;^377^^^^^371^380^return data.length;^[CLASS] TreeTraversingParser  [METHOD] readBinaryValue [RETURN_TYPE] int   Base64Variant b64variant OutputStream out [VARIABLES] byte[]  data  boolean  _closed  _startContainer  OutputStream  out  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  ObjectCodec  _objectCodec  c  codec  
[P3_Replace_Literal]^out.write ( data, -6, data.length ) ;^376^^^^^371^380^out.write ( data, 0, data.length ) ;^[CLASS] TreeTraversingParser  [METHOD] readBinaryValue [RETURN_TYPE] int   Base64Variant b64variant OutputStream out [VARIABLES] byte[]  data  boolean  _closed  _startContainer  OutputStream  out  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^out.write (  0, data.length ) ;^376^^^^^371^380^out.write ( data, 0, data.length ) ;^[CLASS] TreeTraversingParser  [METHOD] readBinaryValue [RETURN_TYPE] int   Base64Variant b64variant OutputStream out [VARIABLES] byte[]  data  boolean  _closed  _startContainer  OutputStream  out  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^out.write ( data, 0 ) ;^376^^^^^371^380^out.write ( data, 0, data.length ) ;^[CLASS] TreeTraversingParser  [METHOD] readBinaryValue [RETURN_TYPE] int   Base64Variant b64variant OutputStream out [VARIABLES] byte[]  data  boolean  _closed  _startContainer  OutputStream  out  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^out.write ( data.length, 0, data ) ;^376^^^^^371^380^out.write ( data, 0, data.length ) ;^[CLASS] TreeTraversingParser  [METHOD] readBinaryValue [RETURN_TYPE] int   Base64Variant b64variant OutputStream out [VARIABLES] byte[]  data  boolean  _closed  _startContainer  OutputStream  out  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^376^377^^^^371^380^out.write ( data, 0, data.length ) ; return data.length;^[CLASS] TreeTraversingParser  [METHOD] readBinaryValue [RETURN_TYPE] int   Base64Variant b64variant OutputStream out [VARIABLES] byte[]  data  boolean  _closed  _startContainer  OutputStream  out  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  ObjectCodec  _objectCodec  c  codec  
[P3_Replace_Literal]^out.write ( data, -7, data.length ) ;^376^^^^^371^380^out.write ( data, 0, data.length ) ;^[CLASS] TreeTraversingParser  [METHOD] readBinaryValue [RETURN_TYPE] int   Base64Variant b64variant OutputStream out [VARIABLES] byte[]  data  boolean  _closed  _startContainer  OutputStream  out  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^out.write ( data, 0, 1 ) ;^376^^^^^371^380^out.write ( data, 0, data.length ) ;^[CLASS] TreeTraversingParser  [METHOD] readBinaryValue [RETURN_TYPE] int   Base64Variant b64variant OutputStream out [VARIABLES] byte[]  data  boolean  _closed  _startContainer  OutputStream  out  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^376^^^^^371^380^out.write ( data, 0, data.length ) ;^[CLASS] TreeTraversingParser  [METHOD] readBinaryValue [RETURN_TYPE] int   Base64Variant b64variant OutputStream out [VARIABLES] byte[]  data  boolean  _closed  _startContainer  OutputStream  out  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^return 0 - 1;^379^^^^^371^380^return 0;^[CLASS] TreeTraversingParser  [METHOD] readBinaryValue [RETURN_TYPE] int   Base64Variant b64variant OutputStream out [VARIABLES] byte[]  data  boolean  _closed  _startContainer  OutputStream  out  Base64Variant  b64variant  NodeCursor  _nodeCursor  JsonToken  _nextToken  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^if  ( _closed && _nodeCursor == null )  {^389^^^^^388^393^if  ( _closed || _nodeCursor == null )  {^[CLASS] TreeTraversingParser  [METHOD] currentNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^if  ( _closed || _nodeCursor != null )  {^389^^^^^388^393^if  ( _closed || _nodeCursor == null )  {^[CLASS] TreeTraversingParser  [METHOD] currentNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^if  ( _startContainer || _nodeCursor == null )  {^389^^^^^388^393^if  ( _closed || _nodeCursor == null )  {^[CLASS] TreeTraversingParser  [METHOD] currentNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^if  ( _nodeCursor || _closed == null )  {^389^^^^^388^393^if  ( _closed || _nodeCursor == null )  {^[CLASS] TreeTraversingParser  [METHOD] currentNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P6_Replace_Expression]^if  ( _closed ) {^389^^^^^388^393^if  ( _closed || _nodeCursor == null )  {^[CLASS] TreeTraversingParser  [METHOD] currentNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P6_Replace_Expression]^if  (  _nodeCursor == null )  {^389^^^^^388^393^if  ( _closed || _nodeCursor == null )  {^[CLASS] TreeTraversingParser  [METHOD] currentNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( _nodeCursor != null )  {^389^^^^^388^393^if  ( _closed || _nodeCursor == null )  {^[CLASS] TreeTraversingParser  [METHOD] currentNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P15_Unwrap_Block]^return null;^389^390^391^^^388^393^if  ( _closed || _nodeCursor == null )  { return null; }^[CLASS] TreeTraversingParser  [METHOD] currentNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P16_Remove_Block]^^389^390^391^^^388^393^if  ( _closed || _nodeCursor == null )  { return null; }^[CLASS] TreeTraversingParser  [METHOD] currentNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P13_Insert_Block]^if  ( _closed )  {     return null; }^389^^^^^388^393^[Delete]^[CLASS] TreeTraversingParser  [METHOD] currentNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P13_Insert_Block]^if  ( ! ( _closed )  )  {     _closed = true;     _nodeCursor = null;     _currToken = null; }^389^^^^^388^393^[Delete]^[CLASS] TreeTraversingParser  [METHOD] currentNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^return true;^390^^^^^388^393^return null;^[CLASS] TreeTraversingParser  [METHOD] currentNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^return false;^390^^^^^388^393^return null;^[CLASS] TreeTraversingParser  [METHOD] currentNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^return _nodeCursor.getCurrentName (  ) ;^392^^^^^388^393^return _nodeCursor.currentNode (  ) ;^[CLASS] TreeTraversingParser  [METHOD] currentNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P12_Insert_Condition]^if  ( !_nodeCursor.currentHasChildren (  )  )  { return _nodeCursor.currentNode (  ) ; }^392^^^^^388^393^return _nodeCursor.currentNode (  ) ;^[CLASS] TreeTraversingParser  [METHOD] currentNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^392^^^^^388^393^return _nodeCursor.currentNode (  ) ;^[CLASS] TreeTraversingParser  [METHOD] currentNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^JsonNode n = currentNumericNode (  ) ;^398^^^^^395^404^JsonNode n = currentNode (  ) ;^[CLASS] TreeTraversingParser  [METHOD] currentNumericNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  t  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^JsonNode n = currentNumericNode (  ) ;JsonNode n = currentNode (  ) ;^398^^^^^395^404^JsonNode n = currentNode (  ) ;^[CLASS] TreeTraversingParser  [METHOD] currentNumericNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  t  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^398^^^^^395^404^JsonNode n = currentNode (  ) ;^[CLASS] TreeTraversingParser  [METHOD] currentNumericNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  t  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^return _nodeCursor.currentNode (  ) ;JsonNode n = currentNode (  ) ;^398^^^^^395^404^JsonNode n = currentNode (  ) ;^[CLASS] TreeTraversingParser  [METHOD] currentNumericNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  t  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P11_Insert_Donor_Statement]^return _nodeCursor.getCurrentName (  ) ;JsonNode n = currentNode (  ) ;^398^^^^^395^404^JsonNode n = currentNode (  ) ;^[CLASS] TreeTraversingParser  [METHOD] currentNumericNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  t  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^if  ( n == null && !n.isNumber (  )  )  {^399^^^^^395^404^if  ( n == null || !n.isNumber (  )  )  {^[CLASS] TreeTraversingParser  [METHOD] currentNumericNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  t  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^if  ( n != null || !n.isNumber (  )  )  {^399^^^^^395^404^if  ( n == null || !n.isNumber (  )  )  {^[CLASS] TreeTraversingParser  [METHOD] currentNumericNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  t  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P6_Replace_Expression]^if  ( n == null ) {^399^^^^^395^404^if  ( n == null || !n.isNumber (  )  )  {^[CLASS] TreeTraversingParser  [METHOD] currentNumericNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  t  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P6_Replace_Expression]^if  (  !n.isNumber (  )  )  {^399^^^^^395^404^if  ( n == null || !n.isNumber (  )  )  {^[CLASS] TreeTraversingParser  [METHOD] currentNumericNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  t  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P6_Replace_Expression]^if  ( "Current token  ( " + t + " )  not numeric, can not use numeric value accessors" )  {^399^^^^^395^404^if  ( n == null || !n.isNumber (  )  )  {^[CLASS] TreeTraversingParser  [METHOD] currentNumericNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  t  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P6_Replace_Expression]^if  ( "Current token  ( " + t )  {^399^^^^^395^404^if  ( n == null || !n.isNumber (  )  )  {^[CLASS] TreeTraversingParser  [METHOD] currentNumericNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  t  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P8_Replace_Mix]^if  ( n == true ) {^399^^^^^395^404^if  ( n == null || !n.isNumber (  )  )  {^[CLASS] TreeTraversingParser  [METHOD] currentNumericNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  t  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P9_Replace_Statement]^if  ( n != null && n.isBinary (  )  )  {^399^^^^^395^404^if  ( n == null || !n.isNumber (  )  )  {^[CLASS] TreeTraversingParser  [METHOD] currentNumericNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  t  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P15_Unwrap_Block]^com.fasterxml.jackson.databind.node.JsonToken t = (n == null) ? null : n.asToken(); throw _constructError((("Current token (" + t) + ") not numeric, can not use numeric value accessors"));^399^400^401^402^^395^404^if  ( n == null || !n.isNumber (  )  )  { JsonToken t =  ( n == null )  ? null : n.asToken (  ) ; throw _constructError ( "Current token  ( "+t+" )  not numeric, can not use numeric value accessors" ) ; }^[CLASS] TreeTraversingParser  [METHOD] currentNumericNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  t  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P16_Remove_Block]^^399^400^401^402^^395^404^if  ( n == null || !n.isNumber (  )  )  { JsonToken t =  ( n == null )  ? null : n.asToken (  ) ; throw _constructError ( "Current token  ( "+t+" )  not numeric, can not use numeric value accessors" ) ; }^[CLASS] TreeTraversingParser  [METHOD] currentNumericNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  t  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^JsonToken t =  ( n != null )  ? null : n.asToken (  ) ;^400^^^^^395^404^JsonToken t =  ( n == null )  ? null : n.asToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] currentNumericNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  t  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P6_Replace_Expression]^JsonToken t =  ( n.asToken (  ) ;^400^^^^^395^404^JsonToken t =  ( n == null )  ? null : n.asToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] currentNumericNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  t  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^JsonToken t =  ( n == null )  ? null : n .asText (  )  ;^400^^^^^395^404^JsonToken t =  ( n == null )  ? null : n.asToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] currentNumericNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  t  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^throw _constructError ( "Current token  ||  ( "+t+" )  not numeric, can not use numeric value accessors" ) ;^401^^^^^395^404^throw _constructError ( "Current token  ( "+t+" )  not numeric, can not use numeric value accessors" ) ;^[CLASS] TreeTraversingParser  [METHOD] currentNumericNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  t  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^throw _constructError ( "Current token   instanceof   ( "+t+" )  not numeric, can not use numeric value accessors" ) ;^401^^^^^395^404^throw _constructError ( "Current token  ( "+t+" )  not numeric, can not use numeric value accessors" ) ;^[CLASS] TreeTraversingParser  [METHOD] currentNumericNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  t  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P5_Replace_Variable]^throw _constructError ( "Current _nextTokenoken  ( "+t+" )  not numeric, can not use numeric value accessors" ) ;^401^^^^^395^404^throw _constructError ( "Current token  ( "+t+" )  not numeric, can not use numeric value accessors" ) ;^[CLASS] TreeTraversingParser  [METHOD] currentNumericNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  t  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^400^^^^^395^404^JsonToken t =  ( n == null )  ? null : n.asToken (  ) ;^[CLASS] TreeTraversingParser  [METHOD] currentNumericNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  t  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^throw _constructError ( "Current token  ^  ( "+t+" )  not numeric, can not use numeric value accessors" ) ;^401^^^^^395^404^throw _constructError ( "Current token  ( "+t+" )  not numeric, can not use numeric value accessors" ) ;^[CLASS] TreeTraversingParser  [METHOD] currentNumericNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  t  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^throw _constructError ( "Current token  <=  ( "+t+" )  not numeric, can not use numeric value accessors" ) ;^401^^^^^395^404^throw _constructError ( "Current token  ( "+t+" )  not numeric, can not use numeric value accessors" ) ;^[CLASS] TreeTraversingParser  [METHOD] currentNumericNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  t  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^401^^^^^395^404^throw _constructError ( "Current token  ( "+t+" )  not numeric, can not use numeric value accessors" ) ;^[CLASS] TreeTraversingParser  [METHOD] currentNumericNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  t  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^throw _constructError ( "Current token  |  ( "+t+" )  not numeric, can not use numeric value accessors" ) ;^401^^^^^395^404^throw _constructError ( "Current token  ( "+t+" )  not numeric, can not use numeric value accessors" ) ;^[CLASS] TreeTraversingParser  [METHOD] currentNumericNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  t  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P2_Replace_Operator]^throw _constructError ( "Current token  <<  ( "+t+" )  not numeric, can not use numeric value accessors" ) ;^401^^^^^395^404^throw _constructError ( "Current token  ( "+t+" )  not numeric, can not use numeric value accessors" ) ;^[CLASS] TreeTraversingParser  [METHOD] currentNumericNode [RETURN_TYPE] JsonNode   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  t  JsonNode  n  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P7_Replace_Invocation]^binaryValue (  ) ;^408^^^^^407^409^_throwInternal (  ) ;^[CLASS] TreeTraversingParser  [METHOD] _handleEOF [RETURN_TYPE] void   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  t  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
[P14_Delete_Statement]^^408^^^^^407^409^_throwInternal (  ) ;^[CLASS] TreeTraversingParser  [METHOD] _handleEOF [RETURN_TYPE] void   [VARIABLES] NodeCursor  _nodeCursor  JsonToken  _nextToken  t  boolean  _closed  _startContainer  ObjectCodec  _objectCodec  c  codec  
