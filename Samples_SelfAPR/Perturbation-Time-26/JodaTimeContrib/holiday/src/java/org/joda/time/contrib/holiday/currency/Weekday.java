[P5_Replace_Variable]^private static Weekday[]            _weekdays = new Weekday[] { null, SUN, MON, TUE, WED, THU, null, SAT };^37^^^^^32^42^private static Weekday[]            _weekdays = new Weekday[] { null, SUN, MON, TUE, WED, THU, FRI, SAT };^[CLASS] Weekday   [VARIABLES] 
[P5_Replace_Variable]^private static Weekday[]            _weekdays = new Weekday[] { null, SUN, MON, TUE, WED, THU, FRI, null };^37^^^^^32^42^private static Weekday[]            _weekdays = new Weekday[] { null, SUN, MON, TUE, WED, THU, FRI, SAT };^[CLASS] Weekday   [VARIABLES] 
[P5_Replace_Variable]^private static Weekday[]            _weekdays = new Weekday[] { null,  MON, TUE, WED, THU, FRI, SAT };^37^^^^^32^42^private static Weekday[]            _weekdays = new Weekday[] { null, SUN, MON, TUE, WED, THU, FRI, SAT };^[CLASS] Weekday   [VARIABLES] 
[P5_Replace_Variable]^private static Weekday[]            _weekdays = new Weekday[] { null, SUN,  TUE, WED, THU, FRI, SAT };^37^^^^^32^42^private static Weekday[]            _weekdays = new Weekday[] { null, SUN, MON, TUE, WED, THU, FRI, SAT };^[CLASS] Weekday   [VARIABLES] 
[P5_Replace_Variable]^private static Weekday[]            _weekdays = new Weekday[] { null, SUN, MON,  WED, THU, FRI, SAT };^37^^^^^32^42^private static Weekday[]            _weekdays = new Weekday[] { null, SUN, MON, TUE, WED, THU, FRI, SAT };^[CLASS] Weekday   [VARIABLES] 
[P5_Replace_Variable]^private static Weekday[]            _weekdays = new Weekday[] { null, SUN, MON, TUE,  THU, FRI, SAT };^37^^^^^32^42^private static Weekday[]            _weekdays = new Weekday[] { null, SUN, MON, TUE, WED, THU, FRI, SAT };^[CLASS] Weekday   [VARIABLES] 
[P5_Replace_Variable]^private static Weekday[]            _weekdays = new Weekday[] { null, SUN, MON, TUE, WED,  FRI, SAT };^37^^^^^32^42^private static Weekday[]            _weekdays = new Weekday[] { null, SUN, MON, TUE, WED, THU, FRI, SAT };^[CLASS] Weekday   [VARIABLES] 
[P5_Replace_Variable]^private static Weekday[]            _weekdays = new Weekday[] { null, SUN, MON, TUE, WED, THU,  SAT };^37^^^^^32^42^private static Weekday[]            _weekdays = new Weekday[] { null, SUN, MON, TUE, WED, THU, FRI, SAT };^[CLASS] Weekday   [VARIABLES] 
[P5_Replace_Variable]^private static Weekday[]            _weekdays = new Weekday[] { null, SUN, MON, TUE, WED, THU, FRI };^37^^^^^32^42^private static Weekday[]            _weekdays = new Weekday[] { null, SUN, MON, TUE, WED, THU, FRI, SAT };^[CLASS] Weekday   [VARIABLES] 
[P5_Replace_Variable]^private static Weekday[]            _weekdays = new Weekday[] { null, THU, MON, TUE, WED, SUN, FRI, SAT };^37^^^^^32^42^private static Weekday[]            _weekdays = new Weekday[] { null, SUN, MON, TUE, WED, THU, FRI, SAT };^[CLASS] Weekday   [VARIABLES] 
[P5_Replace_Variable]^private static Weekday[]            _weekdays = new Weekday[] { null, SUN, SAT, TUE, WED, THU, FRI, MON };^37^^^^^32^42^private static Weekday[]            _weekdays = new Weekday[] { null, SUN, MON, TUE, WED, THU, FRI, SAT };^[CLASS] Weekday   [VARIABLES] 
[P5_Replace_Variable]^private static Weekday[]            _weekdays = new Weekday[] { null, SUN, MON, FRI, WED, THU, TUE, SAT };^37^^^^^32^42^private static Weekday[]            _weekdays = new Weekday[] { null, SUN, MON, TUE, WED, THU, FRI, SAT };^[CLASS] Weekday   [VARIABLES] 
[P5_Replace_Variable]^private static Weekday[]            _weekdays = new Weekday[] { null, SUN, MON, TUE, SAT, THU, FRI, WED };^37^^^^^32^42^private static Weekday[]            _weekdays = new Weekday[] { null, SUN, MON, TUE, WED, THU, FRI, SAT };^[CLASS] Weekday   [VARIABLES] 
[P5_Replace_Variable]^private static Weekday[]            _weekdays = new Weekday[] { null, SUN, MON, TUE, WED, SAT, FRI, THU };^37^^^^^32^42^private static Weekday[]            _weekdays = new Weekday[] { null, SUN, MON, TUE, WED, THU, FRI, SAT };^[CLASS] Weekday   [VARIABLES] 
[P5_Replace_Variable]^private static Weekday[]            _weekdays = new Weekday[] { null, SUN, MON, SAT, WED, THU, FRI, TUE };^37^^^^^32^42^private static Weekday[]            _weekdays = new Weekday[] { null, SUN, MON, TUE, WED, THU, FRI, SAT };^[CLASS] Weekday   [VARIABLES] 
[P8_Replace_Mix]^private static Weekday[]            _weekdays  = null ;^37^^^^^32^42^private static Weekday[]            _weekdays = new Weekday[] { null, SUN, MON, TUE, WED, THU, FRI, SAT };^[CLASS] Weekday   [VARIABLES] 
[P3_Replace_Literal]^private static Map<String, Weekday> _names = new HashMap<String, Weekday> ( 12 ) ;^38^^^^^33^43^private static Map<String, Weekday> _names = new HashMap<String, Weekday> ( 7 ) ;^[CLASS] Weekday   [VARIABLES] 
[P1_Replace_Type]^public static  long  DAYS_PER_WEEK = 7;^43^^^^^38^48^public static int DAYS_PER_WEEK = 7;^[CLASS] Weekday   [VARIABLES] 
[P3_Replace_Literal]^public static int DAYS_PER_WEEK = 13;^43^^^^^38^48^public static int DAYS_PER_WEEK = 7;^[CLASS] Weekday   [VARIABLES] 
[P8_Replace_Mix]^public static int DAYS_PER_WEEK = 7 >>> 0;^43^^^^^38^48^public static int DAYS_PER_WEEK = 7;^[CLASS] Weekday   [VARIABLES] 
[P8_Replace_Mix]^private  final String[] FULL_NAME = {^48^^^^^48^51^private static final String[] FULL_NAME = {^[CLASS] Weekday   [VARIABLES] 
[P8_Replace_Mix]^private  boolean               _isWeekend;^95^^^^^90^100^private final boolean               _isWeekend;^[CLASS] Weekday   [VARIABLES] 
[P1_Replace_Type]^private final  short                    _weekday;^96^^^^^91^101^private final int                   _weekday;^[CLASS] Weekday   [VARIABLES] 
[P3_Replace_Literal]^SUN ( 8, true ) , MON ( 2, false ) , TUE ( 3, false ) , WED ( 4, false ) , THU ( 5, false ) , FRI ( 6, false ) , SAT ( 7, true ) ;^34^^^^^29^39^SUN ( 1, true ) , MON ( 2, false ) , TUE ( 3, false ) , WED ( 4, false ) , THU ( 5, false ) , FRI ( 6, false ) , SAT ( 7, true ) ;^[CLASS] Weekday   [VARIABLES] 
[P3_Replace_Literal]^SUN ( 1, false ) , MON ( 2, false ) , TUE ( 3, false ) , WED ( 4, false ) , THU ( 5, false ) , FRI ( 6, false ) , SAT ( 7, false ) ;^34^^^^^29^39^SUN ( 1, true ) , MON ( 2, false ) , TUE ( 3, false ) , WED ( 4, false ) , THU ( 5, false ) , FRI ( 6, false ) , SAT ( 7, true ) ;^[CLASS] Weekday   [VARIABLES] 
[P8_Replace_Mix]^SUN ( 1 - 1, true ) , MON ( 2, false ) , TUE ( 3, false ) , WED ( 4, false ) , THU ( 5, false ) , FRI ( 6, false ) , SAT ( 7, true ) ;^34^^^^^29^39^SUN ( 1, true ) , MON ( 2, false ) , TUE ( 3, false ) , WED ( 4, false ) , THU ( 5, false ) , FRI ( 6, false ) , SAT ( 7, true ) ;^[CLASS] Weekday   [VARIABLES] 
[P3_Replace_Literal]^SUN ( 1, true ) , MON ( -6, false ) , TUE ( 3, false ) , WED ( 4, false ) , THU ( 5, false ) , FRI ( 6, false ) , SAT ( 7, true ) ;^34^^^^^29^39^SUN ( 1, true ) , MON ( 2, false ) , TUE ( 3, false ) , WED ( 4, false ) , THU ( 5, false ) , FRI ( 6, false ) , SAT ( 7, true ) ;^[CLASS] Weekday   [VARIABLES] 
[P8_Replace_Mix]^SUN ( 1, true ) , MON ( 5, false ) , TUE ( 3, false ) , WED ( 4, false ) , THU ( 5, false ) , FRI ( 6, false ) , SAT ( 7, true ) ;^34^^^^^29^39^SUN ( 1, true ) , MON ( 2, false ) , TUE ( 3, false ) , WED ( 4, false ) , THU ( 5, false ) , FRI ( 6, false ) , SAT ( 7, true ) ;^[CLASS] Weekday   [VARIABLES] 
[P3_Replace_Literal]^SUN ( 1, true ) , MON ( 2, false ) , TUE ( 0, false ) , WED ( 4, false ) , THU ( 5, false ) , FRI ( 6, false ) , SAT ( 7, true ) ;^34^^^^^29^39^SUN ( 1, true ) , MON ( 2, false ) , TUE ( 3, false ) , WED ( 4, false ) , THU ( 5, false ) , FRI ( 6, false ) , SAT ( 7, true ) ;^[CLASS] Weekday   [VARIABLES] 
[P3_Replace_Literal]^SUN ( 1, true ) , MON ( 2, false ) , TUE ( 3, false ) , WED ( -4, false ) , THU ( 5, false ) , FRI ( 6, false ) , SAT ( 7, true ) ;^34^^^^^29^39^SUN ( 1, true ) , MON ( 2, false ) , TUE ( 3, false ) , WED ( 4, false ) , THU ( 5, false ) , FRI ( 6, false ) , SAT ( 7, true ) ;^[CLASS] Weekday   [VARIABLES] 
[P8_Replace_Mix]^SUN ( 1, true ) , MON ( 2, false ) , TUE ( 3, false ) , WED ( 2, false ) , THU ( 5, false ) , FRI ( 6, false ) , SAT ( 7, true ) ;^34^^^^^29^39^SUN ( 1, true ) , MON ( 2, false ) , TUE ( 3, false ) , WED ( 4, false ) , THU ( 5, false ) , FRI ( 6, false ) , SAT ( 7, true ) ;^[CLASS] Weekday   [VARIABLES] 
[P3_Replace_Literal]^SUN ( 1, true ) , MON ( 2, false ) , TUE ( 3, false ) , WED ( 4, false ) , THU ( 14, false ) , FRI ( 6, false ) , SAT ( 7, true ) ;^34^^^^^29^39^SUN ( 1, true ) , MON ( 2, false ) , TUE ( 3, false ) , WED ( 4, false ) , THU ( 5, false ) , FRI ( 6, false ) , SAT ( 7, true ) ;^[CLASS] Weekday   [VARIABLES] 
[P8_Replace_Mix]^SUN ( 1, true ) , MON ( 2, false ) , TUE ( 3, false ) , WED ( 4, false ) , THU ( 6, false ) , FRI ( 6, false ) , SAT ( 7, true ) ;^34^^^^^29^39^SUN ( 1, true ) , MON ( 2, false ) , TUE ( 3, false ) , WED ( 4, false ) , THU ( 5, false ) , FRI ( 6, false ) , SAT ( 7, true ) ;^[CLASS] Weekday   [VARIABLES] 
[P3_Replace_Literal]^SUN ( 1, true ) , MON ( 2, false ) , TUE ( 3, false ) , WED ( 4, false ) , THU ( 5, false ) , FRI ( 4, false ) , SAT ( 7, true ) ;^34^^^^^29^39^SUN ( 1, true ) , MON ( 2, false ) , TUE ( 3, false ) , WED ( 4, false ) , THU ( 5, false ) , FRI ( 6, false ) , SAT ( 7, true ) ;^[CLASS] Weekday   [VARIABLES] 
[P8_Replace_Mix]^SUN ( 1, true ) , MON ( 2, false ) , TUE ( 3, false ) , WED ( 4, false ) , THU ( 5, false ) , FRI ( 1, false ) , SAT ( 7, true ) ;^34^^^^^29^39^SUN ( 1, true ) , MON ( 2, false ) , TUE ( 3, false ) , WED ( 4, false ) , THU ( 5, false ) , FRI ( 6, false ) , SAT ( 7, true ) ;^[CLASS] Weekday   [VARIABLES] 
[P3_Replace_Literal]^SUN ( 1, true ) , MON ( 2, false ) , TUE ( 3, false ) , WED ( 4, false ) , THU ( 5, false ) , FRI ( 6, false ) , SAT ( -2, true ) ;^34^^^^^29^39^SUN ( 1, true ) , MON ( 2, false ) , TUE ( 3, false ) , WED ( 4, false ) , THU ( 5, false ) , FRI ( 6, false ) , SAT ( 7, true ) ;^[CLASS] Weekday   [VARIABLES] 
[P8_Replace_Mix]^SUN ( 1, true ) , MON ( 2, false ) , TUE ( 3, false ) , WED ( 4, false ) , THU ( 5, false ) , FRI ( 6, false ) , SAT ( 0, true ) ;^34^^^^^29^39^SUN ( 1, true ) , MON ( 2, false ) , TUE ( 3, false ) , WED ( 4, false ) , THU ( 5, false ) , FRI ( 6, false ) , SAT ( 7, true ) ;^[CLASS] Weekday   [VARIABLES] 
[P5_Replace_Variable]^_weekday = _weekday;^104^^^^^103^106^_weekday = weekday;^[CLASS] Weekday  [METHOD] <init> [RETURN_TYPE] Weekday(int,boolean)   int weekday boolean isWeekend [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  Map  _names  int  DAYS_PER_WEEK  _weekday  weekday  
[P8_Replace_Mix]^_weekday =  DAYS_PER_WEEK;^104^^^^^103^106^_weekday = weekday;^[CLASS] Weekday  [METHOD] <init> [RETURN_TYPE] Weekday(int,boolean)   int weekday boolean isWeekend [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  Map  _names  int  DAYS_PER_WEEK  _weekday  weekday  
[P11_Insert_Donor_Statement]^_isWeekend = isWeekend;_weekday = weekday;^104^^^^^103^106^_weekday = weekday;^[CLASS] Weekday  [METHOD] <init> [RETURN_TYPE] Weekday(int,boolean)   int weekday boolean isWeekend [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  Map  _names  int  DAYS_PER_WEEK  _weekday  weekday  
[P11_Insert_Donor_Statement]^weekday = null;_weekday = weekday;^104^^^^^103^106^_weekday = weekday;^[CLASS] Weekday  [METHOD] <init> [RETURN_TYPE] Weekday(int,boolean)   int weekday boolean isWeekend [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  Map  _names  int  DAYS_PER_WEEK  _weekday  weekday  
[P5_Replace_Variable]^_isWeekend = _isWeekend;^105^^^^^103^106^_isWeekend = isWeekend;^[CLASS] Weekday  [METHOD] <init> [RETURN_TYPE] Weekday(int,boolean)   int weekday boolean isWeekend [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  Map  _names  int  DAYS_PER_WEEK  _weekday  weekday  
[P8_Replace_Mix]^_isWeekend =  null;^105^^^^^103^106^_isWeekend = isWeekend;^[CLASS] Weekday  [METHOD] <init> [RETURN_TYPE] Weekday(int,boolean)   int weekday boolean isWeekend [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  Map  _names  int  DAYS_PER_WEEK  _weekday  weekday  
[P11_Insert_Donor_Statement]^_weekday = weekday;_isWeekend = isWeekend;^105^^^^^103^106^_isWeekend = isWeekend;^[CLASS] Weekday  [METHOD] <init> [RETURN_TYPE] Weekday(int,boolean)   int weekday boolean isWeekend [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  Map  _names  int  DAYS_PER_WEEK  _weekday  weekday  
[P2_Replace_Operator]^if  ( str.length (  )  <= 3 )  {^79^^^^^77^89^if  ( str.length (  )  == 3 )  {^[CLASS] Weekday  [METHOD] weekday [RETURN_TYPE] Weekday   String str [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  weekday  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  String  str  Map  _names  int  DAYS_PER_WEEK  _weekday  index  weekday  IllegalArgumentException  iae  
[P3_Replace_Literal]^if  ( str.length (  )  == -3 )  {^79^^^^^77^89^if  ( str.length (  )  == 3 )  {^[CLASS] Weekday  [METHOD] weekday [RETURN_TYPE] Weekday   String str [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  weekday  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  String  str  Map  _names  int  DAYS_PER_WEEK  _weekday  index  weekday  IllegalArgumentException  iae  
[P3_Replace_Literal]^if  ( str.length() + 5  == 3 )  {^79^^^^^77^89^if  ( str.length (  )  == 3 )  {^[CLASS] Weekday  [METHOD] weekday [RETURN_TYPE] Weekday   String str [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  weekday  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  String  str  Map  _names  int  DAYS_PER_WEEK  _weekday  index  weekday  IllegalArgumentException  iae  
[P8_Replace_Mix]^if  ( str.length (  )  == 0  )  {^79^^^^^77^89^if  ( str.length (  )  == 3 )  {^[CLASS] Weekday  [METHOD] weekday [RETURN_TYPE] Weekday   String str [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  weekday  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  String  str  Map  _names  int  DAYS_PER_WEEK  _weekday  index  weekday  IllegalArgumentException  iae  
[P15_Unwrap_Block]^try {    weekday = java.lang.Enum.valueOf(org.joda.time.contrib.holiday.currency.Weekday.class, str.toUpperCase());} catch (java.lang.IllegalArgumentException iae) {    weekday = null;};^79^80^81^82^83^77^89^if  ( str.length (  )  == 3 )  { try { weekday = Enum.valueOf ( Weekday.class, str.toUpperCase (  )  ) ; } catch  ( IllegalArgumentException iae )  { weekday = null; }^[CLASS] Weekday  [METHOD] weekday [RETURN_TYPE] Weekday   String str [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  weekday  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  String  str  Map  _names  int  DAYS_PER_WEEK  _weekday  index  weekday  IllegalArgumentException  iae  
[P16_Remove_Block]^^79^80^81^82^83^77^89^if  ( str.length (  )  == 3 )  { try { weekday = Enum.valueOf ( Weekday.class, str.toUpperCase (  )  ) ; } catch  ( IllegalArgumentException iae )  { weekday = null; }^[CLASS] Weekday  [METHOD] weekday [RETURN_TYPE] Weekday   String str [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  weekday  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  String  str  Map  _names  int  DAYS_PER_WEEK  _weekday  index  weekday  IllegalArgumentException  iae  
[P5_Replace_Variable]^weekday = str.get ( _names.toLowerCase (  )  ) ;^86^^^^^77^89^weekday = _names.get ( str.toLowerCase (  )  ) ;^[CLASS] Weekday  [METHOD] weekday [RETURN_TYPE] Weekday   String str [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  weekday  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  String  str  Map  _names  int  DAYS_PER_WEEK  _weekday  index  weekday  IllegalArgumentException  iae  
[P8_Replace_Mix]^weekday =  _names.get ( null.toLowerCase (  )  ) ;^86^^^^^77^89^weekday = _names.get ( str.toLowerCase (  )  ) ;^[CLASS] Weekday  [METHOD] weekday [RETURN_TYPE] Weekday   String str [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  weekday  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  String  str  Map  _names  int  DAYS_PER_WEEK  _weekday  index  weekday  IllegalArgumentException  iae  
[P11_Insert_Donor_Statement]^weekday = Enum.valueOf ( Weekday.class, str.toUpperCase (  )  ) ;weekday = _names.get ( str.toLowerCase (  )  ) ;^86^^^^^77^89^weekday = _names.get ( str.toLowerCase (  )  ) ;^[CLASS] Weekday  [METHOD] weekday [RETURN_TYPE] Weekday   String str [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  weekday  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  String  str  Map  _names  int  DAYS_PER_WEEK  _weekday  index  weekday  IllegalArgumentException  iae  
[P7_Replace_Invocation]^weekday = _names.get ( str .toUpperCase (  )   ) ;^86^^^^^77^89^weekday = _names.get ( str.toLowerCase (  )  ) ;^[CLASS] Weekday  [METHOD] weekday [RETURN_TYPE] Weekday   String str [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  weekday  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  String  str  Map  _names  int  DAYS_PER_WEEK  _weekday  index  weekday  IllegalArgumentException  iae  
[P14_Delete_Statement]^^86^^^^^77^89^weekday = _names.get ( str.toLowerCase (  )  ) ;^[CLASS] Weekday  [METHOD] weekday [RETURN_TYPE] Weekday   String str [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  weekday  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  String  str  Map  _names  int  DAYS_PER_WEEK  _weekday  index  weekday  IllegalArgumentException  iae  
[P5_Replace_Variable]^weekday = Enum.valueOf ( Weekday.class.toUpperCase (  )  ) ;^81^^^^^77^89^weekday = Enum.valueOf ( Weekday.class, str.toUpperCase (  )  ) ;^[CLASS] Weekday  [METHOD] weekday [RETURN_TYPE] Weekday   String str [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  weekday  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  String  str  Map  _names  int  DAYS_PER_WEEK  _weekday  index  weekday  IllegalArgumentException  iae  
[P5_Replace_Variable]^weekday = Enum.valueOf ( Weekday. str.toUpperCase (  )  ) ;^81^^^^^77^89^weekday = Enum.valueOf ( Weekday.class, str.toUpperCase (  )  ) ;^[CLASS] Weekday  [METHOD] weekday [RETURN_TYPE] Weekday   String str [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  weekday  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  String  str  Map  _names  int  DAYS_PER_WEEK  _weekday  index  weekday  IllegalArgumentException  iae  
[P8_Replace_Mix]^weekday =  Enum.valueOf ( Weekday.class, null.toUpperCase (  )  ) ;^81^^^^^77^89^weekday = Enum.valueOf ( Weekday.class, str.toUpperCase (  )  ) ;^[CLASS] Weekday  [METHOD] weekday [RETURN_TYPE] Weekday   String str [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  weekday  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  String  str  Map  _names  int  DAYS_PER_WEEK  _weekday  index  weekday  IllegalArgumentException  iae  
[P11_Insert_Donor_Statement]^weekday = _names.get ( str.toLowerCase (  )  ) ;weekday = Enum.valueOf ( Weekday.class, str.toUpperCase (  )  ) ;^81^^^^^77^89^weekday = Enum.valueOf ( Weekday.class, str.toUpperCase (  )  ) ;^[CLASS] Weekday  [METHOD] weekday [RETURN_TYPE] Weekday   String str [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  weekday  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  String  str  Map  _names  int  DAYS_PER_WEEK  _weekday  index  weekday  IllegalArgumentException  iae  
[P7_Replace_Invocation]^weekday = Enum .name (  )  ;^81^^^^^77^89^weekday = Enum.valueOf ( Weekday.class, str.toUpperCase (  )  ) ;^[CLASS] Weekday  [METHOD] weekday [RETURN_TYPE] Weekday   String str [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  weekday  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  String  str  Map  _names  int  DAYS_PER_WEEK  _weekday  index  weekday  IllegalArgumentException  iae  
[P7_Replace_Invocation]^weekday = Enum.valueOf ( Weekday.class, str .toLowerCase (  )   ) ;^81^^^^^77^89^weekday = Enum.valueOf ( Weekday.class, str.toUpperCase (  )  ) ;^[CLASS] Weekday  [METHOD] weekday [RETURN_TYPE] Weekday   String str [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  weekday  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  String  str  Map  _names  int  DAYS_PER_WEEK  _weekday  index  weekday  IllegalArgumentException  iae  
[P14_Delete_Statement]^^81^^^^^77^89^weekday = Enum.valueOf ( Weekday.class, str.toUpperCase (  )  ) ;^[CLASS] Weekday  [METHOD] weekday [RETURN_TYPE] Weekday   String str [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  weekday  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  String  str  Map  _names  int  DAYS_PER_WEEK  _weekday  index  weekday  IllegalArgumentException  iae  
[P8_Replace_Mix]^weekday = this;^83^^^^^77^89^weekday = null;^[CLASS] Weekday  [METHOD] weekday [RETURN_TYPE] Weekday   String str [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  weekday  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  String  str  Map  _names  int  DAYS_PER_WEEK  _weekday  index  weekday  IllegalArgumentException  iae  
[P11_Insert_Donor_Statement]^_weekday = weekday;weekday = null;^83^^^^^77^89^weekday = null;^[CLASS] Weekday  [METHOD] weekday [RETURN_TYPE] Weekday   String str [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  weekday  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  String  str  Map  _names  int  DAYS_PER_WEEK  _weekday  index  weekday  IllegalArgumentException  iae  
[P3_Replace_Literal]^if  ( str.length() - 4  == 3 )  {^79^^^^^77^89^if  ( str.length (  )  == 3 )  {^[CLASS] Weekday  [METHOD] weekday [RETURN_TYPE] Weekday   String str [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  weekday  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  String  str  Map  _names  int  DAYS_PER_WEEK  _weekday  index  weekday  IllegalArgumentException  iae  
[P7_Replace_Invocation]^if  ( str .toLowerCase (  )   == 3 )  {^79^^^^^77^89^if  ( str.length (  )  == 3 )  {^[CLASS] Weekday  [METHOD] weekday [RETURN_TYPE] Weekday   String str [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  weekday  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  String  str  Map  _names  int  DAYS_PER_WEEK  _weekday  index  weekday  IllegalArgumentException  iae  
[P5_Replace_Variable]^return THU;^88^^^^^77^89^return weekday;^[CLASS] Weekday  [METHOD] weekday [RETURN_TYPE] Weekday   String str [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  weekday  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  String  str  Map  _names  int  DAYS_PER_WEEK  _weekday  index  weekday  IllegalArgumentException  iae  
[P8_Replace_Mix]^return TUE;^88^^^^^77^89^return weekday;^[CLASS] Weekday  [METHOD] weekday [RETURN_TYPE] Weekday   String str [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  weekday  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  String  str  Map  _names  int  DAYS_PER_WEEK  _weekday  index  weekday  IllegalArgumentException  iae  
[P5_Replace_Variable]^return ! isWeekend;^116^^^^^115^117^return ! _isWeekend;^[CLASS] Weekday  [METHOD] isWeekday [RETURN_TYPE] boolean   [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  weekday  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  Map  _names  int  DAYS_PER_WEEK  _weekday  index  weekday  
[P5_Replace_Variable]^return isWeekend;^124^^^^^123^125^return _isWeekend;^[CLASS] Weekday  [METHOD] isWeekend [RETURN_TYPE] boolean   [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  weekday  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  Map  _names  int  DAYS_PER_WEEK  _weekday  index  weekday  
[P14_Delete_Statement]^^132^^^^^131^133^return name (  ) ;^[CLASS] Weekday  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  weekday  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  Map  _names  int  DAYS_PER_WEEK  _weekday  index  weekday  
[P14_Delete_Statement]^^143^^^^^142^144^return name (  ) ;^[CLASS] Weekday  [METHOD] getAbbrev [RETURN_TYPE] String   [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  weekday  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  Map  _names  int  DAYS_PER_WEEK  _weekday  index  weekday  
[P5_Replace_Variable]^return weekday;^159^^^^^158^160^return _weekday;^[CLASS] Weekday  [METHOD] getValue [RETURN_TYPE] int   [VARIABLES] Weekday  FRI  MON  SAT  SUN  THU  TUE  WED  weekday  boolean  _isWeekend  isWeekend  Weekday[]  _weekdays  String[]  FULL_NAME  Map  _names  int  DAYS_PER_WEEK  _weekday  index  weekday  
