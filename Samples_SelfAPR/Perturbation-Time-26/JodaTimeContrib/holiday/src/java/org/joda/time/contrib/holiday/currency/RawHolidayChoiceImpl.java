[P1_Replace_Type]^static final  short  serialVersionUID = 1001L;^28^^^^^23^33^static final long serialVersionUID = 1001L;^[CLASS] AbstractHoliday   [VARIABLES] 
[P8_Replace_Mix]^static   int  serialVersionUID = 1001;^28^^^^^23^33^static final long serialVersionUID = 1001L;^[CLASS] AbstractHoliday   [VARIABLES] 
[P1_Replace_Type]^p p protected  long                        _every = 1;^31^32^33^^^26^36^p p protected int                       _every = 1;^[CLASS] AbstractHoliday   [VARIABLES] 
[P8_Replace_Mix]^p p protected int                       _every  = null ;^31^32^33^^^26^36^p p protected int                       _every = 1;^[CLASS] AbstractHoliday   [VARIABLES] 
[P1_Replace_Type]^p protected  short                        _every = 1;^32^33^^^^27^37^p protected int                       _every = 1;^[CLASS] AbstractHoliday   [VARIABLES] 
[P1_Replace_Type]^protected  short                        _every = 1;^33^^^^^28^38^protected int                       _every = 1;^[CLASS] AbstractHoliday   [VARIABLES] 
[P3_Replace_Literal]^protected int                       _every = -7;^33^^^^^28^38^protected int                       _every = 1;^[CLASS] AbstractHoliday   [VARIABLES] 
[P8_Replace_Mix]^protected int                       _every = 0;^33^^^^^28^38^protected int                       _every = 1;^[CLASS] AbstractHoliday   [VARIABLES] 
[P8_Replace_Mix]^private Month                     _month;^34^^^^^29^39^protected Month                     _month;^[CLASS] AbstractHoliday   [VARIABLES] 
[P8_Replace_Mix]^private Weekday                   _weekday;^36^^^^^31^41^protected Weekday                   _weekday;^[CLASS] AbstractHoliday   [VARIABLES] 
[P14_Delete_Statement]^^45^46^^^^44^48^super ( RawHolidayChoiceImpl.choices (  ) , label ) ; _day = day;^[CLASS] AbstractHoliday  [METHOD] <init> [RETURN_TYPE] Month,int)   String label Month month int day [VARIABLES] Month  _month  month  Weekday  _weekday  String  label  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  
[P14_Delete_Statement]^^45^^^^^44^48^super ( RawHolidayChoiceImpl.choices (  ) , label ) ;^[CLASS] AbstractHoliday  [METHOD] <init> [RETURN_TYPE] Month,int)   String label Month month int day [VARIABLES] Month  _month  month  Weekday  _weekday  String  label  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  
[P5_Replace_Variable]^_day = _start;^46^^^^^44^48^_day = day;^[CLASS] AbstractHoliday  [METHOD] <init> [RETURN_TYPE] Month,int)   String label Month month int day [VARIABLES] Month  _month  month  Weekday  _weekday  String  label  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  
[P8_Replace_Mix]^_day =  null;^46^^^^^44^48^_day = day;^[CLASS] AbstractHoliday  [METHOD] <init> [RETURN_TYPE] Month,int)   String label Month month int day [VARIABLES] Month  _month  month  Weekday  _weekday  String  label  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  
[P5_Replace_Variable]^_month = _month;^47^^^^^44^48^_month = month;^[CLASS] AbstractHoliday  [METHOD] <init> [RETURN_TYPE] Month,int)   String label Month month int day [VARIABLES] Month  _month  month  Weekday  _weekday  String  label  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  
[P8_Replace_Mix]^_month =  null;^47^^^^^44^48^_month = month;^[CLASS] AbstractHoliday  [METHOD] <init> [RETURN_TYPE] Month,int)   String label Month month int day [VARIABLES] Month  _month  month  Weekday  _weekday  String  label  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  
[P14_Delete_Statement]^^60^^^^^59^66^super ( RawHolidayChoiceImpl.choices (  ) , label ) ;^[CLASS] AbstractHoliday  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  _month  month  Weekday  _weekday  String  label  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  
[P14_Delete_Statement]^^60^61^^^^59^66^super ( RawHolidayChoiceImpl.choices (  ) , label ) ; _day = day;^[CLASS] AbstractHoliday  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  _month  month  Weekday  _weekday  String  label  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  
[P5_Replace_Variable]^_day = every;^61^^^^^59^66^_day = day;^[CLASS] AbstractHoliday  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  _month  month  Weekday  _weekday  String  label  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  
[P8_Replace_Mix]^_day =  start;^61^^^^^59^66^_day = day;^[CLASS] AbstractHoliday  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  _month  month  Weekday  _weekday  String  label  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  
[P5_Replace_Variable]^_month = _month;^62^^^^^59^66^_month = month;^[CLASS] AbstractHoliday  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  _month  month  Weekday  _weekday  String  label  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  
[P8_Replace_Mix]^_month =  null;^62^^^^^59^66^_month = month;^[CLASS] AbstractHoliday  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  _month  month  Weekday  _weekday  String  label  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  
[P5_Replace_Variable]^_start = day;^63^^^^^59^66^_start = start;^[CLASS] AbstractHoliday  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  _month  month  Weekday  _weekday  String  label  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  
[P8_Replace_Mix]^_start =  end;^63^^^^^59^66^_start = start;^[CLASS] AbstractHoliday  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  _month  month  Weekday  _weekday  String  label  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  
[P5_Replace_Variable]^_end = day;^64^^^^^59^66^_end = end;^[CLASS] AbstractHoliday  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  _month  month  Weekday  _weekday  String  label  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  
[P8_Replace_Mix]^_end =  start;^64^^^^^59^66^_end = end;^[CLASS] AbstractHoliday  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  _month  month  Weekday  _weekday  String  label  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  
[P5_Replace_Variable]^_every = start;^65^^^^^59^66^_every = every;^[CLASS] AbstractHoliday  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  _month  month  Weekday  _weekday  String  label  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  
[P1_Replace_Type]^List<Date> list = new  LinkedList <Date> ( end - start + 1 ) ;^76^^^^^75^81^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P2_Replace_Operator]^List<Date> list = new ArrayList<Date> ( end - start  <  1 ) ;^76^^^^^75^81^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P2_Replace_Operator]^List<Date> list = new ArrayList<Date> ( end  <  start + 1 ) ;^76^^^^^75^81^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P3_Replace_Literal]^List<Date> list = new ArrayList<Date> ( end - start + _start ) ;^76^^^^^75^81^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P5_Replace_Variable]^List<Date> list = new ArrayList<Date> ( day - start + 1 ) ;^76^^^^^75^81^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P5_Replace_Variable]^List<Date> list = new ArrayList<Date> ( end - day + 1 ) ;^76^^^^^75^81^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P5_Replace_Variable]^List<Date> list = new ArrayList<Date> ( start - end + 1 ) ;^76^^^^^75^81^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P8_Replace_Mix]^List<Date> list = new ArrayList<Date> ( year - start + 1 ) ;^76^^^^^75^81^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P2_Replace_Operator]^List<Date> list = new ArrayList<Date> ( end - start  !=  1 ) ;^76^^^^^75^81^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P2_Replace_Operator]^List<Date> list = new ArrayList<Date> ( end   instanceof   start + 1 ) ;^76^^^^^75^81^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P3_Replace_Literal]^List<Date> list = new ArrayList<Date> ( end - start + _end ) ;^76^^^^^75^81^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P5_Replace_Variable]^List<Date> list = new ArrayList<Date> ( every - start + 1 ) ;^76^^^^^75^81^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P5_Replace_Variable]^f list.add ( date ( start )  ) ;^77^78^^^^75^81^f list.add ( date ( year )  ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P5_Replace_Variable]^f year.add ( date ( list )  ) ;^77^78^^^^75^81^f list.add ( date ( year )  ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P8_Replace_Mix]^f list.add ( date ( day )  ) ;^77^78^^^^75^81^f list.add ( date ( year )  ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P5_Replace_Variable]^list.add ( date ( end )  ) ;^78^^^^^75^81^list.add ( date ( year )  ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P8_Replace_Mix]^list.add ( date ( start )  ) ;^78^^^^^75^81^list.add ( date ( year )  ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P14_Delete_Statement]^^78^^^^^75^81^list.add ( date ( year )  ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P5_Replace_Variable]^list.add ( date ( day )  ) ;^78^^^^^75^81^list.add ( date ( year )  ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P1_Replace_Type]^static final  short  serialVersionUID = 1001L;^91^^^^^86^96^static final long serialVersionUID = 1001L;^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P8_Replace_Mix]^static final long serialVersionUID = 1001;^91^^^^^86^96^static final long serialVersionUID = 1001L;^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P3_Replace_Literal]^p start, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^102^103^104^^^102^104^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P3_Replace_Literal]^p 14, 1, 21, 11, 11, 18, 8, 28, 16, 5, 25, 11, 2, 22, 10, 10, 17, 7, 27 };^102^103^104^^^102^104^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P3_Replace_Literal]^p 14, 3, 25, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^102^103^104^^^102^104^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P3_Replace_Literal]^p 14, 3, 23, 6, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^102^103^104^^^102^104^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P3_Replace_Literal]^p 14, 3, 23, 11, 31, _every, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^102^103^104^^^102^104^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P3_Replace_Literal]^p 14, 3, 23, 11, 31, 1end, end, 2end, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^102^103^104^^^102^104^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P3_Replace_Literal]^p 14, 3, 23, 11, 31, 18, 8, 22, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^102^103^104^^^102^104^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P3_Replace_Literal]^p 14, 3, 23, 11, 31, 18, 8, 28, day, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^102^103^104^^^102^104^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P3_Replace_Literal]^p 14, 3, 23, 11, 31, 18, 8, 28, 16, every, 2every, 13, 2, 22, 10, 30, 17, 7, 27 };^102^103^104^^^102^104^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P3_Replace_Literal]^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, _end, 13, 2, 22, 10, 30, 17, 7, 27 };^102^103^104^^^102^104^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P3_Replace_Literal]^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, day, 2, 22, 10, 30, 17, 7, 27 };^102^103^104^^^102^104^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P3_Replace_Literal]^p 14, 3, -63, 11, 31, 18, 8, -68, 16, 5, -65, 13, -6, -6-6, 10, 30, 17, 7, -67 };^102^103^104^^^102^104^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P3_Replace_Literal]^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, , 10, 30, 17, 7, 27 };^102^103^104^^^102^104^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P3_Replace_Literal]^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, end, 30, 17, 7, 27 };^102^103^104^^^102^104^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P3_Replace_Literal]^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, _end, 17, 7, 27 };^102^103^104^^^102^104^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P3_Replace_Literal]^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, every, 7, 27 };^102^103^104^^^102^104^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P3_Replace_Literal]^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, _every };^102^103^104^^^102^104^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P8_Replace_Mix]^p 14 / 0, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^102^103^104^^^102^104^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[P5_Replace_Variable]^super (  null, days ) ;^99^^^^^98^100^super ( label, null, days ) ;^[CLASS] HolidayEaster  [METHOD] <init> [RETURN_TYPE] String,int)   String label int days [VARIABLES] int[]  EASTER  String  label  boolean  long  serialVersionUID  int  days  
[P5_Replace_Variable]^super ( label, null ) ;^99^^^^^98^100^super ( label, null, days ) ;^[CLASS] HolidayEaster  [METHOD] <init> [RETURN_TYPE] String,int)   String label int days [VARIABLES] int[]  EASTER  String  label  boolean  long  serialVersionUID  int  days  
[P5_Replace_Variable]^super ( days, null, label ) ;^99^^^^^98^100^super ( label, null, days ) ;^[CLASS] HolidayEaster  [METHOD] <init> [RETURN_TYPE] String,int)   String label int days [VARIABLES] int[]  EASTER  String  label  boolean  long  serialVersionUID  int  days  
[P14_Delete_Statement]^^99^^^^^98^100^super ( label, null, days ) ;^[CLASS] HolidayEaster  [METHOD] <init> [RETURN_TYPE] String,int)   String label int days [VARIABLES] int[]  EASTER  String  label  boolean  long  serialVersionUID  int  days  
[P1_Replace_Type]^short  day = EASTER[year % 19];^113^^^^^112^117^int day = EASTER[year % 19];^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P2_Replace_Operator]^int day = EASTER[year   instanceof   19];^113^^^^^112^117^int day = EASTER[year % 19];^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P3_Replace_Literal]^int day = EASTER[year % ];^113^^^^^112^117^int day = EASTER[year % 19];^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P2_Replace_Operator]^Date easter = DateFactory.date ( year,  ( day <= 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P3_Replace_Literal]^Date easter = DateFactory.date ( year,  ( day < 24 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P3_Replace_Literal]^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( -7 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P5_Replace_Variable]^Date easter = DateFactory.date ( day,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P5_Replace_Variable]^Date easter = DateFactory.date (   ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P5_Replace_Variable]^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P5_Replace_Variable]^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR :  day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P5_Replace_Variable]^Date easter = DateFactory.date ( day,  ( year < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P5_Replace_Variable]^Date easter = DateFactory.date ( year,  ( Month.MAR < 20 )  ? Month.APR : day, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P5_Replace_Variable]^Date easter = DateFactory.date ( year,  ( Month.APR < 20 )  ? day : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P5_Replace_Variable]^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.MAR : Month.APR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P6_Replace_Expression]^Date easter  =  Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P6_Replace_Expression]^Date easter  =  Month.APR ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P7_Replace_Invocation]^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day )  .nextWeekday (  )  .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P3_Replace_Literal]^Date easter = DateFactory.date ( year,  ( day < 28 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P3_Replace_Literal]^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( year ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P5_Replace_Variable]^Date easter = DateFactory.date ( Month.APR,  ( day < 20 )  ? year : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P14_Delete_Statement]^^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P2_Replace_Operator]^Date easter = DateFactory.date ( year,  ( day > 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P3_Replace_Literal]^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( -4 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P5_Replace_Variable]^Date easter = DateFactory.date ( year,  ( year < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P5_Replace_Variable]^Date easter = DateFactory.date ( Month.MAR,  ( day < 20 )  ? Month.APR : year, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P7_Replace_Invocation]^Date easter = DateFactory .date ( year )  .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P3_Replace_Literal]^Date easter = DateFactory.date ( year,  ( day < 25 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P5_Replace_Variable]^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : null, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P7_Replace_Invocation]^Date easter = DateFactory .date ( day )  .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P5_Replace_Variable]^Date holi = easter.addDays ( year ) ;^115^^^^^112^117^Date holi = easter.addDays ( _day ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P5_Replace_Variable]^Date holi = _day.addDays ( easter ) ;^115^^^^^112^117^Date holi = easter.addDays ( _day ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P8_Replace_Mix]^Date holi = holi.addDays ( _day ) ;^115^^^^^112^117^Date holi = easter.addDays ( _day ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P14_Delete_Statement]^^115^^^^^112^117^Date holi = easter.addDays ( _day ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P5_Replace_Variable]^return easter;^116^^^^^112^117^return holi;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P1_Replace_Type]^static final  short  serialVersionUID = 1001L;^127^^^^^122^132^static final long serialVersionUID = 1001L;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P8_Replace_Mix]^static final long serialVersionUID = 1001;^127^^^^^122^132^static final long serialVersionUID = 1001L;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[P5_Replace_Variable]^super (  spring ? Month.MAR : Month.SEP, days ) ;^136^^^^^135^137^super ( label, spring ? Month.MAR : Month.SEP, days ) ;^[CLASS] HolidayEquinox  [METHOD] <init> [RETURN_TYPE] String,boolean,int)   String label boolean spring int days [VARIABLES] String  label  boolean  spring  long  serialVersionUID  int  days  
[P5_Replace_Variable]^super ( label ? Month.MAR : Month.SEP, days ) ;^136^^^^^135^137^super ( label, spring ? Month.MAR : Month.SEP, days ) ;^[CLASS] HolidayEquinox  [METHOD] <init> [RETURN_TYPE] String,boolean,int)   String label boolean spring int days [VARIABLES] String  label  boolean  spring  long  serialVersionUID  int  days  
[P5_Replace_Variable]^super ( label, spring ? Month.MAR : Month.SEP ) ;^136^^^^^135^137^super ( label, spring ? Month.MAR : Month.SEP, days ) ;^[CLASS] HolidayEquinox  [METHOD] <init> [RETURN_TYPE] String,boolean,int)   String label boolean spring int days [VARIABLES] String  label  boolean  spring  long  serialVersionUID  int  days  
[P5_Replace_Variable]^super ( label, spring ? Month.MAR :  days ) ;^136^^^^^135^137^super ( label, spring ? Month.MAR : Month.SEP, days ) ;^[CLASS] HolidayEquinox  [METHOD] <init> [RETURN_TYPE] String,boolean,int)   String label boolean spring int days [VARIABLES] String  label  boolean  spring  long  serialVersionUID  int  days  
[P5_Replace_Variable]^super ( Month.SEP, spring ? Month.MAR : label, days ) ;^136^^^^^135^137^super ( label, spring ? Month.MAR : Month.SEP, days ) ;^[CLASS] HolidayEquinox  [METHOD] <init> [RETURN_TYPE] String,boolean,int)   String label boolean spring int days [VARIABLES] String  label  boolean  spring  long  serialVersionUID  int  days  
[P5_Replace_Variable]^super ( spring, label ? Month.MAR : Month.SEP, days ) ;^136^^^^^135^137^super ( label, spring ? Month.MAR : Month.SEP, days ) ;^[CLASS] HolidayEquinox  [METHOD] <init> [RETURN_TYPE] String,boolean,int)   String label boolean spring int days [VARIABLES] String  label  boolean  spring  long  serialVersionUID  int  days  
[P5_Replace_Variable]^super ( label, spring ? Month.MAR : days, Month.SEP ) ;^136^^^^^135^137^super ( label, spring ? Month.MAR : Month.SEP, days ) ;^[CLASS] HolidayEquinox  [METHOD] <init> [RETURN_TYPE] String,boolean,int)   String label boolean spring int days [VARIABLES] String  label  boolean  spring  long  serialVersionUID  int  days  
[P5_Replace_Variable]^super ( Month.MAR, spring ? label : Month.SEP, days ) ;^136^^^^^135^137^super ( label, spring ? Month.MAR : Month.SEP, days ) ;^[CLASS] HolidayEquinox  [METHOD] <init> [RETURN_TYPE] String,boolean,int)   String label boolean spring int days [VARIABLES] String  label  boolean  spring  long  serialVersionUID  int  days  
[P5_Replace_Variable]^super ( label, spring ? Month.SEP : Month.MAR, days ) ;^136^^^^^135^137^super ( label, spring ? Month.MAR : Month.SEP, days ) ;^[CLASS] HolidayEquinox  [METHOD] <init> [RETURN_TYPE] String,boolean,int)   String label boolean spring int days [VARIABLES] String  label  boolean  spring  long  serialVersionUID  int  days  
[P14_Delete_Statement]^^136^^^^^135^137^super ( label, spring ? Month.MAR : Month.SEP, days ) ;^[CLASS] HolidayEquinox  [METHOD] <init> [RETURN_TYPE] String,boolean,int)   String label boolean spring int days [VARIABLES] String  label  boolean  spring  long  serialVersionUID  int  days  
[P2_Replace_Operator]^if  ( _month >= Month.MAR )  {^148^^^^^145^155^if  ( _month == Month.MAR )  {^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P5_Replace_Variable]^if  ( _month == null )  {^148^^^^^145^155^if  ( _month == Month.MAR )  {^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P5_Replace_Variable]^if  ( Month.MAR == _month )  {^148^^^^^145^155^if  ( _month == Month.MAR )  {^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P15_Unwrap_Block]^equinox = org.joda.time.contrib.holiday.currency.DateFactory.date(year, _month, 21);^148^149^150^151^152^145^155^if  ( _month == Month.MAR )  { equinox = DateFactory.date ( year, _month, 21 ) ; } else { equinox = DateFactory.date ( year, _month, 23 ) ; }^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P16_Remove_Block]^^148^149^150^151^152^145^155^if  ( _month == Month.MAR )  { equinox = DateFactory.date ( year, _month, 21 ) ; } else { equinox = DateFactory.date ( year, _month, 23 ) ; }^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P3_Replace_Literal]^equinox = DateFactory.date ( year, _month, year ) ;^151^^^^^145^155^equinox = DateFactory.date ( year, _month, 23 ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P5_Replace_Variable]^equinox = DateFactory.date (  _month, 23 ) ;^151^^^^^145^155^equinox = DateFactory.date ( year, _month, 23 ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P5_Replace_Variable]^equinox = DateFactory.date ( year,  23 ) ;^151^^^^^145^155^equinox = DateFactory.date ( year, _month, 23 ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P5_Replace_Variable]^equinox = DateFactory.date ( _month, year, 23 ) ;^151^^^^^145^155^equinox = DateFactory.date ( year, _month, 23 ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P8_Replace_Mix]^equinox = DateFactory.date ( year, _month, 3 ) ;^151^^^^^145^155^equinox = DateFactory.date ( year, _month, 23 ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P11_Insert_Donor_Statement]^equinox = DateFactory.date ( year, _month, 21 ) ;equinox = DateFactory.date ( year, _month, 23 ) ;^151^^^^^145^155^equinox = DateFactory.date ( year, _month, 23 ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P3_Replace_Literal]^equinox = DateFactory.date ( year, _month, 27 ) ;^151^^^^^145^155^equinox = DateFactory.date ( year, _month, 23 ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P14_Delete_Statement]^^151^^^^^145^155^equinox = DateFactory.date ( year, _month, 23 ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P3_Replace_Literal]^equinox = DateFactory.date ( year, _month, 16 ) ;^149^^^^^145^155^equinox = DateFactory.date ( year, _month, 21 ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P5_Replace_Variable]^equinox = DateFactory.date (  _month, 21 ) ;^149^^^^^145^155^equinox = DateFactory.date ( year, _month, 21 ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P5_Replace_Variable]^equinox = DateFactory.date ( year,  21 ) ;^149^^^^^145^155^equinox = DateFactory.date ( year, _month, 21 ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P5_Replace_Variable]^equinox = DateFactory.date ( _month, year, 21 ) ;^149^^^^^145^155^equinox = DateFactory.date ( year, _month, 21 ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P8_Replace_Mix]^equinox = DateFactory.date ( year, _month, 21 % 3 ) ;^149^^^^^145^155^equinox = DateFactory.date ( year, _month, 21 ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P11_Insert_Donor_Statement]^equinox = DateFactory.date ( year, _month, 23 ) ;equinox = DateFactory.date ( year, _month, 21 ) ;^149^^^^^145^155^equinox = DateFactory.date ( year, _month, 21 ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P3_Replace_Literal]^equinox = DateFactory.date ( year, _month, year ) ;^149^^^^^145^155^equinox = DateFactory.date ( year, _month, 21 ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P8_Replace_Mix]^equinox = DateFactory.date ( year, 0, 21 ) ;^149^^^^^145^155^equinox = DateFactory.date ( year, _month, 21 ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P14_Delete_Statement]^^149^^^^^145^155^equinox = DateFactory.date ( year, _month, 21 ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P3_Replace_Literal]^equinox = DateFactory.date ( year, _month, 30 ) ;^149^^^^^145^155^equinox = DateFactory.date ( year, _month, 21 ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P5_Replace_Variable]^equinox = DateFactory.date ( year, 3, 21 ) ;^149^^^^^145^155^equinox = DateFactory.date ( year, _month, 21 ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P7_Replace_Invocation]^equinox = DateFactory .date ( year , 0 , year )  ;^149^^^^^145^155^equinox = DateFactory.date ( year, _month, 21 ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P8_Replace_Mix]^equinox = DateFactory.date ( year, _month, 21 / 4 ) ;^149^^^^^145^155^equinox = DateFactory.date ( year, _month, 21 ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P3_Replace_Literal]^equinox = DateFactory.date ( year, _month, 24 ) ;^151^^^^^145^155^equinox = DateFactory.date ( year, _month, 23 ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P8_Replace_Mix]^equinox = DateFactory.date ( year, _month, 10 ) ;^151^^^^^145^155^equinox = DateFactory.date ( year, _month, 23 ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P5_Replace_Variable]^Date holi = equinox.addDays ( year ) ;^153^^^^^145^155^Date holi = equinox.addDays ( _day ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P5_Replace_Variable]^Date holi = _day.addDays ( equinox ) ;^153^^^^^145^155^Date holi = equinox.addDays ( _day ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P5_Replace_Variable]^Date holi = holi.addDays ( _day ) ;^153^^^^^145^155^Date holi = equinox.addDays ( _day ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P14_Delete_Statement]^^153^^^^^145^155^Date holi = equinox.addDays ( _day ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P5_Replace_Variable]^return equinox;^154^^^^^145^155^return holi;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P1_Replace_Type]^static final  short  serialVersionUID = 1001L;^165^^^^^160^170^static final long serialVersionUID = 1001L;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P8_Replace_Mix]^static final long serialVersionUID  = null ;^165^^^^^160^170^static final long serialVersionUID = 1001L;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[P5_Replace_Variable]^super (  null, days ) ;^173^^^^^172^174^super ( label, null, days ) ;^[CLASS] HolidayIslamic  [METHOD] <init> [RETURN_TYPE] String,int)   String label int days [VARIABLES] int[][]  ISLAMIC  String  label  boolean  long  serialVersionUID  int  days  
[P5_Replace_Variable]^super ( label, null ) ;^173^^^^^172^174^super ( label, null, days ) ;^[CLASS] HolidayIslamic  [METHOD] <init> [RETURN_TYPE] String,int)   String label int days [VARIABLES] int[][]  ISLAMIC  String  label  boolean  long  serialVersionUID  int  days  
[P5_Replace_Variable]^super ( days, null, label ) ;^173^^^^^172^174^super ( label, null, days ) ;^[CLASS] HolidayIslamic  [METHOD] <init> [RETURN_TYPE] String,int)   String label int days [VARIABLES] int[][]  ISLAMIC  String  label  boolean  long  serialVersionUID  int  days  
[P14_Delete_Statement]^^173^^^^^172^174^super ( label, null, days ) ;^[CLASS] HolidayIslamic  [METHOD] <init> [RETURN_TYPE] String,int)   String label int days [VARIABLES] int[][]  ISLAMIC  String  label  boolean  long  serialVersionUID  int  days  
[P2_Replace_Operator]^if  ( 1999 <= year || year <= 2002 )  {^188^^^^^186^194^if  ( 1999 <= year && year <= 2002 )  {^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P2_Replace_Operator]^if  ( 1999 < year && year <= 2002 )  {^188^^^^^186^194^if  ( 1999 <= year && year <= 2002 )  {^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P2_Replace_Operator]^if  ( 1999 <= year && year > 2002 )  {^188^^^^^186^194^if  ( 1999 <= year && year <= 2002 )  {^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P3_Replace_Literal]^if  ( yr <= year && year <= 2002 )  {^188^^^^^186^194^if  ( 1999 <= year && year <= 2002 )  {^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P3_Replace_Literal]^if  ( 2000 <= year && year <= 2002 )  {^188^^^^^186^194^if  ( 1999 <= year && year <= 2002 )  {^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P3_Replace_Literal]^if  ( year999 <= year && year <= 2002 )  {^188^^^^^186^194^if  ( 1999 <= year && year <= 2002 )  {^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P3_Replace_Literal]^if  ( 1999 <= year && year <= 4004 )  {^188^^^^^186^194^if  ( 1999 <= year && year <= 2002 )  {^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P6_Replace_Expression]^if  ( 1999 <= year ) {^188^^^^^186^194^if  ( 1999 <= year && year <= 2002 )  {^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P6_Replace_Expression]^if  (  year <= 2002 )  {^188^^^^^186^194^if  ( 1999 <= year && year <= 2002 )  {^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P6_Replace_Expression]^if  ( year - 1999 )  {^188^^^^^186^194^if  ( 1999 <= year && year <= 2002 )  {^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P15_Unwrap_Block]^int yr = year - 1999; org.joda.time.contrib.holiday.currency.Date islamic = org.joda.time.contrib.holiday.currency.DateFactory.date(year, org.joda.time.contrib.holiday.currency.Month.month(org.joda.time.contrib.holiday.currency.HolidayIslamic.ISLAMIC[yr][1]), org.joda.time.contrib.holiday.currency.HolidayIslamic.ISLAMIC[yr][2]); holi = islamic.addDays(_day);^188^189^190^191^192^186^194^if  ( 1999 <= year && year <= 2002 )  { int yr = year - 1999; Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][2] ) ; holi = islamic.addDays ( _day ) ; }^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P16_Remove_Block]^^188^189^190^191^192^186^194^if  ( 1999 <= year && year <= 2002 )  { int yr = year - 1999; Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][2] ) ; holi = islamic.addDays ( _day ) ; }^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P5_Replace_Variable]^holi = holi.addDays ( _day ) ;^191^^^^^186^194^holi = islamic.addDays ( _day ) ;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P5_Replace_Variable]^holi = islamic.addDays ( yr ) ;^191^^^^^186^194^holi = islamic.addDays ( _day ) ;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P5_Replace_Variable]^holi = _day.addDays ( islamic ) ;^191^^^^^186^194^holi = islamic.addDays ( _day ) ;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P8_Replace_Mix]^holi =  null.addDays ( _day ) ;^191^^^^^186^194^holi = islamic.addDays ( _day ) ;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P1_Replace_Type]^short  yr = year - 1999;^189^^^^^186^194^int yr = year - 1999;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P2_Replace_Operator]^int yr = year  <  1999;^189^^^^^186^194^int yr = year - 1999;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P3_Replace_Literal]^int yr = year ;^189^^^^^186^194^int yr = year - 1999;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P3_Replace_Literal]^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][year] ) , ISLAMIC[yr][2] ) ;^190^^^^^186^194^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][2] ) ;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P3_Replace_Literal]^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][3] ) ;^190^^^^^186^194^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][2] ) ;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P5_Replace_Variable]^Date islamic = DateFactory.date ( yr, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][2] ) ;^190^^^^^186^194^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][2] ) ;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P5_Replace_Variable]^Date islamic = DateFactory.date (  Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][2] ) ;^190^^^^^186^194^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][2] ) ;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P5_Replace_Variable]^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][1] ) [yr][2] ) ;^190^^^^^186^194^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][2] ) ;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P3_Replace_Literal]^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][8] ) ;^190^^^^^186^194^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][2] ) ;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P14_Delete_Statement]^^190^191^^^^186^194^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][2] ) ; holi = islamic.addDays ( _day ) ;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P14_Delete_Statement]^^191^^^^^186^194^holi = islamic.addDays ( _day ) ;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P1_Replace_Type]^long  yr = year - 1999;^189^^^^^186^194^int yr = year - 1999;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P2_Replace_Operator]^int yr = year  |  1999;^189^^^^^186^194^int yr = year - 1999;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P3_Replace_Literal]^int yr = year - yr;^189^^^^^186^194^int yr = year - 1999;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P3_Replace_Literal]^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][] ) , ISLAMIC[yr][2] ) ;^190^^^^^186^194^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][2] ) ;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P3_Replace_Literal]^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][-3] ) ;^190^^^^^186^194^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][2] ) ;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P5_Replace_Variable]^Date islamic = DateFactory.date ( ISLAMIC, Month.month ( year[yr][1] ) , ISLAMIC[yr][2] ) ;^190^^^^^186^194^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][2] ) ;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P3_Replace_Literal]^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][10] ) , ISLAMIC[yr][2] ) ;^190^^^^^186^194^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][2] ) ;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P3_Replace_Literal]^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][-1] ) ;^190^^^^^186^194^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][2] ) ;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P8_Replace_Mix]^Date islamic = DateFactory .date ( year )  ;^190^^^^^186^194^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][2] ) ;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P14_Delete_Statement]^^190^^^^^186^194^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][2] ) ;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P3_Replace_Literal]^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][-6] ) , ISLAMIC[yr][2] ) ;^190^^^^^186^194^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][2] ) ;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P8_Replace_Mix]^return islamic;^193^^^^^186^194^return holi;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P1_Replace_Type]^static final  short  serialVersionUID = 1001L;^204^^^^^199^209^static final long serialVersionUID = 1001L;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P8_Replace_Mix]^static final long serialVersionUID  = null ;^204^^^^^199^209^static final long serialVersionUID = 1001L;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[P5_Replace_Variable]^super (  null, days ) ;^212^^^^^211^213^super ( label, null, days ) ;^[CLASS] HolidayLunar  [METHOD] <init> [RETURN_TYPE] String,int)   String label int days [VARIABLES] int[][]  LUNAR  String  label  boolean  long  serialVersionUID  int  days  
[P5_Replace_Variable]^super ( label, null ) ;^212^^^^^211^213^super ( label, null, days ) ;^[CLASS] HolidayLunar  [METHOD] <init> [RETURN_TYPE] String,int)   String label int days [VARIABLES] int[][]  LUNAR  String  label  boolean  long  serialVersionUID  int  days  
[P5_Replace_Variable]^super ( days, null, label ) ;^212^^^^^211^213^super ( label, null, days ) ;^[CLASS] HolidayLunar  [METHOD] <init> [RETURN_TYPE] String,int)   String label int days [VARIABLES] int[][]  LUNAR  String  label  boolean  long  serialVersionUID  int  days  
[P14_Delete_Statement]^^212^^^^^211^213^super ( label, null, days ) ;^[CLASS] HolidayLunar  [METHOD] <init> [RETURN_TYPE] String,int)   String label int days [VARIABLES] int[][]  LUNAR  String  label  boolean  long  serialVersionUID  int  days  
[P2_Replace_Operator]^if  ( 1999 <= year || year <= 2010 )  {^228^^^^^226^234^if  ( 1999 <= year && year <= 2010 )  {^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P2_Replace_Operator]^if  ( 1999 > year && year <= 2010 )  {^228^^^^^226^234^if  ( 1999 <= year && year <= 2010 )  {^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P2_Replace_Operator]^if  ( 1999 <= year && year < 2010 )  {^228^^^^^226^234^if  ( 1999 <= year && year <= 2010 )  {^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P3_Replace_Literal]^if  (  <= year && year <= 2010 )  {^228^^^^^226^234^if  ( 1999 <= year && year <= 2010 )  {^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P3_Replace_Literal]^if  ( 1999 <= year && year <= yr )  {^228^^^^^226^234^if  ( 1999 <= year && year <= 2010 )  {^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P3_Replace_Literal]^if  ( 2002 <= year && year <= 2010 )  {^228^^^^^226^234^if  ( 1999 <= year && year <= 2010 )  {^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P3_Replace_Literal]^if  ( year999 <= year && year <= 20year0 )  {^228^^^^^226^234^if  ( 1999 <= year && year <= 2010 )  {^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P3_Replace_Literal]^if  ( 1999 <= year && year <= -1010 )  {^228^^^^^226^234^if  ( 1999 <= year && year <= 2010 )  {^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P6_Replace_Expression]^if  ( 1999 <= year ) {^228^^^^^226^234^if  ( 1999 <= year && year <= 2010 )  {^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P6_Replace_Expression]^if  (  year <= 2010 )  {^228^^^^^226^234^if  ( 1999 <= year && year <= 2010 )  {^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P6_Replace_Expression]^if  ( year - 1999 )  {^228^^^^^226^234^if  ( 1999 <= year && year <= 2010 )  {^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P8_Replace_Mix]^if  ( 1 <= year ) {^228^^^^^226^234^if  ( 1999 <= year && year <= 2010 )  {^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P15_Unwrap_Block]^int yr = year - 1999; org.joda.time.contrib.holiday.currency.Date lunar = org.joda.time.contrib.holiday.currency.DateFactory.date(year, org.joda.time.contrib.holiday.currency.Month.month(org.joda.time.contrib.holiday.currency.HolidayLunar.LUNAR[yr][1]), org.joda.time.contrib.holiday.currency.HolidayLunar.LUNAR[yr][2]); holi = lunar.addDays(_day);^228^229^230^231^232^226^234^if  ( 1999 <= year && year <= 2010 )  { int yr = year - 1999; Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][2] ) ; holi = lunar.addDays ( _day ) ; }^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P16_Remove_Block]^^228^229^230^231^232^226^234^if  ( 1999 <= year && year <= 2010 )  { int yr = year - 1999; Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][2] ) ; holi = lunar.addDays ( _day ) ; }^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P5_Replace_Variable]^holi = holi.addDays ( _day ) ;^231^^^^^226^234^holi = lunar.addDays ( _day ) ;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P5_Replace_Variable]^holi = lunar.addDays ( yr ) ;^231^^^^^226^234^holi = lunar.addDays ( _day ) ;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P5_Replace_Variable]^holi = _day.addDays ( lunar ) ;^231^^^^^226^234^holi = lunar.addDays ( _day ) ;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P8_Replace_Mix]^holi =  null.addDays ( _day ) ;^231^^^^^226^234^holi = lunar.addDays ( _day ) ;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P1_Replace_Type]^short  yr = year - 1999;^229^^^^^226^234^int yr = year - 1999;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P2_Replace_Operator]^int yr = year  &&  1999;^229^^^^^226^234^int yr = year - 1999;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P3_Replace_Literal]^int yr = year ;^229^^^^^226^234^int yr = year - 1999;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P3_Replace_Literal]^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][] ) , LUNAR[yr][2] ) ;^230^^^^^226^234^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][2] ) ;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P3_Replace_Literal]^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][year] ) ;^230^^^^^226^234^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][2] ) ;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P5_Replace_Variable]^Date lunar = DateFactory.date (  Month.month ( LUNAR[yr][1] ) , LUNAR[yr][2] ) ;^230^^^^^226^234^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][2] ) ;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P5_Replace_Variable]^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) [yr][2] ) ;^230^^^^^226^234^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][2] ) ;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P5_Replace_Variable]^Date lunar = DateFactory.date ( LUNAR, Month.month ( year[yr][1] ) , LUNAR[yr][2] ) ;^230^^^^^226^234^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][2] ) ;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P7_Replace_Invocation]^Date lunar = DateFactory .date ( year )  ;^230^^^^^226^234^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][2] ) ;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P8_Replace_Mix]^Date lunar = DateFactory.date ( yr, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][2] ) ;^230^^^^^226^234^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][2] ) ;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P3_Replace_Literal]^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][yr] ) , LUNAR[yr][2] ) ;^230^^^^^226^234^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][2] ) ;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P3_Replace_Literal]^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][-7] ) ;^230^^^^^226^234^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][2] ) ;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P14_Delete_Statement]^^230^^^^^226^234^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][2] ) ;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P14_Delete_Statement]^^230^231^^^^226^234^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][2] ) ; holi = lunar.addDays ( _day ) ;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P14_Delete_Statement]^^231^^^^^226^234^holi = lunar.addDays ( _day ) ;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P1_Replace_Type]^long  yr = year - 1999;^229^^^^^226^234^int yr = year - 1999;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P2_Replace_Operator]^int yr = year  >=  1999;^229^^^^^226^234^int yr = year - 1999;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P3_Replace_Literal]^int yr = year - year;^229^^^^^226^234^int yr = year - 1999;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P3_Replace_Literal]^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][-7] ) , LUNAR[yr][2] ) ;^230^^^^^226^234^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][2] ) ;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P3_Replace_Literal]^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][-1] ) ;^230^^^^^226^234^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][2] ) ;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P3_Replace_Literal]^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][-5] ) ;^230^^^^^226^234^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][2] ) ;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P3_Replace_Literal]^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][year] ) , LUNAR[yr][2] ) ;^230^^^^^226^234^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][2] ) ;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P8_Replace_Mix]^return lunar;^233^^^^^226^234^return holi;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P1_Replace_Type]^static final  short  serialVersionUID = 1001L;^244^^^^^239^249^static final long serialVersionUID = 1001L;^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P8_Replace_Mix]^static final long serialVersionUID = 1001;^244^^^^^239^249^static final long serialVersionUID = 1001L;^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[P5_Replace_Variable]^super (  month, day ) ;^253^^^^^252^254^super ( label, month, day ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int)   String label Month month int day [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  
[P5_Replace_Variable]^super ( label,  day ) ;^253^^^^^252^254^super ( label, month, day ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int)   String label Month month int day [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  
[P5_Replace_Variable]^super ( label, month ) ;^253^^^^^252^254^super ( label, month, day ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int)   String label Month month int day [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  
[P5_Replace_Variable]^super ( month, label, day ) ;^253^^^^^252^254^super ( label, month, day ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int)   String label Month month int day [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  
[P5_Replace_Variable]^super ( label, day, month ) ;^253^^^^^252^254^super ( label, month, day ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int)   String label Month month int day [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  
[P14_Delete_Statement]^^253^^^^^252^254^super ( label, month, day ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int)   String label Month month int day [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  
[P11_Insert_Donor_Statement]^super ( label, month, day, start, end, every ) ;super ( label, month, day ) ;^253^^^^^252^254^super ( label, month, day ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int)   String label Month month int day [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  
[P5_Replace_Variable]^super ( label, month, start, start, end, every ) ;^266^^^^^265^267^super ( label, month, day, start, end, every ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  end  every  start  
[P5_Replace_Variable]^super ( label, month, day, end, end, every ) ;^266^^^^^265^267^super ( label, month, day, start, end, every ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  end  every  start  
[P5_Replace_Variable]^super ( label, month, day, start, end, start ) ;^266^^^^^265^267^super ( label, month, day, start, end, every ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  end  every  start  
[P5_Replace_Variable]^super (  month, day, start, end, every ) ;^266^^^^^265^267^super ( label, month, day, start, end, every ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  end  every  start  
[P5_Replace_Variable]^super ( label,  day, start, end, every ) ;^266^^^^^265^267^super ( label, month, day, start, end, every ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  end  every  start  
[P5_Replace_Variable]^super ( label, month,  start, end, every ) ;^266^^^^^265^267^super ( label, month, day, start, end, every ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  end  every  start  
[P5_Replace_Variable]^super ( label, month, day,  end, every ) ;^266^^^^^265^267^super ( label, month, day, start, end, every ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  end  every  start  
[P5_Replace_Variable]^super ( label, month, day, start,  every ) ;^266^^^^^265^267^super ( label, month, day, start, end, every ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  end  every  start  
[P5_Replace_Variable]^super ( label, month, day, start, end ) ;^266^^^^^265^267^super ( label, month, day, start, end, every ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  end  every  start  
[P5_Replace_Variable]^super ( month, label, day, start, end, every ) ;^266^^^^^265^267^super ( label, month, day, start, end, every ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  end  every  start  
[P5_Replace_Variable]^super ( label, every, day, start, end, month ) ;^266^^^^^265^267^super ( label, month, day, start, end, every ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  end  every  start  
[P5_Replace_Variable]^super ( label, month, every, start, end, day ) ;^266^^^^^265^267^super ( label, month, day, start, end, every ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  end  every  start  
[P5_Replace_Variable]^super ( label, month, start, day, end, every ) ;^266^^^^^265^267^super ( label, month, day, start, end, every ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  end  every  start  
[P5_Replace_Variable]^super ( label, month, day, start, every, end ) ;^266^^^^^265^267^super ( label, month, day, start, end, every ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  end  every  start  
[P14_Delete_Statement]^^266^^^^^265^267^super ( label, month, day, start, end, every ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  end  every  start  
[P11_Insert_Donor_Statement]^super ( label, month, day ) ;super ( label, month, day, start, end, every ) ;^266^^^^^265^267^super ( label, month, day, start, end, every ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  end  every  start  
[P2_Replace_Operator]^if  ( _every == 1 &&  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P2_Replace_Operator]^if  ( _every >= 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P2_Replace_Operator]^if  ( _every == 1 ||  ( _start <= year || year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P2_Replace_Operator]^if  ( _every == 1 ||  ( _start == year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P2_Replace_Operator]^if  ( _every == 1 ||  ( _start <= year && year == _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P2_Replace_Operator]^if  ( _every != 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P2_Replace_Operator]^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )   ||  _every == 0 )  )  )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P2_Replace_Operator]^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year  <<  _start )  % _every == 0 )  )  )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P3_Replace_Literal]^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 8 )  )  )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P5_Replace_Variable]^if  ( year == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P5_Replace_Variable]^if  ( _every == 1 ||  ( _start <= year && year <= year &&  (  ( year - _start )  % _every == 0 )  )  )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P5_Replace_Variable]^if  ( _end == 1 ||  ( _start <= year && year <= _every &&  (  ( year - _start )  % _every == 0 )  )  )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P5_Replace_Variable]^if  ( _every == 1 ||  ( _end <= year && year <= _start &&  (  ( year - _start )  % _every == 0 )  )  )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P6_Replace_Expression]^if  ( _every == 1 ) {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P6_Replace_Expression]^if  (   ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P6_Replace_Expression]^if  ( ((_start <= year) && (year <= _end) && ((year - _start) % _every) == 0) )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P6_Replace_Expression]^if  ( (_start <= year && year <= _end) )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P6_Replace_Expression]^if  ( _start <= year )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P6_Replace_Expression]^if  ( year <= _end )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P6_Replace_Expression]^if  (  ( year -  ( _start )  )  %  ( _every )  == 0 )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P6_Replace_Expression]^if  ( year -  ( _start )  % _every )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P6_Replace_Expression]^if  ( year - _start )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P8_Replace_Mix]^if  ( _every == 1 * 4 ) {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P15_Unwrap_Block]^holi = org.joda.time.contrib.holiday.currency.DateFactory.date(year, _month, _day);^277^278^279^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  { holi = DateFactory.date ( year, _month, _day ) ; }^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P16_Remove_Block]^^277^278^279^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  { holi = DateFactory.date ( year, _month, _day ) ; }^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P5_Replace_Variable]^holi = DateFactory.date (  _month, _day ) ;^278^^^^^275^281^holi = DateFactory.date ( year, _month, _day ) ;^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P5_Replace_Variable]^holi = DateFactory.date ( year,  _day ) ;^278^^^^^275^281^holi = DateFactory.date ( year, _month, _day ) ;^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P5_Replace_Variable]^holi = DateFactory.date ( year, _month ) ;^278^^^^^275^281^holi = DateFactory.date ( year, _month, _day ) ;^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P5_Replace_Variable]^holi = DateFactory.date ( _day, _month, year ) ;^278^^^^^275^281^holi = DateFactory.date ( year, _month, _day ) ;^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P5_Replace_Variable]^holi = DateFactory.date ( _month, year, _day ) ;^278^^^^^275^281^holi = DateFactory.date ( year, _month, _day ) ;^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P8_Replace_Mix]^holi =  DateFactory.date ( null, _month, _day ) ;^278^^^^^275^281^holi = DateFactory.date ( year, _month, _day ) ;^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P5_Replace_Variable]^holi = DateFactory.date ( year, _day, _month ) ;^278^^^^^275^281^holi = DateFactory.date ( year, _month, _day ) ;^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P14_Delete_Statement]^^278^^^^^275^281^holi = DateFactory.date ( year, _month, _day ) ;^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P5_Replace_Variable]^holi = DateFactory.date ( year, _month, year ) ;^278^^^^^275^281^holi = DateFactory.date ( year, _month, _day ) ;^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P1_Replace_Type]^static final  short  serialVersionUID = 1001L;^291^^^^^286^296^static final long serialVersionUID = 1001L;^[CLASS] HolidayWeekday  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P8_Replace_Mix]^static final  short  serialVersionUID = 1001;^291^^^^^286^296^static final long serialVersionUID = 1001L;^[CLASS] HolidayWeekday  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P5_Replace_Variable]^super (  month, day ) ;^301^^^^^300^303^super ( label, month, day ) ;^[CLASS] HolidayWeekday  [METHOD] <init> [RETURN_TYPE] Weekday)   String label Month month int day Weekday weekday [VARIABLES] Month  month  Weekday  weekday  String  label  boolean  long  serialVersionUID  int  day  
[P5_Replace_Variable]^super ( label,  day ) ;^301^^^^^300^303^super ( label, month, day ) ;^[CLASS] HolidayWeekday  [METHOD] <init> [RETURN_TYPE] Weekday)   String label Month month int day Weekday weekday [VARIABLES] Month  month  Weekday  weekday  String  label  boolean  long  serialVersionUID  int  day  
[P5_Replace_Variable]^super ( label, month ) ;^301^^^^^300^303^super ( label, month, day ) ;^[CLASS] HolidayWeekday  [METHOD] <init> [RETURN_TYPE] Weekday)   String label Month month int day Weekday weekday [VARIABLES] Month  month  Weekday  weekday  String  label  boolean  long  serialVersionUID  int  day  
[P5_Replace_Variable]^super ( month, label, day ) ;^301^^^^^300^303^super ( label, month, day ) ;^[CLASS] HolidayWeekday  [METHOD] <init> [RETURN_TYPE] Weekday)   String label Month month int day Weekday weekday [VARIABLES] Month  month  Weekday  weekday  String  label  boolean  long  serialVersionUID  int  day  
[P5_Replace_Variable]^super ( label, day, month ) ;^301^^^^^300^303^super ( label, month, day ) ;^[CLASS] HolidayWeekday  [METHOD] <init> [RETURN_TYPE] Weekday)   String label Month month int day Weekday weekday [VARIABLES] Month  month  Weekday  weekday  String  label  boolean  long  serialVersionUID  int  day  
[P14_Delete_Statement]^^301^^^^^300^303^super ( label, month, day ) ;^[CLASS] HolidayWeekday  [METHOD] <init> [RETURN_TYPE] Weekday)   String label Month month int day Weekday weekday [VARIABLES] Month  month  Weekday  weekday  String  label  boolean  long  serialVersionUID  int  day  
[P8_Replace_Mix]^_weekday =  null;^302^^^^^300^303^_weekday = weekday;^[CLASS] HolidayWeekday  [METHOD] <init> [RETURN_TYPE] Weekday)   String label Month month int day Weekday weekday [VARIABLES] Month  month  Weekday  weekday  String  label  boolean  long  serialVersionUID  int  day  
[P5_Replace_Variable]^Date holi = DateFactory.date ( year, _month, year ) ;^312^^^^^311^314^Date holi = DateFactory.date ( year, _month, _day ) ;^[CLASS] HolidayWeekday  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P5_Replace_Variable]^Date holi = DateFactory.date (  _month, _day ) ;^312^^^^^311^314^Date holi = DateFactory.date ( year, _month, _day ) ;^[CLASS] HolidayWeekday  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P5_Replace_Variable]^Date holi = DateFactory.date ( year,  _day ) ;^312^^^^^311^314^Date holi = DateFactory.date ( year, _month, _day ) ;^[CLASS] HolidayWeekday  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P5_Replace_Variable]^Date holi = DateFactory.date ( year, _month ) ;^312^^^^^311^314^Date holi = DateFactory.date ( year, _month, _day ) ;^[CLASS] HolidayWeekday  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P5_Replace_Variable]^Date holi = DateFactory.date ( _month, year, _day ) ;^312^^^^^311^314^Date holi = DateFactory.date ( year, _month, _day ) ;^[CLASS] HolidayWeekday  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P5_Replace_Variable]^Date holi = DateFactory.date ( _day, _month, year ) ;^312^^^^^311^314^Date holi = DateFactory.date ( year, _month, _day ) ;^[CLASS] HolidayWeekday  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P5_Replace_Variable]^Date holi = DateFactory.date ( year, 2, _day ) ;^312^^^^^311^314^Date holi = DateFactory.date ( year, _month, _day ) ;^[CLASS] HolidayWeekday  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P5_Replace_Variable]^Date holi = DateFactory.date ( year, _day, _month ) ;^312^^^^^311^314^Date holi = DateFactory.date ( year, _month, _day ) ;^[CLASS] HolidayWeekday  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P14_Delete_Statement]^^312^^^^^311^314^Date holi = DateFactory.date ( year, _month, _day ) ;^[CLASS] HolidayWeekday  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P5_Replace_Variable]^return _weekday.nextWeekday ( holi ) ;^313^^^^^311^314^return holi.nextWeekday ( _weekday ) ;^[CLASS] HolidayWeekday  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[P14_Delete_Statement]^^313^^^^^311^314^return holi.nextWeekday ( _weekday ) ;^[CLASS] HolidayWeekday  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
