[P5_Replace_Variable]^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, 1, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^37^^^^^32^42^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^[CLASS] Month   [VARIABLES] 
[P5_Replace_Variable]^private static Month[]              _months = new Month[] { null,  FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^37^^^^^32^42^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^[CLASS] Month   [VARIABLES] 
[P5_Replace_Variable]^private static Month[]              _months = new Month[] { null, JAN,  MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^37^^^^^32^42^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^[CLASS] Month   [VARIABLES] 
[P5_Replace_Variable]^private static Month[]              _months = new Month[] { null, JAN, FEB,  APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^37^^^^^32^42^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^[CLASS] Month   [VARIABLES] 
[P5_Replace_Variable]^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR,  MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^37^^^^^32^42^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^[CLASS] Month   [VARIABLES] 
[P5_Replace_Variable]^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR,  JUN, JUL, AUG, SEP, OCT, NOV, DEC };^37^^^^^32^42^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^[CLASS] Month   [VARIABLES] 
[P5_Replace_Variable]^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY,  JUL, AUG, SEP, OCT, NOV, DEC };^37^^^^^32^42^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^[CLASS] Month   [VARIABLES] 
[P5_Replace_Variable]^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN,  AUG, SEP, OCT, NOV, DEC };^37^^^^^32^42^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^[CLASS] Month   [VARIABLES] 
[P5_Replace_Variable]^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL,  SEP, OCT, NOV, DEC };^37^^^^^32^42^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^[CLASS] Month   [VARIABLES] 
[P5_Replace_Variable]^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG,  OCT, NOV, DEC };^37^^^^^32^42^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^[CLASS] Month   [VARIABLES] 
[P5_Replace_Variable]^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP,  NOV, DEC };^37^^^^^32^42^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^[CLASS] Month   [VARIABLES] 
[P5_Replace_Variable]^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT,  DEC };^37^^^^^32^42^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^[CLASS] Month   [VARIABLES] 
[P5_Replace_Variable]^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV };^37^^^^^32^42^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^[CLASS] Month   [VARIABLES] 
[P5_Replace_Variable]^private static Month[]              _months = new Month[] { null, MAR, FEB, JAN, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^37^^^^^32^42^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^[CLASS] Month   [VARIABLES] 
[P5_Replace_Variable]^private static Month[]              _months = new Month[] { null, JAN, JUL, MAR, APR, MAY, JUN, FEB, AUG, SEP, OCT, NOV, DEC };^37^^^^^32^42^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^[CLASS] Month   [VARIABLES] 
[P5_Replace_Variable]^private static Month[]              _months = new Month[] { null, JAN, FEB, MAY, APR, MAR, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^37^^^^^32^42^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^[CLASS] Month   [VARIABLES] 
[P5_Replace_Variable]^private static Month[]              _months = new Month[] { null, APR, FEB, MAR, JAN, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^37^^^^^32^42^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^[CLASS] Month   [VARIABLES] 
[P5_Replace_Variable]^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, NOV, JUN, JUL, AUG, SEP, OCT, MAY, DEC };^37^^^^^32^42^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^[CLASS] Month   [VARIABLES] 
[P5_Replace_Variable]^private static Month[]              _months = new Month[] { null, JUN, FEB, MAR, APR, MAY, JAN, JUL, AUG, SEP, OCT, NOV, DEC };^37^^^^^32^42^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^[CLASS] Month   [VARIABLES] 
[P5_Replace_Variable]^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, DEC, AUG, SEP, OCT, NOV, JUL };^37^^^^^32^42^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^[CLASS] Month   [VARIABLES] 
[P5_Replace_Variable]^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, AUG, JUL, JUN, SEP, OCT, NOV, DEC };^37^^^^^32^42^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^[CLASS] Month   [VARIABLES] 
[P5_Replace_Variable]^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, SEP, AUG, OCT, NOV, DEC };^37^^^^^32^42^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^[CLASS] Month   [VARIABLES] 
[P5_Replace_Variable]^private static Month[]              _months = new Month[] { null, OCT, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, JAN, NOV, DEC };^37^^^^^32^42^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^[CLASS] Month   [VARIABLES] 
[P5_Replace_Variable]^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, NOV, SEP, OCT, AUG, DEC };^37^^^^^32^42^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^[CLASS] Month   [VARIABLES] 
[P5_Replace_Variable]^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, DEC, NOV };^37^^^^^32^42^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^[CLASS] Month   [VARIABLES] 
[P8_Replace_Mix]^private static Month[]              _months = new Month[] { true, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^37^^^^^32^42^private static Month[]              _months = new Month[] { null, JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC };^[CLASS] Month   [VARIABLES] 
[P3_Replace_Literal]^private static Map<String, Month>   _names = new HashMap<String, Month> ( 9 ) ;^38^^^^^33^43^private static Map<String, Month>   _names = new HashMap<String, Month> ( 12 ) ;^[CLASS] Month   [VARIABLES] 
[P1_Replace_Type]^public static  short  MONTHS_PER_YEAR = 12;^43^^^^^38^48^public static int MONTHS_PER_YEAR = 12;^[CLASS] Month   [VARIABLES] 
[P3_Replace_Literal]^public static int MONTHS_PER_YEAR = 15;^43^^^^^38^48^public static int MONTHS_PER_YEAR = 12;^[CLASS] Month   [VARIABLES] 
[P8_Replace_Mix]^public static int MONTHS_PER_YEAR ;^43^^^^^38^48^public static int MONTHS_PER_YEAR = 12;^[CLASS] Month   [VARIABLES] 
[P8_Replace_Mix]^private  final String[] FULL_NAME = {^48^^^^^48^51^private static final String[] FULL_NAME = {^[CLASS] Month   [VARIABLES] 
[P3_Replace_Literal]^p 8, 31, 28, 31, 38, 31, 38, 31, 31, 38, 31, 38, 31 };^56^57^58^59^^56^59^p 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };^[CLASS] Month   [VARIABLES] 
[P3_Replace_Literal]^p 0, 33, 28, 33, 30, 33, 30, 33, 33, 30, 33, 30, 33 };^56^57^58^59^^56^59^p 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };^[CLASS] Month   [VARIABLES] 
[P3_Replace_Literal]^p 0, 31, , 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };^56^57^58^59^^56^59^p 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };^[CLASS] Month   [VARIABLES] 
[P3_Replace_Literal]^p 0, 39, 28, 39, 30, 39, 30, 39, 39, 30, 39, 30, 39 };^56^57^58^59^^56^59^p 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };^[CLASS] Month   [VARIABLES] 
[P3_Replace_Literal]^p 0, 31, 28, 31, 26, 31, 26, 31, 31, 26, 31, 26, 31 };^56^57^58^59^^56^59^p 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };^[CLASS] Month   [VARIABLES] 
[P3_Replace_Literal]^p 0, 31, 28, 31, 33, 31, 33, 31, 31, 33, 31, 33, 31 };^56^57^58^59^^56^59^p 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };^[CLASS] Month   [VARIABLES] 
[P3_Replace_Literal]^p 0, 35, 28, 35, 30, 35, 30, 35, 35, 30, 35, 30, 35 };^56^57^58^59^^56^59^p 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };^[CLASS] Month   [VARIABLES] 
[P3_Replace_Literal]^p 0, 34, 28, 34, 30, 34, 30, 34, 34, 30, 34, 30, 34 };^56^57^58^59^^56^59^p 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };^[CLASS] Month   [VARIABLES] 
[P3_Replace_Literal]^p 0, 31, 28, 31, 38, 31, 38, 31, 31, 38, 31, 38, 31 };^56^57^58^59^^56^59^p 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };^[CLASS] Month   [VARIABLES] 
[P3_Replace_Literal]^p 0, 38, 28, 38, 30, 38, 30, 38, 38, 30, 38, 30, 38 };^56^57^58^59^^56^59^p 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };^[CLASS] Month   [VARIABLES] 
[P3_Replace_Literal]^p 0, 28, 28, 28, 30, 28, 30, 28, 28, 30, 28, 30, 28 };^56^57^58^59^^56^59^p 0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };^[CLASS] Month   [VARIABLES] 
[P8_Replace_Mix]^private static  int[] START_WITHIN_YEAR = {^64^^^^^64^67^private static final int[] START_WITHIN_YEAR = {^[CLASS] Month   [VARIABLES] 
[P8_Replace_Mix]^private static final int[] START_WITHIN_LEAP_YEAR ;^68^^^^^68^71^private static final int[] START_WITHIN_LEAP_YEAR = {^[CLASS] Month   [VARIABLES] 
[P1_Replace_Type]^private final  long                    _month;^120^^^^^115^125^private final int                   _month;^[CLASS] Month   [VARIABLES] 
[P8_Replace_Mix]^private final  short                    _month;^120^^^^^115^125^private final int                   _month;^[CLASS] Month   [VARIABLES] 
[P3_Replace_Literal]^JAN ( -2 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( -20 ) , NOV ( -2-2 ) , DEC ( -22 ) ;^34^^^^^29^39^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 12 ) ;^[CLASS] Month   [VARIABLES] 
[P3_Replace_Literal]^JAN ( 1 ) , FEB ( 9 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 19 ) ;^34^^^^^29^39^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 12 ) ;^[CLASS] Month   [VARIABLES] 
[P8_Replace_Mix]^JAN ( 1 ) , FEB ( 1 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 11 ) ;^34^^^^^29^39^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 12 ) ;^[CLASS] Month   [VARIABLES] 
[P3_Replace_Literal]^JAN ( 1 ) , FEB ( 2 ) , MAR ( -1 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 12 ) ;^34^^^^^29^39^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 12 ) ;^[CLASS] Month   [VARIABLES] 
[P3_Replace_Literal]^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 7 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 12 ) ;^34^^^^^29^39^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 12 ) ;^[CLASS] Month   [VARIABLES] 
[P8_Replace_Mix]^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 3 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 12 ) ;^34^^^^^29^39^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 12 ) ;^[CLASS] Month   [VARIABLES] 
[P3_Replace_Literal]^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 1 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 12 ) ;^34^^^^^29^39^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 12 ) ;^[CLASS] Month   [VARIABLES] 
[P8_Replace_Mix]^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5L ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 12 ) ;^34^^^^^29^39^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 12 ) ;^[CLASS] Month   [VARIABLES] 
[P3_Replace_Literal]^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 3 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 12 ) ;^34^^^^^29^39^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 12 ) ;^[CLASS] Month   [VARIABLES] 
[P8_Replace_Mix]^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 - 0 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 12 ) ;^34^^^^^29^39^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 12 ) ;^[CLASS] Month   [VARIABLES] 
[P3_Replace_Literal]^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 13 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 12 ) ;^34^^^^^29^39^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 12 ) ;^[CLASS] Month   [VARIABLES] 
[P8_Replace_Mix]^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 + 4 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 12 ) ;^34^^^^^29^39^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 12 ) ;^[CLASS] Month   [VARIABLES] 
[P3_Replace_Literal]^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 3 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 12 ) ;^34^^^^^29^39^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 12 ) ;^[CLASS] Month   [VARIABLES] 
[P8_Replace_Mix]^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 * 1 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 12 ) ;^34^^^^^29^39^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 12 ) ;^[CLASS] Month   [VARIABLES] 
[P3_Replace_Literal]^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 17 ) , NOV ( 11 ) , DEC ( 12 ) ;^34^^^^^29^39^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 12 ) ;^[CLASS] Month   [VARIABLES] 
[P8_Replace_Mix]^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 - 1 ) , NOV ( 11 ) , DEC ( 12 ) ;^34^^^^^29^39^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 12 ) ;^[CLASS] Month   [VARIABLES] 
[P3_Replace_Literal]^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 6 ) , DEC ( 12 ) ;^34^^^^^29^39^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 12 ) ;^[CLASS] Month   [VARIABLES] 
[P8_Replace_Mix]^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 13 ) , DEC ( 12 ) ;^34^^^^^29^39^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 12 ) ;^[CLASS] Month   [VARIABLES] 
[P3_Replace_Literal]^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 7 ) ;^34^^^^^29^39^JAN ( 1 ) , FEB ( 2 ) , MAR ( 3 ) , APR ( 4 ) , MAY ( 5 ) , JUN ( 6 ) , JUL ( 7 ) , AUG ( 8 ) , SEP ( 9 ) , OCT ( 10 ) , NOV ( 11 ) , DEC ( 12 ) ;^[CLASS] Month   [VARIABLES] 
[P8_Replace_Mix]^_month =  MONTHS_PER_YEAR;^127^^^^^126^128^_month = month;^[CLASS] Month  [METHOD] <init> [RETURN_TYPE] Month(int)   int month [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  month  
[P11_Insert_Donor_Statement]^month = null;_month = month;^127^^^^^126^128^_month = month;^[CLASS] Month  [METHOD] <init> [RETURN_TYPE] Month(int)   int month [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  month  
[P2_Replace_Operator]^if  ( str.length (  )  != 3 )  {^104^^^^^102^114^if  ( str.length (  )  == 3 )  {^[CLASS] Month  [METHOD] month [RETURN_TYPE] Month   String str [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  String  str  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  IllegalArgumentException  iae  
[P3_Replace_Literal]^if  ( str.length (  )  ==  )  {^104^^^^^102^114^if  ( str.length (  )  == 3 )  {^[CLASS] Month  [METHOD] month [RETURN_TYPE] Month   String str [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  String  str  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  IllegalArgumentException  iae  
[P3_Replace_Literal]^if  ( str.length() - 9  == 3 )  {^104^^^^^102^114^if  ( str.length (  )  == 3 )  {^[CLASS] Month  [METHOD] month [RETURN_TYPE] Month   String str [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  String  str  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  IllegalArgumentException  iae  
[P8_Replace_Mix]^if  ( str.length (  )  == 0  )  {^104^^^^^102^114^if  ( str.length (  )  == 3 )  {^[CLASS] Month  [METHOD] month [RETURN_TYPE] Month   String str [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  String  str  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  IllegalArgumentException  iae  
[P15_Unwrap_Block]^try {    month = java.lang.Enum.valueOf(org.joda.time.contrib.holiday.currency.Month.class, str.toUpperCase());} catch (java.lang.IllegalArgumentException iae) {    month = null;};^104^105^106^107^108^102^114^if  ( str.length (  )  == 3 )  { try { month = Enum.valueOf ( Month.class, str.toUpperCase (  )  ) ; } catch  ( IllegalArgumentException iae )  { month = null; }^[CLASS] Month  [METHOD] month [RETURN_TYPE] Month   String str [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  String  str  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  IllegalArgumentException  iae  
[P16_Remove_Block]^^104^105^106^107^108^102^114^if  ( str.length (  )  == 3 )  { try { month = Enum.valueOf ( Month.class, str.toUpperCase (  )  ) ; } catch  ( IllegalArgumentException iae )  { month = null; }^[CLASS] Month  [METHOD] month [RETURN_TYPE] Month   String str [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  String  str  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  IllegalArgumentException  iae  
[P5_Replace_Variable]^month = str.get ( _names.toLowerCase (  )  ) ;^111^^^^^102^114^month = _names.get ( str.toLowerCase (  )  ) ;^[CLASS] Month  [METHOD] month [RETURN_TYPE] Month   String str [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  String  str  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  IllegalArgumentException  iae  
[P7_Replace_Invocation]^month = _names.get ( str .toUpperCase (  )   ) ;^111^^^^^102^114^month = _names.get ( str.toLowerCase (  )  ) ;^[CLASS] Month  [METHOD] month [RETURN_TYPE] Month   String str [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  String  str  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  IllegalArgumentException  iae  
[P8_Replace_Mix]^month =  _names.get ( null.toLowerCase (  )  ) ;^111^^^^^102^114^month = _names.get ( str.toLowerCase (  )  ) ;^[CLASS] Month  [METHOD] month [RETURN_TYPE] Month   String str [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  String  str  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  IllegalArgumentException  iae  
[P11_Insert_Donor_Statement]^month = Enum.valueOf ( Month.class, str.toUpperCase (  )  ) ;month = _names.get ( str.toLowerCase (  )  ) ;^111^^^^^102^114^month = _names.get ( str.toLowerCase (  )  ) ;^[CLASS] Month  [METHOD] month [RETURN_TYPE] Month   String str [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  String  str  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  IllegalArgumentException  iae  
[P8_Replace_Mix]^month = null.get ( str.toLowerCase (  )  ) ;^111^^^^^102^114^month = _names.get ( str.toLowerCase (  )  ) ;^[CLASS] Month  [METHOD] month [RETURN_TYPE] Month   String str [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  String  str  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  IllegalArgumentException  iae  
[P14_Delete_Statement]^^111^^^^^102^114^month = _names.get ( str.toLowerCase (  )  ) ;^[CLASS] Month  [METHOD] month [RETURN_TYPE] Month   String str [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  String  str  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  IllegalArgumentException  iae  
[P5_Replace_Variable]^month = Enum.valueOf ( Month.class.toUpperCase (  )  ) ;^106^^^^^102^114^month = Enum.valueOf ( Month.class, str.toUpperCase (  )  ) ;^[CLASS] Month  [METHOD] month [RETURN_TYPE] Month   String str [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  String  str  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  IllegalArgumentException  iae  
[P5_Replace_Variable]^month = Enum.valueOf ( Month. str.toUpperCase (  )  ) ;^106^^^^^102^114^month = Enum.valueOf ( Month.class, str.toUpperCase (  )  ) ;^[CLASS] Month  [METHOD] month [RETURN_TYPE] Month   String str [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  String  str  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  IllegalArgumentException  iae  
[P7_Replace_Invocation]^month = Enum .name (  )  ;^106^^^^^102^114^month = Enum.valueOf ( Month.class, str.toUpperCase (  )  ) ;^[CLASS] Month  [METHOD] month [RETURN_TYPE] Month   String str [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  String  str  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  IllegalArgumentException  iae  
[P8_Replace_Mix]^month =  Enum.valueOf ( Month.class, null.toUpperCase (  )  ) ;^106^^^^^102^114^month = Enum.valueOf ( Month.class, str.toUpperCase (  )  ) ;^[CLASS] Month  [METHOD] month [RETURN_TYPE] Month   String str [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  String  str  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  IllegalArgumentException  iae  
[P11_Insert_Donor_Statement]^month = _names.get ( str.toLowerCase (  )  ) ;month = Enum.valueOf ( Month.class, str.toUpperCase (  )  ) ;^106^^^^^102^114^month = Enum.valueOf ( Month.class, str.toUpperCase (  )  ) ;^[CLASS] Month  [METHOD] month [RETURN_TYPE] Month   String str [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  String  str  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  IllegalArgumentException  iae  
[P14_Delete_Statement]^^106^^^^^102^114^month = Enum.valueOf ( Month.class, str.toUpperCase (  )  ) ;^[CLASS] Month  [METHOD] month [RETURN_TYPE] Month   String str [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  String  str  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  IllegalArgumentException  iae  
[P8_Replace_Mix]^month = true;^108^^^^^102^114^month = null;^[CLASS] Month  [METHOD] month [RETURN_TYPE] Month   String str [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  String  str  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  IllegalArgumentException  iae  
[P11_Insert_Donor_Statement]^_month = month;month = null;^108^^^^^102^114^month = null;^[CLASS] Month  [METHOD] month [RETURN_TYPE] Month   String str [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  String  str  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  IllegalArgumentException  iae  
[P7_Replace_Invocation]^month = Enum.valueOf ( Month.class, str .toLowerCase (  )   ) ;^106^^^^^102^114^month = Enum.valueOf ( Month.class, str.toUpperCase (  )  ) ;^[CLASS] Month  [METHOD] month [RETURN_TYPE] Month   String str [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  String  str  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  IllegalArgumentException  iae  
[P3_Replace_Literal]^if  ( str.length() + 7  == 3 )  {^104^^^^^102^114^if  ( str.length (  )  == 3 )  {^[CLASS] Month  [METHOD] month [RETURN_TYPE] Month   String str [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  String  str  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  IllegalArgumentException  iae  
[P8_Replace_Mix]^if  ( str .toLowerCase (  )   == 3 )  {^104^^^^^102^114^if  ( str.length (  )  == 3 )  {^[CLASS] Month  [METHOD] month [RETURN_TYPE] Month   String str [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  String  str  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  IllegalArgumentException  iae  
[P5_Replace_Variable]^return JUN;^113^^^^^102^114^return month;^[CLASS] Month  [METHOD] month [RETURN_TYPE] Month   String str [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  String  str  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  IllegalArgumentException  iae  
[P8_Replace_Mix]^return MAY;^113^^^^^102^114^return month;^[CLASS] Month  [METHOD] month [RETURN_TYPE] Month   String str [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  String  str  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  IllegalArgumentException  iae  
[P2_Replace_Operator]^return  ( this == FEB || leapYear )  ? 29 : MAX_DAYS[_month];^139^^^^^138^140^return  ( this == FEB && leapYear )  ? 29 : MAX_DAYS[_month];^[CLASS] Month  [METHOD] maxDays [RETURN_TYPE] int   boolean leapYear [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  leapYear  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  
[P2_Replace_Operator]^return  ( this != FEB && leapYear )  ? 29 : MAX_DAYS[_month];^139^^^^^138^140^return  ( this == FEB && leapYear )  ? 29 : MAX_DAYS[_month];^[CLASS] Month  [METHOD] maxDays [RETURN_TYPE] int   boolean leapYear [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  leapYear  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  
[P3_Replace_Literal]^return  ( this == FEB && leapYear )  ? index : MAX_DAYS[_month];^139^^^^^138^140^return  ( this == FEB && leapYear )  ? 29 : MAX_DAYS[_month];^[CLASS] Month  [METHOD] maxDays [RETURN_TYPE] int   boolean leapYear [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  leapYear  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  
[P5_Replace_Variable]^return  ( this == OCT && leapYear )  ? 29 : MAX_DAYS[_month];^139^^^^^138^140^return  ( this == FEB && leapYear )  ? 29 : MAX_DAYS[_month];^[CLASS] Month  [METHOD] maxDays [RETURN_TYPE] int   boolean leapYear [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  leapYear  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  
[P5_Replace_Variable]^return  ( this == leapYear && FEB )  ? 29 : MAX_DAYS[_month];^139^^^^^138^140^return  ( this == FEB && leapYear )  ? 29 : MAX_DAYS[_month];^[CLASS] Month  [METHOD] maxDays [RETURN_TYPE] int   boolean leapYear [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  leapYear  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  
[P5_Replace_Variable]^return  ( this == FEB && MAX_DAYS )  ? 29 : leapYear[_month];^139^^^^^138^140^return  ( this == FEB && leapYear )  ? 29 : MAX_DAYS[_month];^[CLASS] Month  [METHOD] maxDays [RETURN_TYPE] int   boolean leapYear [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  leapYear  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  
[P6_Replace_Expression]^return  ( MAX_DAYS[_month];^139^^^^^138^140^return  ( this == FEB && leapYear )  ? 29 : MAX_DAYS[_month];^[CLASS] Month  [METHOD] maxDays [RETURN_TYPE] int   boolean leapYear [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  leapYear  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  
[P8_Replace_Mix]^return   29 ;^139^^^^^138^140^return  ( this == FEB && leapYear )  ? 29 : MAX_DAYS[_month];^[CLASS] Month  [METHOD] maxDays [RETURN_TYPE] int   boolean leapYear [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  leapYear  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  
[P5_Replace_Variable]^return maxDays ( DateUtil.isLeapYear ( index )  ) ;^148^^^^^147^149^return maxDays ( DateUtil.isLeapYear ( year )  ) ;^[CLASS] Month  [METHOD] maxDays [RETURN_TYPE] int   int year [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  year  
[P8_Replace_Mix]^return maxDays ( DateUtil.isLeapYear ( month )  ) ;^148^^^^^147^149^return maxDays ( DateUtil.isLeapYear ( year )  ) ;^[CLASS] Month  [METHOD] maxDays [RETURN_TYPE] int   int year [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  year  
[P14_Delete_Statement]^^148^^^^^147^149^return maxDays ( DateUtil.isLeapYear ( year )  ) ;^[CLASS] Month  [METHOD] maxDays [RETURN_TYPE] int   int year [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  year  
[P5_Replace_Variable]^return leapYear ? START_WITHIN_YEAR[_month] : START_WITHIN_YEAR[_month];^157^^^^^156^158^return leapYear ? START_WITHIN_LEAP_YEAR[_month] : START_WITHIN_YEAR[_month];^[CLASS] Month  [METHOD] startDayInYear [RETURN_TYPE] int   boolean leapYear [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  leapYear  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  year  
[P5_Replace_Variable]^return leapYear ? START_WITHIN_LEAP_YEAR[_month] : MAX_DAYS[_month];^157^^^^^156^158^return leapYear ? START_WITHIN_LEAP_YEAR[_month] : START_WITHIN_YEAR[_month];^[CLASS] Month  [METHOD] startDayInYear [RETURN_TYPE] int   boolean leapYear [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  leapYear  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  year  
[P5_Replace_Variable]^return START_WITHIN_LEAP_YEAR ? leapYear[_month] : START_WITHIN_YEAR[_month];^157^^^^^156^158^return leapYear ? START_WITHIN_LEAP_YEAR[_month] : START_WITHIN_YEAR[_month];^[CLASS] Month  [METHOD] startDayInYear [RETURN_TYPE] int   boolean leapYear [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  leapYear  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  year  
[P5_Replace_Variable]^return leapYear ? START_WITHIN_YEAR[_month] : START_WITHIN_LEAP_YEAR[_month];^157^^^^^156^158^return leapYear ? START_WITHIN_LEAP_YEAR[_month] : START_WITHIN_YEAR[_month];^[CLASS] Month  [METHOD] startDayInYear [RETURN_TYPE] int   boolean leapYear [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  leapYear  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  year  
[P8_Replace_Mix]^return leapYear ? MAX_DAYS[_month] : START_WITHIN_YEAR[_month];^157^^^^^156^158^return leapYear ? START_WITHIN_LEAP_YEAR[_month] : START_WITHIN_YEAR[_month];^[CLASS] Month  [METHOD] startDayInYear [RETURN_TYPE] int   boolean leapYear [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  leapYear  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  year  
[P14_Delete_Statement]^^165^^^^^164^166^return name (  ) ;^[CLASS] Month  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  year  
[P14_Delete_Statement]^^176^^^^^175^177^return name (  ) ;^[CLASS] Month  [METHOD] getAbbrev [RETURN_TYPE] String   [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  year  
[P5_Replace_Variable]^return month;^192^^^^^191^193^return _month;^[CLASS] Month  [METHOD] getValue [RETURN_TYPE] int   [VARIABLES] Month  APR  AUG  DEC  FEB  JAN  JUL  JUN  MAR  MAY  NOV  OCT  SEP  month  boolean  int[]  MAX_DAYS  START_WITHIN_LEAP_YEAR  START_WITHIN_YEAR  String[]  FULL_NAME  Month[]  _months  Map  _names  int  MONTHS_PER_YEAR  _month  index  month  year  
