[P1_Replace_Type]^static final  short  serialVersionUID = 1001L;^33^^^^^28^38^static final long serialVersionUID = 1001L;^[CLASS] CcyHoli   [VARIABLES] 
[P8_Replace_Mix]^static final  int  serialVersionUID = 1001;^33^^^^^28^38^static final long serialVersionUID = 1001L;^[CLASS] CcyHoli   [VARIABLES] 
[P1_Replace_Type]^private  short                          _sat;^37^^^^^32^42^private int                         _sat;^[CLASS] CcyHoli   [VARIABLES] 
[P8_Replace_Mix]^private  long                          _sat;^37^^^^^32^42^private int                         _sat;^[CLASS] CcyHoli   [VARIABLES] 
[P1_Replace_Type]^private  short                          _sun;^38^^^^^33^43^private int                         _sun;^[CLASS] CcyHoli   [VARIABLES] 
[P8_Replace_Mix]^private  long                          _sun;^38^^^^^33^43^private int                         _sun;^[CLASS] CcyHoli   [VARIABLES] 
[P5_Replace_Variable]^_rawHoli = _rawHoli;^47^^^^^46^50^_rawHoli = raw;^[CLASS] CcyHoli  [METHOD] <init> [RETURN_TYPE] RawHolidayChoice,int,int)   RawHolidayChoice raw int sat int sun [VARIABLES] RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  
[P8_Replace_Mix]^_rawHoli =  null;^47^^^^^46^50^_rawHoli = raw;^[CLASS] CcyHoli  [METHOD] <init> [RETURN_TYPE] RawHolidayChoice,int,int)   RawHolidayChoice raw int sat int sun [VARIABLES] RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  
[P5_Replace_Variable]^_sat = sun;^48^^^^^46^50^_sat = sat;^[CLASS] CcyHoli  [METHOD] <init> [RETURN_TYPE] RawHolidayChoice,int,int)   RawHolidayChoice raw int sat int sun [VARIABLES] RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  
[P11_Insert_Donor_Statement]^_sun = sun;_sat = sat;^48^^^^^46^50^_sat = sat;^[CLASS] CcyHoli  [METHOD] <init> [RETURN_TYPE] RawHolidayChoice,int,int)   RawHolidayChoice raw int sat int sun [VARIABLES] RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  
[P8_Replace_Mix]^_sun =  sat;^49^^^^^46^50^_sun = sun;^[CLASS] CcyHoli  [METHOD] <init> [RETURN_TYPE] RawHolidayChoice,int,int)   RawHolidayChoice raw int sat int sun [VARIABLES] RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  
[P11_Insert_Donor_Statement]^_sat = sat;_sun = sun;^49^^^^^46^50^_sun = sun;^[CLASS] CcyHoli  [METHOD] <init> [RETURN_TYPE] RawHolidayChoice,int,int)   RawHolidayChoice raw int sat int sun [VARIABLES] RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  
[P5_Replace_Variable]^return raw.choiceClass (  ) ;^57^^^^^56^58^return _rawHoli.choiceClass (  ) ;^[CLASS] CcyHoli  [METHOD] choiceClass [RETURN_TYPE] Class   [VARIABLES] RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  
[P7_Replace_Invocation]^return _rawHoli.choiceList (  ) ;^57^^^^^56^58^return _rawHoli.choiceClass (  ) ;^[CLASS] CcyHoli  [METHOD] choiceClass [RETURN_TYPE] Class   [VARIABLES] RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  
[P8_Replace_Mix]^return raw .choiceList (  )  ;^57^^^^^56^58^return _rawHoli.choiceClass (  ) ;^[CLASS] CcyHoli  [METHOD] choiceClass [RETURN_TYPE] Class   [VARIABLES] RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  
[P14_Delete_Statement]^^57^^^^^56^58^return _rawHoli.choiceClass (  ) ;^[CLASS] CcyHoli  [METHOD] choiceClass [RETURN_TYPE] Class   [VARIABLES] RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  
[P5_Replace_Variable]^return raw.choiceList (  ) ;^65^^^^^64^66^return _rawHoli.choiceList (  ) ;^[CLASS] CcyHoli  [METHOD] choiceList [RETURN_TYPE] ChoiceList   [VARIABLES] RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  
[P7_Replace_Invocation]^return _rawHoli.choiceClass (  ) ;^65^^^^^64^66^return _rawHoli.choiceList (  ) ;^[CLASS] CcyHoli  [METHOD] choiceList [RETURN_TYPE] ChoiceList   [VARIABLES] RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  
[P8_Replace_Mix]^return raw.choiceClass (  ) ;^65^^^^^64^66^return _rawHoli.choiceList (  ) ;^[CLASS] CcyHoli  [METHOD] choiceList [RETURN_TYPE] ChoiceList   [VARIABLES] RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  
[P14_Delete_Statement]^^65^^^^^64^66^return _rawHoli.choiceList (  ) ;^[CLASS] CcyHoli  [METHOD] choiceList [RETURN_TYPE] ChoiceList   [VARIABLES] RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  
[P5_Replace_Variable]^return raw.getLabel (  ) ;^73^^^^^72^74^return _rawHoli.getLabel (  ) ;^[CLASS] CcyHoli  [METHOD] getLabel [RETURN_TYPE] String   [VARIABLES] RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  
[P7_Replace_Invocation]^return _rawHoli.choiceClass (  ) ;^73^^^^^72^74^return _rawHoli.getLabel (  ) ;^[CLASS] CcyHoli  [METHOD] getLabel [RETURN_TYPE] String   [VARIABLES] RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  
[P7_Replace_Invocation]^return _rawHoli .date ( _sun )  ;^73^^^^^72^74^return _rawHoli.getLabel (  ) ;^[CLASS] CcyHoli  [METHOD] getLabel [RETURN_TYPE] String   [VARIABLES] RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  
[P14_Delete_Statement]^^73^^^^^72^74^return _rawHoli.getLabel (  ) ;^[CLASS] CcyHoli  [METHOD] getLabel [RETURN_TYPE] String   [VARIABLES] RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  
[P5_Replace_Variable]^Date holi = _rawHoli.date ( sat ) ;^83^^^^^82^93^Date holi = _rawHoli.date ( year ) ;^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P5_Replace_Variable]^Date holi = raw.date ( year ) ;^83^^^^^82^93^Date holi = _rawHoli.date ( year ) ;^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P5_Replace_Variable]^Date holi = year.date ( _rawHoli ) ;^83^^^^^82^93^Date holi = _rawHoli.date ( year ) ;^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P8_Replace_Mix]^Date holi = _rawHoli.date ( sun ) ;^83^^^^^82^93^Date holi = _rawHoli.date ( year ) ;^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P7_Replace_Invocation]^Date holi = _rawHoli .getLabel (  )  ;^83^^^^^82^93^Date holi = _rawHoli.date ( year ) ;^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P14_Delete_Statement]^^83^^^^^82^93^Date holi = _rawHoli.date ( year ) ;^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P11_Insert_Donor_Statement]^holi = holi.addDays ( _sat ) ;Date holi = _rawHoli.date ( year ) ;^83^^^^^82^93^Date holi = _rawHoli.date ( year ) ;^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P2_Replace_Operator]^if  ( holi == null )  {^84^^^^^82^93^if  ( holi != null )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P6_Replace_Expression]^if  ( _sun != 0 && SUN) )  {^84^^^^^82^93^if  ( holi != null )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P6_Replace_Expression]^if  ( _sun != 0 )  {^84^^^^^82^93^if  ( holi != null )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P6_Replace_Expression]^if  ( _sat != 0 && SAT) )  {^84^^^^^82^93^if  ( holi != null )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P6_Replace_Expression]^if  ( _sat != 0 )  {^84^^^^^82^93^if  ( holi != null )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P8_Replace_Mix]^if  ( holi != false )  {^84^^^^^82^93^if  ( holi != null )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P13_Insert_Block]^if  (  (  ( _sun )  != 0 )  &&  ( wkdy.equals ( Weekday.SUN )  )  )  {     holi = holi.addDays ( _sun ) ; }else     if  (  (  ( _sat )  != 0 )  &&  ( wkdy.equals ( Weekday.SAT )  )  )  {         holi = holi.addDays ( _sat ) ;     }^84^^^^^82^93^[Delete]^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P2_Replace_Operator]^if  ( _sun != 0 || wkdy.equals ( Weekday.SUN )  )  {^86^^^^^82^93^if  ( _sun != 0 && wkdy.equals ( Weekday.SUN )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P2_Replace_Operator]^if  ( _sun < 0 && wkdy.equals ( Weekday.SUN )  )  {^86^^^^^82^93^if  ( _sun != 0 && wkdy.equals ( Weekday.SUN )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P2_Replace_Operator]^if  ( _sun == 0 && wkdy.equals ( Weekday.SUN )  )  {^86^^^^^82^93^if  ( _sun != 0 && wkdy.equals ( Weekday.SUN )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P3_Replace_Literal]^if  ( _sun != _sun && wkdy.equals ( Weekday.SUN )  )  {^86^^^^^82^93^if  ( _sun != 0 && wkdy.equals ( Weekday.SUN )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P5_Replace_Variable]^if  ( year != 0 && wkdy.equals ( Weekday.SUN )  )  {^86^^^^^82^93^if  ( _sun != 0 && wkdy.equals ( Weekday.SUN )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P5_Replace_Variable]^if  ( wkdy != 0 && _sun.equals ( Weekday.SUN )  )  {^86^^^^^82^93^if  ( _sun != 0 && wkdy.equals ( Weekday.SUN )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P6_Replace_Expression]^if  ( _sun != 0 ) {^86^^^^^82^93^if  ( _sun != 0 && wkdy.equals ( Weekday.SUN )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P6_Replace_Expression]^if  (  wkdy.equals ( Weekday.SUN )  )  {^86^^^^^82^93^if  ( _sun != 0 && wkdy.equals ( Weekday.SUN )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P6_Replace_Expression]^if  ( _sat != 0 && SAT) )  {^86^^^^^82^93^if  ( _sun != 0 && wkdy.equals ( Weekday.SUN )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P6_Replace_Expression]^if  ( _sat != 0 )  {^86^^^^^82^93^if  ( _sun != 0 && wkdy.equals ( Weekday.SUN )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P8_Replace_Mix]^if  ( _sun != 0L && wkdy.equals ( Weekday.SUN )  )  {^86^^^^^82^93^if  ( _sun != 0 && wkdy.equals ( Weekday.SUN )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P15_Unwrap_Block]^holi = holi.addDays(_sun);^86^87^88^89^90^82^93^if  ( _sun != 0 && wkdy.equals ( Weekday.SUN )  )  { holi = holi.addDays ( _sun ) ; } else if  ( _sat != 0 && wkdy.equals ( Weekday.SAT )  )  { holi = holi.addDays ( _sat ) ; }^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P16_Remove_Block]^^86^87^88^89^90^82^93^if  ( _sun != 0 && wkdy.equals ( Weekday.SUN )  )  { holi = holi.addDays ( _sun ) ; } else if  ( _sat != 0 && wkdy.equals ( Weekday.SAT )  )  { holi = holi.addDays ( _sat ) ; }^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P13_Insert_Block]^if  ( holi != null )  {     Weekday wkdy = holi.weekday (  ) ;     if  (  (  ( _sun )  != 0 )  &&  ( wkdy.equals ( Weekday.SUN )  )  )  {         holi = holi.addDays ( _sun ) ;     }else         if  (  (  ( _sat )  != 0 )  &&  ( wkdy.equals ( Weekday.SAT )  )  )  {             holi = holi.addDays ( _sat ) ;         }      }^86^^^^^82^93^[Delete]^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P2_Replace_Operator]^} else if  ( _sat != 0 || wkdy.equals ( Weekday.SAT )  )  {^88^^^^^82^93^} else if  ( _sat != 0 && wkdy.equals ( Weekday.SAT )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P2_Replace_Operator]^} else if  ( _sat >= 0 && wkdy.equals ( Weekday.SAT )  )  {^88^^^^^82^93^} else if  ( _sat != 0 && wkdy.equals ( Weekday.SAT )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P3_Replace_Literal]^} else if  ( _sat != year && wkdy.equals ( Weekday.SAT )  )  {^88^^^^^82^93^} else if  ( _sat != 0 && wkdy.equals ( Weekday.SAT )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P5_Replace_Variable]^} else if  ( sun != 0 && wkdy.equals ( Weekday.SAT )  )  {^88^^^^^82^93^} else if  ( _sat != 0 && wkdy.equals ( Weekday.SAT )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P5_Replace_Variable]^} else if  ( wkdy != 0 && _sat.equals ( Weekday.SAT )  )  {^88^^^^^82^93^} else if  ( _sat != 0 && wkdy.equals ( Weekday.SAT )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P6_Replace_Expression]^} else if  ( _sat != 0 ) {^88^^^^^82^93^} else if  ( _sat != 0 && wkdy.equals ( Weekday.SAT )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P6_Replace_Expression]^} else if  (  wkdy.equals ( Weekday.SAT )  )  {^88^^^^^82^93^} else if  ( _sat != 0 && wkdy.equals ( Weekday.SAT )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P6_Replace_Expression]^} else {^88^^^^^82^93^} else if  ( _sat != 0 && wkdy.equals ( Weekday.SAT )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P8_Replace_Mix]^}  if  ( _sat != 0 * 3 && wkdy.equals ( Weekday.SAT )  )  {^88^^^^^82^93^} else if  ( _sat != 0 && wkdy.equals ( Weekday.SAT )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P15_Unwrap_Block]^holi = holi.addDays(_sat);^88^89^90^^^82^93^} else if  ( _sat != 0 && wkdy.equals ( Weekday.SAT )  )  { holi = holi.addDays ( _sat ) ; }^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P16_Remove_Block]^^88^89^90^^^82^93^} else if  ( _sat != 0 && wkdy.equals ( Weekday.SAT )  )  { holi = holi.addDays ( _sat ) ; }^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P5_Replace_Variable]^holi = holi.addDays ( year ) ;^89^^^^^82^93^holi = holi.addDays ( _sat ) ;^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P5_Replace_Variable]^holi = _sat.addDays ( holi ) ;^89^^^^^82^93^holi = holi.addDays ( _sat ) ;^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P7_Replace_Invocation]^holi = holi .weekday (  )  ;^89^^^^^82^93^holi = holi.addDays ( _sat ) ;^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P8_Replace_Mix]^holi =  null.addDays ( _sat ) ;^89^^^^^82^93^holi = holi.addDays ( _sat ) ;^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P11_Insert_Donor_Statement]^holi = holi.addDays ( _sun ) ;holi = holi.addDays ( _sat ) ;^89^^^^^82^93^holi = holi.addDays ( _sat ) ;^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P14_Delete_Statement]^^89^^^^^82^93^holi = holi.addDays ( _sat ) ;^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P11_Insert_Donor_Statement]^Date holi = _rawHoli.date ( year ) ;holi = holi.addDays ( _sat ) ;^89^^^^^82^93^holi = holi.addDays ( _sat ) ;^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P5_Replace_Variable]^holi = holi.addDays ( sun ) ;^89^^^^^82^93^holi = holi.addDays ( _sat ) ;^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P5_Replace_Variable]^holi = holi.addDays ( year ) ;^87^^^^^82^93^holi = holi.addDays ( _sun ) ;^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P5_Replace_Variable]^holi = _sun.addDays ( holi ) ;^87^^^^^82^93^holi = holi.addDays ( _sun ) ;^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P8_Replace_Mix]^holi =  null.addDays ( _sun ) ;^87^^^^^82^93^holi = holi.addDays ( _sun ) ;^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P11_Insert_Donor_Statement]^holi = holi.addDays ( _sat ) ;holi = holi.addDays ( _sun ) ;^87^^^^^82^93^holi = holi.addDays ( _sun ) ;^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P14_Delete_Statement]^^87^^^^^82^93^holi = holi.addDays ( _sun ) ;^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P3_Replace_Literal]^} else if  ( _sat != sun && wkdy.equals ( Weekday.SAT )  )  {^88^^^^^82^93^} else if  ( _sat != 0 && wkdy.equals ( Weekday.SAT )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P5_Replace_Variable]^} else if  ( year != 0 && wkdy.equals ( Weekday.SAT )  )  {^88^^^^^82^93^} else if  ( _sat != 0 && wkdy.equals ( Weekday.SAT )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P8_Replace_Mix]^} else if  ( _sat != 0 * 0 && wkdy.equals ( Weekday.SAT )  )  {^88^^^^^82^93^} else if  ( _sat != 0 && wkdy.equals ( Weekday.SAT )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P7_Replace_Invocation]^holi = holi .weekday (  )  ;^87^^^^^82^93^holi = holi.addDays ( _sun ) ;^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P7_Replace_Invocation]^Weekday wkdy = holi.addDays (  ) ;^85^^^^^82^93^Weekday wkdy = holi.weekday (  ) ;^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P8_Replace_Mix]^Weekday wkdy = holi .addDays ( year )  ;^85^^^^^82^93^Weekday wkdy = holi.weekday (  ) ;^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P14_Delete_Statement]^^85^^^^^82^93^Weekday wkdy = holi.weekday (  ) ;^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P2_Replace_Operator]^if  ( _sun <= 0 && wkdy.equals ( Weekday.SUN )  )  {^86^^^^^82^93^if  ( _sun != 0 && wkdy.equals ( Weekday.SUN )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P2_Replace_Operator]^if  ( _sun >= 0 && wkdy.equals ( Weekday.SUN )  )  {^86^^^^^82^93^if  ( _sun != 0 && wkdy.equals ( Weekday.SUN )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P3_Replace_Literal]^if  ( _sun != -9 && wkdy.equals ( Weekday.SUN )  )  {^86^^^^^82^93^if  ( _sun != 0 && wkdy.equals ( Weekday.SUN )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P3_Replace_Literal]^if  ( _sun != _sat && wkdy.equals ( Weekday.SUN )  )  {^86^^^^^82^93^if  ( _sun != 0 && wkdy.equals ( Weekday.SUN )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P5_Replace_Variable]^if  ( sun != 0 && wkdy.equals ( Weekday.SUN )  )  {^86^^^^^82^93^if  ( _sun != 0 && wkdy.equals ( Weekday.SUN )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P8_Replace_Mix]^if  ( _sun != 0 - 2 ) {^86^^^^^82^93^if  ( _sun != 0 && wkdy.equals ( Weekday.SUN )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P2_Replace_Operator]^} else if  ( _sat == 0 && wkdy.equals ( Weekday.SAT )  )  {^88^^^^^82^93^} else if  ( _sat != 0 && wkdy.equals ( Weekday.SAT )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P3_Replace_Literal]^} else if  ( _sat != -7 && wkdy.equals ( Weekday.SAT )  )  {^88^^^^^82^93^} else if  ( _sat != 0 && wkdy.equals ( Weekday.SAT )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P8_Replace_Mix]^}  if  ( _sat != 0L ) {^88^^^^^82^93^} else if  ( _sat != 0 && wkdy.equals ( Weekday.SAT )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P5_Replace_Variable]^holi = holi.addDays ( sun ) ;^87^^^^^82^93^holi = holi.addDays ( _sun ) ;^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P3_Replace_Literal]^} else if  ( _sat != -8 && wkdy.equals ( Weekday.SAT )  )  {^88^^^^^82^93^} else if  ( _sat != 0 && wkdy.equals ( Weekday.SAT )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P8_Replace_Mix]^}  if  ( year != 2 && wkdy.equals ( Weekday.SAT )  )  {^88^^^^^82^93^} else if  ( _sat != 0 && wkdy.equals ( Weekday.SAT )  )  {^[CLASS] CcyHoli  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] Weekday  wkdy  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  sat  sun  year  Date  holi  
[P1_Replace_Type]^List<Date> list = new  Set <Date> ( end - start + 1 ) ;^103^^^^^102^108^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] CcyHoli  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P2_Replace_Operator]^List<Date> list = new ArrayList<Date> ( end - start  ||  1 ) ;^103^^^^^102^108^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] CcyHoli  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P2_Replace_Operator]^List<Date> list = new ArrayList<Date> ( end  >>  start + 1 ) ;^103^^^^^102^108^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] CcyHoli  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P3_Replace_Literal]^List<Date> list = new ArrayList<Date> ( end - start  ) ;^103^^^^^102^108^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] CcyHoli  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P5_Replace_Variable]^List<Date> list = new ArrayList<Date> ( year - start + 1 ) ;^103^^^^^102^108^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] CcyHoli  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P5_Replace_Variable]^List<Date> list = new ArrayList<Date> ( end - sun + 1 ) ;^103^^^^^102^108^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] CcyHoli  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P5_Replace_Variable]^List<Date> list = new ArrayList<Date> ( start - end + 1 ) ;^103^^^^^102^108^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] CcyHoli  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P2_Replace_Operator]^List<Date> list = new ArrayList<Date> ( end - start  >>  1 ) ;^103^^^^^102^108^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] CcyHoli  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P2_Replace_Operator]^List<Date> list = new ArrayList<Date> ( end  &  start + 1 ) ;^103^^^^^102^108^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] CcyHoli  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P3_Replace_Literal]^List<Date> list = new ArrayList<Date> ( end - start +  ) ;^103^^^^^102^108^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] CcyHoli  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P5_Replace_Variable]^List<Date> list = new ArrayList<Date> ( end - sat + 1 ) ;^103^^^^^102^108^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] CcyHoli  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P8_Replace_Mix]^List<Date> list = new ArrayList<Date> ( end - year + 1 ) ;^103^^^^^102^108^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] CcyHoli  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P8_Replace_Mix]^f 1.add ( date ( year )  ) ;^104^105^^^^102^108^f list.add ( date ( year )  ) ;^[CLASS] CcyHoli  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P5_Replace_Variable]^list.add ( date ( sun )  ) ;^105^^^^^102^108^list.add ( date ( year )  ) ;^[CLASS] CcyHoli  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P14_Delete_Statement]^^105^^^^^102^108^list.add ( date ( year )  ) ;^[CLASS] CcyHoli  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P5_Replace_Variable]^list.add ( date ( sat )  ) ;^105^^^^^102^108^list.add ( date ( year )  ) ;^[CLASS] CcyHoli  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P8_Replace_Mix]^list.add ( date ( start )  ) ;^105^^^^^102^108^list.add ( date ( year )  ) ;^[CLASS] CcyHoli  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P3_Replace_Literal]^private static final Logger         _logger = Logger.getLogger ( "com.swvi.financial.instrument.CurrencyHolidaywvi.financial" ) ;^121^^^^^116^126^private static final Logger         _logger = Logger.getLogger ( "com.swvi.financial.instrument.CurrencyHoliday" ) ;^[CLASS] CurrencyHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P7_Replace_Invocation]^private static final Logger         _logger = Logger.info ( "com.swvi.financial.instrument.CurrencyHoliday" ) ;^121^^^^^116^126^private static final Logger         _logger = Logger.getLogger ( "com.swvi.financial.instrument.CurrencyHoliday" ) ;^[CLASS] CurrencyHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P8_Replace_Mix]^private static final Logger         _logger  = null ;^121^^^^^116^126^private static final Logger         _logger = Logger.getLogger ( "com.swvi.financial.instrument.CurrencyHoliday" ) ;^[CLASS] CurrencyHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P4_Replace_Constructor]^private static Map<String, Map<String, RawHolidayChoice>> _ccys = Collections.synchronizedSortedMap ( private static Map<String, Map<String, RawHolidayChoice>> _ccys = Collections.synchronizedSortedMap (  new String, RawHolidayChoice> (  )   ) ;^126^127^^^^126^127^private static Map<String, Map<String, RawHolidayChoice>> _ccys = Collections.synchronizedSortedMap ( new TreeMap<String, Map<String, RawHolidayChoice>> (  )  ) ;^[CLASS] CurrencyHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P8_Replace_Mix]^private  Map<String, Map<String, RawHolidayChoice>> _ccys = Collections.synchronizedSortedMap ( new TreeMap<String, Map<String, RawHolidayChoice>> (  )  ) ;^126^127^^^^126^127^private static Map<String, Map<String, RawHolidayChoice>> _ccys = Collections.synchronizedSortedMap ( new TreeMap<String, Map<String, RawHolidayChoice>> (  )  ) ;^[CLASS] CurrencyHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P8_Replace_Mix]^private static ChoiceList _raws  = null ;^132^133^^^^132^133^private static ChoiceList _raws = ChoiceList.choiceList ( RawHolidayChoiceImpl.klass (  )  ) ;^[CLASS] CurrencyHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P1_Replace_Type]^private static final  long  ON_SAT = 0;^144^^^^^139^149^private static final int ON_SAT = 0;^[CLASS] CurrencyHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P3_Replace_Literal]^private static final int ON_SAT = start;^144^^^^^139^149^private static final int ON_SAT = 0;^[CLASS] CurrencyHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P8_Replace_Mix]^private static final int ON_SAT = 0 << 0;^144^^^^^139^149^private static final int ON_SAT = 0;^[CLASS] CurrencyHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P1_Replace_Type]^private static final  short  ON_SUN = 0;^148^^^^^143^153^private static final int ON_SUN = 0;^[CLASS] CurrencyHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P3_Replace_Literal]^private static final int ON_SUN = _sat;^148^^^^^143^153^private static final int ON_SUN = 0;^[CLASS] CurrencyHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P8_Replace_Mix]^private static final int ON_SUN = 2;^148^^^^^143^153^private static final int ON_SUN = 0;^[CLASS] CurrencyHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P1_Replace_Type]^private static final  short  SAT_FRI = -1;^152^^^^^147^157^private static final int SAT_FRI = -1;^[CLASS] CurrencyHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P3_Replace_Literal]^private static final int SAT_FRI = --1;^152^^^^^147^157^private static final int SAT_FRI = -1;^[CLASS] CurrencyHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P8_Replace_Mix]^private static final int SAT_FRI = -1 << 0;^152^^^^^147^157^private static final int SAT_FRI = -1;^[CLASS] CurrencyHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P1_Replace_Type]^private static final  short  SAT_MON = 2;^156^^^^^151^161^private static final int SAT_MON = 2;^[CLASS] CurrencyHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P3_Replace_Literal]^private static final int SAT_MON = 4;^156^^^^^151^161^private static final int SAT_MON = 2;^[CLASS] CurrencyHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P8_Replace_Mix]^private static final int SAT_MON ;^156^^^^^151^161^private static final int SAT_MON = 2;^[CLASS] CurrencyHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P1_Replace_Type]^private static final  short  SUN_MON = 1;^160^^^^^155^165^private static final int SUN_MON = 1;^[CLASS] CurrencyHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P3_Replace_Literal]^private static final int SUN_MON = 6;^160^^^^^155^165^private static final int SUN_MON = 1;^[CLASS] CurrencyHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P8_Replace_Mix]^private static final  short  SUN_MON = 1L;^160^^^^^155^165^private static final int SUN_MON = 1;^[CLASS] CurrencyHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P1_Replace_Type]^private static final  long  SUN_TUE = 2;^164^^^^^159^169^private static final int SUN_TUE = 2;^[CLASS] CurrencyHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P3_Replace_Literal]^private static final int SUN_TUE = _sat;^164^^^^^159^169^private static final int SUN_TUE = 2;^[CLASS] CurrencyHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P8_Replace_Mix]^private static final int SUN_TUE = 4;^164^^^^^159^169^private static final int SUN_TUE = 2;^[CLASS] CurrencyHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] List  list  RawHolidayChoice  _rawHoli  raw  boolean  long  serialVersionUID  int  _sat  _sun  end  sat  start  sun  year  
[P7_Replace_Invocation]^return _ccys.values (  ) .iterator (  ) ;^1052^^^^^1051^1053^return _ccys.keySet (  ) .iterator (  ) ;^[CLASS] CurrencyHoliday  [METHOD] currencies [RETURN_TYPE] Iterator   [VARIABLES] boolean  Logger  _logger  Map  _ccys  ChoiceList  _raws  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  
[P7_Replace_Invocation]^return _ccys .get ( 4 )  .iterator (  ) ;^1052^^^^^1051^1053^return _ccys.keySet (  ) .iterator (  ) ;^[CLASS] CurrencyHoliday  [METHOD] currencies [RETURN_TYPE] Iterator   [VARIABLES] boolean  Logger  _logger  Map  _ccys  ChoiceList  _raws  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  
[P14_Delete_Statement]^^1052^^^^^1051^1053^return _ccys.keySet (  ) .iterator (  ) ;^[CLASS] CurrencyHoliday  [METHOD] currencies [RETURN_TYPE] Iterator   [VARIABLES] boolean  Logger  _logger  Map  _ccys  ChoiceList  _raws  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  
[P5_Replace_Variable]^Map<String, RawHolidayChoice> _ccysMap = ccy.get ( ccy ) ;^1061^^^^^1060^1063^Map<String, RawHolidayChoice> ccyMap = _ccys.get ( ccy ) ;^[CLASS] CurrencyHoliday  [METHOD] holidays [RETURN_TYPE] Iterator   String ccy [VARIABLES] String  ccy  boolean  Logger  _logger  Map  _ccys  ccyMap  ChoiceList  _raws  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  
[P7_Replace_Invocation]^Map<String, RawHolidayChoice> ccyMap = _ccys.put ( ccy ) ;^1061^^^^^1060^1063^Map<String, RawHolidayChoice> ccyMap = _ccys.get ( ccy ) ;^[CLASS] CurrencyHoliday  [METHOD] holidays [RETURN_TYPE] Iterator   String ccy [VARIABLES] String  ccy  boolean  Logger  _logger  Map  _ccys  ccyMap  ChoiceList  _raws  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  
[P8_Replace_Mix]^Map<String, RawHolidayChoice> ccyMap = _ccys .keySet (  )  ;^1061^^^^^1060^1063^Map<String, RawHolidayChoice> ccyMap = _ccys.get ( ccy ) ;^[CLASS] CurrencyHoliday  [METHOD] holidays [RETURN_TYPE] Iterator   String ccy [VARIABLES] String  ccy  boolean  Logger  _logger  Map  _ccys  ccyMap  ChoiceList  _raws  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  
[P14_Delete_Statement]^^1061^^^^^1060^1063^Map<String, RawHolidayChoice> ccyMap = _ccys.get ( ccy ) ;^[CLASS] CurrencyHoliday  [METHOD] holidays [RETURN_TYPE] Iterator   String ccy [VARIABLES] String  ccy  boolean  Logger  _logger  Map  _ccys  ccyMap  ChoiceList  _raws  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  
[P7_Replace_Invocation]^return ccyMap.get (  ) .iterator (  ) ;^1062^^^^^1060^1063^return ccyMap.values (  ) .iterator (  ) ;^[CLASS] CurrencyHoliday  [METHOD] holidays [RETURN_TYPE] Iterator   String ccy [VARIABLES] String  ccy  boolean  Logger  _logger  Map  _ccys  ccyMap  ChoiceList  _raws  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  
[P7_Replace_Invocation]^return ccyMap .keySet (  )  .iterator (  ) ;^1062^^^^^1060^1063^return ccyMap.values (  ) .iterator (  ) ;^[CLASS] CurrencyHoliday  [METHOD] holidays [RETURN_TYPE] Iterator   String ccy [VARIABLES] String  ccy  boolean  Logger  _logger  Map  _ccys  ccyMap  ChoiceList  _raws  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  
[P14_Delete_Statement]^^1062^^^^^1060^1063^return ccyMap.values (  ) .iterator (  ) ;^[CLASS] CurrencyHoliday  [METHOD] holidays [RETURN_TYPE] Iterator   String ccy [VARIABLES] String  ccy  boolean  Logger  _logger  Map  _ccys  ccyMap  ChoiceList  _raws  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  
[P2_Replace_Operator]^if  ( date == null )  {^1080^^^^^1071^1085^if  ( date != null )  {^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P6_Replace_Expression]^if  ( "    " + date )  {^1080^^^^^1071^1085^if  ( date != null )  {^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P8_Replace_Mix]^if  ( date != true )  {^1080^^^^^1071^1085^if  ( date != null )  {^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P9_Replace_Statement]^if  ( ccyMap == null )  {^1080^^^^^1071^1085^if  ( date != null )  {^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P9_Replace_Statement]^if  ( raw != null )  {^1080^^^^^1071^1085^if  ( date != null )  {^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P15_Unwrap_Block]^org.joda.time.contrib.holiday.currency.CurrencyHoliday._logger.info(("    " + date));^1080^1081^1082^^^1071^1085^if  ( date != null )  { _logger.info ( "    " + date ) ; }^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P16_Remove_Block]^^1080^1081^1082^^^1071^1085^if  ( date != null )  { _logger.info ( "    " + date ) ; }^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P13_Insert_Block]^if  ( raw != null )  {     putHoliday ( ccy, new CcyHoli ( raw, sat, sun )  ) ; }^1080^^^^^1071^1085^[Delete]^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P13_Insert_Block]^if  ( raw != null )  {     putHoliday ( ccy, raw ) ; }^1080^^^^^1071^1085^[Delete]^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P2_Replace_Operator]^_logger.info ( "    "   instanceof   date ) ;^1081^^^^^1071^1085^_logger.info ( "    " + date ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P14_Delete_Statement]^^1081^^^^^1071^1085^_logger.info ( "    " + date ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P11_Insert_Donor_Statement]^_logger.info ( "  " + holi.getLabel (  )  ) ;_logger.info ( "    " + date ) ;^1081^^^^^1071^1085^_logger.info ( "    " + date ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P13_Insert_Block]^if  ( raw != null )  {     putHoliday ( ccy, raw ) ; }^1081^^^^^1071^1085^[Delete]^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P13_Insert_Block]^if  ( date != null )  {     info (  ( "    " + date )  ) ; }^1081^^^^^1071^1085^[Delete]^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P5_Replace_Variable]^for  ( Iterator<RawHolidayChoice> ccy = holidays ( ih ) ; ih.hasNext (  ) ; )  {^1075^^^^^1071^1085^for  ( Iterator<RawHolidayChoice> ih = holidays ( ccy ) ; ih.hasNext (  ) ; )  {^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P5_Replace_Variable]^for  ( Iterator<RawHolidayChoice> holi = ihdays ( ccy ) ; ih.hasNext (  ) ; )  {^1075^^^^^1071^1085^for  ( Iterator<RawHolidayChoice> ih = holidays ( ccy ) ; ih.hasNext (  ) ; )  {^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P7_Replace_Invocation]^for  ( Iterator<RawHolidayChoice> ih = holidays ( ccy ) ; ih .next (  )  ; )  {^1075^^^^^1071^1085^for  ( Iterator<RawHolidayChoice> ih = holidays ( ccy ) ; ih.hasNext (  ) ; )  {^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P2_Replace_Operator]^_logger.info ( "    "  >=  date ) ;^1081^^^^^1071^1085^_logger.info ( "    " + date ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P3_Replace_Literal]^_logger.info ( "     " + date ) ;^1081^^^^^1071^1085^_logger.info ( "    " + date ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P2_Replace_Operator]^for  ( year = start; year < end; year++ )  {^1078^^^^^1071^1085^for  ( year = start; year <= end; year++ )  {^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P2_Replace_Operator]^for  ==  ( year = start; year <= end; year++ )  {^1078^^^^^1071^1085^for  ( year = start; year <= end; year++ )  {^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P5_Replace_Variable]^for  ( year = year; year <= end; year++ )  {^1078^^^^^1071^1085^for  ( year = start; year <= end; year++ )  {^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P5_Replace_Variable]^for  ( SUN_MON = start; year <= end; year++ )  {^1078^^^^^1071^1085^for  ( year = start; year <= end; year++ )  {^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P5_Replace_Variable]^for  ( year = start; year <= SUN_TUE; year++ )  {^1078^^^^^1071^1085^for  ( year = start; year <= end; year++ )  {^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P5_Replace_Variable]^for  ( start = year; year <= end; year++ )  {^1078^^^^^1071^1085^for  ( year = start; year <= end; year++ )  {^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P5_Replace_Variable]^for  ( end = start; year <= year; year++ )  {^1078^^^^^1071^1085^for  ( year = start; year <= end; year++ )  {^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P8_Replace_Mix]^for  ( year = SUN_TUE; year <= end; year++ )  {^1078^^^^^1071^1085^for  ( year = start; year <= end; year++ )  {^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P2_Replace_Operator]^_logger.info ( "    "  ||  date ) ;^1081^^^^^1071^1085^_logger.info ( "    " + date ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P8_Replace_Mix]^_logger .getLogger ( ccy )  ;^1081^^^^^1071^1085^_logger.info ( "    " + date ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P5_Replace_Variable]^date = holi.date ( SUN_TUE ) ;^1079^^^^^1071^1085^date = holi.date ( year ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P5_Replace_Variable]^date = year.date ( holi ) ;^1079^^^^^1071^1085^date = holi.date ( year ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P8_Replace_Mix]^date =  null.date ( year ) ;^1079^^^^^1071^1085^date = holi.date ( year ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P5_Replace_Variable]^date = holi.date ( end ) ;^1079^^^^^1071^1085^date = holi.date ( year ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P8_Replace_Mix]^date = holi.date ( SUN_MON ) ;^1079^^^^^1071^1085^date = holi.date ( year ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P14_Delete_Statement]^^1079^^^^^1071^1085^date = holi.date ( year ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P2_Replace_Operator]^_logger.info ( "    "  <  date ) ;^1081^^^^^1071^1085^_logger.info ( "    " + date ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P8_Replace_Mix]^holi =  null.next (  ) ;^1076^^^^^1071^1085^holi = ih.next (  ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P8_Replace_Mix]^for  ( year =  SUN_MON; year <^1078^^^^^1071^1085^for  ( year = start; year <= end; year++ )  {^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P5_Replace_Variable]^date = holi.date ( start ) ;^1079^^^^^1071^1085^date = holi.date ( year ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P14_Delete_Statement]^^1076^1077^^^^1071^1085^holi = ih.next (  ) ; _logger.info ( "  " + holi.getLabel (  )  ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P2_Replace_Operator]^_logger.info ( "  "  ^  holi.getLabel (  )  ) ;^1077^^^^^1071^1085^_logger.info ( "  " + holi.getLabel (  )  ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P3_Replace_Literal]^_logger.info ( " " + holi.getLabel (  )  ) ;^1077^^^^^1071^1085^_logger.info ( "  " + holi.getLabel (  )  ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P7_Replace_Invocation]^_logger.info ( "  " + holi.date (  )  ) ;^1077^^^^^1071^1085^_logger.info ( "  " + holi.getLabel (  )  ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P14_Delete_Statement]^^1077^^^^^1071^1085^_logger.info ( "  " + holi.getLabel (  )  ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P11_Insert_Donor_Statement]^_logger.info ( "    " + date ) ;_logger.info ( "  " + holi.getLabel (  )  ) ;^1077^^^^^1071^1085^_logger.info ( "  " + holi.getLabel (  )  ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P7_Replace_Invocation]^_logger.info ( "  " + holi .date ( SAT_FRI )   ) ;^1077^^^^^1071^1085^_logger.info ( "  " + holi.getLabel (  )  ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P7_Replace_Invocation]^date = holi .getLabel (  )  ;^1079^^^^^1071^1085^date = holi.date ( year ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P2_Replace_Operator]^_logger.info ( "    "  &  date ) ;^1081^^^^^1071^1085^_logger.info ( "    " + date ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P2_Replace_Operator]^for  ( year = start; year == end; year++ )  {^1078^^^^^1071^1085^for  ( year = start; year <= end; year++ )  {^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P2_Replace_Operator]^for  |  ( year = start; year <= end; year++ )  {^1078^^^^^1071^1085^for  ( year = start; year <= end; year++ )  {^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P5_Replace_Variable]^for  ( end = start; year <= end; year++ )  {^1078^^^^^1071^1085^for  ( year = start; year <= end; year++ )  {^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P5_Replace_Variable]^for  ( year = start; year <= year; year++ )  {^1078^^^^^1071^1085^for  ( year = start; year <= end; year++ )  {^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P8_Replace_Mix]^if  ( date != this )  {^1080^^^^^1071^1085^if  ( date != null )  {^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P2_Replace_Operator]^_logger.info ( "    "  <<  date ) ;^1081^^^^^1071^1085^_logger.info ( "    " + date ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P7_Replace_Invocation]^holi = ih .hasNext (  )  ;^1076^^^^^1071^1085^holi = ih.next (  ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P8_Replace_Mix]^holi =  1.next (  ) ;^1076^^^^^1071^1085^holi = ih.next (  ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P8_Replace_Mix]^for  ( Iterator<RawHolidayChoice> 3 = holidays ( ccy ) ; ih.hasNext (  ) ; )  {^1075^^^^^1071^1085^for  ( Iterator<RawHolidayChoice> ih = holidays ( ccy ) ; ih.hasNext (  ) ; )  {^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P14_Delete_Statement]^^1076^^^^^1071^1085^holi = ih.next (  ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P2_Replace_Operator]^_logger.info ( "  "   instanceof   holi.getLabel (  )  ) ;^1077^^^^^1071^1085^_logger.info ( "  " + holi.getLabel (  )  ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P7_Replace_Invocation]^_logger .getLogger ( ccy )  ;^1077^^^^^1071^1085^_logger.info ( "  " + holi.getLabel (  )  ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P2_Replace_Operator]^_logger.info ( "    "  &&  date ) ;^1081^^^^^1071^1085^_logger.info ( "    " + date ) ;^[CLASS] CurrencyHoliday  [METHOD] print [RETURN_TYPE] void   String ccy int start int end [VARIABLES] RawHolidayChoice  holi  boolean  ChoiceList  _raws  Iterator  ih  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  Date  date  
[P5_Replace_Variable]^RawHolidayChoice raw =  ( RawHolidayChoice )  _raws.choice ( ccy ) ;^1095^^^^^1094^1099^RawHolidayChoice raw =  ( RawHolidayChoice )  _raws.choice ( holi ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  
[P5_Replace_Variable]^RawHolidayChoice raw =  ( RawHolidayChoice )  holi.choice ( _raws ) ;^1095^^^^^1094^1099^RawHolidayChoice raw =  ( RawHolidayChoice )  _raws.choice ( holi ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  
[P7_Replace_Invocation]^RawHolidayChoice raw =  ( RawHolidayChoice )  _raws .choiceList (  )  ;^1095^^^^^1094^1099^RawHolidayChoice raw =  ( RawHolidayChoice )  _raws.choice ( holi ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  
[P14_Delete_Statement]^^1095^^^^^1094^1099^RawHolidayChoice raw =  ( RawHolidayChoice )  _raws.choice ( holi ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  
[P2_Replace_Operator]^if  ( raw == null )  {^1096^^^^^1094^1099^if  ( raw != null )  {^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  
[P8_Replace_Mix]^if  ( raw != true )  {^1096^^^^^1094^1099^if  ( raw != null )  {^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  
[P9_Replace_Statement]^if  ( ccyMap == null )  {^1096^^^^^1094^1099^if  ( raw != null )  {^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  
[P9_Replace_Statement]^if  ( date != null )  {^1096^^^^^1094^1099^if  ( raw != null )  {^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  
[P15_Unwrap_Block]^org.joda.time.contrib.holiday.currency.CurrencyHoliday.putHoliday(ccy, raw);^1096^1097^1098^^^1094^1099^if  ( raw != null )  { putHoliday ( ccy, raw ) ; }^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  
[P16_Remove_Block]^^1096^1097^1098^^^1094^1099^if  ( raw != null )  { putHoliday ( ccy, raw ) ; }^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  
[P13_Insert_Block]^if  ( raw != null )  {     putHoliday ( ccy, new CcyHoli ( raw, sat, sun )  ) ; }^1096^^^^^1094^1099^[Delete]^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  
[P13_Insert_Block]^if  ( date != null )  {     info (  ( "    " + date )  ) ; }^1096^^^^^1094^1099^[Delete]^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  
[P5_Replace_Variable]^putHoliday ( holi, raw ) ;^1097^^^^^1094^1099^putHoliday ( ccy, raw ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  
[P5_Replace_Variable]^putHoliday (  raw ) ;^1097^^^^^1094^1099^putHoliday ( ccy, raw ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  
[P5_Replace_Variable]^putHoliday ( ccy ) ;^1097^^^^^1094^1099^putHoliday ( ccy, raw ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  
[P5_Replace_Variable]^putHoliday ( raw, ccy ) ;^1097^^^^^1094^1099^putHoliday ( ccy, raw ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  
[P7_Replace_Invocation]^addHoliday ( ccy, raw ) ;^1097^^^^^1094^1099^putHoliday ( ccy, raw ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  
[P14_Delete_Statement]^^1097^^^^^1094^1099^putHoliday ( ccy, raw ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  
[P11_Insert_Donor_Statement]^addHoliday ( ccy, holi ) ;putHoliday ( ccy, raw ) ;^1097^^^^^1094^1099^putHoliday ( ccy, raw ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  
[P13_Insert_Block]^if  ( raw != null )  {     putHoliday ( ccy, raw ) ; }^1097^^^^^1094^1099^[Delete]^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  
[P13_Insert_Block]^if  ( date != null )  {     info (  ( "    " + date )  ) ; }^1097^^^^^1094^1099^[Delete]^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  
[P8_Replace_Mix]^addHoliday ( holi, raw ) ;^1097^^^^^1094^1099^putHoliday ( ccy, raw ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  start  year  
[P2_Replace_Operator]^if  ( sat == 0 || sun == 0 )  {^1109^^^^^1108^1117^if  ( sat == 0 && sun == 0 )  {^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P2_Replace_Operator]^if  ( sat > 0 && sun == 0 )  {^1109^^^^^1108^1117^if  ( sat == 0 && sun == 0 )  {^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P2_Replace_Operator]^if  ( sat == 0 && sun < 0 )  {^1109^^^^^1108^1117^if  ( sat == 0 && sun == 0 )  {^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P3_Replace_Literal]^if  ( sat == year && sun == year )  {^1109^^^^^1108^1117^if  ( sat == 0 && sun == 0 )  {^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P3_Replace_Literal]^if  ( sat == 1 && sun == 1 )  {^1109^^^^^1108^1117^if  ( sat == 0 && sun == 0 )  {^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P5_Replace_Variable]^if  ( year == 0 && sun == 0 )  {^1109^^^^^1108^1117^if  ( sat == 0 && sun == 0 )  {^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P5_Replace_Variable]^if  ( sat == 0 && end == 0 )  {^1109^^^^^1108^1117^if  ( sat == 0 && sun == 0 )  {^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P5_Replace_Variable]^if  ( sun == 0 && sat == 0 )  {^1109^^^^^1108^1117^if  ( sat == 0 && sun == 0 )  {^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P6_Replace_Expression]^if  ( sat == 0 ) {^1109^^^^^1108^1117^if  ( sat == 0 && sun == 0 )  {^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P6_Replace_Expression]^if  (  sun == 0 )  {^1109^^^^^1108^1117^if  ( sat == 0 && sun == 0 )  {^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P6_Replace_Expression]^if  ( raw != null )  {^1109^^^^^1108^1117^if  ( sat == 0 && sun == 0 )  {^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P8_Replace_Mix]^if  ( SUN_TUE == 0 % 3 && sun == 0 % 3 )  {^1109^^^^^1108^1117^if  ( sat == 0 && sun == 0 )  {^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P2_Replace_Operator]^if  ( raw == null )  {^1113^^^^^1108^1117^if  ( raw != null )  {^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P8_Replace_Mix]^if  ( raw != this )  {^1113^^^^^1108^1117^if  ( raw != null )  {^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P9_Replace_Statement]^if  ( ccyMap == null )  {^1113^^^^^1108^1117^if  ( raw != null )  {^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P9_Replace_Statement]^if  ( date != null )  {^1113^^^^^1108^1117^if  ( raw != null )  {^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P15_Unwrap_Block]^org.joda.time.contrib.holiday.currency.CurrencyHoliday.putHoliday(ccy, new org.joda.time.contrib.holiday.currency.CcyHoli(raw, sat, sun));^1113^1114^1115^^^1108^1117^if  ( raw != null )  { putHoliday ( ccy, new CcyHoli ( raw, sat, sun )  ) ; }^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P16_Remove_Block]^^1113^1114^1115^^^1108^1117^if  ( raw != null )  { putHoliday ( ccy, new CcyHoli ( raw, sat, sun )  ) ; }^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P13_Insert_Block]^if  ( ccyMap == null )  {     ccyMap = new String, RawHolidayChoice> (  ) ;     put ( ccy, ccyMap ) ; }^1113^^^^^1108^1117^[Delete]^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P13_Insert_Block]^if  ( raw != null )  {     putHoliday ( ccy, raw ) ; }^1113^^^^^1108^1117^[Delete]^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P13_Insert_Block]^if  ( date != null )  {     info (  ( "    " + date )  ) ; }^1113^^^^^1108^1117^[Delete]^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P4_Replace_Constructor]^putHoliday ( ccy, new CcyHoli (  sat, sun )  ) ;^1114^^^^^1108^1117^putHoliday ( ccy, new CcyHoli ( raw, sat, sun )  ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P4_Replace_Constructor]^putHoliday ( ccy, new CcyHoli ( raw,  sun )  ) ;^1114^^^^^1108^1117^putHoliday ( ccy, new CcyHoli ( raw, sat, sun )  ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P4_Replace_Constructor]^putHoliday ( ccy, new CcyHoli ( raw, sat )  ) ;^1114^^^^^1108^1117^putHoliday ( ccy, new CcyHoli ( raw, sat, sun )  ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P5_Replace_Variable]^putHoliday ( ccy, new CcyHoli ( raw, sat, SUN_TUE )  ) ;^1114^^^^^1108^1117^putHoliday ( ccy, new CcyHoli ( raw, sat, sun )  ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P5_Replace_Variable]^putHoliday ( ccy, new CcyHoli ( sat, raw, sun )  ) ;^1114^^^^^1108^1117^putHoliday ( ccy, new CcyHoli ( raw, sat, sun )  ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P5_Replace_Variable]^putHoliday ( ccy, new CcyHoli ( raw, sun, sat )  ) ;^1114^^^^^1108^1117^putHoliday ( ccy, new CcyHoli ( raw, sat, sun )  ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P8_Replace_Mix]^putHoliday ( ccy, new CcyHoli ( raw, sat, year )  ) ;^1114^^^^^1108^1117^putHoliday ( ccy, new CcyHoli ( raw, sat, sun )  ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P13_Insert_Block]^if  ( raw != null )  {     putHoliday ( ccy, raw ) ; }^1114^^^^^1108^1117^[Delete]^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P4_Replace_Constructor]^putHoliday (  new CcyHoli ( raw, sat, sun )  ) ;^1114^^^^^1108^1117^putHoliday ( ccy, new CcyHoli ( raw, sat, sun )  ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P5_Replace_Variable]^putHoliday ( ccy, new CcyHoli ( raw, SUN_TUE, sun )  ) ;^1114^^^^^1108^1117^putHoliday ( ccy, new CcyHoli ( raw, sat, sun )  ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P5_Replace_Variable]^putHoliday ( ccy, new CcyHoli ( raw, sat, end )  ) ;^1114^^^^^1108^1117^putHoliday ( ccy, new CcyHoli ( raw, sat, sun )  ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P5_Replace_Variable]^putHoliday ( raw, new CcyHoli ( ccy, sat, sun )  ) ;^1114^^^^^1108^1117^putHoliday ( ccy, new CcyHoli ( raw, sat, sun )  ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P7_Replace_Invocation]^addHoliday ( ccy, new CcyHoli ( raw, sat, sun )  ) ;^1114^^^^^1108^1117^putHoliday ( ccy, new CcyHoli ( raw, sat, sun )  ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P14_Delete_Statement]^^1114^^^^^1108^1117^putHoliday ( ccy, new CcyHoli ( raw, sat, sun )  ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P13_Insert_Block]^if  ( raw != null )  {     putHoliday ( ccy, new CcyHoli ( raw, sat, sun )  ) ; }^1114^^^^^1108^1117^[Delete]^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P5_Replace_Variable]^putHoliday ( ccy, new CcyHoli ( raw, end, sun )  ) ;^1114^^^^^1108^1117^putHoliday ( ccy, new CcyHoli ( raw, sat, sun )  ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P5_Replace_Variable]^RawHolidayChoice raw =  ( RawHolidayChoice )  _raws.choice ( ccy ) ;^1112^^^^^1108^1117^RawHolidayChoice raw =  ( RawHolidayChoice )  _raws.choice ( holi ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P5_Replace_Variable]^RawHolidayChoice raw =  ( RawHolidayChoice )  holi.choice ( _raws ) ;^1112^^^^^1108^1117^RawHolidayChoice raw =  ( RawHolidayChoice )  _raws.choice ( holi ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P8_Replace_Mix]^RawHolidayChoice raw =  ( RawHolidayChoice )  _raws .choiceList (  )  ;^1112^^^^^1108^1117^RawHolidayChoice raw =  ( RawHolidayChoice )  _raws.choice ( holi ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P13_Insert_Block]^if  ( ccyMap == null )  {     ccyMap = new String, RawHolidayChoice> (  ) ;     put ( ccy, ccyMap ) ; }^1112^^^^^1108^1117^[Delete]^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P14_Delete_Statement]^^1112^^^^^1108^1117^RawHolidayChoice raw =  ( RawHolidayChoice )  _raws.choice ( holi ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P13_Insert_Block]^if  ( raw != null )  {     putHoliday ( ccy, new CcyHoli ( raw, sat, sun )  ) ; }^1112^^^^^1108^1117^[Delete]^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P5_Replace_Variable]^putHoliday ( sun, new CcyHoli ( raw, sat, ccy )  ) ;^1114^^^^^1108^1117^putHoliday ( ccy, new CcyHoli ( raw, sat, sun )  ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P5_Replace_Variable]^putHoliday ( sat, new CcyHoli ( raw, ccy, sun )  ) ;^1114^^^^^1108^1117^putHoliday ( ccy, new CcyHoli ( raw, sat, sun )  ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P5_Replace_Variable]^putHoliday ( ccy, new CcyHoli ( sun, sat, raw )  ) ;^1114^^^^^1108^1117^putHoliday ( ccy, new CcyHoli ( raw, sat, sun )  ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P8_Replace_Mix]^addHoliday ( ccy, new CcyHoli ( raw, SUN_TUE, sun )  ) ;^1114^^^^^1108^1117^putHoliday ( ccy, new CcyHoli ( raw, sat, sun )  ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P5_Replace_Variable]^addHoliday (  holi ) ;^1110^^^^^1108^1117^addHoliday ( ccy, holi ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P5_Replace_Variable]^addHoliday ( ccy ) ;^1110^^^^^1108^1117^addHoliday ( ccy, holi ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P5_Replace_Variable]^addHoliday ( holi, ccy ) ;^1110^^^^^1108^1117^addHoliday ( ccy, holi ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P7_Replace_Invocation]^putHoliday ( ccy, holi ) ;^1110^^^^^1108^1117^addHoliday ( ccy, holi ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P14_Delete_Statement]^^1110^^^^^1108^1117^addHoliday ( ccy, holi ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P11_Insert_Donor_Statement]^putHoliday ( ccy, raw ) ;addHoliday ( ccy, holi ) ;^1110^^^^^1108^1117^addHoliday ( ccy, holi ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P13_Insert_Block]^if  ( raw != null )  {     putHoliday ( ccy, raw ) ; }^1110^^^^^1108^1117^[Delete]^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P13_Insert_Block]^if  ( date != null )  {     info (  ( "    " + date )  ) ; }^1110^^^^^1108^1117^[Delete]^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P5_Replace_Variable]^putHoliday ( ccy, new CcyHoli ( raw, year, sun )  ) ;^1114^^^^^1108^1117^putHoliday ( ccy, new CcyHoli ( raw, sat, sun )  ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P5_Replace_Variable]^putHoliday ( ccy, new CcyHoli ( raw, sat, sat )  ) ;^1114^^^^^1108^1117^putHoliday ( ccy, new CcyHoli ( raw, sat, sun )  ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P5_Replace_Variable]^putHoliday ( holi, new CcyHoli ( raw, sat, sun )  ) ;^1114^^^^^1108^1117^putHoliday ( ccy, new CcyHoli ( raw, sat, sun )  ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P5_Replace_Variable]^putHoliday ( ccy, new CcyHoli ( raw, sat, start )  ) ;^1114^^^^^1108^1117^putHoliday ( ccy, new CcyHoli ( raw, sat, sun )  ) ;^[CLASS] CurrencyHoliday  [METHOD] addHoliday [RETURN_TYPE] void   String ccy String holi int sat int sun [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  holi  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P5_Replace_Variable]^Map<String, RawHolidayChoice> _ccysMap = ccy.get ( ccy ) ;^1125^^^^^1124^1131^Map<String, RawHolidayChoice> ccyMap = _ccys.get ( ccy ) ;^[CLASS] CurrencyHoliday  [METHOD] putHoliday [RETURN_TYPE] void   String ccy RawHolidayChoice raw [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P7_Replace_Invocation]^Map<String, RawHolidayChoice> ccyMap = _ccys.put ( ccy ) ;^1125^^^^^1124^1131^Map<String, RawHolidayChoice> ccyMap = _ccys.get ( ccy ) ;^[CLASS] CurrencyHoliday  [METHOD] putHoliday [RETURN_TYPE] void   String ccy RawHolidayChoice raw [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P7_Replace_Invocation]^Map<String, RawHolidayChoice> ccyMap = _ccys .keySet (  )  ;^1125^^^^^1124^1131^Map<String, RawHolidayChoice> ccyMap = _ccys.get ( ccy ) ;^[CLASS] CurrencyHoliday  [METHOD] putHoliday [RETURN_TYPE] void   String ccy RawHolidayChoice raw [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P14_Delete_Statement]^^1125^^^^^1124^1131^Map<String, RawHolidayChoice> ccyMap = _ccys.get ( ccy ) ;^[CLASS] CurrencyHoliday  [METHOD] putHoliday [RETURN_TYPE] void   String ccy RawHolidayChoice raw [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P2_Replace_Operator]^if  ( ccyMap != null )  {^1126^^^^^1124^1131^if  ( ccyMap == null )  {^[CLASS] CurrencyHoliday  [METHOD] putHoliday [RETURN_TYPE] void   String ccy RawHolidayChoice raw [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P8_Replace_Mix]^if  ( ccyMap == this )  {^1126^^^^^1124^1131^if  ( ccyMap == null )  {^[CLASS] CurrencyHoliday  [METHOD] putHoliday [RETURN_TYPE] void   String ccy RawHolidayChoice raw [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P9_Replace_Statement]^if  ( raw != null )  {^1126^^^^^1124^1131^if  ( ccyMap == null )  {^[CLASS] CurrencyHoliday  [METHOD] putHoliday [RETURN_TYPE] void   String ccy RawHolidayChoice raw [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P9_Replace_Statement]^if  ( date != null )  {^1126^^^^^1124^1131^if  ( ccyMap == null )  {^[CLASS] CurrencyHoliday  [METHOD] putHoliday [RETURN_TYPE] void   String ccy RawHolidayChoice raw [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P15_Unwrap_Block]^ccyMap = new java.util.TreeMap<java.lang.String, org.joda.time.contrib.holiday.currency.RawHolidayChoice>(); org.joda.time.contrib.holiday.currency.CurrencyHoliday._ccys.put(ccy, ccyMap);^1126^1127^1128^1129^^1124^1131^if  ( ccyMap == null )  { ccyMap = new TreeMap<String, RawHolidayChoice> (  ) ; _ccys.put ( ccy, ccyMap ) ; }^[CLASS] CurrencyHoliday  [METHOD] putHoliday [RETURN_TYPE] void   String ccy RawHolidayChoice raw [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P16_Remove_Block]^^1126^1127^1128^1129^^1124^1131^if  ( ccyMap == null )  { ccyMap = new TreeMap<String, RawHolidayChoice> (  ) ; _ccys.put ( ccy, ccyMap ) ; }^[CLASS] CurrencyHoliday  [METHOD] putHoliday [RETURN_TYPE] void   String ccy RawHolidayChoice raw [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P13_Insert_Block]^if  ( raw != null )  {     putHoliday ( ccy, new CcyHoli ( raw, sat, sun )  ) ; }^1126^^^^^1124^1131^[Delete]^[CLASS] CurrencyHoliday  [METHOD] putHoliday [RETURN_TYPE] void   String ccy RawHolidayChoice raw [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P8_Replace_Mix]^ccyMap ;^1127^^^^^1124^1131^ccyMap = new TreeMap<String, RawHolidayChoice> (  ) ;^[CLASS] CurrencyHoliday  [METHOD] putHoliday [RETURN_TYPE] void   String ccy RawHolidayChoice raw [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P5_Replace_Variable]^_ccys.put (  ccyMap ) ;^1128^^^^^1124^1131^_ccys.put ( ccy, ccyMap ) ;^[CLASS] CurrencyHoliday  [METHOD] putHoliday [RETURN_TYPE] void   String ccy RawHolidayChoice raw [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P5_Replace_Variable]^_ccys.put ( ccy ) ;^1128^^^^^1124^1131^_ccys.put ( ccy, ccyMap ) ;^[CLASS] CurrencyHoliday  [METHOD] putHoliday [RETURN_TYPE] void   String ccy RawHolidayChoice raw [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P5_Replace_Variable]^_ccys.put ( ccyMap, ccy ) ;^1128^^^^^1124^1131^_ccys.put ( ccy, ccyMap ) ;^[CLASS] CurrencyHoliday  [METHOD] putHoliday [RETURN_TYPE] void   String ccy RawHolidayChoice raw [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P7_Replace_Invocation]^_ccys .put ( raw )  ;^1128^^^^^1124^1131^_ccys.put ( ccy, ccyMap ) ;^[CLASS] CurrencyHoliday  [METHOD] putHoliday [RETURN_TYPE] void   String ccy RawHolidayChoice raw [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P14_Delete_Statement]^^1128^^^^^1124^1131^_ccys.put ( ccy, ccyMap ) ;^[CLASS] CurrencyHoliday  [METHOD] putHoliday [RETURN_TYPE] void   String ccy RawHolidayChoice raw [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P8_Replace_Mix]^ccyMap  = null ;^1127^^^^^1124^1131^ccyMap = new TreeMap<String, RawHolidayChoice> (  ) ;^[CLASS] CurrencyHoliday  [METHOD] putHoliday [RETURN_TYPE] void   String ccy RawHolidayChoice raw [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P5_Replace_Variable]^ccyMap.put ( raw.getLabel (  )  ) ;^1130^^^^^1124^1131^ccyMap.put ( raw.getLabel (  ) , raw ) ;^[CLASS] CurrencyHoliday  [METHOD] putHoliday [RETURN_TYPE] void   String ccy RawHolidayChoice raw [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P7_Replace_Invocation]^ccyMap.put ( raw.date (  ) , raw ) ;^1130^^^^^1124^1131^ccyMap.put ( raw.getLabel (  ) , raw ) ;^[CLASS] CurrencyHoliday  [METHOD] putHoliday [RETURN_TYPE] void   String ccy RawHolidayChoice raw [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P7_Replace_Invocation]^ccyMap.put ( raw .date ( ON_SAT )  , raw ) ;^1130^^^^^1124^1131^ccyMap.put ( raw.getLabel (  ) , raw ) ;^[CLASS] CurrencyHoliday  [METHOD] putHoliday [RETURN_TYPE] void   String ccy RawHolidayChoice raw [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P8_Replace_Mix]^ccyMap.put ( raw .date ( ON_SUN )  , raw ) ;^1130^^^^^1124^1131^ccyMap.put ( raw.getLabel (  ) , raw ) ;^[CLASS] CurrencyHoliday  [METHOD] putHoliday [RETURN_TYPE] void   String ccy RawHolidayChoice raw [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
[P14_Delete_Statement]^^1130^^^^^1124^1131^ccyMap.put ( raw.getLabel (  ) , raw ) ;^[CLASS] CurrencyHoliday  [METHOD] putHoliday [RETURN_TYPE] void   String ccy RawHolidayChoice raw [VARIABLES] RawHolidayChoice  raw  boolean  ChoiceList  _raws  String  ccy  Logger  _logger  Map  _ccys  ccyMap  int  ON_SAT  ON_SUN  SAT_FRI  SAT_MON  SUN_MON  SUN_TUE  end  sat  start  sun  year  
