[P1_Replace_Type]^private final char holidayID;^27^^^^^22^32^private final String holidayID;^[CLASS] AnniversaryFactory   [VARIABLES] 
[P2_Replace_Operator]^if  ( c >= Chronology.getISO (  )  )  {^30^^^^^29^35^if  ( c != Chronology.getISO (  )  )  {^[CLASS] AnniversaryFactory  [METHOD] <init> [RETURN_TYPE] Chronology)   String str Chronology c [VARIABLES] String  holidayID  str  Chronology  c  boolean  
[P8_Replace_Mix]^if  ( c = Chronology.getISO (  )  )  {^30^^^^^29^35^if  ( c != Chronology.getISO (  )  )  {^[CLASS] AnniversaryFactory  [METHOD] <init> [RETURN_TYPE] Chronology)   String str Chronology c [VARIABLES] String  holidayID  str  Chronology  c  boolean  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException("AnniversaryFactory(String, Chronology): requires Gregorian/UTC chronologies only");^30^31^32^33^^29^35^if  ( c != Chronology.getISO (  )  )  { throw new IllegalArgumentException ( "AnniversaryFactory ( String, Chronology ) : requires Gregorian/UTC chronologies only" ) ; }^[CLASS] AnniversaryFactory  [METHOD] <init> [RETURN_TYPE] Chronology)   String str Chronology c [VARIABLES] String  holidayID  str  Chronology  c  boolean  
[P16_Remove_Block]^^30^31^32^33^^29^35^if  ( c != Chronology.getISO (  )  )  { throw new IllegalArgumentException ( "AnniversaryFactory ( String, Chronology ) : requires Gregorian/UTC chronologies only" ) ; }^[CLASS] AnniversaryFactory  [METHOD] <init> [RETURN_TYPE] Chronology)   String str Chronology c [VARIABLES] String  holidayID  str  Chronology  c  boolean  
[P13_Insert_Block]^if  ( c !=  ( getISO (  )  )  )  {     throw new IllegalArgumentException ( "AnniversaryFactory ( String, Chronology ) : requires Gregorian/UTC chronologies only" ) ; }^31^^^^^29^35^[Delete]^[CLASS] AnniversaryFactory  [METHOD] <init> [RETURN_TYPE] Chronology)   String str Chronology c [VARIABLES] String  holidayID  str  Chronology  c  boolean  
[P8_Replace_Mix]^return ;^31^32^^^^29^35^throw new IllegalArgumentException ( "AnniversaryFactory ( String, Chronology ) : requires Gregorian/UTC chronologies only" ) ;^[CLASS] AnniversaryFactory  [METHOD] <init> [RETURN_TYPE] Chronology)   String str Chronology c [VARIABLES] String  holidayID  str  Chronology  c  boolean  
[P5_Replace_Variable]^this.holidayID = holidayID;^34^^^^^29^35^this.holidayID = str;^[CLASS] AnniversaryFactory  [METHOD] <init> [RETURN_TYPE] Chronology)   String str Chronology c [VARIABLES] String  holidayID  str  Chronology  c  boolean  
[P5_Replace_Variable]^this.holidayID = holidayID;^38^^^^^37^39^this.holidayID = str;^[CLASS] AnniversaryFactory  [METHOD] <init> [RETURN_TYPE] String)   String str [VARIABLES] String  holidayID  str  boolean  
[P5_Replace_Variable]^return str;^44^^^^^43^45^return holidayID;^[CLASS] AnniversaryFactory  [METHOD] getId [RETURN_TYPE] String   [VARIABLES] String  holidayID  str  boolean  
