[P3_Replace_Literal]^public static final AnniversaryFactory NEW_YEAR = new AnniversaryFactory ( "NewYearNewYe" )  {^24^25^^^^24^30^public static final AnniversaryFactory NEW_YEAR = new AnniversaryFactory ( "NewYear" )  {^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [VARIABLES] 
[P8_Replace_Mix]^public static  AnniversaryFactory NEW_YEAR = new AnniversaryFactory ( "NewYear" )  {^24^25^^^^24^30^public static final AnniversaryFactory NEW_YEAR = new AnniversaryFactory ( "NewYear" )  {^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [VARIABLES] 
[P3_Replace_Literal]^public static final AnniversaryFactory ST_VALENTINES_DAY = new AnniversaryFactory ( "ValentinesDayi" )  {^32^33^^^^32^38^public static final AnniversaryFactory ST_VALENTINES_DAY = new AnniversaryFactory ( "ValentinesDay" )  {^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [VARIABLES] 
[P8_Replace_Mix]^public static final AnniversaryFactory ST_VALENTINES_DAY ;^32^33^^^^32^38^public static final AnniversaryFactory ST_VALENTINES_DAY = new AnniversaryFactory ( "ValentinesDay" )  {^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [VARIABLES] 
[P3_Replace_Literal]^public static final AnniversaryFactory ST_PATRICKS_DAY = new AnniversaryFactory ( "StPatr" )  {^40^41^^^^40^46^public static final AnniversaryFactory ST_PATRICKS_DAY = new AnniversaryFactory ( "StPatricksDay" )  {^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [VARIABLES] 
[P8_Replace_Mix]^public static  AnniversaryFactory ST_PATRICKS_DAY = new AnniversaryFactory ( "StPatricksDay" )  {^40^41^^^^40^46^public static final AnniversaryFactory ST_PATRICKS_DAY = new AnniversaryFactory ( "StPatricksDay" )  {^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [VARIABLES] 
[P3_Replace_Literal]^public static final AnniversaryFactory GOOD_FRIDAY = new AnniversaryFactory ( "GoodFridayG" )  {^48^49^^^^48^53^public static final AnniversaryFactory GOOD_FRIDAY = new AnniversaryFactory ( "GoodFriday" )  {^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [VARIABLES] 
[P8_Replace_Mix]^public static final AnniversaryFactory GOOD_FRIDAY ;^48^49^^^^48^53^public static final AnniversaryFactory GOOD_FRIDAY = new AnniversaryFactory ( "GoodFriday" )  {^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [VARIABLES] 
[P3_Replace_Literal]^public static final AnniversaryFactory EASTER_SUNDAY = new AnniversaryFactory ( "EasterSundayas" )  {^59^60^^^^59^72^public static final AnniversaryFactory EASTER_SUNDAY = new AnniversaryFactory ( "EasterSunday" )  {^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [VARIABLES] 
[P8_Replace_Mix]^public static  AnniversaryFactory EASTER_SUNDAY = new AnniversaryFactory ( "EasterSunday" )  {^59^60^^^^59^72^public static final AnniversaryFactory EASTER_SUNDAY = new AnniversaryFactory ( "EasterSunday" )  {^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [VARIABLES] 
[P3_Replace_Literal]^public static final AnniversaryFactory EASTER_MONDAY = new AnniversaryFactory ( "EasterMondayEaste" )  {^74^75^^^^74^79^public static final AnniversaryFactory EASTER_MONDAY = new AnniversaryFactory ( "EasterMonday" )  {^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [VARIABLES] 
[P8_Replace_Mix]^public static final AnniversaryFactory EASTER_MONDAY ;^74^75^^^^74^79^public static final AnniversaryFactory EASTER_MONDAY = new AnniversaryFactory ( "EasterMonday" )  {^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [VARIABLES] 
[P3_Replace_Literal]^public static final AnniversaryFactory ARMISTICE_DAY = new AnniversaryFactory ( "ArmisticeDayrmistic" )  {^84^85^^^^84^90^public static final AnniversaryFactory ARMISTICE_DAY = new AnniversaryFactory ( "ArmisticeDay" )  {^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [VARIABLES] 
[P8_Replace_Mix]^public static  AnniversaryFactory ARMISTICE_DAY = new AnniversaryFactory ( "ArmisticeDay" )  {^84^85^^^^84^90^public static final AnniversaryFactory ARMISTICE_DAY = new AnniversaryFactory ( "ArmisticeDay" )  {^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [VARIABLES] 
[P3_Replace_Literal]^public static final AnniversaryFactory CHRISTMAS = new AnniversaryFactory ( "Chri" )  {^92^93^^^^92^98^public static final AnniversaryFactory CHRISTMAS = new AnniversaryFactory ( "Christmas" )  {^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [VARIABLES] 
[P8_Replace_Mix]^private static final AnniversaryFactory CHRISTMAS = new AnniversaryFactory ( "Christmas" )  {^92^93^^^^92^98^public static final AnniversaryFactory CHRISTMAS = new AnniversaryFactory ( "Christmas" )  {^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [VARIABLES] 
[P3_Replace_Literal]^public static final AnniversaryFactory BOXING_DAY = new AnniversaryFactory ( "ngDa" )  {^100^101^^^^100^106^public static final AnniversaryFactory BOXING_DAY = new AnniversaryFactory ( "BoxingDay" )  {^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [VARIABLES] 
[P8_Replace_Mix]^public  final AnniversaryFactory BOXING_DAY = new AnniversaryFactory ( "BoxingDay" )  {^100^101^^^^100^106^public static final AnniversaryFactory BOXING_DAY = new AnniversaryFactory ( "BoxingDay" )  {^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [VARIABLES] 
[P3_Replace_Literal]^public static final AnniversaryFactory LABOR_DAY = new AnniversaryFactory ( "La" )  {^108^109^^^^108^116^public static final AnniversaryFactory LABOR_DAY = new AnniversaryFactory ( "LaborDay" )  {^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [VARIABLES] 
[P8_Replace_Mix]^public static  AnniversaryFactory LABOR_DAY = new AnniversaryFactory ( "LaborDay" )  {^108^109^^^^108^116^public static final AnniversaryFactory LABOR_DAY = new AnniversaryFactory ( "LaborDay" )  {^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10   [VARIABLES] 
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.JANUARY,  ) .toDateTime (  ) ;^27^28^^^^26^29^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 1 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P5_Replace_Variable]^return new DateMidnight (  DateTimeConstants.JANUARY, 1 ) .toDateTime (  ) ;^27^28^^^^26^29^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 1 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P5_Replace_Variable]^return new DateMidnight ( iYear, DateTimeConstants. 1 ) .toDateTime (  ) ;^27^28^^^^26^29^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 1 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P8_Replace_Mix]^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 1 * 0 ) .toDateTime (  ) ;^27^28^^^^26^29^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 1 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, iYear ) .toDateTime (  ) ;^27^28^^^^26^29^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 1 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 3 ) .toDateTime (  ) ;^27^28^^^^26^29^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 1 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P14_Delete_Statement]^^27^28^^^^26^29^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 1 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 7 ) .toDateTime (  ) ;^35^36^^^^34^37^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 14 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P5_Replace_Variable]^return new DateMidnight (  DateTimeConstants.FEBRUARY, 14 ) .toDateTime (  ) ;^35^36^^^^34^37^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 14 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P5_Replace_Variable]^return new DateMidnight ( iYear, DateTimeConstants. 14 ) .toDateTime (  ) ;^35^36^^^^34^37^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 14 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P8_Replace_Mix]^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 4 ) .toDateTime (  ) ;^35^36^^^^34^37^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 14 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 12 ) .toDateTime (  ) ;^35^36^^^^34^37^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 14 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, iYear ) .toDateTime (  ) ;^35^36^^^^34^37^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 14 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P14_Delete_Statement]^^35^36^^^^34^37^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 14 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.MARCH, 11 ) .toDateTime (  ) ;^43^44^^^^42^45^return new DateMidnight ( iYear, DateTimeConstants.MARCH, 17 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P5_Replace_Variable]^return new DateMidnight (  DateTimeConstants.MARCH, 17 ) .toDateTime (  ) ;^43^44^^^^42^45^return new DateMidnight ( iYear, DateTimeConstants.MARCH, 17 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P5_Replace_Variable]^return new DateMidnight ( iYear, DateTimeConstants. 17 ) .toDateTime (  ) ;^43^44^^^^42^45^return new DateMidnight ( iYear, DateTimeConstants.MARCH, 17 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P8_Replace_Mix]^return new DateMidnight ( iYear, DateTimeConstants.MARCH, 15 ) .toDateTime (  ) ;^43^44^^^^42^45^return new DateMidnight ( iYear, DateTimeConstants.MARCH, 17 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.MARCH, 8 ) .toDateTime (  ) ;^43^44^^^^42^45^return new DateMidnight ( iYear, DateTimeConstants.MARCH, 17 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.MARCH, iYear ) .toDateTime (  ) ;^43^44^^^^42^45^return new DateMidnight ( iYear, DateTimeConstants.MARCH, 17 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P14_Delete_Statement]^^43^44^^^^42^45^return new DateMidnight ( iYear, DateTimeConstants.MARCH, 17 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P3_Replace_Literal]^return EASTER_SUNDAY.create ( iYear ) .minusDays ( -6 ) ;^51^^^^^50^52^return EASTER_SUNDAY.create ( iYear ) .minusDays ( 2 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P5_Replace_Variable]^return LABOR_DAY.create ( iYear ) .minusDays ( 2 ) ;^51^^^^^50^52^return EASTER_SUNDAY.create ( iYear ) .minusDays ( 2 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P5_Replace_Variable]^return iYear.create ( EASTER_SUNDAY ) .minusDays ( 2 ) ;^51^^^^^50^52^return EASTER_SUNDAY.create ( iYear ) .minusDays ( 2 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P7_Replace_Invocation]^return EASTER_SUNDAY.AnniversaryFactory ( iYear ) .minusDays ( 2 ) ;^51^^^^^50^52^return EASTER_SUNDAY.create ( iYear ) .minusDays ( 2 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P8_Replace_Mix]^return ST_VALENTINES_DAY.AnniversaryFactory ( iYear ) .minusDays ( 2 ) ;^51^^^^^50^52^return EASTER_SUNDAY.create ( iYear ) .minusDays ( 2 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P3_Replace_Literal]^return EASTER_SUNDAY.create ( iYear ) .minusDays ( iYear ) ;^51^^^^^50^52^return EASTER_SUNDAY.create ( iYear ) .minusDays ( 2 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P5_Replace_Variable]^return ST_PATRICKS_DAY.create ( iYear ) .minusDays ( 2 ) ;^51^^^^^50^52^return EASTER_SUNDAY.create ( iYear ) .minusDays ( 2 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P7_Replace_Invocation]^return EASTER_SUNDAY.create ( iYear )  .plusDays ( iYear )  ;^51^^^^^50^52^return EASTER_SUNDAY.create ( iYear ) .minusDays ( 2 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P7_Replace_Invocation]^return EASTER_SUNDAY .create ( iYear )  .minusDays ( 2 ) ;^51^^^^^50^52^return EASTER_SUNDAY.create ( iYear ) .minusDays ( 2 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P14_Delete_Statement]^^51^^^^^50^52^return EASTER_SUNDAY.create ( iYear ) .minusDays ( 2 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P8_Replace_Mix]^return ST_VALENTINES_DAY.create ( iYear ) .minusDays ( 2 ) ;^51^^^^^50^52^return EASTER_SUNDAY.create ( iYear ) .minusDays ( 2 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P1_Replace_Type]^long  iG = iYear % 19;^62^^^^^61^71^int iG = iYear % 19;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iG = iYear  ||  19;^62^^^^^61^71^int iG = iYear % 19;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P3_Replace_Literal]^int iG = iYear % iYear;^62^^^^^61^71^int iG = iYear % 19;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P5_Replace_Variable]^int iG = iMonth % 19;^62^^^^^61^71^int iG = iYear % 19;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P8_Replace_Mix]^int iG = iJ % 19;^62^^^^^61^71^int iG = iYear % 19;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P11_Insert_Donor_Statement]^int iL = iI - iJ;int iG = iYear % 19;^62^^^^^61^71^int iG = iYear % 19;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P11_Insert_Donor_Statement]^int iC = iYear / 100;int iG = iYear % 19;^62^^^^^61^71^int iG = iYear % 19;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P1_Replace_Type]^short  iC = iYear / 100;^63^^^^^61^71^int iC = iYear / 100;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iC = iYear * 100;^63^^^^^61^71^int iC = iYear / 100;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P3_Replace_Literal]^int iC = iYear / 95;^63^^^^^61^71^int iC = iYear / 100;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P11_Insert_Donor_Statement]^int iL = iI - iJ;int iC = iYear / 100;^63^^^^^61^71^int iC = iYear / 100;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P11_Insert_Donor_Statement]^int iG = iYear % 19;int iC = iYear / 100;^63^^^^^61^71^int iC = iYear / 100;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P1_Replace_Type]^short  iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )   |  30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iH =  &  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iH =  >>  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iH =  ( iC  ||  iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iH =  ( iC  &  iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iH =  ( iC - iC * 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iH =  ( iC - iC / 4 -  ( 8 * iC  <  13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iH =  ( iC - iC / 4 -  ( 8 - iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 - iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P3_Replace_Literal]^int iH =  ( iC - iC / 12 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P3_Replace_Literal]^int iH =  ( iC - iC / 4 -  ( iC * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P3_Replace_Literal]^int iH =  ( iC - iC / 4 -  ( 8 * iC  )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P3_Replace_Literal]^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / iL + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P3_Replace_Literal]^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + iI * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P3_Replace_Literal]^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG +  )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P3_Replace_Literal]^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % iJ;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P5_Replace_Variable]^int iH =  ( iYear - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P5_Replace_Variable]^int iH =  ( iG - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iC + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P8_Replace_Mix]^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iYear + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P11_Insert_Donor_Statement]^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P1_Replace_Type]^short  iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iI = iH  <<   ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int + iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iI = iH -  ( iH - 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iI = iH -  ( iH / 28 )  *  ( 1  &&   ( 29 /  ( iH + 1 )  )  *  (  ( 21  &&  iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int / iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iI = iH -  ( iH + 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH  |  1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21  <  iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P3_Replace_Literal]^int iI = iH -  ( iH / 29 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P3_Replace_Literal]^int iI = iH -  ( iH / 28 )  *  ( iC -  ( 29 /  ( iH + iC )  )  *  (  ( 2iC - iG )  / iCiC )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P3_Replace_Literal]^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( iC /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P3_Replace_Literal]^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH  )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P3_Replace_Literal]^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  (  - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P3_Replace_Literal]^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 17 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P5_Replace_Variable]^int iI = iMonth -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P5_Replace_Variable]^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iL )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P5_Replace_Variable]^int iI = iG -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iH )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P11_Insert_Donor_Statement]^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P1_Replace_Type]^short  iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )   |  7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iJ =   instanceof   ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iJ =  ( iYear + iYear / 4 + iI + 2  ||  iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iJ =  ||  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iJ =  >  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iJ =  ( iYear  ^  iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iJ =  ( iYear + iYear + 4 + iI + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC - 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P3_Replace_Literal]^int iJ =  ( iYear + iYear / 9 + iI + 2 - iC + iC / 9 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P3_Replace_Literal]^int iJ =  ( iYear + iYear / 4 + iI  - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P3_Replace_Literal]^int iJ =  ( iYear + iYear / 8 + iI + 2 - iC + iC / 8 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P3_Replace_Literal]^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 13;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P5_Replace_Variable]^int iJ =  ( iL + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P5_Replace_Variable]^int iJ =  ( iYear + iYear / 4 + iYear + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P5_Replace_Variable]^int iJ =  ( iYear + iYear / 4 + iI + 2 - iL + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P5_Replace_Variable]^int iJ =  ( iC + iYear / 4 + iI + 2 - iYear + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P5_Replace_Variable]^int iJ =  ( iI + iYear / 4 + iYear + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P5_Replace_Variable]^int iJ =  ( iYear + iYear / 4 + iC + 2 - iI + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P8_Replace_Mix]^int iJ =  ( iI + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P1_Replace_Type]^short  iL = iI - iJ;^67^^^^^61^71^int iL = iI - iJ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iL = iI  &  iJ;^67^^^^^61^71^int iL = iI - iJ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P5_Replace_Variable]^int iL = iYear - iJ;^67^^^^^61^71^int iL = iI - iJ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P5_Replace_Variable]^int iL = iI - iYear;^67^^^^^61^71^int iL = iI - iJ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P5_Replace_Variable]^int iL = iJ - iI;^67^^^^^61^71^int iL = iI - iJ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P11_Insert_Donor_Statement]^int iC = iYear / 100;int iL = iI - iJ;^67^^^^^61^71^int iL = iI - iJ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P11_Insert_Donor_Statement]^int iG = iYear % 19;int iL = iI - iJ;^67^^^^^61^71^int iL = iI - iJ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P1_Replace_Type]^long  iMonth = 3 +  ( iL + 40 )  / 44;^68^^^^^61^71^int iMonth = 3 +  ( iL + 40 )  / 44;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iMonth = 3 +  ||  ( iL + 40 )  / 44;^68^^^^^61^71^int iMonth = 3 +  ( iL + 40 )  / 44;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iMonth = 3 +  ( iL + 40 )  * 44;^68^^^^^61^71^int iMonth = 3 +  ( iL + 40 )  / 44;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iMonth = 3 +  ( iL  &  40 )  / 44;^68^^^^^61^71^int iMonth = 3 +  ( iL + 40 )  / 44;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P3_Replace_Literal]^int iMonth =  +  ( iL + 40 )  / 44;^68^^^^^61^71^int iMonth = 3 +  ( iL + 40 )  / 44;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P3_Replace_Literal]^int iMonth = 3 +  ( iL + iJ )  / 44;^68^^^^^61^71^int iMonth = 3 +  ( iL + 40 )  / 44;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P3_Replace_Literal]^int iMonth = 3 +  ( iL + 40 )  / 38;^68^^^^^61^71^int iMonth = 3 +  ( iL + 40 )  / 44;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P5_Replace_Variable]^int iMonth = 3 +  ( iI + 40 )  / 44;^68^^^^^61^71^int iMonth = 3 +  ( iL + 40 )  / 44;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P8_Replace_Mix]^int iMonth = 3 +  ( iYear + 40 )  / 44;^68^^^^^61^71^int iMonth = 3 +  ( iL + 40 )  / 44;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P1_Replace_Type]^short  iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iDay = iL + 28  ==  31 *  ( iMonth / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iDay = iL  |  28 - 31 *  ( iMonth / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int + iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P2_Replace_Operator]^int iDay = iL + 28 - 31 *  ( iMonth - 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P3_Replace_Literal]^int iDay = iL  - 31 *  ( iMonth / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P3_Replace_Literal]^int iDay = iL + 28  *  ( iMonth / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P3_Replace_Literal]^int iDay = iL + 28 - 31 *  ( iMonth / iI ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P5_Replace_Variable]^int iDay = iYear + 28 - 31 *  ( iMonth / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P5_Replace_Variable]^int iDay = iL + 28 - 31 *  ( iJ / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P5_Replace_Variable]^int iDay = iMonth + 28 - 31 *  ( iL / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P4_Replace_Constructor]^return new DateMidnight (  iMonth, iDay ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P4_Replace_Constructor]^return new DateMidnight ( iYear,  iDay ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P4_Replace_Constructor]^return new DateMidnight ( iYear, iMonth ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P5_Replace_Variable]^return new DateMidnight ( iJ, iMonth, iDay ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P5_Replace_Variable]^return new DateMidnight ( iYear, iI, iDay ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P5_Replace_Variable]^return new DateMidnight ( iYear, iMonth, iJ ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P5_Replace_Variable]^return new DateMidnight ( iMonth, iYear, iDay ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P5_Replace_Variable]^return new DateMidnight ( iYear, iDay, iMonth ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P8_Replace_Mix]^return new DateMidnight ( iYear, iL, iDay ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P5_Replace_Variable]^return new DateMidnight ( iYear, iYear, iDay ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P5_Replace_Variable]^return new DateMidnight ( iYear, iMonth, iL ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P8_Replace_Mix]^return new DateMidnight ( iYear, iMonth, iYear ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P5_Replace_Variable]^return new DateMidnight ( iL, iMonth, iDay ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P5_Replace_Variable]^return new DateMidnight ( iDay, iMonth, iYear ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P14_Delete_Statement]^^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[P5_Replace_Variable]^return LABOR_DAY.create ( iYear ) .plusDays ( 1 ) ;^77^^^^^76^78^return EASTER_SUNDAY.create ( iYear ) .plusDays ( 1 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P5_Replace_Variable]^return iYear.create ( EASTER_SUNDAY ) .plusDays ( 1 ) ;^77^^^^^76^78^return EASTER_SUNDAY.create ( iYear ) .plusDays ( 1 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P7_Replace_Invocation]^return EASTER_SUNDAY.create ( iYear )  .minusDays ( iYear )  ;^77^^^^^76^78^return EASTER_SUNDAY.create ( iYear ) .plusDays ( 1 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P7_Replace_Invocation]^return EASTER_SUNDAY.AnniversaryFactory ( iYear ) .plusDays ( 1 ) ;^77^^^^^76^78^return EASTER_SUNDAY.create ( iYear ) .plusDays ( 1 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P3_Replace_Literal]^return EASTER_SUNDAY.create ( iYear ) .plusDays ( iYear ) ;^77^^^^^76^78^return EASTER_SUNDAY.create ( iYear ) .plusDays ( 1 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P5_Replace_Variable]^return NEW_YEAR.create ( iYear ) .plusDays ( 1 ) ;^77^^^^^76^78^return EASTER_SUNDAY.create ( iYear ) .plusDays ( 1 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P7_Replace_Invocation]^return EASTER_SUNDAY .create ( iYear )  .plusDays ( 1 ) ;^77^^^^^76^78^return EASTER_SUNDAY.create ( iYear ) .plusDays ( 1 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P14_Delete_Statement]^^77^^^^^76^78^return EASTER_SUNDAY.create ( iYear ) .plusDays ( 1 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P5_Replace_Variable]^return ST_VALENTINES_DAY.create ( iYear ) .plusDays ( 1 ) ;^77^^^^^76^78^return EASTER_SUNDAY.create ( iYear ) .plusDays ( 1 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, 15 ) .toDateTime (  ) ;^87^88^^^^86^89^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, 11 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P5_Replace_Variable]^return new DateMidnight (  DateTimeConstants.NOVEMBER, 11 ) .toDateTime (  ) ;^87^88^^^^86^89^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, 11 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P5_Replace_Variable]^return new DateMidnight ( iYear, DateTimeConstants. 11 ) .toDateTime (  ) ;^87^88^^^^86^89^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, 11 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P8_Replace_Mix]^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, 11 + 4 ) .toDateTime (  ) ;^87^88^^^^86^89^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, 11 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, iYear ) .toDateTime (  ) ;^87^88^^^^86^89^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, 11 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, 14 ) .toDateTime (  ) ;^87^88^^^^86^89^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, 11 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P14_Delete_Statement]^^87^88^^^^86^89^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, 11 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER,  ) .toDateTime (  ) ;^95^96^^^^94^97^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 25 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P5_Replace_Variable]^return new DateMidnight (  DateTimeConstants.DECEMBER, 25 ) .toDateTime (  ) ;^95^96^^^^94^97^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 25 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P5_Replace_Variable]^return new DateMidnight ( iYear, DateTimeConstants. 25 ) .toDateTime (  ) ;^95^96^^^^94^97^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 25 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P8_Replace_Mix]^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 16 ) .toDateTime (  ) ;^95^96^^^^94^97^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 25 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 23 ) .toDateTime (  ) ;^95^96^^^^94^97^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 25 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 27 ) .toDateTime (  ) ;^95^96^^^^94^97^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 25 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P14_Delete_Statement]^^95^96^^^^94^97^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 25 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 35 ) .toDateTime (  ) ;^103^104^^^^102^105^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 26 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P5_Replace_Variable]^return new DateMidnight (  DateTimeConstants.DECEMBER, 26 ) .toDateTime (  ) ;^103^104^^^^102^105^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 26 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P5_Replace_Variable]^return new DateMidnight ( iYear, DateTimeConstants. 26 ) .toDateTime (  ) ;^103^104^^^^102^105^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 26 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P8_Replace_Mix]^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 20 ) .toDateTime (  ) ;^103^104^^^^102^105^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 26 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 19 ) .toDateTime (  ) ;^103^104^^^^102^105^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 26 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, iYear ) .toDateTime (  ) ;^103^104^^^^102^105^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 26 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P14_Delete_Statement]^^103^104^^^^102^105^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 26 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P14_Delete_Statement]^^112^113^114^^^110^115^return TimeUtility.GetFirstXWeekdayOfMonth ( DateTimeConstants.MONDAY, iYear, DateTimeConstants.SEPTEMBER ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, iYear ) .toDateTime (  ) ;^27^28^^^^26^29^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 1 ) .toDateTime (  ) ;^[CLASS] 1  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P5_Replace_Variable]^return new DateMidnight (  DateTimeConstants.JANUARY, 1 ) .toDateTime (  ) ;^27^28^^^^26^29^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 1 ) .toDateTime (  ) ;^[CLASS] 1  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P5_Replace_Variable]^return new DateMidnight ( iYear, DateTimeConstants. 1 ) .toDateTime (  ) ;^27^28^^^^26^29^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 1 ) .toDateTime (  ) ;^[CLASS] 1  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P8_Replace_Mix]^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 1L ) .toDateTime (  ) ;^27^28^^^^26^29^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 1 ) .toDateTime (  ) ;^[CLASS] 1  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 0 ) .toDateTime (  ) ;^27^28^^^^26^29^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 1 ) .toDateTime (  ) ;^[CLASS] 1  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P14_Delete_Statement]^^27^28^^^^26^29^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 1 ) .toDateTime (  ) ;^[CLASS] 1  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 13 ) .toDateTime (  ) ;^35^36^^^^34^37^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 14 ) .toDateTime (  ) ;^[CLASS] 2  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P5_Replace_Variable]^return new DateMidnight (  DateTimeConstants.FEBRUARY, 14 ) .toDateTime (  ) ;^35^36^^^^34^37^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 14 ) .toDateTime (  ) ;^[CLASS] 2  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P5_Replace_Variable]^return new DateMidnight ( iYear, DateTimeConstants. 14 ) .toDateTime (  ) ;^35^36^^^^34^37^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 14 ) .toDateTime (  ) ;^[CLASS] 2  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P8_Replace_Mix]^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 14 - 1 ) .toDateTime (  ) ;^35^36^^^^34^37^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 14 ) .toDateTime (  ) ;^[CLASS] 2  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, iYear ) .toDateTime (  ) ;^35^36^^^^34^37^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 14 ) .toDateTime (  ) ;^[CLASS] 2  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 15 ) .toDateTime (  ) ;^35^36^^^^34^37^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 14 ) .toDateTime (  ) ;^[CLASS] 2  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P14_Delete_Statement]^^35^36^^^^34^37^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 14 ) .toDateTime (  ) ;^[CLASS] 2  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.MARCH, 13 ) .toDateTime (  ) ;^43^44^^^^42^45^return new DateMidnight ( iYear, DateTimeConstants.MARCH, 17 ) .toDateTime (  ) ;^[CLASS] 3  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P5_Replace_Variable]^return new DateMidnight (  DateTimeConstants.MARCH, 17 ) .toDateTime (  ) ;^43^44^^^^42^45^return new DateMidnight ( iYear, DateTimeConstants.MARCH, 17 ) .toDateTime (  ) ;^[CLASS] 3  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P5_Replace_Variable]^return new DateMidnight ( iYear, DateTimeConstants. 17 ) .toDateTime (  ) ;^43^44^^^^42^45^return new DateMidnight ( iYear, DateTimeConstants.MARCH, 17 ) .toDateTime (  ) ;^[CLASS] 3  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P8_Replace_Mix]^return new DateMidnight ( iYear, DateTimeConstants.MARCH, 11 ) .toDateTime (  ) ;^43^44^^^^42^45^return new DateMidnight ( iYear, DateTimeConstants.MARCH, 17 ) .toDateTime (  ) ;^[CLASS] 3  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.MARCH, iYear ) .toDateTime (  ) ;^43^44^^^^42^45^return new DateMidnight ( iYear, DateTimeConstants.MARCH, 17 ) .toDateTime (  ) ;^[CLASS] 3  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P14_Delete_Statement]^^43^44^^^^42^45^return new DateMidnight ( iYear, DateTimeConstants.MARCH, 17 ) .toDateTime (  ) ;^[CLASS] 3  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P3_Replace_Literal]^return EASTER_SUNDAY.create ( iYear ) .minusDays ( iYear ) ;^51^^^^^50^52^return EASTER_SUNDAY.create ( iYear ) .minusDays ( 2 ) ;^[CLASS] 4  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P5_Replace_Variable]^return iYear.create ( EASTER_SUNDAY ) .minusDays ( 2 ) ;^51^^^^^50^52^return EASTER_SUNDAY.create ( iYear ) .minusDays ( 2 ) ;^[CLASS] 4  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P8_Replace_Mix]^return EASTER_SUNDAY.create ( iYear ) .minusDays ( 2 - 2 ) ;^51^^^^^50^52^return EASTER_SUNDAY.create ( iYear ) .minusDays ( 2 ) ;^[CLASS] 4  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P3_Replace_Literal]^return EASTER_SUNDAY.create ( iYear ) .minusDays ( 6 ) ;^51^^^^^50^52^return EASTER_SUNDAY.create ( iYear ) .minusDays ( 2 ) ;^[CLASS] 4  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P5_Replace_Variable]^return 4.create ( iYear ) .minusDays ( 2 ) ;^51^^^^^50^52^return EASTER_SUNDAY.create ( iYear ) .minusDays ( 2 ) ;^[CLASS] 4  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P14_Delete_Statement]^^51^^^^^50^52^return EASTER_SUNDAY.create ( iYear ) .minusDays ( 2 ) ;^[CLASS] 4  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P8_Replace_Mix]^return EASTER_SUNDAY .create ( iYear )  .minusDays ( 2 ) ;^51^^^^^50^52^return EASTER_SUNDAY.create ( iYear ) .minusDays ( 2 ) ;^[CLASS] 4  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P1_Replace_Type]^long  iG = iYear % 19;^62^^^^^61^71^int iG = iYear % 19;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int iG = iYear  >  19;^62^^^^^61^71^int iG = iYear % 19;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P3_Replace_Literal]^int iG = iYear % 18;^62^^^^^61^71^int iG = iYear % 19;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P5_Replace_Variable]^int iG = iJ % 19;^62^^^^^61^71^int iG = iYear % 19;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P11_Insert_Donor_Statement]^int iL = iI - iJ;int iG = iYear % 19;^62^^^^^61^71^int iG = iYear % 19;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P11_Insert_Donor_Statement]^int iC = iYear / 100;int iG = iYear % 19;^62^^^^^61^71^int iG = iYear % 19;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P1_Replace_Type]^short  iC = iYear / 100;^63^^^^^61^71^int iC = iYear / 100;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int iC = iYear - 100;^63^^^^^61^71^int iC = iYear / 100;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P3_Replace_Literal]^int iC = iYear / iH;^63^^^^^61^71^int iC = iYear / 100;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P5_Replace_Variable]^int iC = iMonth / 100;^63^^^^^61^71^int iC = iYear / 100;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P8_Replace_Mix]^int iC = iJ / 100;^63^^^^^61^71^int iC = iYear / 100;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P11_Insert_Donor_Statement]^int iL = iI - iJ;int iC = iYear / 100;^63^^^^^61^71^int iC = iYear / 100;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P11_Insert_Donor_Statement]^int iG = iYear % 19;int iC = iYear / 100;^63^^^^^61^71^int iC = iYear / 100;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P1_Replace_Type]^long  iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )   <  30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int iH =  <  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int iH =  !=  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int iH =  ( iC  >>  iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int iH =  ( iC - iC - 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int iH =  ( iC - iC + 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int iH =  ( iC - iC / 4 -  ( 8 * iC  ||  13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int iH =  ( iC - iC / 4 -  ( 8 + iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 + iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P3_Replace_Literal]^int iH =  ( iC - iC / 12 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P3_Replace_Literal]^int iH =  ( iC - iC / 4 -  ( iG * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P3_Replace_Literal]^int iH =  ( iC - iC / 4 -  ( 8 * iC  )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P3_Replace_Literal]^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 17 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P3_Replace_Literal]^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + iJ * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P3_Replace_Literal]^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + iI )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P3_Replace_Literal]^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 22;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P5_Replace_Variable]^int iH =  ( iL - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P5_Replace_Variable]^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iMonth + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P5_Replace_Variable]^int iH =  ( iG - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iC + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P8_Replace_Mix]^int iH =  ( iYear - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P11_Insert_Donor_Statement]^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P1_Replace_Type]^short  iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int iI = iH  &&   ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int / iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int iI = iH -  ( iH * 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int iI = iH -  ( iH / 28 )  *  ( 1  &&   ( 29 /  ( iH + 1 )  )  *  (  ( 21  &&  iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int + iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH  ^  1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21  |  iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P3_Replace_Literal]^int iI = iH -  ( iH / iJ )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P3_Replace_Literal]^int iI = iH -  ( iH / 28 )  *  ( iYear -  ( 29 /  ( iH + iYear )  )  *  (  ( 2iYear - iG )  / iYeariYear )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P3_Replace_Literal]^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 31 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P3_Replace_Literal]^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH  )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P3_Replace_Literal]^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( iG - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P3_Replace_Literal]^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 15 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P5_Replace_Variable]^int iI = iL -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P5_Replace_Variable]^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iYear )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P5_Replace_Variable]^int iI = iG -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iH )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P11_Insert_Donor_Statement]^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P1_Replace_Type]^long  iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )   >=  7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int iJ =  ||  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int iJ =  ( iYear + iYear / 4 + iI + 2  >>  iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int iJ =  >=  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int iJ =  >  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int iJ =  ( iYear  ^  iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int iJ =  ( iYear + iYear - 4 + iI + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC - 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P3_Replace_Literal]^int iJ =  ( iYear + iYear / -3 + iI + 2 - iC + iC / -3 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P3_Replace_Literal]^int iJ =  ( iYear + iYear / 4 + iI + iC - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P3_Replace_Literal]^int iJ =  ( iYear + iYear / -1 + iI + 2 - iC + iC / -1 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P3_Replace_Literal]^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 11;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P5_Replace_Variable]^int iJ =  ( iI + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P5_Replace_Variable]^int iJ =  ( iYear + iYear / 4 + iYear + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P5_Replace_Variable]^int iJ =  ( iYear + iYear / 4 + iI + 2 - iYear + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P5_Replace_Variable]^int iJ =  ( iC + iYear / 4 + iI + 2 - iYear + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P5_Replace_Variable]^int iJ =  ( iI + iYear / 4 + iYear + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P5_Replace_Variable]^int iJ =  ( iYear + iYear / 4 + iC + 2 - iI + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P1_Replace_Type]^short  iL = iI - iJ;^67^^^^^61^71^int iL = iI - iJ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int iL = iI  >>  iJ;^67^^^^^61^71^int iL = iI - iJ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P5_Replace_Variable]^int iL = iYear - iJ;^67^^^^^61^71^int iL = iI - iJ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P5_Replace_Variable]^int iL = iI - iMonth;^67^^^^^61^71^int iL = iI - iJ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P5_Replace_Variable]^int iL = iJ - iI;^67^^^^^61^71^int iL = iI - iJ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P8_Replace_Mix]^int iL = iI - iYear;^67^^^^^61^71^int iL = iI - iJ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P11_Insert_Donor_Statement]^int iC = iYear / 100;int iL = iI - iJ;^67^^^^^61^71^int iL = iI - iJ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P11_Insert_Donor_Statement]^int iG = iYear % 19;int iL = iI - iJ;^67^^^^^61^71^int iL = iI - iJ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P1_Replace_Type]^short  iMonth = 3 +  ( iL + 40 )  / 44;^68^^^^^61^71^int iMonth = 3 +  ( iL + 40 )  / 44;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int iMonth = 3 +  !=  ( iL + 40 )  / 44;^68^^^^^61^71^int iMonth = 3 +  ( iL + 40 )  / 44;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int iMonth = 3 +  ( iL + 40 )  - 44;^68^^^^^61^71^int iMonth = 3 +  ( iL + 40 )  / 44;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int iMonth = 3 +  ( iL  <=  40 )  / 44;^68^^^^^61^71^int iMonth = 3 +  ( iL + 40 )  / 44;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P3_Replace_Literal]^int iMonth = 11 +  ( iL + 40 )  / 44;^68^^^^^61^71^int iMonth = 3 +  ( iL + 40 )  / 44;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P3_Replace_Literal]^int iMonth = 3 +  ( iL  )  / 44;^68^^^^^61^71^int iMonth = 3 +  ( iL + 40 )  / 44;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P3_Replace_Literal]^int iMonth = 3 +  ( iL + 40 )  / iJ;^68^^^^^61^71^int iMonth = 3 +  ( iL + 40 )  / 44;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P5_Replace_Variable]^int iMonth = 3 +  ( iI + 40 )  / 44;^68^^^^^61^71^int iMonth = 3 +  ( iL + 40 )  / 44;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P8_Replace_Mix]^int iMonth = 3 +  ( iJ + 40 )  / 44;^68^^^^^61^71^int iMonth = 3 +  ( iL + 40 )  / 44;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P1_Replace_Type]^long  iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int iDay = iL + 28  !=  31 *  ( iMonth / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int iDay = iL   instanceof   28 - 31 *  ( iMonth / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int + iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P2_Replace_Operator]^int iDay = iL + 28 - 31 *  ( iMonth + 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P3_Replace_Literal]^int iDay = iL + iI - 31 *  ( iMonth / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P3_Replace_Literal]^int iDay = iL + 28 - iL *  ( iMonth / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P3_Replace_Literal]^int iDay = iL + 28 - 31 *  ( iMonth / iG ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P5_Replace_Variable]^int iDay = iYear + 28 - 31 *  ( iMonth / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P5_Replace_Variable]^int iDay = iL + 28 - 31 *  ( iYear / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P5_Replace_Variable]^int iDay = iMonth + 28 - 31 *  ( iL / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P8_Replace_Mix]^int iDay = iL + 28 - 31 *  ( iJ / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P4_Replace_Constructor]^return new DateMidnight (  iMonth, iDay ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P4_Replace_Constructor]^return new DateMidnight ( iYear,  iDay ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P4_Replace_Constructor]^return new DateMidnight ( iYear, iMonth ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P5_Replace_Variable]^return new DateMidnight ( iMonth, iMonth, iDay ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P5_Replace_Variable]^return new DateMidnight ( iYear, iYear, iDay ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P5_Replace_Variable]^return new DateMidnight ( iYear, iMonth, iL ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P5_Replace_Variable]^return new DateMidnight ( iDay, iMonth, iYear ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P5_Replace_Variable]^return new DateMidnight ( iMonth, iYear, iDay ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P5_Replace_Variable]^return new DateMidnight ( iYear, iDay, iMonth ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P8_Replace_Mix]^return new DateMidnight ( iYear, iL, iDay ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P5_Replace_Variable]^return new DateMidnight ( iYear, iMonth, iJ ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P8_Replace_Mix]^return new DateMidnight ( iI, iMonth, iDay ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P14_Delete_Statement]^^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[P3_Replace_Literal]^return EASTER_SUNDAY.create ( iYear ) .plusDays ( 0 ) ;^77^^^^^76^78^return EASTER_SUNDAY.create ( iYear ) .plusDays ( 1 ) ;^[CLASS] 6  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P5_Replace_Variable]^return iYear.create ( EASTER_SUNDAY ) .plusDays ( 1 ) ;^77^^^^^76^78^return EASTER_SUNDAY.create ( iYear ) .plusDays ( 1 ) ;^[CLASS] 6  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P8_Replace_Mix]^return EASTER_SUNDAY .create ( iYear )  .plusDays ( 1 ) ;^77^^^^^76^78^return EASTER_SUNDAY.create ( iYear ) .plusDays ( 1 ) ;^[CLASS] 6  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P3_Replace_Literal]^return EASTER_SUNDAY.create ( iYear ) .plusDays ( iYear ) ;^77^^^^^76^78^return EASTER_SUNDAY.create ( iYear ) .plusDays ( 1 ) ;^[CLASS] 6  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P14_Delete_Statement]^^77^^^^^76^78^return EASTER_SUNDAY.create ( iYear ) .plusDays ( 1 ) ;^[CLASS] 6  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, 7 ) .toDateTime (  ) ;^87^88^^^^86^89^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, 11 ) .toDateTime (  ) ;^[CLASS] 7  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P5_Replace_Variable]^return new DateMidnight (  DateTimeConstants.NOVEMBER, 11 ) .toDateTime (  ) ;^87^88^^^^86^89^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, 11 ) .toDateTime (  ) ;^[CLASS] 7  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P5_Replace_Variable]^return new DateMidnight ( iYear, DateTimeConstants. 11 ) .toDateTime (  ) ;^87^88^^^^86^89^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, 11 ) .toDateTime (  ) ;^[CLASS] 7  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P8_Replace_Mix]^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, 11L ) .toDateTime (  ) ;^87^88^^^^86^89^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, 11 ) .toDateTime (  ) ;^[CLASS] 7  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, 15 ) .toDateTime (  ) ;^87^88^^^^86^89^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, 11 ) .toDateTime (  ) ;^[CLASS] 7  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, iYear ) .toDateTime (  ) ;^87^88^^^^86^89^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, 11 ) .toDateTime (  ) ;^[CLASS] 7  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P14_Delete_Statement]^^87^88^^^^86^89^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, 11 ) .toDateTime (  ) ;^[CLASS] 7  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, iYear ) .toDateTime (  ) ;^95^96^^^^94^97^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 25 ) .toDateTime (  ) ;^[CLASS] 8  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P5_Replace_Variable]^return new DateMidnight (  DateTimeConstants.DECEMBER, 25 ) .toDateTime (  ) ;^95^96^^^^94^97^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 25 ) .toDateTime (  ) ;^[CLASS] 8  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P5_Replace_Variable]^return new DateMidnight ( iYear, DateTimeConstants. 25 ) .toDateTime (  ) ;^95^96^^^^94^97^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 25 ) .toDateTime (  ) ;^[CLASS] 8  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P8_Replace_Mix]^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 4 ) .toDateTime (  ) ;^95^96^^^^94^97^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 25 ) .toDateTime (  ) ;^[CLASS] 8  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 16 ) .toDateTime (  ) ;^95^96^^^^94^97^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 25 ) .toDateTime (  ) ;^[CLASS] 8  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P14_Delete_Statement]^^95^96^^^^94^97^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 25 ) .toDateTime (  ) ;^[CLASS] 8  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, iYear ) .toDateTime (  ) ;^103^104^^^^102^105^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 26 ) .toDateTime (  ) ;^[CLASS] 9  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P5_Replace_Variable]^return new DateMidnight (  DateTimeConstants.DECEMBER, 26 ) .toDateTime (  ) ;^103^104^^^^102^105^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 26 ) .toDateTime (  ) ;^[CLASS] 9  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P5_Replace_Variable]^return new DateMidnight ( iYear, DateTimeConstants. 26 ) .toDateTime (  ) ;^103^104^^^^102^105^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 26 ) .toDateTime (  ) ;^[CLASS] 9  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P8_Replace_Mix]^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 26 + 4 ) .toDateTime (  ) ;^103^104^^^^102^105^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 26 ) .toDateTime (  ) ;^[CLASS] 9  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P3_Replace_Literal]^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 19 ) .toDateTime (  ) ;^103^104^^^^102^105^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 26 ) .toDateTime (  ) ;^[CLASS] 9  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P14_Delete_Statement]^^103^104^^^^102^105^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 26 ) .toDateTime (  ) ;^[CLASS] 9  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[P14_Delete_Statement]^^112^113^114^^^110^115^return TimeUtility.GetFirstXWeekdayOfMonth ( DateTimeConstants.MONDAY, iYear, DateTimeConstants.SEPTEMBER ) ;^[CLASS] 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
