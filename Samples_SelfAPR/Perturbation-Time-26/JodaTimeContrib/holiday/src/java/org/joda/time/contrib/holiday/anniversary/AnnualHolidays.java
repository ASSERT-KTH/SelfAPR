[P8_Replace_Mix]^protected final List<AF> fHolidayFactories  = null ;^29^^^^^24^34^protected final List<AF> fHolidayFactories = new ArrayList<AF> (  ) ;^[CLASS] AnnualHolidays   [VARIABLES] 
[P14_Delete_Statement]^^32^^^^^31^33^buildFactories (  ) ;^[CLASS] AnnualHolidays  [METHOD] <init> [RETURN_TYPE] AnnualHolidays()   [VARIABLES] List  fHolidayFactories  boolean  
[P11_Insert_Donor_Statement]^fHolidayFactories.add ( af ) ;buildFactories (  ) ;^32^^^^^31^33^buildFactories (  ) ;^[CLASS] AnnualHolidays  [METHOD] <init> [RETURN_TYPE] AnnualHolidays()   [VARIABLES] List  fHolidayFactories  boolean  
[P14_Delete_Statement]^^38^^^^^37^39^fHolidayFactories.add ( af ) ;^[CLASS] AnnualHolidays  [METHOD] addFactory [RETURN_TYPE] void   AF af [VARIABLES] AF  af  List  fHolidayFactories  boolean  
[P11_Insert_Donor_Statement]^buildFactories (  ) ;fHolidayFactories.add ( af ) ;^38^^^^^37^39^fHolidayFactories.add ( af ) ;^[CLASS] AnnualHolidays  [METHOD] addFactory [RETURN_TYPE] void   AF af [VARIABLES] AF  af  List  fHolidayFactories  boolean  
[P1_Replace_Type]^List<T> result = new  LinkedHashSet <T> ( fHolidayFactories.size (  )  ) ;^42^^^^^41^48^List<T> result = new ArrayList<T> ( fHolidayFactories.size (  )  ) ;^[CLASS] AnnualHolidays  [METHOD] getHolidaysForYear [RETURN_TYPE] List   int iYear [VARIABLES] List  fHolidayFactories  result  boolean  AF  sdf  int  iYear  
[P3_Replace_Literal]^List<T> result = new ArrayList<T> ( fHolidayFactories.size() - 5  ) ;^42^^^^^41^48^List<T> result = new ArrayList<T> ( fHolidayFactories.size (  )  ) ;^[CLASS] AnnualHolidays  [METHOD] getHolidaysForYear [RETURN_TYPE] List   int iYear [VARIABLES] List  fHolidayFactories  result  boolean  AF  sdf  int  iYear  
[P3_Replace_Literal]^List<T> result = new ArrayList<T> ( fHolidayFactories.size() - 0  ) ;^42^^^^^41^48^List<T> result = new ArrayList<T> ( fHolidayFactories.size (  )  ) ;^[CLASS] AnnualHolidays  [METHOD] getHolidaysForYear [RETURN_TYPE] List   int iYear [VARIABLES] List  fHolidayFactories  result  boolean  AF  sdf  int  iYear  
[P8_Replace_Mix]^List<T> result = new ArrayList<T> ( this.size (  )  ) ;^42^^^^^41^48^List<T> result = new ArrayList<T> ( fHolidayFactories.size (  )  ) ;^[CLASS] AnnualHolidays  [METHOD] getHolidaysForYear [RETURN_TYPE] List   int iYear [VARIABLES] List  fHolidayFactories  result  boolean  AF  sdf  int  iYear  
[P3_Replace_Literal]^List<T> result = new ArrayList<T> ( fHolidayFactories.size() - 7  ) ;^42^^^^^41^48^List<T> result = new ArrayList<T> ( fHolidayFactories.size (  )  ) ;^[CLASS] AnnualHolidays  [METHOD] getHolidaysForYear [RETURN_TYPE] List   int iYear [VARIABLES] List  fHolidayFactories  result  boolean  AF  sdf  int  iYear  
[P5_Replace_Variable]^List<T> result = new ArrayList<T> ( 3.size (  )  ) ;^42^^^^^41^48^List<T> result = new ArrayList<T> ( fHolidayFactories.size (  )  ) ;^[CLASS] AnnualHolidays  [METHOD] getHolidaysForYear [RETURN_TYPE] List   int iYear [VARIABLES] List  fHolidayFactories  result  boolean  AF  sdf  int  iYear  
[P14_Delete_Statement]^^42^^^^^41^48^List<T> result = new ArrayList<T> ( fHolidayFactories.size (  )  ) ;^[CLASS] AnnualHolidays  [METHOD] getHolidaysForYear [RETURN_TYPE] List   int iYear [VARIABLES] List  fHolidayFactories  result  boolean  AF  sdf  int  iYear  
[P5_Replace_Variable]^result.add (  ( T )  iYear.create ( sdf )  ) ;^44^^^^^41^48^result.add (  ( T )  sdf.create ( iYear )  ) ;^[CLASS] AnnualHolidays  [METHOD] getHolidaysForYear [RETURN_TYPE] List   int iYear [VARIABLES] List  fHolidayFactories  result  boolean  AF  sdf  int  iYear  
[P14_Delete_Statement]^^44^^^^^41^48^result.add (  ( T )  sdf.create ( iYear )  ) ;^[CLASS] AnnualHolidays  [METHOD] getHolidaysForYear [RETURN_TYPE] List   int iYear [VARIABLES] List  fHolidayFactories  result  boolean  AF  sdf  int  iYear  
[P8_Replace_Mix]^Collections.sort ( 4 ) ;^46^^^^^41^48^Collections.sort ( result ) ;^[CLASS] AnnualHolidays  [METHOD] getHolidaysForYear [RETURN_TYPE] List   int iYear [VARIABLES] List  fHolidayFactories  result  boolean  AF  sdf  int  iYear  
[P14_Delete_Statement]^^46^47^^^^41^48^Collections.sort ( result ) ; return result;^[CLASS] AnnualHolidays  [METHOD] getHolidaysForYear [RETURN_TYPE] List   int iYear [VARIABLES] List  fHolidayFactories  result  boolean  AF  sdf  int  iYear  
