[P1_Replace_Type]^private  short  iFromYear;^33^^^^^28^38^private int iFromYear;^[CLASS] HolidayRule   [VARIABLES] 
[P8_Replace_Mix]^private  long  iFromYear;^33^^^^^28^38^private int iFromYear;^[CLASS] HolidayRule   [VARIABLES] 
[P1_Replace_Type]^private  short  iToYear;^35^^^^^30^40^private int iToYear;^[CLASS] HolidayRule   [VARIABLES] 
[P1_Replace_Type]^private  long  iMonthOfYear;^37^^^^^32^42^private int iMonthOfYear;^[CLASS] HolidayRule   [VARIABLES] 
[P1_Replace_Type]^private  long  iDayOfMonth;^39^^^^^34^44^private int iDayOfMonth;^[CLASS] HolidayRule   [VARIABLES] 
[P8_Replace_Mix]^private  short  iDayOfMonth;^39^^^^^34^44^private int iDayOfMonth;^[CLASS] HolidayRule   [VARIABLES] 
[P1_Replace_Type]^private  long  iDayOfWeek;^41^^^^^36^46^private int iDayOfWeek;^[CLASS] HolidayRule   [VARIABLES] 
[P8_Replace_Mix]^private  short  iDayOfWeek;^41^^^^^36^46^private int iDayOfWeek;^[CLASS] HolidayRule   [VARIABLES] 
[P1_Replace_Type]^private  short  iWeekOfMonth;^43^^^^^38^48^private int iWeekOfMonth;^[CLASS] HolidayRule   [VARIABLES] 
[P8_Replace_Mix]^private  long  iWeekOfMonth;^43^^^^^38^48^private int iWeekOfMonth;^[CLASS] HolidayRule   [VARIABLES] 
[P1_Replace_Type]^private  long  iRelativeDays;^45^^^^^40^50^private int iRelativeDays;^[CLASS] HolidayRule   [VARIABLES] 
[P8_Replace_Mix]^private  short  iRelativeDays;^45^^^^^40^50^private int iRelativeDays;^[CLASS] HolidayRule   [VARIABLES] 
[P1_Replace_Type]^private  short  iWeekendAdjust;^47^^^^^42^52^private int iWeekendAdjust;^[CLASS] HolidayRule   [VARIABLES] 
[P1_Replace_Type]^private static final  long  WEEKEND_ADJUST_NEXT_WEEKDAY = 0;^50^^^^^45^55^private static final int WEEKEND_ADJUST_NEXT_WEEKDAY = 0;^[CLASS] HolidayRule   [VARIABLES] 
[P8_Replace_Mix]^private static final int WEEKEND_ADJUST_NEXT_WEEKDAY = 2;^50^^^^^45^55^private static final int WEEKEND_ADJUST_NEXT_WEEKDAY = 0;^[CLASS] HolidayRule   [VARIABLES] 
[P1_Replace_Type]^private static final  short  WEEKEND_ADJUST_PREVIOUS_WEEKDAY = 1;^52^^^^^47^57^private static final int WEEKEND_ADJUST_PREVIOUS_WEEKDAY = 1;^[CLASS] HolidayRule   [VARIABLES] 
[P3_Replace_Literal]^private static final int WEEKEND_ADJUST_PREVIOUS_WEEKDAY = -1;^52^^^^^47^57^private static final int WEEKEND_ADJUST_PREVIOUS_WEEKDAY = 1;^[CLASS] HolidayRule   [VARIABLES] 
[P8_Replace_Mix]^private static final int WEEKEND_ADJUST_PREVIOUS_WEEKDAY  = null ;^52^^^^^47^57^private static final int WEEKEND_ADJUST_PREVIOUS_WEEKDAY = 1;^[CLASS] HolidayRule   [VARIABLES] 
[P1_Replace_Type]^private static final  short  WEEKEND_ADJUST_NEAREST_WEEKDAY = 2;^54^^^^^49^59^private static final int WEEKEND_ADJUST_NEAREST_WEEKDAY = 2;^[CLASS] HolidayRule   [VARIABLES] 
[P3_Replace_Literal]^private static final int WEEKEND_ADJUST_NEAREST_WEEKDAY = -2;^54^^^^^49^59^private static final int WEEKEND_ADJUST_NEAREST_WEEKDAY = 2;^[CLASS] HolidayRule   [VARIABLES] 
[P8_Replace_Mix]^private static final int WEEKEND_ADJUST_NEAREST_WEEKDAY = 0;^54^^^^^49^59^private static final int WEEKEND_ADJUST_NEAREST_WEEKDAY = 2;^[CLASS] HolidayRule   [VARIABLES] 
[P14_Delete_Statement]^^60^^^^^59^61^super (  ) ;^[CLASS] HolidayRule  [METHOD] <init> [RETURN_TYPE] HolidayRule()   [VARIABLES] int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  boolean  
[P5_Replace_Variable]^return iMonthOfYear;^70^^^^^69^71^return iFromYear;^[CLASS] HolidayRule  [METHOD] getFromYear [RETURN_TYPE] int   [VARIABLES] int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  boolean  
[P5_Replace_Variable]^iFromYear = iWeekendAdjust;^79^^^^^78^80^iFromYear = year;^[CLASS] HolidayRule  [METHOD] setFromYear [RETURN_TYPE] void   int year [VARIABLES] int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P8_Replace_Mix]^iFromYear =  iRelativeDays;^79^^^^^78^80^iFromYear = year;^[CLASS] HolidayRule  [METHOD] setFromYear [RETURN_TYPE] void   int year [VARIABLES] int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P11_Insert_Donor_Statement]^iToYear = year;iFromYear = year;^79^^^^^78^80^iFromYear = year;^[CLASS] HolidayRule  [METHOD] setFromYear [RETURN_TYPE] void   int year [VARIABLES] int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^return iMonthOfYear;^89^^^^^88^90^return iToYear;^[CLASS] HolidayRule  [METHOD] getToYear [RETURN_TYPE] int   [VARIABLES] int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^iToYear = iMonthOfYear;^98^^^^^97^99^iToYear = year;^[CLASS] HolidayRule  [METHOD] setToYear [RETURN_TYPE] void   int year [VARIABLES] int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P8_Replace_Mix]^iToYear =  iWeekendAdjust;^98^^^^^97^99^iToYear = year;^[CLASS] HolidayRule  [METHOD] setToYear [RETURN_TYPE] void   int year [VARIABLES] int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P11_Insert_Donor_Statement]^iFromYear = year;iToYear = year;^98^^^^^97^99^iToYear = year;^[CLASS] HolidayRule  [METHOD] setToYear [RETURN_TYPE] void   int year [VARIABLES] int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^return iToYear;^108^^^^^107^109^return iMonthOfYear;^[CLASS] HolidayRule  [METHOD] getMonthOfYear [RETURN_TYPE] int   [VARIABLES] int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P8_Replace_Mix]^return iWeekOfMonth;^108^^^^^107^109^return iMonthOfYear;^[CLASS] HolidayRule  [METHOD] getMonthOfYear [RETURN_TYPE] int   [VARIABLES] int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^return iWeekendAdjust;^118^^^^^117^119^return iDayOfMonth;^[CLASS] HolidayRule  [METHOD] getDayOfMonth [RETURN_TYPE] int   [VARIABLES] int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P8_Replace_Mix]^return iRelativeDays;^118^^^^^117^119^return iDayOfMonth;^[CLASS] HolidayRule  [METHOD] getDayOfMonth [RETURN_TYPE] int   [VARIABLES] int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^return iRelativeDays;^128^^^^^127^129^return iDayOfWeek;^[CLASS] HolidayRule  [METHOD] getDayOfWeek [RETURN_TYPE] int   [VARIABLES] int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P8_Replace_Mix]^return iToYear;^128^^^^^127^129^return iDayOfWeek;^[CLASS] HolidayRule  [METHOD] getDayOfWeek [RETURN_TYPE] int   [VARIABLES] int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^return year;^139^^^^^138^140^return iWeekOfMonth;^[CLASS] HolidayRule  [METHOD] getWeekOfMonth [RETURN_TYPE] int   [VARIABLES] int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P8_Replace_Mix]^return iRelativeDays;^139^^^^^138^140^return iWeekOfMonth;^[CLASS] HolidayRule  [METHOD] getWeekOfMonth [RETURN_TYPE] int   [VARIABLES] int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^return iToYear;^149^^^^^148^150^return iRelativeDays;^[CLASS] HolidayRule  [METHOD] getRelativeDays [RETURN_TYPE] int   [VARIABLES] int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P8_Replace_Mix]^return iWeekendAdjust;^149^^^^^148^150^return iRelativeDays;^[CLASS] HolidayRule  [METHOD] getRelativeDays [RETURN_TYPE] int   [VARIABLES] int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^return iWeekOfMonth;^159^^^^^158^160^return iWeekendAdjust;^[CLASS] HolidayRule  [METHOD] getWeekendAdjust [RETURN_TYPE] int   [VARIABLES] int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P8_Replace_Mix]^return iToYear;^159^^^^^158^160^return iWeekendAdjust;^[CLASS] HolidayRule  [METHOD] getWeekendAdjust [RETURN_TYPE] int   [VARIABLES] int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P2_Replace_Operator]^return  ( iFromYear <= year || iToYear >= year ) ;^171^^^^^170^172^return  ( iFromYear <= year && iToYear >= year ) ;^[CLASS] HolidayRule  [METHOD] appliesForYear [RETURN_TYPE] boolean   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P2_Replace_Operator]^return  ( iFromYear < year && iToYear >= year ) ;^171^^^^^170^172^return  ( iFromYear <= year && iToYear >= year ) ;^[CLASS] HolidayRule  [METHOD] appliesForYear [RETURN_TYPE] boolean   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P2_Replace_Operator]^return  ( iFromYear <= year && iToYear > year ) ;^171^^^^^170^172^return  ( iFromYear <= year && iToYear >= year ) ;^[CLASS] HolidayRule  [METHOD] appliesForYear [RETURN_TYPE] boolean   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^return  ( iFromYear <= iRelativeDays && iToYear >= year ) ;^171^^^^^170^172^return  ( iFromYear <= year && iToYear >= year ) ;^[CLASS] HolidayRule  [METHOD] appliesForYear [RETURN_TYPE] boolean   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^return  ( iRelativeDays <= year && iToYear >= year ) ;^171^^^^^170^172^return  ( iFromYear <= year && iToYear >= year ) ;^[CLASS] HolidayRule  [METHOD] appliesForYear [RETURN_TYPE] boolean   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^return  ( iFromYear <= year && iRelativeDays >= year ) ;^171^^^^^170^172^return  ( iFromYear <= year && iToYear >= year ) ;^[CLASS] HolidayRule  [METHOD] appliesForYear [RETURN_TYPE] boolean   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^return  ( year <= iFromYear && iToYear >= year ) ;^171^^^^^170^172^return  ( iFromYear <= year && iToYear >= year ) ;^[CLASS] HolidayRule  [METHOD] appliesForYear [RETURN_TYPE] boolean   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^return  ( iFromYear <= iToYear && year >= year ) ;^171^^^^^170^172^return  ( iFromYear <= year && iToYear >= year ) ;^[CLASS] HolidayRule  [METHOD] appliesForYear [RETURN_TYPE] boolean   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P8_Replace_Mix]^return  ( iFromYear ;^171^^^^^170^172^return  ( iFromYear <= year && iToYear >= year ) ;^[CLASS] HolidayRule  [METHOD] appliesForYear [RETURN_TYPE] boolean   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P3_Replace_Literal]^mdt.setDate ( year, iWeekendAdjust, iWeekendAdjust ) ;^183^^^^^182^203^mdt.setDate ( year, 1, 1 ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P3_Replace_Literal]^mdt.setDate ( year, iRelativeDays, iRelativeDays ) ;^183^^^^^182^203^mdt.setDate ( year, 1, 1 ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^mdt.setDate ( iWeekOfMonth, 1, 1 ) ;^183^^^^^182^203^mdt.setDate ( year, 1, 1 ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^mdt.setDate (  1, 1 ) ;^183^^^^^182^203^mdt.setDate ( year, 1, 1 ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P7_Replace_Invocation]^mdt .setDayOfWeek ( iRelativeDays )  ;^183^^^^^182^203^mdt.setDate ( year, 1, 1 ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P8_Replace_Mix]^mdt.setDate ( iRelativeDays, 1, 1 ) ;^183^^^^^182^203^mdt.setDate ( year, 1, 1 ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P14_Delete_Statement]^^183^^^^^182^203^mdt.setDate ( year, 1, 1 ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P11_Insert_Donor_Statement]^mdt.setDayOfWeek ( iDayOfWeek ) ;mdt.setDate ( year, 1, 1 ) ;^183^^^^^182^203^mdt.setDate ( year, 1, 1 ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P11_Insert_Donor_Statement]^mdt.setDayOfMonth ( iDayOfMonth ) ;mdt.setDate ( year, 1, 1 ) ;^183^^^^^182^203^mdt.setDate ( year, 1, 1 ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P2_Replace_Operator]^if  ( iMonthOfYear <= Integer.MIN_VALUE )  {^184^^^^^182^203^if  ( iMonthOfYear != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^if  ( iRelativeDays != Integer.MIN_VALUE )  {^184^^^^^182^203^if  ( iMonthOfYear != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^if  ( iMonthOfYear != Integer.iRelativeDays )  {^184^^^^^182^203^if  ( iMonthOfYear != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P9_Replace_Statement]^if  ( iWeekendAdjust != Integer.MIN_VALUE )  {^184^^^^^182^203^if  ( iMonthOfYear != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P9_Replace_Statement]^if  ( iWeekOfMonth != Integer.MIN_VALUE )  {^184^^^^^182^203^if  ( iMonthOfYear != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P9_Replace_Statement]^if  ( iDayOfMonth != Integer.MIN_VALUE )  {^184^^^^^182^203^if  ( iMonthOfYear != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P9_Replace_Statement]^if  ( iDayOfWeek != Integer.MIN_VALUE )  {^184^^^^^182^203^if  ( iMonthOfYear != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P15_Unwrap_Block]^mdt.setMonthOfYear(iMonthOfYear);^184^185^186^^^182^203^if  ( iMonthOfYear != Integer.MIN_VALUE )  { mdt.setMonthOfYear ( iMonthOfYear ) ; }^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P16_Remove_Block]^^184^185^186^^^182^203^if  ( iMonthOfYear != Integer.MIN_VALUE )  { mdt.setMonthOfYear ( iMonthOfYear ) ; }^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P13_Insert_Block]^if  (  ( iWeekOfMonth )  !=  ( MIN_VALUE )  )  {     calculateWeekOfMonth ( mdt, iMonthOfYear, iWeekOfMonth ) ; }^184^^^^^182^203^[Delete]^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P13_Insert_Block]^if  (  ( iWeekendAdjust )  !=  ( MIN_VALUE )  )  {     calculateWeekendAdjust ( mdt, iWeekendAdjust ) ; }^184^^^^^182^203^[Delete]^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P13_Insert_Block]^if  (  ( iDayOfWeek )  !=  ( MIN_VALUE )  )  {     mdt.setDayOfWeek ( iDayOfWeek ) ; }^184^^^^^182^203^[Delete]^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P13_Insert_Block]^if  (  ( iRelativeDays )  !=  ( MIN_VALUE )  )  {     mdt.addDays ( iRelativeDays ) ; }^184^^^^^182^203^[Delete]^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P13_Insert_Block]^if  (  ( iDayOfMonth )  !=  ( MIN_VALUE )  )  {     mdt.setDayOfMonth ( iDayOfMonth ) ; }^184^^^^^182^203^[Delete]^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^mdt.setMonthOfYear ( iWeekOfMonth ) ;^185^^^^^182^203^mdt.setMonthOfYear ( iMonthOfYear ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P7_Replace_Invocation]^mdt.setDayOfWeek ( iMonthOfYear ) ;^185^^^^^182^203^mdt.setMonthOfYear ( iMonthOfYear ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P7_Replace_Invocation]^mdt .getMonthOfYear (  )  ;^185^^^^^182^203^mdt.setMonthOfYear ( iMonthOfYear ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P8_Replace_Mix]^mdt.setMonthOfYear ( iRelativeDays ) ;^185^^^^^182^203^mdt.setMonthOfYear ( iMonthOfYear ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P14_Delete_Statement]^^185^^^^^182^203^mdt.setMonthOfYear ( iMonthOfYear ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P11_Insert_Donor_Statement]^mdt.setDayOfWeek ( iDayOfWeek ) ;mdt.setMonthOfYear ( iMonthOfYear ) ;^185^^^^^182^203^mdt.setMonthOfYear ( iMonthOfYear ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P2_Replace_Operator]^if  ( iDayOfMonth <= Integer.MIN_VALUE )  {^187^^^^^182^203^if  ( iDayOfMonth != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^if  ( iToYear != Integer.MIN_VALUE )  {^187^^^^^182^203^if  ( iDayOfMonth != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^if  ( iDayOfMonth != Integer.iRelativeDays )  {^187^^^^^182^203^if  ( iDayOfMonth != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P8_Replace_Mix]^if  ( iRelativeDays != Integer.MIN_VALUE )  {^187^^^^^182^203^if  ( iDayOfMonth != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P9_Replace_Statement]^if  ( iWeekendAdjust != Integer.MIN_VALUE )  {^187^^^^^182^203^if  ( iDayOfMonth != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P9_Replace_Statement]^if  ( iMonthOfYear != Integer.MIN_VALUE )  {^187^^^^^182^203^if  ( iDayOfMonth != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P9_Replace_Statement]^if  ( iWeekOfMonth != Integer.MIN_VALUE )  {^187^^^^^182^203^if  ( iDayOfMonth != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P9_Replace_Statement]^if  ( iDayOfWeek != Integer.MIN_VALUE )  {^187^^^^^182^203^if  ( iDayOfMonth != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P15_Unwrap_Block]^mdt.setDayOfMonth(iDayOfMonth);^187^188^189^^^182^203^if  ( iDayOfMonth != Integer.MIN_VALUE )  { mdt.setDayOfMonth ( iDayOfMonth ) ; }^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P16_Remove_Block]^^187^188^189^^^182^203^if  ( iDayOfMonth != Integer.MIN_VALUE )  { mdt.setDayOfMonth ( iDayOfMonth ) ; }^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P13_Insert_Block]^if  (  ( iWeekOfMonth )  !=  ( MIN_VALUE )  )  {     calculateWeekOfMonth ( mdt, iMonthOfYear, iWeekOfMonth ) ; }^187^^^^^182^203^[Delete]^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P13_Insert_Block]^if  (  ( iWeekendAdjust )  !=  ( MIN_VALUE )  )  {     calculateWeekendAdjust ( mdt, iWeekendAdjust ) ; }^187^^^^^182^203^[Delete]^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P13_Insert_Block]^if  (  ( iDayOfWeek )  !=  ( MIN_VALUE )  )  {     mdt.setDayOfWeek ( iDayOfWeek ) ; }^187^^^^^182^203^[Delete]^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P13_Insert_Block]^if  (  ( iRelativeDays )  !=  ( MIN_VALUE )  )  {     mdt.addDays ( iRelativeDays ) ; }^187^^^^^182^203^[Delete]^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P13_Insert_Block]^if  (  ( iMonthOfYear )  !=  ( MIN_VALUE )  )  {     mdt.setMonthOfYear ( iMonthOfYear ) ; }^187^^^^^182^203^[Delete]^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^mdt.setDayOfMonth ( iRelativeDays ) ;^188^^^^^182^203^mdt.setDayOfMonth ( iDayOfMonth ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P7_Replace_Invocation]^mdt.setDayOfWeek ( iDayOfMonth ) ;^188^^^^^182^203^mdt.setDayOfMonth ( iDayOfMonth ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P7_Replace_Invocation]^mdt .setDayOfWeek ( iWeekOfMonth )  ;^188^^^^^182^203^mdt.setDayOfMonth ( iDayOfMonth ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P8_Replace_Mix]^mdt.setDayOfMonth ( year ) ;^188^^^^^182^203^mdt.setDayOfMonth ( iDayOfMonth ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P14_Delete_Statement]^^188^^^^^182^203^mdt.setDayOfMonth ( iDayOfMonth ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P11_Insert_Donor_Statement]^mdt.setDate ( year, 1, 1 ) ;mdt.setDayOfMonth ( iDayOfMonth ) ;^188^^^^^182^203^mdt.setDayOfMonth ( iDayOfMonth ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P11_Insert_Donor_Statement]^mdt.setDayOfWeek ( iDayOfWeek ) ;mdt.setDayOfMonth ( iDayOfMonth ) ;^188^^^^^182^203^mdt.setDayOfMonth ( iDayOfMonth ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^mdt.setDayOfMonth ( iWeekendAdjust ) ;^188^^^^^182^203^mdt.setDayOfMonth ( iDayOfMonth ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P7_Replace_Invocation]^mdt .setDayOfWeek ( iFromYear )  ;^188^^^^^182^203^mdt.setDayOfMonth ( iDayOfMonth ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P8_Replace_Mix]^mdt.setDayOfMonth ( iWeekOfMonth ) ;^188^^^^^182^203^mdt.setDayOfMonth ( iDayOfMonth ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P2_Replace_Operator]^if  ( iDayOfWeek >= Integer.MIN_VALUE )  {^190^^^^^182^203^if  ( iDayOfWeek != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^if  ( iToYear != Integer.MIN_VALUE )  {^190^^^^^182^203^if  ( iDayOfWeek != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^if  ( iDayOfWeek != Integer.iRelativeDays )  {^190^^^^^182^203^if  ( iDayOfWeek != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P8_Replace_Mix]^if  ( year != Integer.MIN_VALUE )  {^190^^^^^182^203^if  ( iDayOfWeek != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P9_Replace_Statement]^if  ( iWeekendAdjust != Integer.MIN_VALUE )  {^190^^^^^182^203^if  ( iDayOfWeek != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P9_Replace_Statement]^if  ( iMonthOfYear != Integer.MIN_VALUE )  {^190^^^^^182^203^if  ( iDayOfWeek != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P9_Replace_Statement]^if  ( iWeekOfMonth != Integer.MIN_VALUE )  {^190^^^^^182^203^if  ( iDayOfWeek != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P9_Replace_Statement]^if  ( iRelativeDays != Integer.MIN_VALUE )  {^190^^^^^182^203^if  ( iDayOfWeek != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P9_Replace_Statement]^if  ( iDayOfMonth != Integer.MIN_VALUE )  {^190^^^^^182^203^if  ( iDayOfWeek != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P15_Unwrap_Block]^mdt.setDayOfWeek(iDayOfWeek);^190^191^192^^^182^203^if  ( iDayOfWeek != Integer.MIN_VALUE )  { mdt.setDayOfWeek ( iDayOfWeek ) ; }^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P16_Remove_Block]^^190^191^192^^^182^203^if  ( iDayOfWeek != Integer.MIN_VALUE )  { mdt.setDayOfWeek ( iDayOfWeek ) ; }^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P13_Insert_Block]^if  (  ( iWeekOfMonth )  !=  ( MIN_VALUE )  )  {     calculateWeekOfMonth ( mdt, iMonthOfYear, iWeekOfMonth ) ; }^190^^^^^182^203^[Delete]^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P13_Insert_Block]^if  (  ( iWeekendAdjust )  !=  ( MIN_VALUE )  )  {     calculateWeekendAdjust ( mdt, iWeekendAdjust ) ; }^190^^^^^182^203^[Delete]^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P13_Insert_Block]^if  (  ( iRelativeDays )  !=  ( MIN_VALUE )  )  {     mdt.addDays ( iRelativeDays ) ; }^190^^^^^182^203^[Delete]^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P13_Insert_Block]^if  (  ( iDayOfMonth )  !=  ( MIN_VALUE )  )  {     mdt.setDayOfMonth ( iDayOfMonth ) ; }^190^^^^^182^203^[Delete]^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P13_Insert_Block]^if  (  ( iMonthOfYear )  !=  ( MIN_VALUE )  )  {     mdt.setMonthOfYear ( iMonthOfYear ) ; }^190^^^^^182^203^[Delete]^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^mdt.setDayOfWeek ( iWeekOfMonth ) ;^191^^^^^182^203^mdt.setDayOfWeek ( iDayOfWeek ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P7_Replace_Invocation]^mdt.setDayOfMonth ( iDayOfWeek ) ;^191^^^^^182^203^mdt.setDayOfWeek ( iDayOfWeek ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P7_Replace_Invocation]^mdt .getDayOfWeek (  )  ;^191^^^^^182^203^mdt.setDayOfWeek ( iDayOfWeek ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P8_Replace_Mix]^mdt.setDayOfWeek ( iRelativeDays ) ;^191^^^^^182^203^mdt.setDayOfWeek ( iDayOfWeek ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P14_Delete_Statement]^^191^^^^^182^203^mdt.setDayOfWeek ( iDayOfWeek ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P11_Insert_Donor_Statement]^mdt.setDate ( year, 1, 1 ) ;mdt.setDayOfWeek ( iDayOfWeek ) ;^191^^^^^182^203^mdt.setDayOfWeek ( iDayOfWeek ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P11_Insert_Donor_Statement]^mdt.setMonthOfYear ( iMonthOfYear ) ;mdt.setDayOfWeek ( iDayOfWeek ) ;^191^^^^^182^203^mdt.setDayOfWeek ( iDayOfWeek ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( week ) ;mdt.setDayOfWeek ( iDayOfWeek ) ;^191^^^^^182^203^mdt.setDayOfWeek ( iDayOfWeek ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( -week ) ;mdt.setDayOfWeek ( iDayOfWeek ) ;^191^^^^^182^203^mdt.setDayOfWeek ( iDayOfWeek ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P11_Insert_Donor_Statement]^mdt.setDayOfMonth ( iDayOfMonth ) ;mdt.setDayOfWeek ( iDayOfWeek ) ;^191^^^^^182^203^mdt.setDayOfWeek ( iDayOfWeek ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P8_Replace_Mix]^mdt.setDayOfWeek ( iToYear ) ;^191^^^^^182^203^mdt.setDayOfWeek ( iDayOfWeek ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P2_Replace_Operator]^if  ( iWeekOfMonth < Integer.MIN_VALUE )  {^193^^^^^182^203^if  ( iWeekOfMonth != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^if  ( year != Integer.MIN_VALUE )  {^193^^^^^182^203^if  ( iWeekOfMonth != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^if  ( iWeekOfMonth != Integer.iMonthOfYear )  {^193^^^^^182^203^if  ( iWeekOfMonth != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P9_Replace_Statement]^if  ( iWeekendAdjust != Integer.MIN_VALUE )  {^193^^^^^182^203^if  ( iWeekOfMonth != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P9_Replace_Statement]^if  ( iMonthOfYear != Integer.MIN_VALUE )  {^193^^^^^182^203^if  ( iWeekOfMonth != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P9_Replace_Statement]^if  ( iRelativeDays != Integer.MIN_VALUE )  {^193^^^^^182^203^if  ( iWeekOfMonth != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P9_Replace_Statement]^if  ( iDayOfMonth != Integer.MIN_VALUE )  {^193^^^^^182^203^if  ( iWeekOfMonth != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P9_Replace_Statement]^if  ( iDayOfWeek != Integer.MIN_VALUE )  {^193^^^^^182^203^if  ( iWeekOfMonth != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P15_Unwrap_Block]^calculateWeekOfMonth(mdt, iMonthOfYear, iWeekOfMonth);^193^194^195^^^182^203^if  ( iWeekOfMonth != Integer.MIN_VALUE )  { calculateWeekOfMonth ( mdt, iMonthOfYear, iWeekOfMonth ) ; }^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P16_Remove_Block]^^193^194^195^^^182^203^if  ( iWeekOfMonth != Integer.MIN_VALUE )  { calculateWeekOfMonth ( mdt, iMonthOfYear, iWeekOfMonth ) ; }^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P13_Insert_Block]^if  (  ( iWeekendAdjust )  !=  ( MIN_VALUE )  )  {     calculateWeekendAdjust ( mdt, iWeekendAdjust ) ; }^193^^^^^182^203^[Delete]^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P13_Insert_Block]^if  (  ( iDayOfWeek )  !=  ( MIN_VALUE )  )  {     mdt.setDayOfWeek ( iDayOfWeek ) ; }^193^^^^^182^203^[Delete]^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P13_Insert_Block]^if  (  ( iRelativeDays )  !=  ( MIN_VALUE )  )  {     mdt.addDays ( iRelativeDays ) ; }^193^^^^^182^203^[Delete]^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P13_Insert_Block]^if  (  ( iDayOfMonth )  !=  ( MIN_VALUE )  )  {     mdt.setDayOfMonth ( iDayOfMonth ) ; }^193^^^^^182^203^[Delete]^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P13_Insert_Block]^if  (  ( iMonthOfYear )  !=  ( MIN_VALUE )  )  {     mdt.setMonthOfYear ( iMonthOfYear ) ; }^193^^^^^182^203^[Delete]^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^calculateWeekOfMonth ( mdt, iToYear, iWeekOfMonth ) ;^194^^^^^182^203^calculateWeekOfMonth ( mdt, iMonthOfYear, iWeekOfMonth ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^calculateWeekOfMonth ( mdt, iMonthOfYear, iRelativeDays ) ;^194^^^^^182^203^calculateWeekOfMonth ( mdt, iMonthOfYear, iWeekOfMonth ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^calculateWeekOfMonth (  iMonthOfYear, iWeekOfMonth ) ;^194^^^^^182^203^calculateWeekOfMonth ( mdt, iMonthOfYear, iWeekOfMonth ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^calculateWeekOfMonth ( mdt,  iWeekOfMonth ) ;^194^^^^^182^203^calculateWeekOfMonth ( mdt, iMonthOfYear, iWeekOfMonth ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^calculateWeekOfMonth ( mdt, iMonthOfYear ) ;^194^^^^^182^203^calculateWeekOfMonth ( mdt, iMonthOfYear, iWeekOfMonth ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^calculateWeekOfMonth ( iMonthOfYear, mdt, iWeekOfMonth ) ;^194^^^^^182^203^calculateWeekOfMonth ( mdt, iMonthOfYear, iWeekOfMonth ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^calculateWeekOfMonth ( iWeekOfMonth, iMonthOfYear, mdt ) ;^194^^^^^182^203^calculateWeekOfMonth ( mdt, iMonthOfYear, iWeekOfMonth ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P7_Replace_Invocation]^setToYear ( mdt, iMonthOfYear, iWeekOfMonth ) ;^194^^^^^182^203^calculateWeekOfMonth ( mdt, iMonthOfYear, iWeekOfMonth ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P14_Delete_Statement]^^194^^^^^182^203^calculateWeekOfMonth ( mdt, iMonthOfYear, iWeekOfMonth ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^calculateWeekOfMonth ( mdt, iRelativeDays, iWeekOfMonth ) ;^194^^^^^182^203^calculateWeekOfMonth ( mdt, iMonthOfYear, iWeekOfMonth ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^calculateWeekOfMonth ( mdt, iMonthOfYear, year ) ;^194^^^^^182^203^calculateWeekOfMonth ( mdt, iMonthOfYear, iWeekOfMonth ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^calculateWeekOfMonth ( mdt, iWeekOfMonth, iMonthOfYear ) ;^194^^^^^182^203^calculateWeekOfMonth ( mdt, iMonthOfYear, iWeekOfMonth ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P8_Replace_Mix]^setToYear ( mdt, iToYear, iWeekOfMonth ) ;^194^^^^^182^203^calculateWeekOfMonth ( mdt, iMonthOfYear, iWeekOfMonth ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P2_Replace_Operator]^if  ( iRelativeDays == Integer.MIN_VALUE )  {^196^^^^^182^203^if  ( iRelativeDays != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^if  ( year != Integer.MIN_VALUE )  {^196^^^^^182^203^if  ( iRelativeDays != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^if  ( iRelativeDays != Integer.iMonthOfYear )  {^196^^^^^182^203^if  ( iRelativeDays != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P8_Replace_Mix]^if  ( iRelativeDays != Integer.iToYear )  {^196^^^^^182^203^if  ( iRelativeDays != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P9_Replace_Statement]^if  ( iWeekendAdjust != Integer.MIN_VALUE )  {^196^^^^^182^203^if  ( iRelativeDays != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P9_Replace_Statement]^if  ( iMonthOfYear != Integer.MIN_VALUE )  {^196^^^^^182^203^if  ( iRelativeDays != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P9_Replace_Statement]^if  ( iWeekOfMonth != Integer.MIN_VALUE )  {^196^^^^^182^203^if  ( iRelativeDays != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P9_Replace_Statement]^if  ( iDayOfMonth != Integer.MIN_VALUE )  {^196^^^^^182^203^if  ( iRelativeDays != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P9_Replace_Statement]^if  ( iDayOfWeek != Integer.MIN_VALUE )  {^196^^^^^182^203^if  ( iRelativeDays != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P15_Unwrap_Block]^mdt.addDays(iRelativeDays);^196^197^198^^^182^203^if  ( iRelativeDays != Integer.MIN_VALUE )  { mdt.addDays ( iRelativeDays ) ; }^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P16_Remove_Block]^^196^197^198^^^182^203^if  ( iRelativeDays != Integer.MIN_VALUE )  { mdt.addDays ( iRelativeDays ) ; }^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P13_Insert_Block]^if  (  ( iWeekOfMonth )  !=  ( MIN_VALUE )  )  {     calculateWeekOfMonth ( mdt, iMonthOfYear, iWeekOfMonth ) ; }^196^^^^^182^203^[Delete]^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P13_Insert_Block]^if  (  ( iWeekendAdjust )  !=  ( MIN_VALUE )  )  {     calculateWeekendAdjust ( mdt, iWeekendAdjust ) ; }^196^^^^^182^203^[Delete]^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P13_Insert_Block]^if  (  ( iDayOfWeek )  !=  ( MIN_VALUE )  )  {     mdt.setDayOfWeek ( iDayOfWeek ) ; }^196^^^^^182^203^[Delete]^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P13_Insert_Block]^if  (  ( iDayOfMonth )  !=  ( MIN_VALUE )  )  {     mdt.setDayOfMonth ( iDayOfMonth ) ; }^196^^^^^182^203^[Delete]^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P13_Insert_Block]^if  (  ( iMonthOfYear )  !=  ( MIN_VALUE )  )  {     mdt.setMonthOfYear ( iMonthOfYear ) ; }^196^^^^^182^203^[Delete]^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^mdt.addDays ( iMonthOfYear ) ;^197^^^^^182^203^mdt.addDays ( iRelativeDays ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P7_Replace_Invocation]^mdt.addWeeks ( iRelativeDays ) ;^197^^^^^182^203^mdt.addDays ( iRelativeDays ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P7_Replace_Invocation]^mdt .addWeeks ( WEEKEND_ADJUST_PREVIOUS_WEEKDAY )  ;^197^^^^^182^203^mdt.addDays ( iRelativeDays ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P8_Replace_Mix]^mdt.addDays ( iWeekOfMonth ) ;^197^^^^^182^203^mdt.addDays ( iRelativeDays ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P14_Delete_Statement]^^197^^^^^182^203^mdt.addDays ( iRelativeDays ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( week ) ;mdt.addDays ( iRelativeDays ) ;^197^^^^^182^203^mdt.addDays ( iRelativeDays ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( 2 ) ;mdt.addDays ( iRelativeDays ) ;^197^^^^^182^203^mdt.addDays ( iRelativeDays ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( 1 ) ;mdt.addDays ( iRelativeDays ) ;^197^^^^^182^203^mdt.addDays ( iRelativeDays ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( -week ) ;mdt.addDays ( iRelativeDays ) ;^197^^^^^182^203^mdt.addDays ( iRelativeDays ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( -1 ) ;mdt.addDays ( iRelativeDays ) ;^197^^^^^182^203^mdt.addDays ( iRelativeDays ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( -2 ) ;mdt.addDays ( iRelativeDays ) ;^197^^^^^182^203^mdt.addDays ( iRelativeDays ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P8_Replace_Mix]^mdt.addWeeks ( iWeekendAdjust ) ;^197^^^^^182^203^mdt.addDays ( iRelativeDays ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P2_Replace_Operator]^if  ( iWeekendAdjust == Integer.MIN_VALUE )  {^199^^^^^182^203^if  ( iWeekendAdjust != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^if  ( iMonthOfYear != Integer.MIN_VALUE )  {^199^^^^^182^203^if  ( iWeekendAdjust != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^if  ( iWeekendAdjust != Integer.year )  {^199^^^^^182^203^if  ( iWeekendAdjust != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P9_Replace_Statement]^if  ( iWeekOfMonth != Integer.MIN_VALUE )  {^199^^^^^182^203^if  ( iWeekendAdjust != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P9_Replace_Statement]^if  ( iRelativeDays != Integer.MIN_VALUE )  {^199^^^^^182^203^if  ( iWeekendAdjust != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P9_Replace_Statement]^if  ( iDayOfMonth != Integer.MIN_VALUE )  {^199^^^^^182^203^if  ( iWeekendAdjust != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P9_Replace_Statement]^if  ( iDayOfWeek != Integer.MIN_VALUE )  {^199^^^^^182^203^if  ( iWeekendAdjust != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P15_Unwrap_Block]^calculateWeekendAdjust(mdt, iWeekendAdjust);^199^200^201^^^182^203^if  ( iWeekendAdjust != Integer.MIN_VALUE )  { calculateWeekendAdjust ( mdt, iWeekendAdjust ) ; }^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P16_Remove_Block]^^199^200^201^^^182^203^if  ( iWeekendAdjust != Integer.MIN_VALUE )  { calculateWeekendAdjust ( mdt, iWeekendAdjust ) ; }^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P13_Insert_Block]^if  (  ( iWeekOfMonth )  !=  ( MIN_VALUE )  )  {     calculateWeekOfMonth ( mdt, iMonthOfYear, iWeekOfMonth ) ; }^199^^^^^182^203^[Delete]^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P13_Insert_Block]^if  (  ( iDayOfWeek )  !=  ( MIN_VALUE )  )  {     mdt.setDayOfWeek ( iDayOfWeek ) ; }^199^^^^^182^203^[Delete]^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P13_Insert_Block]^if  (  ( iRelativeDays )  !=  ( MIN_VALUE )  )  {     mdt.addDays ( iRelativeDays ) ; }^199^^^^^182^203^[Delete]^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P13_Insert_Block]^if  (  ( iDayOfMonth )  !=  ( MIN_VALUE )  )  {     mdt.setDayOfMonth ( iDayOfMonth ) ; }^199^^^^^182^203^[Delete]^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P13_Insert_Block]^if  (  ( iMonthOfYear )  !=  ( MIN_VALUE )  )  {     mdt.setMonthOfYear ( iMonthOfYear ) ; }^199^^^^^182^203^[Delete]^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^calculateWeekendAdjust (  iWeekendAdjust ) ;^200^^^^^182^203^calculateWeekendAdjust ( mdt, iWeekendAdjust ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^calculateWeekendAdjust ( mdt ) ;^200^^^^^182^203^calculateWeekendAdjust ( mdt, iWeekendAdjust ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^calculateWeekendAdjust ( iWeekendAdjust, mdt ) ;^200^^^^^182^203^calculateWeekendAdjust ( mdt, iWeekendAdjust ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P7_Replace_Invocation]^setToYear ( mdt, iWeekendAdjust ) ;^200^^^^^182^203^calculateWeekendAdjust ( mdt, iWeekendAdjust ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P8_Replace_Mix]^calculateWeekendAdjust ( mdt, iRelativeDays ) ;^200^^^^^182^203^calculateWeekendAdjust ( mdt, iWeekendAdjust ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P14_Delete_Statement]^^200^^^^^182^203^calculateWeekendAdjust ( mdt, iWeekendAdjust ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P5_Replace_Variable]^calculateWeekendAdjust ( mdt, iMonthOfYear ) ;^200^^^^^182^203^calculateWeekendAdjust ( mdt, iWeekendAdjust ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[P2_Replace_Operator]^while  ( mdt.getMonthOfYear (  )  > month )  {^216^^^^^214^226^while  ( mdt.getMonthOfYear (  )  >= month )  {^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P5_Replace_Variable]^while  ( mdt.getMonthOfYear (  )  >= week )  {^216^^^^^214^226^while  ( mdt.getMonthOfYear (  )  >= month )  {^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P5_Replace_Variable]^while  ( month.getMonthOfYear (  )  >= mdt )  {^216^^^^^214^226^while  ( mdt.getMonthOfYear (  )  >= month )  {^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P7_Replace_Invocation]^while  ( mdt.setMonthOfYear (  )  >= month )  {^216^^^^^214^226^while  ( mdt.getMonthOfYear (  )  >= month )  {^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P8_Replace_Mix]^while  ( mdt.setMonthOfYear (  )  >= iRelativeDays )  {^216^^^^^214^226^while  ( mdt.getMonthOfYear (  )  >= month )  {^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P3_Replace_Literal]^mdt.addWeeks ( -iMonthOfYear ) ;^217^^^^^214^226^mdt.addWeeks ( -1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P14_Delete_Statement]^^217^^^^^214^226^mdt.addWeeks ( -1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( week ) ;mdt.addWeeks ( -1 ) ;^217^^^^^214^226^mdt.addWeeks ( -1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( 2 ) ;mdt.addWeeks ( -1 ) ;^217^^^^^214^226^mdt.addWeeks ( -1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( 1 ) ;mdt.addWeeks ( -1 ) ;^217^^^^^214^226^mdt.addWeeks ( -1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( -week ) ;mdt.addWeeks ( -1 ) ;^217^^^^^214^226^mdt.addWeeks ( -1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( 1 ) ;mdt.addWeeks ( -1 ) ;^217^^^^^214^226^mdt.addWeeks ( -1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( -1 ) ;mdt.addWeeks ( -1 ) ;^217^^^^^214^226^mdt.addWeeks ( -1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( -2 ) ;mdt.addWeeks ( -1 ) ;^217^^^^^214^226^mdt.addWeeks ( -1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P2_Replace_Operator]^while  ( mdt.getMonthOfYear (  )  < month )  {^221^^^^^214^226^while  ( mdt.getMonthOfYear (  )  <= month )  {^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P5_Replace_Variable]^while  ( mdt.getMonthOfYear (  )  <= iToYear )  {^221^^^^^214^226^while  ( mdt.getMonthOfYear (  )  <= month )  {^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P5_Replace_Variable]^while  ( month.getMonthOfYear (  )  <= mdt )  {^221^^^^^214^226^while  ( mdt.getMonthOfYear (  )  <= month )  {^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P7_Replace_Invocation]^while  ( mdt.setMonthOfYear (  )  <= month )  {^221^^^^^214^226^while  ( mdt.getMonthOfYear (  )  <= month )  {^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P8_Replace_Mix]^while  ( mdt .setMonthOfYear ( iRelativeDays )   <= iWeekendAdjust )  {^221^^^^^214^226^while  ( mdt.getMonthOfYear (  )  <= month )  {^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P3_Replace_Literal]^mdt.addWeeks ( -2 ) ;^222^^^^^214^226^mdt.addWeeks ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P14_Delete_Statement]^^222^^^^^214^226^mdt.addWeeks ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( week ) ;mdt.addWeeks ( 1 ) ;^222^^^^^214^226^mdt.addWeeks ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( 2 ) ;mdt.addWeeks ( 1 ) ;^222^^^^^214^226^mdt.addWeeks ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( 1 ) ;mdt.addWeeks ( 1 ) ;^222^^^^^214^226^mdt.addWeeks ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( -week ) ;mdt.addWeeks ( 1 ) ;^222^^^^^214^226^mdt.addWeeks ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( -1 ) ;mdt.addWeeks ( 1 ) ;^222^^^^^214^226^mdt.addWeeks ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( -1 ) ;mdt.addWeeks ( 1 ) ;^222^^^^^214^226^mdt.addWeeks ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( -2 ) ;mdt.addWeeks ( 1 ) ;^222^^^^^214^226^mdt.addWeeks ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P2_Replace_Operator]^if  ( week >= 0 )  {^215^^^^^214^226^if  ( week > 0 )  {^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P3_Replace_Literal]^if  ( week > -3 )  {^215^^^^^214^226^if  ( week > 0 )  {^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P5_Replace_Variable]^if  ( year > 0 )  {^215^^^^^214^226^if  ( week > 0 )  {^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P6_Replace_Expression]^if  ( mdt.getMonthOfYear() >= month )  {^215^^^^^214^226^if  ( week > 0 )  {^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P6_Replace_Expression]^if  ( mdt.getMonthOfYear() <= month )  {^215^^^^^214^226^if  ( week > 0 )  {^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P8_Replace_Mix]^if  ( iRelativeDays > 3 )  {^215^^^^^214^226^if  ( week > 0 )  {^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P15_Unwrap_Block]^while ((mdt.getMonthOfYear()) >= month) {    mdt.addWeeks((-1));} ; mdt.addWeeks(week);^215^216^217^218^^214^226^if  ( week > 0 )  { while  ( mdt.getMonthOfYear (  )  >= month )  { mdt.addWeeks ( -1 ) ; }^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P16_Remove_Block]^^215^216^217^218^^214^226^if  ( week > 0 )  { while  ( mdt.getMonthOfYear (  )  >= month )  { mdt.addWeeks ( -1 ) ; }^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P5_Replace_Variable]^while  ( mdt.getMonthOfYear (  )  <= week )  {^221^^^^^214^226^while  ( mdt.getMonthOfYear (  )  <= month )  {^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P8_Replace_Mix]^while  ( mdt.getMonthOfYear (  )  <= iWeekOfMonth )  {^221^^^^^214^226^while  ( mdt.getMonthOfYear (  )  <= month )  {^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P3_Replace_Literal]^mdt.addWeeks ( iWeekendAdjust ) ;^222^^^^^214^226^mdt.addWeeks ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P14_Delete_Statement]^^221^222^^^^214^226^while  ( mdt.getMonthOfYear (  )  <= month )  { mdt.addWeeks ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P5_Replace_Variable]^mdt.addWeeks ( -iRelativeDays ) ;^224^^^^^214^226^mdt.addWeeks ( -week ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P8_Replace_Mix]^mdt.addWeeks ( -year ) ;^224^^^^^214^226^mdt.addWeeks ( -week ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P14_Delete_Statement]^^224^^^^^214^226^mdt.addWeeks ( -week ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.setDayOfWeek ( iDayOfWeek ) ;mdt.addWeeks ( -week ) ;^224^^^^^214^226^mdt.addWeeks ( -week ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( week ) ;mdt.addWeeks ( -week ) ;^224^^^^^214^226^mdt.addWeeks ( -week ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( 2 ) ;mdt.addWeeks ( -week ) ;^224^^^^^214^226^mdt.addWeeks ( -week ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( 1 ) ;mdt.addWeeks ( -week ) ;^224^^^^^214^226^mdt.addWeeks ( -week ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( 1 ) ;mdt.addWeeks ( -week ) ;^224^^^^^214^226^mdt.addWeeks ( -week ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( -1 ) ;mdt.addWeeks ( -week ) ;^224^^^^^214^226^mdt.addWeeks ( -week ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( -1 ) ;mdt.addWeeks ( -week ) ;^224^^^^^214^226^mdt.addWeeks ( -week ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( iRelativeDays ) ;mdt.addWeeks ( -week ) ;^224^^^^^214^226^mdt.addWeeks ( -week ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( -2 ) ;mdt.addWeeks ( -week ) ;^224^^^^^214^226^mdt.addWeeks ( -week ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P3_Replace_Literal]^mdt.addWeeks ( -8 ) ;^217^^^^^214^226^mdt.addWeeks ( -1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P14_Delete_Statement]^^216^217^^^^214^226^while  ( mdt.getMonthOfYear (  )  >= month )  { mdt.addWeeks ( -1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P3_Replace_Literal]^mdt.addWeeks ( -iWeekOfMonth ) ;^217^^^^^214^226^mdt.addWeeks ( -1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P5_Replace_Variable]^mdt.addWeeks ( year ) ;^219^^^^^214^226^mdt.addWeeks ( week ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P7_Replace_Invocation]^mdt .addDays ( WEEKEND_ADJUST_NEXT_WEEKDAY )  ;^219^^^^^214^226^mdt.addWeeks ( week ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P8_Replace_Mix]^mdt.addWeeks ( iRelativeDays ) ;^219^^^^^214^226^mdt.addWeeks ( week ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P14_Delete_Statement]^^219^^^^^214^226^mdt.addWeeks ( week ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.setDayOfWeek ( iDayOfWeek ) ;mdt.addWeeks ( week ) ;^219^^^^^214^226^mdt.addWeeks ( week ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( 2 ) ;mdt.addWeeks ( week ) ;^219^^^^^214^226^mdt.addWeeks ( week ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( 1 ) ;mdt.addWeeks ( week ) ;^219^^^^^214^226^mdt.addWeeks ( week ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( -week ) ;mdt.addWeeks ( week ) ;^219^^^^^214^226^mdt.addWeeks ( week ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( 1 ) ;mdt.addWeeks ( week ) ;^219^^^^^214^226^mdt.addWeeks ( week ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( -1 ) ;mdt.addWeeks ( week ) ;^219^^^^^214^226^mdt.addWeeks ( week ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( -1 ) ;mdt.addWeeks ( week ) ;^219^^^^^214^226^mdt.addWeeks ( week ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( iRelativeDays ) ;mdt.addWeeks ( week ) ;^219^^^^^214^226^mdt.addWeeks ( week ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( -2 ) ;mdt.addWeeks ( week ) ;^219^^^^^214^226^mdt.addWeeks ( week ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P3_Replace_Literal]^mdt.addWeeks ( -iDayOfMonth ) ;^217^^^^^214^226^mdt.addWeeks ( -1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P8_Replace_Mix]^mdt .addDays ( WEEKEND_ADJUST_NEAREST_WEEKDAY )  ;^217^^^^^214^226^mdt.addWeeks ( -1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P5_Replace_Variable]^mdt.addWeeks ( iWeekOfMonth ) ;^219^^^^^214^226^mdt.addWeeks ( week ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P7_Replace_Invocation]^while  ( mdt .setMonthOfYear ( WEEKEND_ADJUST_NEAREST_WEEKDAY )   <= month )  {^221^^^^^214^226^while  ( mdt.getMonthOfYear (  )  <= month )  {^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P3_Replace_Literal]^mdt.addWeeks (  ) ;^222^^^^^214^226^mdt.addWeeks ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P7_Replace_Invocation]^mdt .addDays ( iDayOfMonth )  ;^222^^^^^214^226^mdt.addWeeks ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P2_Replace_Operator]^if  ( mdt.getDayOfWeek (  )  != DateTimeConstants.SATURDAY )  {^236^^^^^234^257^if  ( mdt.getDayOfWeek (  )  == DateTimeConstants.SATURDAY )  {^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P2_Replace_Operator]^if  ( mdt.getDayOfWeek (  )  <= DateTimeConstants.SATURDAY )  {^236^^^^^234^257^if  ( mdt.getDayOfWeek (  )  == DateTimeConstants.SATURDAY )  {^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P5_Replace_Variable]^if  ( mdt.getDayOfWeek (  )  == DateTimeConstants.0 )  {^236^^^^^234^257^if  ( mdt.getDayOfWeek (  )  == DateTimeConstants.SATURDAY )  {^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P6_Replace_Expression]^if  ( mdt.getDayOfWeek() == SUNDAY )  {^236^^^^^234^257^if  ( mdt.getDayOfWeek (  )  == DateTimeConstants.SATURDAY )  {^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P7_Replace_Invocation]^if  ( mdt.setDayOfWeek (  )  == DateTimeConstants.SATURDAY )  {^236^^^^^234^257^if  ( mdt.getDayOfWeek (  )  == DateTimeConstants.SATURDAY )  {^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P2_Replace_Operator]^} else if  ( mdt.getDayOfWeek (  )  != DateTimeConstants.SUNDAY )  {^246^^^^^234^257^} else if  ( mdt.getDayOfWeek (  )  == DateTimeConstants.SUNDAY )  {^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P6_Replace_Expression]^} else {^246^^^^^234^257^} else if  ( mdt.getDayOfWeek (  )  == DateTimeConstants.SUNDAY )  {^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P7_Replace_Invocation]^} else if  ( mdt.setDayOfWeek (  )  == DateTimeConstants.SUNDAY )  {^246^^^^^234^257^} else if  ( mdt.getDayOfWeek (  )  == DateTimeConstants.SUNDAY )  {^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P7_Replace_Invocation]^} else if  ( mdt .setDayOfWeek ( iRelativeDays )   == DateTimeConstants.SUNDAY )  {^246^^^^^234^257^} else if  ( mdt.getDayOfWeek (  )  == DateTimeConstants.SUNDAY )  {^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P3_Replace_Literal]^mdt.addDays ( iMonthOfYear ) ;^250^^^^^234^257^mdt.addDays ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P14_Delete_Statement]^^250^^^^^234^257^mdt.addDays ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( week ) ;mdt.addDays ( 1 ) ;^250^^^^^234^257^mdt.addDays ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( 2 ) ;mdt.addDays ( 1 ) ;^250^^^^^234^257^mdt.addDays ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( -week ) ;mdt.addDays ( 1 ) ;^250^^^^^234^257^mdt.addDays ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( 1 ) ;mdt.addDays ( 1 ) ;^250^^^^^234^257^mdt.addDays ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( -1 ) ;mdt.addDays ( 1 ) ;^250^^^^^234^257^mdt.addDays ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( -1 ) ;mdt.addDays ( 1 ) ;^250^^^^^234^257^mdt.addDays ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( iRelativeDays ) ;mdt.addDays ( 1 ) ;^250^^^^^234^257^mdt.addDays ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( -2 ) ;mdt.addDays ( 1 ) ;^250^^^^^234^257^mdt.addDays ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P3_Replace_Literal]^mdt.addDays ( --3 ) ;^253^^^^^234^257^mdt.addDays ( -2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P8_Replace_Mix]^mdt .addWeeks ( year )  ;^253^^^^^234^257^mdt.addDays ( -2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P14_Delete_Statement]^^253^254^^^^234^257^mdt.addDays ( -2 ) ; break;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( week ) ;mdt.addDays ( -2 ) ;^253^^^^^234^257^mdt.addDays ( -2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( 2 ) ;mdt.addDays ( -2 ) ;^253^^^^^234^257^mdt.addDays ( -2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( 1 ) ;mdt.addDays ( -2 ) ;^253^^^^^234^257^mdt.addDays ( -2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( -week ) ;mdt.addDays ( -2 ) ;^253^^^^^234^257^mdt.addDays ( -2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( 1 ) ;mdt.addDays ( -2 ) ;^253^^^^^234^257^mdt.addDays ( -2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( -1 ) ;mdt.addDays ( -2 ) ;^253^^^^^234^257^mdt.addDays ( -2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( -1 ) ;mdt.addDays ( -2 ) ;^253^^^^^234^257^mdt.addDays ( -2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( iRelativeDays ) ;mdt.addDays ( -2 ) ;^253^^^^^234^257^mdt.addDays ( -2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P3_Replace_Literal]^mdt.addDays ( iToYear ) ;^250^^^^^234^257^mdt.addDays ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P8_Replace_Mix]^mdt .addWeeks ( WEEKEND_ADJUST_PREVIOUS_WEEKDAY )  ;^250^^^^^234^257^mdt.addDays ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P14_Delete_Statement]^^250^251^^^^234^257^mdt.addDays ( 1 ) ; break;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P3_Replace_Literal]^mdt.addDays ( -week ) ;^253^^^^^234^257^mdt.addDays ( -2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P14_Delete_Statement]^^253^^^^^234^257^mdt.addDays ( -2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P3_Replace_Literal]^mdt.addDays ( iFromYear ) ;^239^^^^^234^257^mdt.addDays ( 2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P8_Replace_Mix]^mdt .addWeeks ( iFromYear )  ;^239^^^^^234^257^mdt.addDays ( 2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P14_Delete_Statement]^^239^^^^^234^257^mdt.addDays ( 2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( week ) ;mdt.addDays ( 2 ) ;^239^^^^^234^257^mdt.addDays ( 2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( 1 ) ;mdt.addDays ( 2 ) ;^239^^^^^234^257^mdt.addDays ( 2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( -week ) ;mdt.addDays ( 2 ) ;^239^^^^^234^257^mdt.addDays ( 2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( 1 ) ;mdt.addDays ( 2 ) ;^239^^^^^234^257^mdt.addDays ( 2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( -1 ) ;mdt.addDays ( 2 ) ;^239^^^^^234^257^mdt.addDays ( 2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( -1 ) ;mdt.addDays ( 2 ) ;^239^^^^^234^257^mdt.addDays ( 2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( iRelativeDays ) ;mdt.addDays ( 2 ) ;^239^^^^^234^257^mdt.addDays ( 2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( -2 ) ;mdt.addDays ( 2 ) ;^239^^^^^234^257^mdt.addDays ( 2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P3_Replace_Literal]^mdt.addDays ( -month ) ;^243^^^^^234^257^mdt.addDays ( -1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P7_Replace_Invocation]^mdt .addWeeks ( iWeekendAdjust )  ;^243^^^^^234^257^mdt.addDays ( -1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P14_Delete_Statement]^^243^244^^^^234^257^mdt.addDays ( -1 ) ; break;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( week ) ;mdt.addDays ( -1 ) ;^243^^^^^234^257^mdt.addDays ( -1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( 2 ) ;mdt.addDays ( -1 ) ;^243^^^^^234^257^mdt.addDays ( -1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( 1 ) ;mdt.addDays ( -1 ) ;^243^^^^^234^257^mdt.addDays ( -1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( -week ) ;mdt.addDays ( -1 ) ;^243^^^^^234^257^mdt.addDays ( -1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( 1 ) ;mdt.addDays ( -1 ) ;^243^^^^^234^257^mdt.addDays ( -1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addWeeks ( -1 ) ;mdt.addDays ( -1 ) ;^243^^^^^234^257^mdt.addDays ( -1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( iRelativeDays ) ;mdt.addDays ( -1 ) ;^243^^^^^234^257^mdt.addDays ( -1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P11_Insert_Donor_Statement]^mdt.addDays ( -2 ) ;mdt.addDays ( -1 ) ;^243^^^^^234^257^mdt.addDays ( -1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P8_Replace_Mix]^}  if  ( mdt.getDayOfWeek (  )  == DateTimeConstants.SUNDAY )  {^246^^^^^234^257^} else if  ( mdt.getDayOfWeek (  )  == DateTimeConstants.SUNDAY )  {^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P3_Replace_Literal]^mdt.addDays ( -5 ) ;^250^^^^^234^257^mdt.addDays ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P7_Replace_Invocation]^mdt .addWeeks ( iMonthOfYear )  ;^250^^^^^234^257^mdt.addDays ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P8_Replace_Mix]^mdt .addWeeks ( adjust )  ;^250^^^^^234^257^mdt.addDays ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P3_Replace_Literal]^mdt.addDays ( --5 ) ;^253^^^^^234^257^mdt.addDays ( -2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P8_Replace_Mix]^mdt .addWeeks ( adjust )  ;^253^^^^^234^257^mdt.addDays ( -2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P3_Replace_Literal]^mdt.addDays ( WEEKEND_ADJUST_NEXT_WEEKDAY ) ;^239^^^^^234^257^mdt.addDays ( 2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P7_Replace_Invocation]^mdt .addWeeks ( iWeekendAdjust )  ;^239^^^^^234^257^mdt.addDays ( 2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P3_Replace_Literal]^mdt.addDays ( -iToYear ) ;^243^^^^^234^257^mdt.addDays ( -1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P14_Delete_Statement]^^243^^^^^234^257^mdt.addDays ( -1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P3_Replace_Literal]^mdt.addDays ( -6 ) ;^250^^^^^234^257^mdt.addDays ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P7_Replace_Invocation]^mdt .addWeeks ( iRelativeDays )  ;^250^^^^^234^257^mdt.addDays ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P8_Replace_Mix]^mdt .addWeeks ( iDayOfMonth )  ;^250^^^^^234^257^mdt.addDays ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[P7_Replace_Invocation]^mdt .addWeeks ( iToYear )  ;^253^^^^^234^257^mdt.addDays ( -2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
