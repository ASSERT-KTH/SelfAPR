[P2_Replace_Operator]^throw new MockitoException ( join ( "Checked exception is invalid for this method!", "Invalid: "  >=  t )  ) ;^46^47^48^49^^45^50^throw new MockitoException ( join ( "Checked exception is invalid for this method!", "Invalid: " + t )  ) ;^[CLASS] Reporter  [METHOD] checkedExceptionInvalid [RETURN_TYPE] void   Throwable t [VARIABLES] boolean  Throwable  t  
[P3_Replace_Literal]^throw new MockitoException ( join ( "Checked e", "Invalid: " + t )  ) ;^46^47^48^49^^45^50^throw new MockitoException ( join ( "Checked exception is invalid for this method!", "Invalid: " + t )  ) ;^[CLASS] Reporter  [METHOD] checkedExceptionInvalid [RETURN_TYPE] void   Throwable t [VARIABLES] boolean  Throwable  t  
[P3_Replace_Literal]^throw new MockitoException ( join ( "Checked exception is invalid for this method!", "nvalid: " + t )  ) ;^46^47^48^49^^45^50^throw new MockitoException ( join ( "Checked exception is invalid for this method!", "Invalid: " + t )  ) ;^[CLASS] Reporter  [METHOD] checkedExceptionInvalid [RETURN_TYPE] void   Throwable t [VARIABLES] boolean  Throwable  t  
[P2_Replace_Operator]^throw new MockitoException ( join ( "Checked exception is invalid for this method!", "Invalid: "  ==  t )  ) ;^46^47^48^49^^45^50^throw new MockitoException ( join ( "Checked exception is invalid for this method!", "Invalid: " + t )  ) ;^[CLASS] Reporter  [METHOD] checkedExceptionInvalid [RETURN_TYPE] void   Throwable t [VARIABLES] boolean  Throwable  t  
[P3_Replace_Literal]^throw new MockitoException ( join ( "Checke", "Invalid: " + t )  ) ;^46^47^48^49^^45^50^throw new MockitoException ( join ( "Checked exception is invalid for this method!", "Invalid: " + t )  ) ;^[CLASS] Reporter  [METHOD] checkedExceptionInvalid [RETURN_TYPE] void   Throwable t [VARIABLES] boolean  Throwable  t  
[P3_Replace_Literal]^throw new MockitoException ( join ( "Checked exception is invalid for this method!", "Invalid: Invali" + t )  ) ;^46^47^48^49^^45^50^throw new MockitoException ( join ( "Checked exception is invalid for this method!", "Invalid: " + t )  ) ;^[CLASS] Reporter  [METHOD] checkedExceptionInvalid [RETURN_TYPE] void   Throwable t [VARIABLES] boolean  Throwable  t  
[P8_Replace_Mix]^throw new MockitoException ( join ( "Cannot mock/spy " + clazz.toString (  ) , ;^46^47^48^49^^45^50^throw new MockitoException ( join ( "Checked exception is invalid for this method!", "Invalid: " + t )  ) ;^[CLASS] Reporter  [METHOD] checkedExceptionInvalid [RETURN_TYPE] void   Throwable t [VARIABLES] boolean  Throwable  t  
[P2_Replace_Operator]^throw new MockitoException ( join ( "Checked exception is invalid for this method!", "Invalid: "  ^  t )  ) ;^46^47^48^49^^45^50^throw new MockitoException ( join ( "Checked exception is invalid for this method!", "Invalid: " + t )  ) ;^[CLASS] Reporter  [METHOD] checkedExceptionInvalid [RETURN_TYPE] void   Throwable t [VARIABLES] boolean  Throwable  t  
[P3_Replace_Literal]^throw new MockitoException ( join ( "Checked exception is invalid for this method!or thi", "Invalid: " + t )  ) ;^46^47^48^49^^45^50^throw new MockitoException ( join ( "Checked exception is invalid for this method!", "Invalid: " + t )  ) ;^[CLASS] Reporter  [METHOD] checkedExceptionInvalid [RETURN_TYPE] void   Throwable t [VARIABLES] boolean  Throwable  t  
[P3_Replace_Literal]^throw new MockitoException ( join ( "Checked exception is invalid for this method!", "Invalid: I" + t )  ) ;^46^47^48^49^^45^50^throw new MockitoException ( join ( "Checked exception is invalid for this method!", "Invalid: " + t )  ) ;^[CLASS] Reporter  [METHOD] checkedExceptionInvalid [RETURN_TYPE] void   Throwable t [VARIABLES] boolean  Throwable  t  
[P3_Replace_Literal]^throw new MockitoException ( join ( "Cannot st" )  ) ;^53^54^55^^^52^57^throw new MockitoException ( join ( "Cannot stub with null throwable!" )  ) ;^[CLASS] Reporter  [METHOD] cannotStubWithNullThrowable [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new MockitoException ( join ( "Cannot stub with null throwable!stub with n" )  ) ;^53^54^55^^^52^57^throw new MockitoException ( join ( "Cannot stub with null throwable!" )  ) ;^[CLASS] Reporter  [METHOD] cannotStubWithNullThrowable [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new MockitoException ( join ( "annot stub with null throwable!" )  ) ;^53^54^55^^^52^57^throw new MockitoException ( join ( "Cannot stub with null throwable!" )  ) ;^[CLASS] Reporter  [METHOD] cannotStubWithNullThrowable [RETURN_TYPE] void   [VARIABLES] boolean  
[P14_Delete_Statement]^^53^54^55^^^52^57^throw new MockitoException ( join ( "Cannot stub with null throwable!" )  ) ;^[CLASS] Reporter  [METHOD] cannotStubWithNullThrowable [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new UnfinishedStubbingException ( join ( "Unfi", location, "",^60^61^62^63^^59^74^throw new UnfinishedStubbingException ( join ( "Unfinished stubbing detected here:", location, "",^[CLASS] Reporter  [METHOD] unfinishedStubbing [RETURN_TYPE] void   Location location [VARIABLES] boolean  Location  location  
[P3_Replace_Literal]^throw new UnfinishedStubbingException ( join ( "inis", location, "",^60^61^62^63^^59^74^throw new UnfinishedStubbingException ( join ( "Unfinished stubbing detected here:", location, "",^[CLASS] Reporter  [METHOD] unfinishedStubbing [RETURN_TYPE] void   Location location [VARIABLES] boolean  Location  location  
[P3_Replace_Literal]^throw new UnfinishedStubbingException ( join ( "nished stubbin", location, "",^60^61^62^63^^59^74^throw new UnfinishedStubbingException ( join ( "Unfinished stubbing detected here:", location, "",^[CLASS] Reporter  [METHOD] unfinishedStubbing [RETURN_TYPE] void   Location location [VARIABLES] boolean  Location  location  
[P3_Replace_Literal]^throw new MissingMethodInvocationException ( join ( "when (  )  requires an argument which has to be a method call on a mock.", "For eor example:", "    when ( mock.getArticles (  )  ) .thenReturn ( articles ) ;",^77^78^79^80^^76^86^throw new MissingMethodInvocationException ( join ( "when (  )  requires an argument which has to be a method call on a mock.", "For example:", "    when ( mock.getArticles (  )  ) .thenReturn ( articles ) ;",^[CLASS] Reporter  [METHOD] missingMethodInvocation [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new MissingMethodInvocationException ( join ( "when (  )  requires an argument which has to be a method call on a mock.", "For example:Fo", "    when ( mock.getArticles (  )  ) .thenReturn ( articles ) ;",^77^78^79^80^^76^86^throw new MissingMethodInvocationException ( join ( "when (  )  requires an argument which has to be a method call on a mock.", "For example:", "    when ( mock.getArticles (  )  ) .thenReturn ( articles ) ;",^[CLASS] Reporter  [METHOD] missingMethodInvocation [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new MissingMethodInvocationException ( join ( "when (  )  requires an argument which has to be a method call on a mock.", "For exaor example:", "    when ( mock.getArticles (  )  ) .thenReturn ( articles ) ;",^77^78^79^80^^76^86^throw new MissingMethodInvocationException ( join ( "when (  )  requires an argument which has to be a method call on a mock.", "For example:", "    when ( mock.getArticles (  )  ) .thenReturn ( articles ) ;",^[CLASS] Reporter  [METHOD] missingMethodInvocation [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new NotAMockException ( join ( "Argument passed to verify (  )  is not a mock!", "Examples of correct verifications:ampl", "    verify ( mock ) .someMethod (  ) ;",^105^106^107^108^^104^112^throw new NotAMockException ( join ( "Argument passed to verify (  )  is not a mock!", "Examples of correct verifications:", "    verify ( mock ) .someMethod (  ) ;",^[CLASS] Reporter  [METHOD] notAMockPassedToVerify [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new NotAMockException ( join ( "Argument passed to verify (  )  is not a mock!", "mples of c", "    verify ( mock ) .someMethod (  ) ;",^105^106^107^108^^104^112^throw new NotAMockException ( join ( "Argument passed to verify (  )  is not a mock!", "Examples of correct verifications:", "    verify ( mock ) .someMethod (  ) ;",^[CLASS] Reporter  [METHOD] notAMockPassedToVerify [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new NotAMockException ( join ( "Argument passed to verify (  )  is not a mock!", "ples o", "    verify ( mock ) .someMethod (  ) ;",^105^106^107^108^^104^112^throw new NotAMockException ( join ( "Argument passed to verify (  )  is not a mock!", "Examples of correct verifications:", "    verify ( mock ) .someMethod (  ) ;",^[CLASS] Reporter  [METHOD] notAMockPassedToVerify [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new NullInsteadOfMockException ( join ( "Argument passed to verify (  )  is null!", "Examples of correct verifications:ples of correct ve", "    verify ( mock ) .someMethod (  ) ;",^115^116^117^118^^114^123^throw new NullInsteadOfMockException ( join ( "Argument passed to verify (  )  is null!", "Examples of correct verifications:", "    verify ( mock ) .someMethod (  ) ;",^[CLASS] Reporter  [METHOD] nullPassedToVerify [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new NullInsteadOfMockException ( join ( "Argument passed to verify (  )  is null!", "Examples of correct verifications:rrect verificati", "    verify ( mock ) .someMethod (  ) ;",^115^116^117^118^^114^123^throw new NullInsteadOfMockException ( join ( "Argument passed to verify (  )  is null!", "Examples of correct verifications:", "    verify ( mock ) .someMethod (  ) ;",^[CLASS] Reporter  [METHOD] nullPassedToVerify [RETURN_TYPE] void   [VARIABLES] boolean  
[P8_Replace_Mix]^throw new NotAMockException ( join ( "Argument passed to when (  )  is not a mock!", ;^115^116^117^118^^114^123^throw new NullInsteadOfMockException ( join ( "Argument passed to verify (  )  is null!", "Examples of correct verifications:", "    verify ( mock ) .someMethod (  ) ;",^[CLASS] Reporter  [METHOD] nullPassedToVerify [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new NullInsteadOfMockException ( join ( "Argument passed to verify (  )  is null!", "t verificaxamples of correct verifications:", "    verify ( mock ) .someMethod (  ) ;",^115^116^117^118^^114^123^throw new NullInsteadOfMockException ( join ( "Argument passed to verify (  )  is null!", "Examples of correct verifications:", "    verify ( mock ) .someMethod (  ) ;",^[CLASS] Reporter  [METHOD] nullPassedToVerify [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new NotAMockException ( join ( "Argument passed to when (  )  is not a mock!", "Examplxample of correct stubbing:", "    doThrow ( new RuntimeException (  )  ) .when ( mock ) .someMethod (  ) ;"^126^127^128^129^^125^131^throw new NotAMockException ( join ( "Argument passed to when (  )  is not a mock!", "Example of correct stubbing:", "    doThrow ( new RuntimeException (  )  ) .when ( mock ) .someMethod (  ) ;"^[CLASS] Reporter  [METHOD] notAMockPassedToWhenMethod [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new NotAMockException ( join ( "Argument passed to when (  )  is not a mock!", "rect stubb", "    doThrow ( new RuntimeException (  )  ) .when ( mock ) .someMethod (  ) ;"^126^127^128^129^^125^131^throw new NotAMockException ( join ( "Argument passed to when (  )  is not a mock!", "Example of correct stubbing:", "    doThrow ( new RuntimeException (  )  ) .when ( mock ) .someMethod (  ) ;"^[CLASS] Reporter  [METHOD] notAMockPassedToWhenMethod [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new NotAMockException ( join ( "Argument passed to when (  )  is not a mock!", "xample of cor", "    doThrow ( new RuntimeException (  )  ) .when ( mock ) .someMethod (  ) ;"^126^127^128^129^^125^131^throw new NotAMockException ( join ( "Argument passed to when (  )  is not a mock!", "Example of correct stubbing:", "    doThrow ( new RuntimeException (  )  ) .when ( mock ) .someMethod (  ) ;"^[CLASS] Reporter  [METHOD] notAMockPassedToWhenMethod [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new NullInsteadOfMockException ( join ( "Argument passed to when (  )  is null!", "Example of correct stubbing:Exa", "    doThrow ( new RuntimeException (  )  ) .when ( mock ) .someMethod (  ) ;",^134^135^136^137^^133^140^throw new NullInsteadOfMockException ( join ( "Argument passed to when (  )  is null!", "Example of correct stubbing:", "    doThrow ( new RuntimeException (  )  ) .when ( mock ) .someMethod (  ) ;",^[CLASS] Reporter  [METHOD] nullPassedToWhenMethod [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new NullInsteadOfMockException ( join ( "Argument passed to when (  )  is null!", "cxample of correct stubbing:", "    doThrow ( new RuntimeException (  )  ) .when ( mock ) .someMethod (  ) ;",^134^135^136^137^^133^140^throw new NullInsteadOfMockException ( join ( "Argument passed to when (  )  is null!", "Example of correct stubbing:", "    doThrow ( new RuntimeException (  )  ) .when ( mock ) .someMethod (  ) ;",^[CLASS] Reporter  [METHOD] nullPassedToWhenMethod [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new NullInsteadOfMockException ( join ( "Argument passed to when (  )  is null!", "Example of correct stubbing:ample of correct stu", "    doThrow ( new RuntimeException (  )  ) .when ( mock ) .someMethod (  ) ;",^134^135^136^137^^133^140^throw new NullInsteadOfMockException ( join ( "Argument passed to when (  )  is null!", "Example of correct stubbing:", "    doThrow ( new RuntimeException (  )  ) .when ( mock ) .someMethod (  ) ;",^[CLASS] Reporter  [METHOD] nullPassedToWhenMethod [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new MockitoException ( join ( "Method requires argument ( s ) !", "rified, e.", "    verifyNoMoreInteractions ( mockOne, mockTwo ) ;",^143^144^145^146^^142^149^throw new MockitoException ( join ( "Method requires argument ( s ) !", "Pass mocks that should be verified, e.g:", "    verifyNoMoreInteractions ( mockOne, mockTwo ) ;",^[CLASS] Reporter  [METHOD] mocksHaveToBePassedToVerifyNoMoreInteractions [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new MockitoException ( join ( "Method requires argument ( s ) !", "ks that shoul", "    verifyNoMoreInteractions ( mockOne, mockTwo ) ;",^143^144^145^146^^142^149^throw new MockitoException ( join ( "Method requires argument ( s ) !", "Pass mocks that should be verified, e.g:", "    verifyNoMoreInteractions ( mockOne, mockTwo ) ;",^[CLASS] Reporter  [METHOD] mocksHaveToBePassedToVerifyNoMoreInteractions [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new MockitoException ( join ( "Method requires argument ( s ) !", "hass mocks that should be verified, e.g:", "    verifyNoMoreInteractions ( mockOne, mockTwo ) ;",^143^144^145^146^^142^149^throw new MockitoException ( join ( "Method requires argument ( s ) !", "Pass mocks that should be verified, e.g:", "    verifyNoMoreInteractions ( mockOne, mockTwo ) ;",^[CLASS] Reporter  [METHOD] mocksHaveToBePassedToVerifyNoMoreInteractions [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new NotAMockException ( join ( "Argument ( s )  passed is not a mock!", "verixamples of correct verifications:", "    verifyNoMoreInteractions ( mockOne, mockTwo ) ;",^152^153^154^155^^151^158^throw new NotAMockException ( join ( "Argument ( s )  passed is not a mock!", "Examples of correct verifications:", "    verifyNoMoreInteractions ( mockOne, mockTwo ) ;",^[CLASS] Reporter  [METHOD] notAMockPassedToVerifyNoMoreInteractions [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new NotAMockException ( join ( "Argument ( s )  passed is not a mock!", "Examples of correct verifications:E", "    verifyNoMoreInteractions ( mockOne, mockTwo ) ;",^152^153^154^155^^151^158^throw new NotAMockException ( join ( "Argument ( s )  passed is not a mock!", "Examples of correct verifications:", "    verifyNoMoreInteractions ( mockOne, mockTwo ) ;",^[CLASS] Reporter  [METHOD] notAMockPassedToVerifyNoMoreInteractions [RETURN_TYPE] void   [VARIABLES] boolean  
[P8_Replace_Mix]^throw new NotAMockException ( join ( "Argument passed to when (  )  is not a mock!", ;^152^153^154^155^^151^158^throw new NotAMockException ( join ( "Argument ( s )  passed is not a mock!", "Examples of correct verifications:", "    verifyNoMoreInteractions ( mockOne, mockTwo ) ;",^[CLASS] Reporter  [METHOD] notAMockPassedToVerifyNoMoreInteractions [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new NotAMockException ( join ( "Argument ( s )  passed is not a mock!", "E", "    verifyNoMoreInteractions ( mockOne, mockTwo ) ;",^152^153^154^155^^151^158^throw new NotAMockException ( join ( "Argument ( s )  passed is not a mock!", "Examples of correct verifications:", "    verifyNoMoreInteractions ( mockOne, mockTwo ) ;",^[CLASS] Reporter  [METHOD] notAMockPassedToVerifyNoMoreInteractions [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new NullInsteadOfMockException ( join ( "Argument ( s )  passed is null!", " verifxamples of correct verifications:", "    verifyNoMoreInteractions ( mockOne, mockTwo ) ;",^161^162^163^164^^160^167^throw new NullInsteadOfMockException ( join ( "Argument ( s )  passed is null!", "Examples of correct verifications:", "    verifyNoMoreInteractions ( mockOne, mockTwo ) ;",^[CLASS] Reporter  [METHOD] nullPassedToVerifyNoMoreInteractions [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new NullInsteadOfMockException ( join ( "Argument ( s )  passed is null!", "rrexamples of correct verifications:", "    verifyNoMoreInteractions ( mockOne, mockTwo ) ;",^161^162^163^164^^160^167^throw new NullInsteadOfMockException ( join ( "Argument ( s )  passed is null!", "Examples of correct verifications:", "    verifyNoMoreInteractions ( mockOne, mockTwo ) ;",^[CLASS] Reporter  [METHOD] nullPassedToVerifyNoMoreInteractions [RETURN_TYPE] void   [VARIABLES] boolean  
[P8_Replace_Mix]^throw new NotAMockException ( join ( "Argument passed to when (  )  is not a mock!", ;^161^162^163^164^^160^167^throw new NullInsteadOfMockException ( join ( "Argument ( s )  passed is null!", "Examples of correct verifications:", "    verifyNoMoreInteractions ( mockOne, mockTwo ) ;",^[CLASS] Reporter  [METHOD] nullPassedToVerifyNoMoreInteractions [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new NullInsteadOfMockException ( join ( "Argument ( s )  passed is null!", "xamples of correct verificatxamples of correct verifications:", "    verifyNoMoreInteractions ( mockOne, mockTwo ) ;",^161^162^163^164^^160^167^throw new NullInsteadOfMockException ( join ( "Argument ( s )  passed is null!", "Examples of correct verifications:", "    verifyNoMoreInteractions ( mockOne, mockTwo ) ;",^[CLASS] Reporter  [METHOD] nullPassedToVerifyNoMoreInteractions [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new NotAMockException ( join ( "Argument ( s )  passed is not a mock!", "Passass mocks that require verification in order.", "For example:",^170^171^172^173^^169^176^throw new NotAMockException ( join ( "Argument ( s )  passed is not a mock!", "Pass mocks that require verification in order.", "For example:",^[CLASS] Reporter  [METHOD] notAMockPassedWhenCreatingInOrder [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new NotAMockException ( join ( "Argument ( s )  passed is not a mock!", "Pa", "For example:",^170^171^172^173^^169^176^throw new NotAMockException ( join ( "Argument ( s )  passed is not a mock!", "Pass mocks that require verification in order.", "For example:",^[CLASS] Reporter  [METHOD] notAMockPassedWhenCreatingInOrder [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new NotAMockException ( join ( "Argument ( s )  passed is not a mock!", "Pass mocks that require verification in order.", "For example: ",^170^171^172^173^^169^176^throw new NotAMockException ( join ( "Argument ( s )  passed is not a mock!", "Pass mocks that require verification in order.", "For example:",^[CLASS] Reporter  [METHOD] notAMockPassedWhenCreatingInOrder [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new NotAMockException ( join ( "Argument ( s )  passed is not a mock!", "ocks that require verification ass mocks that require verification in order.", "For example:",^170^171^172^173^^169^176^throw new NotAMockException ( join ( "Argument ( s )  passed is not a mock!", "Pass mocks that require verification in order.", "For example:",^[CLASS] Reporter  [METHOD] notAMockPassedWhenCreatingInOrder [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new NotAMockException ( join ( "Argument ( s )  passed is not a mock!", "Pass mocks that require verification in order.", "For exaor example:",^170^171^172^173^^169^176^throw new NotAMockException ( join ( "Argument ( s )  passed is not a mock!", "Pass mocks that require verification in order.", "For example:",^[CLASS] Reporter  [METHOD] notAMockPassedWhenCreatingInOrder [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new NullInsteadOfMockException ( join ( "Argument ( s )  passed is null!", "uire verificatass mocks that require verification in order.", "For example:",^179^180^181^182^^178^185^throw new NullInsteadOfMockException ( join ( "Argument ( s )  passed is null!", "Pass mocks that require verification in order.", "For example:",^[CLASS] Reporter  [METHOD] nullPassedWhenCreatingInOrder [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new NullInsteadOfMockException ( join ( "Argument ( s )  passed is null!", "Pass mocks that require verification in order.", " examp",^179^180^181^182^^178^185^throw new NullInsteadOfMockException ( join ( "Argument ( s )  passed is null!", "Pass mocks that require verification in order.", "For example:",^[CLASS] Reporter  [METHOD] nullPassedWhenCreatingInOrder [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new NullInsteadOfMockException ( join ( "Argument ( s )  passed is null!", "Pass mocks that require verification in order.that require verification in o", "For example:",^179^180^181^182^^178^185^throw new NullInsteadOfMockException ( join ( "Argument ( s )  passed is null!", "Pass mocks that require verification in order.", "For example:",^[CLASS] Reporter  [METHOD] nullPassedWhenCreatingInOrder [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new NullInsteadOfMockException ( join ( "Argument ( s )  passed is null!", "Pass mocks that require verification in order.", "lor example:",^179^180^181^182^^178^185^throw new NullInsteadOfMockException ( join ( "Argument ( s )  passed is null!", "Pass mocks that require verification in order.", "For example:",^[CLASS] Reporter  [METHOD] nullPassedWhenCreatingInOrder [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new NullInsteadOfMockException ( join ( "Argument ( s )  passed is null!", "Pass mocks that require verification in order.ss", "For example:",^179^180^181^182^^178^185^throw new NullInsteadOfMockException ( join ( "Argument ( s )  passed is null!", "Pass mocks that require verification in order.", "For example:",^[CLASS] Reporter  [METHOD] nullPassedWhenCreatingInOrder [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new NullInsteadOfMockException ( join ( "Argument ( s )  passed is null!", "Pass mocks that require verification in order.", "Foror example:",^179^180^181^182^^178^185^throw new NullInsteadOfMockException ( join ( "Argument ( s )  passed is null!", "Pass mocks that require verification in order.", "For example:",^[CLASS] Reporter  [METHOD] nullPassedWhenCreatingInOrder [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new MockitoException ( join ( "Method requires argument ( s ) !", "Pass mocks that require verification in order.that require veri", "For example:",^188^189^190^191^^187^194^throw new MockitoException ( join ( "Method requires argument ( s ) !", "Pass mocks that require verification in order.", "For example:",^[CLASS] Reporter  [METHOD] mocksHaveToBePassedWhenCreatingInOrder [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new MockitoException ( join ( "Method requires argument ( s ) !", "Pass mocks that require verification in order.t require verification in ", "For example:",^188^189^190^191^^187^194^throw new MockitoException ( join ( "Method requires argument ( s ) !", "Pass mocks that require verification in order.", "For example:",^[CLASS] Reporter  [METHOD] mocksHaveToBePassedWhenCreatingInOrder [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new MockitoException ( join ( "Method requires argument ( s ) !", "Pass mocks that require verification in order.", "For example:o",^188^189^190^191^^187^194^throw new MockitoException ( join ( "Method requires argument ( s ) !", "Pass mocks that require verification in order.", "For example:",^[CLASS] Reporter  [METHOD] mocksHaveToBePassedWhenCreatingInOrder [RETURN_TYPE] void   [VARIABLES] boolean  
[P8_Replace_Mix]^throw new VerificationInOrderFailure ( join ( "Verification in order failure", ;^188^189^190^191^^187^194^throw new MockitoException ( join ( "Method requires argument ( s ) !", "Pass mocks that require verification in order.", "For example:",^[CLASS] Reporter  [METHOD] mocksHaveToBePassedWhenCreatingInOrder [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new MockitoException ( join ( "Method requires argument ( s ) !", "Pass mocks that require verification in order.Pass mocks that", "For example:",^188^189^190^191^^187^194^throw new MockitoException ( join ( "Method requires argument ( s ) !", "Pass mocks that require verification in order.", "For example:",^[CLASS] Reporter  [METHOD] mocksHaveToBePassedWhenCreatingInOrder [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new MockitoException ( join ( "Method requires argument ( s ) !", "Pass mocks that require verification in order.", "",^188^189^190^191^^187^194^throw new MockitoException ( join ( "Method requires argument ( s ) !", "Pass mocks that require verification in order.", "For example:",^[CLASS] Reporter  [METHOD] mocksHaveToBePassedWhenCreatingInOrder [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new MockitoException ( join ( "InOrder can only verify mocks that were passed in during creation of InOrder.y mocks that were passed in during creation of I", "For example:", "    InOrder inOrder = inOrder ( mockOne ) ;",^197^198^199^200^^196^203^throw new MockitoException ( join ( "InOrder can only verify mocks that were passed in during creation of InOrder.", "For example:", "    InOrder inOrder = inOrder ( mockOne ) ;",^[CLASS] Reporter  [METHOD] inOrderRequiresFamiliarMock [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new MockitoException ( join ( "InOrder can only verify mocks that were passed in during creation of InOrder.", "For", "    InOrder inOrder = inOrder ( mockOne ) ;",^197^198^199^200^^196^203^throw new MockitoException ( join ( "InOrder can only verify mocks that were passed in during creation of InOrder.", "For example:", "    InOrder inOrder = inOrder ( mockOne ) ;",^[CLASS] Reporter  [METHOD] inOrderRequiresFamiliarMock [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new MockitoException ( join ( "InOrder can only verify mocks that were passed in during creation of InOrder.f", "For example:", "    InOrder inOrder = inOrder ( mockOne ) ;",^197^198^199^200^^196^203^throw new MockitoException ( join ( "InOrder can only verify mocks that were passed in during creation of InOrder.", "For example:", "    InOrder inOrder = inOrder ( mockOne ) ;",^[CLASS] Reporter  [METHOD] inOrderRequiresFamiliarMock [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new MockitoException ( join ( "InOrder can only verify mocks that were passed in during creation of InOrder.", "For example:ample", "    InOrder inOrder = inOrder ( mockOne ) ;",^197^198^199^200^^196^203^throw new MockitoException ( join ( "InOrder can only verify mocks that were passed in during creation of InOrder.", "For example:", "    InOrder inOrder = inOrder ( mockOne ) ;",^[CLASS] Reporter  [METHOD] inOrderRequiresFamiliarMock [RETURN_TYPE] void   [VARIABLES] boolean  
[P8_Replace_Mix]^return 0;^197^198^199^200^^196^203^throw new MockitoException ( join ( "InOrder can only verify mocks that were passed in during creation of InOrder.", "For example:", "    InOrder inOrder = inOrder ( mockOne ) ;",^[CLASS] Reporter  [METHOD] inOrderRequiresFamiliarMock [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new MockitoException ( join ( "nly verify mocks thanOrder can only verify mocks that were passed in during creation of InOrder.", "For example:", "    InOrder inOrder = inOrder ( mockOne ) ;",^197^198^199^200^^196^203^throw new MockitoException ( join ( "InOrder can only verify mocks that were passed in during creation of InOrder.", "For example:", "    InOrder inOrder = inOrder ( mockOne ) ;",^[CLASS] Reporter  [METHOD] inOrderRequiresFamiliarMock [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new MockitoException ( join ( "InOrder can only verify mocks that were passed in during creation of InOrder.", "xample", "    InOrder inOrder = inOrder ( mockOne ) ;",^197^198^199^200^^196^203^throw new MockitoException ( join ( "InOrder can only verify mocks that were passed in during creation of InOrder.", "For example:", "    InOrder inOrder = inOrder ( mockOne ) ;",^[CLASS] Reporter  [METHOD] inOrderRequiresFamiliarMock [RETURN_TYPE] void   [VARIABLES] boolean  
[P2_Replace_Operator]^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount  >  " matchers expected, "  >  recordedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^206^207^208^209^^205^219^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount + " matchers expected, " + recordedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^[CLASS] Reporter  [METHOD] invalidUseOfMatchers [RETURN_TYPE] void   int expectedMatchersCount int recordedMatchersCount [VARIABLES] boolean  int  expectedMatchersCount  recordedMatchersCount  
[P2_Replace_Operator]^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount   instanceof   " matchers expected, " + recordedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^206^207^208^209^^205^219^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount + " matchers expected, " + recordedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^[CLASS] Reporter  [METHOD] invalidUseOfMatchers [RETURN_TYPE] void   int expectedMatchersCount int recordedMatchersCount [VARIABLES] boolean  int  expectedMatchersCount  recordedMatchersCount  
[P3_Replace_Literal]^throw new InvalidUseOfMatchersException ( join ( "lid use o", expectedMatchersCount + " matchers expected, " + recordedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^206^207^208^209^^205^219^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount + " matchers expected, " + recordedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^[CLASS] Reporter  [METHOD] invalidUseOfMatchers [RETURN_TYPE] void   int expectedMatchersCount int recordedMatchersCount [VARIABLES] boolean  int  expectedMatchersCount  recordedMatchersCount  
[P3_Replace_Literal]^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount + "atchers expectmatchers expected, " + recordedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^206^207^208^209^^205^219^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount + " matchers expected, " + recordedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^[CLASS] Reporter  [METHOD] invalidUseOfMatchers [RETURN_TYPE] void   int expectedMatchersCount int recordedMatchersCount [VARIABLES] boolean  int  expectedMatchersCount  recordedMatchersCount  
[P3_Replace_Literal]^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount + " matchers expected, " + recordedMatchersCount + "o", "This exception may occur if matchers are combined with raw values:",^206^207^208^209^^205^219^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount + " matchers expected, " + recordedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^[CLASS] Reporter  [METHOD] invalidUseOfMatchers [RETURN_TYPE] void   int expectedMatchersCount int recordedMatchersCount [VARIABLES] boolean  int  expectedMatchersCount  recordedMatchersCount  
[P3_Replace_Literal]^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount + " matchers expected, " + recordedMatchersCount + " recorded.", "re combined w",^206^207^208^209^^205^219^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount + " matchers expected, " + recordedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^[CLASS] Reporter  [METHOD] invalidUseOfMatchers [RETURN_TYPE] void   int expectedMatchersCount int recordedMatchersCount [VARIABLES] boolean  int  expectedMatchersCount  recordedMatchersCount  
[P4_Replace_Constructor]^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!" + " matchers expected, " + recordedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^206^207^208^209^^205^219^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount + " matchers expected, " + recordedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^[CLASS] Reporter  [METHOD] invalidUseOfMatchers [RETURN_TYPE] void   int expectedMatchersCount int recordedMatchersCount [VARIABLES] boolean  int  expectedMatchersCount  recordedMatchersCount  
[P5_Replace_Variable]^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", recordedMatchersCount + " matchers expected, " + expectedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^206^207^208^209^^205^219^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount + " matchers expected, " + recordedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^[CLASS] Reporter  [METHOD] invalidUseOfMatchers [RETURN_TYPE] void   int expectedMatchersCount int recordedMatchersCount [VARIABLES] boolean  int  expectedMatchersCount  recordedMatchersCount  
[P2_Replace_Operator]^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount  <=  " matchers expected, "  <=  recordedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^206^207^208^209^^205^219^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount + " matchers expected, " + recordedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^[CLASS] Reporter  [METHOD] invalidUseOfMatchers [RETURN_TYPE] void   int expectedMatchersCount int recordedMatchersCount [VARIABLES] boolean  int  expectedMatchersCount  recordedMatchersCount  
[P2_Replace_Operator]^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount  &  " matchers expected, " + recordedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^206^207^208^209^^205^219^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount + " matchers expected, " + recordedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^[CLASS] Reporter  [METHOD] invalidUseOfMatchers [RETURN_TYPE] void   int expectedMatchersCount int recordedMatchersCount [VARIABLES] boolean  int  expectedMatchersCount  recordedMatchersCount  
[P3_Replace_Literal]^throw new InvalidUseOfMatchersException ( join ( "ent matchenvalid use of argument matchers!", expectedMatchersCount + " matchers expected, " + recordedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^206^207^208^209^^205^219^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount + " matchers expected, " + recordedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^[CLASS] Reporter  [METHOD] invalidUseOfMatchers [RETURN_TYPE] void   int expectedMatchersCount int recordedMatchersCount [VARIABLES] boolean  int  expectedMatchersCount  recordedMatchersCount  
[P3_Replace_Literal]^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount + " matchers expected, pected," + recordedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^206^207^208^209^^205^219^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount + " matchers expected, " + recordedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^[CLASS] Reporter  [METHOD] invalidUseOfMatchers [RETURN_TYPE] void   int expectedMatchersCount int recordedMatchersCount [VARIABLES] boolean  int  expectedMatchersCount  recordedMatchersCount  
[P3_Replace_Literal]^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount + " matchers expected, " + recordedMatchersCount + " recordrecorded.", "This exception may occur if matchers are combined with raw values:",^206^207^208^209^^205^219^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount + " matchers expected, " + recordedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^[CLASS] Reporter  [METHOD] invalidUseOfMatchers [RETURN_TYPE] void   int expectedMatchersCount int recordedMatchersCount [VARIABLES] boolean  int  expectedMatchersCount  recordedMatchersCount  
[P3_Replace_Literal]^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount + " matchers expected, " + recordedMatchersCount + " recorded.", "his ehis exception may occur if matchers are combined with raw values:",^206^207^208^209^^205^219^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount + " matchers expected, " + recordedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^[CLASS] Reporter  [METHOD] invalidUseOfMatchers [RETURN_TYPE] void   int expectedMatchersCount int recordedMatchersCount [VARIABLES] boolean  int  expectedMatchersCount  recordedMatchersCount  
[P2_Replace_Operator]^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount  <  " matchers expected, " + recordedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^206^207^208^209^^205^219^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount + " matchers expected, " + recordedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^[CLASS] Reporter  [METHOD] invalidUseOfMatchers [RETURN_TYPE] void   int expectedMatchersCount int recordedMatchersCount [VARIABLES] boolean  int  expectedMatchersCount  recordedMatchersCount  
[P3_Replace_Literal]^throw new InvalidUseOfMatchersException ( join ( "f anvalid use of argument matchers!", expectedMatchersCount + " matchers expected, " + recordedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^206^207^208^209^^205^219^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount + " matchers expected, " + recordedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^[CLASS] Reporter  [METHOD] invalidUseOfMatchers [RETURN_TYPE] void   int expectedMatchersCount int recordedMatchersCount [VARIABLES] boolean  int  expectedMatchersCount  recordedMatchersCount  
[P3_Replace_Literal]^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount + "cher" + recordedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^206^207^208^209^^205^219^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount + " matchers expected, " + recordedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^[CLASS] Reporter  [METHOD] invalidUseOfMatchers [RETURN_TYPE] void   int expectedMatchersCount int recordedMatchersCount [VARIABLES] boolean  int  expectedMatchersCount  recordedMatchersCount  
[P3_Replace_Literal]^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount + " matchers expected, " + recordedMatchersCount + " recorded. reco", "This exception may occur if matchers are combined with raw values:",^206^207^208^209^^205^219^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount + " matchers expected, " + recordedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^[CLASS] Reporter  [METHOD] invalidUseOfMatchers [RETURN_TYPE] void   int expectedMatchersCount int recordedMatchersCount [VARIABLES] boolean  int  expectedMatchersCount  recordedMatchersCount  
[P3_Replace_Literal]^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount + " matchers expected, " + recordedMatchersCount + " recorded.", "his excepti",^206^207^208^209^^205^219^throw new InvalidUseOfMatchersException ( join ( "Invalid use of argument matchers!", expectedMatchersCount + " matchers expected, " + recordedMatchersCount + " recorded.", "This exception may occur if matchers are combined with raw values:",^[CLASS] Reporter  [METHOD] invalidUseOfMatchers [RETURN_TYPE] void   int expectedMatchersCount int recordedMatchersCount [VARIABLES] boolean  int  expectedMatchersCount  recordedMatchersCount  
[P1_Replace_Type]^char message = join ( "Argument ( s )  are different! Wanted:", wanted, new Location (  ) , "Actual invocation has different arguments:",^222^223^224^225^^221^236^String message = join ( "Argument ( s )  are different! Wanted:", wanted, new Location (  ) , "Actual invocation has different arguments:",^[CLASS] Reporter  [METHOD] argumentsAreDifferent [RETURN_TYPE] void   String wanted String actual Location actualLocation [VARIABLES] boolean  String  actual  message  wanted  Location  actualLocation  
[P3_Replace_Literal]^String message = join ( "Argument ( s )  are different! Wanted:", wanted, new Location (  ) , "ual invocation has different actual invocation has different arguments:",^222^223^224^225^^221^236^String message = join ( "Argument ( s )  are different! Wanted:", wanted, new Location (  ) , "Actual invocation has different arguments:",^[CLASS] Reporter  [METHOD] argumentsAreDifferent [RETURN_TYPE] void   String wanted String actual Location actualLocation [VARIABLES] boolean  String  actual  message  wanted  Location  actualLocation  
[P4_Replace_Constructor]^String message = join ( "Argument ( s )  are different! Wanted:",  new Location (  ) , "Actual invocation has different arguments:",^222^223^224^225^^221^236^String message = join ( "Argument ( s )  are different! Wanted:", wanted, new Location (  ) , "Actual invocation has different arguments:",^[CLASS] Reporter  [METHOD] argumentsAreDifferent [RETURN_TYPE] void   String wanted String actual Location actualLocation [VARIABLES] boolean  String  actual  message  wanted  Location  actualLocation  
[P5_Replace_Variable]^String message = join ( "Argument ( s )  are different! Wanted:", actual, new Location (  ) , "Actual invocation has different arguments:",^222^223^224^225^^221^236^String message = join ( "Argument ( s )  are different! Wanted:", wanted, new Location (  ) , "Actual invocation has different arguments:",^[CLASS] Reporter  [METHOD] argumentsAreDifferent [RETURN_TYPE] void   String wanted String actual Location actualLocation [VARIABLES] boolean  String  actual  message  wanted  Location  actualLocation  
[P3_Replace_Literal]^String message = join ( "Argument ( s )  are different! Wanted:", wanted, new Location (  ) , "ifferent a",^222^223^224^225^^221^236^String message = join ( "Argument ( s )  are different! Wanted:", wanted, new Location (  ) , "Actual invocation has different arguments:",^[CLASS] Reporter  [METHOD] argumentsAreDifferent [RETURN_TYPE] void   String wanted String actual Location actualLocation [VARIABLES] boolean  String  actual  message  wanted  Location  actualLocation  
[P5_Replace_Variable]^String message = join ( "Argument ( s )  are different! Wanted:", message, new Location (  ) , "Actual invocation has different arguments:",^222^223^224^225^^221^236^String message = join ( "Argument ( s )  are different! Wanted:", wanted, new Location (  ) , "Actual invocation has different arguments:",^[CLASS] Reporter  [METHOD] argumentsAreDifferent [RETURN_TYPE] void   String wanted String actual Location actualLocation [VARIABLES] boolean  String  actual  message  wanted  Location  actualLocation  
[P15_Unwrap_Block]^throw org.mockito.exceptions.verification.junit.JUnitTool.createArgumentsAreDifferentException(message, wanted, actual);^231^232^233^234^235^221^236^if  ( JUnitTool.hasJUnit (  )  )  { throw JUnitTool.createArgumentsAreDifferentException  (" ")  ; } else { throw new ArgumentsAreDifferent ( message ) ; }^[CLASS] Reporter  [METHOD] argumentsAreDifferent [RETURN_TYPE] void   String wanted String actual Location actualLocation [VARIABLES] boolean  String  actual  message  wanted  Location  actualLocation  
[P16_Remove_Block]^^231^232^233^234^235^221^236^if  ( JUnitTool.hasJUnit (  )  )  { throw JUnitTool.createArgumentsAreDifferentException  (" ")  ; } else { throw new ArgumentsAreDifferent ( message ) ; }^[CLASS] Reporter  [METHOD] argumentsAreDifferent [RETURN_TYPE] void   String wanted String actual Location actualLocation [VARIABLES] boolean  String  actual  message  wanted  Location  actualLocation  
[P4_Replace_Constructor]^throw throw  new TooManyActualInvocations ( message )  ;^234^^^^^221^236^throw new ArgumentsAreDifferent ( message ) ;^[CLASS] Reporter  [METHOD] argumentsAreDifferent [RETURN_TYPE] void   String wanted String actual Location actualLocation [VARIABLES] boolean  String  actual  message  wanted  Location  actualLocation  
[P5_Replace_Variable]^throw new ArgumentsAreDifferent ( wanted ) ;^234^^^^^221^236^throw new ArgumentsAreDifferent ( message ) ;^[CLASS] Reporter  [METHOD] argumentsAreDifferent [RETURN_TYPE] void   String wanted String actual Location actualLocation [VARIABLES] boolean  String  actual  message  wanted  Location  actualLocation  
[P11_Insert_Donor_Statement]^throw new TooManyActualInvocations ( message ) ;throw new ArgumentsAreDifferent ( message ) ;^234^^^^^221^236^throw new ArgumentsAreDifferent ( message ) ;^[CLASS] Reporter  [METHOD] argumentsAreDifferent [RETURN_TYPE] void   String wanted String actual Location actualLocation [VARIABLES] boolean  String  actual  message  wanted  Location  actualLocation  
[P11_Insert_Donor_Statement]^throw new TooLittleActualInvocations ( message ) ;throw new ArgumentsAreDifferent ( message ) ;^234^^^^^221^236^throw new ArgumentsAreDifferent ( message ) ;^[CLASS] Reporter  [METHOD] argumentsAreDifferent [RETURN_TYPE] void   String wanted String actual Location actualLocation [VARIABLES] boolean  String  actual  message  wanted  Location  actualLocation  
[P11_Insert_Donor_Statement]^throw JUnitTool.createArgumentsAreDifferentException  (" ")  ;throw new ArgumentsAreDifferent ( message ) ;^234^^^^^221^236^throw new ArgumentsAreDifferent ( message ) ;^[CLASS] Reporter  [METHOD] argumentsAreDifferent [RETURN_TYPE] void   String wanted String actual Location actualLocation [VARIABLES] boolean  String  actual  message  wanted  Location  actualLocation  
[P11_Insert_Donor_Statement]^throw new ArgumentsAreDifferent ( message ) ;throw JUnitTool.createArgumentsAreDifferentException  (" ")  ;^232^^^^^221^236^throw JUnitTool.createArgumentsAreDifferentException  (" ")  ;^[CLASS] Reporter  [METHOD] argumentsAreDifferent [RETURN_TYPE] void   String wanted String actual Location actualLocation [VARIABLES] boolean  String  actual  message  wanted  Location  actualLocation  
[P8_Replace_Mix]^throw JUnitTool .hasJUnit (  )   ;^232^^^^^221^236^throw JUnitTool.createArgumentsAreDifferentException  (" ")  ;^[CLASS] Reporter  [METHOD] argumentsAreDifferent [RETURN_TYPE] void   String wanted String actual Location actualLocation [VARIABLES] boolean  String  actual  message  wanted  Location  actualLocation  
[P14_Delete_Statement]^^232^233^234^235^^221^236^throw JUnitTool.createArgumentsAreDifferentException  (" ")  ; } else { throw new ArgumentsAreDifferent ( message ) ; }^[CLASS] Reporter  [METHOD] argumentsAreDifferent [RETURN_TYPE] void   String wanted String actual Location actualLocation [VARIABLES] boolean  String  actual  message  wanted  Location  actualLocation  
[P8_Replace_Mix]^return true;^232^^^^^221^236^throw JUnitTool.createArgumentsAreDifferentException  (" ")  ;^[CLASS] Reporter  [METHOD] argumentsAreDifferent [RETURN_TYPE] void   String wanted String actual Location actualLocation [VARIABLES] boolean  String  actual  message  wanted  Location  actualLocation  
[P8_Replace_Mix]^throw new TooManyActualInvocations ( message ) ; ;^234^^^^^221^236^throw new ArgumentsAreDifferent ( message ) ;^[CLASS] Reporter  [METHOD] argumentsAreDifferent [RETURN_TYPE] void   String wanted String actual Location actualLocation [VARIABLES] boolean  String  actual  message  wanted  Location  actualLocation  
[P8_Replace_Mix]^if  ( JUnitTool .createArgumentsAreDifferentException ( message , message , wanted )   )  {^231^^^^^221^236^if  ( JUnitTool.hasJUnit (  )  )  {^[CLASS] Reporter  [METHOD] argumentsAreDifferent [RETURN_TYPE] void   String wanted String actual Location actualLocation [VARIABLES] boolean  String  actual  message  wanted  Location  actualLocation  
[P7_Replace_Invocation]^throw new WantedButNotInvoked ( wantedButNotInvoked ( wanted )  ) ;^239^^^^^238^240^throw new WantedButNotInvoked ( createWantedButNotInvokedMessage ( wanted )  ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted [VARIABLES] boolean  PrintableInvocation  wanted  
[P11_Insert_Donor_Statement]^throw new WantedButNotInvoked ( message + allInvocations ) ;throw new WantedButNotInvoked ( createWantedButNotInvokedMessage ( wanted )  ) ;^239^^^^^238^240^throw new WantedButNotInvoked ( createWantedButNotInvokedMessage ( wanted )  ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted [VARIABLES] boolean  PrintableInvocation  wanted  
[P14_Delete_Statement]^^239^^^^^238^240^throw new WantedButNotInvoked ( createWantedButNotInvokedMessage ( wanted )  ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted [VARIABLES] boolean  PrintableInvocation  wanted  
[P11_Insert_Donor_Statement]^String message = createWantedButNotInvokedMessage ( wanted ) ;throw new WantedButNotInvoked ( createWantedButNotInvokedMessage ( wanted )  ) ;^239^^^^^238^240^throw new WantedButNotInvoked ( createWantedButNotInvokedMessage ( wanted )  ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted [VARIABLES] boolean  PrintableInvocation  wanted  
[P1_Replace_Type]^char allInvocations;^243^^^^^242^257^String allInvocations;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P5_Replace_Variable]^if  ( wantednvocations.isEmpty (  )  )  {^244^^^^^242^257^if  ( invocations.isEmpty (  )  )  {^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P1_Replace_Type]^allInvocations = sb.tochar (  ) ;^252^^^^^242^257^allInvocations = sb.toString (  ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P7_Replace_Invocation]^allInvocations = sb.append (  ) ;^252^^^^^242^257^allInvocations = sb.toString (  ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P8_Replace_Mix]^allInvocations =  null.toString (  ) ;^252^^^^^242^257^allInvocations = sb.toString (  ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P3_Replace_Literal]^StringBuilder sb = new StringBuilder ( "ther nHowever, there were other interactions with this mock:\n" ) ;^247^^^^^242^257^StringBuilder sb = new StringBuilder ( "\nHowever, there were other interactions with this mock:\n" ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P3_Replace_Literal]^StringBuilder sb = new StringBuilder ( "her interaction" ) ;^247^^^^^242^257^StringBuilder sb = new StringBuilder ( "\nHowever, there were other interactions with this mock:\n" ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P5_Replace_Variable]^sb.append ( wanted.getLocation (  )  ) ;^249^^^^^242^257^sb.append ( i.getLocation (  )  ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P14_Delete_Statement]^^249^^^^^242^257^sb.append ( i.getLocation (  )  ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P7_Replace_Invocation]^sb.append ( i .toString (  )   ) ;^249^^^^^242^257^sb.append ( i.getLocation (  )  ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P14_Delete_Statement]^^250^^^^^242^257^sb.append ( "\n" ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P7_Replace_Invocation]^allInvocations = sb .StringBuilder ( message )  ;^252^^^^^242^257^allInvocations = sb.toString (  ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P14_Delete_Statement]^^252^^^^^242^257^allInvocations = sb.toString (  ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P3_Replace_Literal]^allInvocations = "teractions witctually, there were zero interactions with this mock.\n";^245^^^^^242^257^allInvocations = "Actually, there were zero interactions with this mock.\n";^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P8_Replace_Mix]^allInvocations ;^245^^^^^242^257^allInvocations = "Actually, there were zero interactions with this mock.\n";^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P3_Replace_Literal]^allInvocations = "Actua";^245^^^^^242^257^allInvocations = "Actually, there were zero interactions with this mock.\n";^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P8_Replace_Mix]^allInvocations  =  allInvocations ;^245^^^^^242^257^allInvocations = "Actually, there were zero interactions with this mock.\n";^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P7_Replace_Invocation]^allInvocations = sb .StringBuilder ( allInvocations )  ;^252^^^^^242^257^allInvocations = sb.toString (  ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P3_Replace_Literal]^StringBuilder sb = new StringBuilder ( "\nHowever, there were other interactions with this mock:\nother interactions with" ) ;^247^^^^^242^257^StringBuilder sb = new StringBuilder ( "\nHowever, there were other interactions with this mock:\n" ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P3_Replace_Literal]^StringBuilder sb = new StringBuilder ( "here were o" ) ;^247^^^^^242^257^StringBuilder sb = new StringBuilder ( "\nHowever, there were other interactions with this mock:\n" ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P8_Replace_Mix]^if  ( 4.isEmpty (  )  )  {^244^^^^^242^257^if  ( invocations.isEmpty (  )  )  {^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P14_Delete_Statement]^^249^250^^^^242^257^sb.append ( i.getLocation (  )  ) ; sb.append ( "\n" ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P8_Replace_Mix]^sb.append ( wanted .toString (  )   ) ;^249^^^^^242^257^sb.append ( i.getLocation (  )  ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P3_Replace_Literal]^sb.append ( "\n\" ) ;^250^^^^^242^257^sb.append ( "\n" ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P1_Replace_Type]^char message = createWantedButNotInvokedMessage ( wanted ) ;^255^^^^^242^257^String message = createWantedButNotInvokedMessage ( wanted ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P5_Replace_Variable]^String message = createWantedButNotInvokedMessage ( i ) ;^255^^^^^242^257^String message = createWantedButNotInvokedMessage ( wanted ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P7_Replace_Invocation]^String message = wantedButNotInvoked ( wanted ) ;^255^^^^^242^257^String message = createWantedButNotInvokedMessage ( wanted ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P8_Replace_Mix]^String message = wantedButNotInvoked ( i ) ;^255^^^^^242^257^String message = createWantedButNotInvokedMessage ( wanted ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P14_Delete_Statement]^^255^^^^^242^257^String message = createWantedButNotInvokedMessage ( wanted ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P11_Insert_Donor_Statement]^throw new WantedButNotInvoked ( createWantedButNotInvokedMessage ( wanted )  ) ;String message = createWantedButNotInvokedMessage ( wanted ) ;^255^^^^^242^257^String message = createWantedButNotInvokedMessage ( wanted ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P2_Replace_Operator]^throw new WantedButNotInvoked ( message  &&  allInvocations ) ;^256^^^^^242^257^throw new WantedButNotInvoked ( message + allInvocations ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P4_Replace_Constructor]^throw throw  new WantedButNotInvoked ( createWantedButNotInvokedMessage ( wanted )  )  ;^256^^^^^242^257^throw new WantedButNotInvoked ( message + allInvocations ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P5_Replace_Variable]^throw new WantedButNotInvoked ( allInvocations + message ) ;^256^^^^^242^257^throw new WantedButNotInvoked ( message + allInvocations ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P2_Replace_Operator]^throw new WantedButNotInvoked ( message   instanceof   allInvocations ) ;^256^^^^^242^257^throw new WantedButNotInvoked ( message + allInvocations ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P11_Insert_Donor_Statement]^throw new WantedButNotInvoked ( createWantedButNotInvokedMessage ( wanted )  ) ;throw new WantedButNotInvoked ( message + allInvocations ) ;^256^^^^^242^257^throw new WantedButNotInvoked ( message + allInvocations ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvoked [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation> invocations [VARIABLES] boolean  StringBuilder  sb  PrintableInvocation  i  wanted  List  invocations  String  allInvocations  message  
[P3_Replace_Literal]^return join ( "Wanted but ", wanted.toString (  ) , new Location (  ) ,^260^261^262^263^^259^266^return join ( "Wanted but not invoked:", wanted.toString (  ) , new Location (  ) ,^[CLASS] Reporter  [METHOD] createWantedButNotInvokedMessage [RETURN_TYPE] String   PrintableInvocation wanted [VARIABLES] boolean  PrintableInvocation  wanted  
[P3_Replace_Literal]^return join ( " not invanted but not invoked:", wanted.toString (  ) , new Location (  ) ,^260^261^262^263^^259^266^return join ( "Wanted but not invoked:", wanted.toString (  ) , new Location (  ) ,^[CLASS] Reporter  [METHOD] createWantedButNotInvokedMessage [RETURN_TYPE] String   PrintableInvocation wanted [VARIABLES] boolean  PrintableInvocation  wanted  
[P3_Replace_Literal]^throw new VerificationInOrderFailure ( join ( "Verification in order failure order", "Wanted but not invoked:", wanted.toString (  ) ,^269^270^271^272^^268^279^throw new VerificationInOrderFailure ( join ( "Verification in order failure", "Wanted but not invoked:", wanted.toString (  ) ,^[CLASS] Reporter  [METHOD] wantedButNotInvokedInOrder [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation previous [VARIABLES] boolean  PrintableInvocation  previous  wanted  
[P3_Replace_Literal]^throw new VerificationInOrderFailure ( join ( "Verification in order failure", "Wanted ", wanted.toString (  ) ,^269^270^271^272^^268^279^throw new VerificationInOrderFailure ( join ( "Verification in order failure", "Wanted but not invoked:", wanted.toString (  ) ,^[CLASS] Reporter  [METHOD] wantedButNotInvokedInOrder [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation previous [VARIABLES] boolean  PrintableInvocation  previous  wanted  
[P4_Replace_Constructor]^throw new VerificationInOrderFailure ( join ( "Verification in order failure", "Wanted but not invoked:".toString (  ) ,^269^270^271^272^^268^279^throw new VerificationInOrderFailure ( join ( "Verification in order failure", "Wanted but not invoked:", wanted.toString (  ) ,^[CLASS] Reporter  [METHOD] wantedButNotInvokedInOrder [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation previous [VARIABLES] boolean  PrintableInvocation  previous  wanted  
[P3_Replace_Literal]^throw new VerificationInOrderFailure ( join ( " oerification in order failure", "Wanted but not invoked:", wanted.toString (  ) ,^269^270^271^272^^268^279^throw new VerificationInOrderFailure ( join ( "Verification in order failure", "Wanted but not invoked:", wanted.toString (  ) ,^[CLASS] Reporter  [METHOD] wantedButNotInvokedInOrder [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation previous [VARIABLES] boolean  PrintableInvocation  previous  wanted  
[P3_Replace_Literal]^throw new VerificationInOrderFailure ( join ( "Verification in order failure", "Wanted but not invoked:Wanted but ", wanted.toString (  ) ,^269^270^271^272^^268^279^throw new VerificationInOrderFailure ( join ( "Verification in order failure", "Wanted but not invoked:", wanted.toString (  ) ,^[CLASS] Reporter  [METHOD] wantedButNotInvokedInOrder [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation previous [VARIABLES] boolean  PrintableInvocation  previous  wanted  
[P3_Replace_Literal]^throw new VerificationInOrderFailure ( join ( "on in erification in order failure", "Wanted but not invoked:", wanted.toString (  ) ,^269^270^271^272^^268^279^throw new VerificationInOrderFailure ( join ( "Verification in order failure", "Wanted but not invoked:", wanted.toString (  ) ,^[CLASS] Reporter  [METHOD] wantedButNotInvokedInOrder [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation previous [VARIABLES] boolean  PrintableInvocation  previous  wanted  
[P3_Replace_Literal]^throw new VerificationInOrderFailure ( join ( "Verification in order failure", "anted but not invoanted but not invoked:", wanted.toString (  ) ,^269^270^271^272^^268^279^throw new VerificationInOrderFailure ( join ( "Verification in order failure", "Wanted but not invoked:", wanted.toString (  ) ,^[CLASS] Reporter  [METHOD] wantedButNotInvokedInOrder [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation previous [VARIABLES] boolean  PrintableInvocation  previous  wanted  
[P5_Replace_Variable]^previous.toString (  ) , wanted.getLocation (  ) , "" )  ) ;^275^276^277^278^^268^279^previous.toString (  ) , previous.getLocation (  ) , "" )  ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvokedInOrder [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation previous [VARIABLES] boolean  PrintableInvocation  previous  wanted  
[P14_Delete_Statement]^^276^277^278^^^268^279^previous.getLocation (  ) , "" )  ) ;^[CLASS] Reporter  [METHOD] wantedButNotInvokedInOrder [RETURN_TYPE] void   PrintableInvocation wanted PrintableInvocation previous [VARIABLES] boolean  PrintableInvocation  previous  wanted  
[P1_Replace_Type]^char message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^282^^^^^281^284^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocations [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P5_Replace_Variable]^String message = createTooManyInvocationsMessage ( actualCount, actualCount, wanted, firstUndesired ) ;^282^^^^^281^284^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocations [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P5_Replace_Variable]^String message = createTooManyInvocationsMessage ( wantedCount, wantedCount, wanted, firstUndesired ) ;^282^^^^^281^284^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocations [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P5_Replace_Variable]^String message = createTooManyInvocationsMessage (  actualCount, wanted, firstUndesired ) ;^282^^^^^281^284^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocations [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P5_Replace_Variable]^String message = createTooManyInvocationsMessage ( wantedCount,  wanted, firstUndesired ) ;^282^^^^^281^284^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocations [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P5_Replace_Variable]^String message = createTooManyInvocationsMessage ( wantedCount, actualCount,  firstUndesired ) ;^282^^^^^281^284^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocations [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P5_Replace_Variable]^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted ) ;^282^^^^^281^284^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocations [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P5_Replace_Variable]^String message = createTooManyInvocationsMessage ( actualCount, wantedCount, wanted, firstUndesired ) ;^282^^^^^281^284^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocations [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P5_Replace_Variable]^String message = createTooManyInvocationsMessage ( actualCountCount, wanted, wanted, firstUndesired ) ;^282^^^^^281^284^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocations [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P5_Replace_Variable]^String message = createTooManyInvocationsMessage ( wantedCount, firstUndesired, wanted, actualCount ) ;^282^^^^^281^284^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocations [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P7_Replace_Invocation]^String message = tooManyActualInvocations ( wantedCount, actualCount, wanted, firstUndesired ) ;^282^^^^^281^284^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocations [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P8_Replace_Mix]^String message = tooManyActualInvocations ( wantedCount, wantedCount, wanted, firstUndesired ) ;^282^^^^^281^284^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocations [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P11_Insert_Donor_Statement]^String message = createTooLittleInvocationsMessage ( discrepancy, wanted, lastActualLocation ) ;String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^282^^^^^281^284^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocations [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P5_Replace_Variable]^String message = createTooManyInvocationsMessage ( firstUndesired, actualCount, wanted, wantedCount ) ;^282^^^^^281^284^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocations [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P5_Replace_Variable]^String message = createTooManyInvocationsMessage ( wantedCountCount, actualCount, wanted, firstUndesired ) ;^282^^^^^281^284^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocations [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P14_Delete_Statement]^^282^^^^^281^284^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocations [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P4_Replace_Constructor]^throw throw  new ArgumentsAreDifferent ( message )  ;^283^^^^^281^284^throw new TooManyActualInvocations ( message ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocations [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P11_Insert_Donor_Statement]^throw new TooLittleActualInvocations ( message ) ;throw new TooManyActualInvocations ( message ) ;^283^^^^^281^284^throw new TooManyActualInvocations ( message ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocations [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P11_Insert_Donor_Statement]^throw new ArgumentsAreDifferent ( message ) ;throw new TooManyActualInvocations ( message ) ;^283^^^^^281^284^throw new TooManyActualInvocations ( message ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocations [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P2_Replace_Operator]^return join ( wanted.toString (  ==  ) , "Wanted " + Pluralizer.pluralize ( wantedCount )  + ":", new Location (  ) ,^288^289^290^291^^286^296^return join ( wanted.toString (  ) , "Wanted " + Pluralizer.pluralize ( wantedCount )  + ":", new Location (  ) ,^[CLASS] Reporter  [METHOD] createTooManyInvocationsMessage [RETURN_TYPE] String   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  int  actualCount  wantedCount  Location  firstUndesired  
[P2_Replace_Operator]^return join ( wanted.toString (  <<  ) , "Wanted " + Pluralizer.pluralize ( wantedCount )  + ":", new Location (  ) ,^288^289^290^291^^286^296^return join ( wanted.toString (  ) , "Wanted " + Pluralizer.pluralize ( wantedCount )  + ":", new Location (  ) ,^[CLASS] Reporter  [METHOD] createTooManyInvocationsMessage [RETURN_TYPE] String   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  int  actualCount  wantedCount  Location  firstUndesired  
[P2_Replace_Operator]^return join ( wanted.toString (  ^  ) , "Wanted " + Pluralizer.pluralize ( wantedCount )  + ":", new Location (  ) ,^288^289^290^291^^286^296^return join ( wanted.toString (  ) , "Wanted " + Pluralizer.pluralize ( wantedCount )  + ":", new Location (  ) ,^[CLASS] Reporter  [METHOD] createTooManyInvocationsMessage [RETURN_TYPE] String   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  int  actualCount  wantedCount  Location  firstUndesired  
[P3_Replace_Literal]^return join ( wanted.toString (  ) , "teanted " + Pluralizer.pluralize ( wantedCount )  + ":", new Location (  ) ,^288^289^290^291^^286^296^return join ( wanted.toString (  ) , "Wanted " + Pluralizer.pluralize ( wantedCount )  + ":", new Location (  ) ,^[CLASS] Reporter  [METHOD] createTooManyInvocationsMessage [RETURN_TYPE] String   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  int  actualCount  wantedCount  Location  firstUndesired  
[P3_Replace_Literal]^return join ( wanted.toString (  ) , "Wanted " + Pluralizer.pluralize ( wantedCount )  + "", new Location (  ) ,^288^289^290^291^^286^296^return join ( wanted.toString (  ) , "Wanted " + Pluralizer.pluralize ( wantedCount )  + ":", new Location (  ) ,^[CLASS] Reporter  [METHOD] createTooManyInvocationsMessage [RETURN_TYPE] String   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  int  actualCount  wantedCount  Location  firstUndesired  
[P5_Replace_Variable]^return join ( wantedCount.toString (  ) , "Wanted " + Pluralizer.pluralize ( wanted )  + ":", new Location (  ) ,^288^289^290^291^^286^296^return join ( wanted.toString (  ) , "Wanted " + Pluralizer.pluralize ( wantedCount )  + ":", new Location (  ) ,^[CLASS] Reporter  [METHOD] createTooManyInvocationsMessage [RETURN_TYPE] String   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  int  actualCount  wantedCount  Location  firstUndesired  
[P7_Replace_Invocation]^return join ( wanted.toString (  ) , "Wanted " + Pluralizer.join ( wantedCount )  + ":", new Location (  ) ,^288^289^290^291^^286^296^return join ( wanted.toString (  ) , "Wanted " + Pluralizer.pluralize ( wantedCount )  + ":", new Location (  ) ,^[CLASS] Reporter  [METHOD] createTooManyInvocationsMessage [RETURN_TYPE] String   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  int  actualCount  wantedCount  Location  firstUndesired  
[P2_Replace_Operator]^return join ( wanted.toString (  >>  ) , "Wanted " + Pluralizer.pluralize ( wantedCount )  + ":", new Location (  ) ,^288^289^290^291^^286^296^return join ( wanted.toString (  ) , "Wanted " + Pluralizer.pluralize ( wantedCount )  + ":", new Location (  ) ,^[CLASS] Reporter  [METHOD] createTooManyInvocationsMessage [RETURN_TYPE] String   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  int  actualCount  wantedCount  Location  firstUndesired  
[P2_Replace_Operator]^return join ( wanted.toString (  &&  ) , "Wanted " + Pluralizer.pluralize ( wantedCount )  + ":", new Location (  ) ,^288^289^290^291^^286^296^return join ( wanted.toString (  ) , "Wanted " + Pluralizer.pluralize ( wantedCount )  + ":", new Location (  ) ,^[CLASS] Reporter  [METHOD] createTooManyInvocationsMessage [RETURN_TYPE] String   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  int  actualCount  wantedCount  Location  firstUndesired  
[P3_Replace_Literal]^return join ( wanted.toString (  ) , "Wanted W" + Pluralizer.pluralize ( wantedCount )  + ":", new Location (  ) ,^288^289^290^291^^286^296^return join ( wanted.toString (  ) , "Wanted " + Pluralizer.pluralize ( wantedCount )  + ":", new Location (  ) ,^[CLASS] Reporter  [METHOD] createTooManyInvocationsMessage [RETURN_TYPE] String   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  int  actualCount  wantedCount  Location  firstUndesired  
[P5_Replace_Variable]^"Wanted " + Pluralizer.pluralize ( actualCount )  + ":", new Location (  ) , "But was " + pluralize ( actualCount )  + ". Undesired invocation:", firstUndesired,^290^291^292^293^^286^296^"Wanted " + Pluralizer.pluralize ( wantedCount )  + ":", new Location (  ) , "But was " + pluralize ( actualCount )  + ". Undesired invocation:", firstUndesired,^[CLASS] Reporter  [METHOD] createTooManyInvocationsMessage [RETURN_TYPE] String   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  int  actualCount  wantedCount  Location  firstUndesired  
[P5_Replace_Variable]^"But was " + pluralize ( wantedCount )  + ". Undesired invocation:", firstUndesired, "" ) ;^292^293^294^295^^286^296^"But was " + pluralize ( actualCount )  + ". Undesired invocation:", firstUndesired, "" ) ;^[CLASS] Reporter  [METHOD] createTooManyInvocationsMessage [RETURN_TYPE] String   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  int  actualCount  wantedCount  Location  firstUndesired  
[P7_Replace_Invocation]^"But was " + join ( actualCount )  + ". Undesired invocation:", firstUndesired, "" ) ;^292^293^294^295^^286^296^"But was " + pluralize ( actualCount )  + ". Undesired invocation:", firstUndesired, "" ) ;^[CLASS] Reporter  [METHOD] createTooManyInvocationsMessage [RETURN_TYPE] String   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  int  actualCount  wantedCount  Location  firstUndesired  
[P3_Replace_Literal]^throw new NeverWantedButInvoked ( join ( wanted.toString (  ) , "Never wanted here:Never wan", new Location (  ) ,^299^300^301^302^^298^307^throw new NeverWantedButInvoked ( join ( wanted.toString (  ) , "Never wanted here:", new Location (  ) ,^[CLASS] Reporter  [METHOD] neverWantedButInvoked [RETURN_TYPE] void   PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  Location  firstUndesired  
[P3_Replace_Literal]^throw new NeverWantedButInvoked ( join ( wanted.toString (  ) , "Never wanted here:wanted her", new Location (  ) ,^299^300^301^302^^298^307^throw new NeverWantedButInvoked ( join ( wanted.toString (  ) , "Never wanted here:", new Location (  ) ,^[CLASS] Reporter  [METHOD] neverWantedButInvoked [RETURN_TYPE] void   PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  Location  firstUndesired  
[P8_Replace_Mix]^throw new WantedButNotInvoked ( createWantedButNotInvokedMessage ( wanted )  ) ; ;^299^300^301^302^^298^307^throw new NeverWantedButInvoked ( join ( wanted.toString (  ) , "Never wanted here:", new Location (  ) ,^[CLASS] Reporter  [METHOD] neverWantedButInvoked [RETURN_TYPE] void   PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  Location  firstUndesired  
[P3_Replace_Literal]^throw new NeverWantedButInvoked ( join ( wanted.toString (  ) , "herever wanted here:", new Location (  ) ,^299^300^301^302^^298^307^throw new NeverWantedButInvoked ( join ( wanted.toString (  ) , "Never wanted here:", new Location (  ) ,^[CLASS] Reporter  [METHOD] neverWantedButInvoked [RETURN_TYPE] void   PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  Location  firstUndesired  
[P8_Replace_Mix]^throw new NeverWantedButInvoked ( join ( wanted .StringBuilder ( null )  , "Never wanted here:", new Location (  ) ,^299^300^301^302^^298^307^throw new NeverWantedButInvoked ( join ( wanted.toString (  ) , "Never wanted here:", new Location (  ) ,^[CLASS] Reporter  [METHOD] neverWantedButInvoked [RETURN_TYPE] void   PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  Location  firstUndesired  
[P1_Replace_Type]^char message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^310^^^^^309^314^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocationsInOrder [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P5_Replace_Variable]^String message = createTooManyInvocationsMessage ( actualCount, actualCount, wanted, firstUndesired ) ;^310^^^^^309^314^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocationsInOrder [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P5_Replace_Variable]^String message = createTooManyInvocationsMessage ( wantedCount, wantedCount, wanted, firstUndesired ) ;^310^^^^^309^314^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocationsInOrder [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P5_Replace_Variable]^String message = createTooManyInvocationsMessage (  actualCount, wanted, firstUndesired ) ;^310^^^^^309^314^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocationsInOrder [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P5_Replace_Variable]^String message = createTooManyInvocationsMessage ( wantedCount,  wanted, firstUndesired ) ;^310^^^^^309^314^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocationsInOrder [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P5_Replace_Variable]^String message = createTooManyInvocationsMessage ( wantedCount, actualCount,  firstUndesired ) ;^310^^^^^309^314^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocationsInOrder [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P5_Replace_Variable]^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted ) ;^310^^^^^309^314^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocationsInOrder [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P5_Replace_Variable]^String message = createTooManyInvocationsMessage ( firstUndesired, actualCount, wanted, wantedCount ) ;^310^^^^^309^314^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocationsInOrder [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P5_Replace_Variable]^String message = createTooManyInvocationsMessage ( actualCountCount, wanted, wanted, firstUndesired ) ;^310^^^^^309^314^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocationsInOrder [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P5_Replace_Variable]^String message = createTooManyInvocationsMessage ( wantedCount, firstUndesired, wanted, actualCount ) ;^310^^^^^309^314^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocationsInOrder [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P7_Replace_Invocation]^String message = tooManyActualInvocations ( wantedCount, actualCount, wanted, firstUndesired ) ;^310^^^^^309^314^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocationsInOrder [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P11_Insert_Donor_Statement]^String message = createTooLittleInvocationsMessage ( discrepancy, wanted, lastActualLocation ) ;String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^310^^^^^309^314^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocationsInOrder [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P5_Replace_Variable]^String message = createTooManyInvocationsMessage ( actualCount, wantedCount, wanted, firstUndesired ) ;^310^^^^^309^314^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocationsInOrder [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P5_Replace_Variable]^String message = createTooManyInvocationsMessage ( wantedCountCount, actualCount, wanted, firstUndesired ) ;^310^^^^^309^314^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocationsInOrder [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P14_Delete_Statement]^^310^^^^^309^314^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocationsInOrder [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P2_Replace_Operator]^throw new VerificationInOrderFailure ( join ( "Verification in order failure:"  <<  message )  ) ;^311^312^313^^^309^314^throw new VerificationInOrderFailure ( join ( "Verification in order failure:" + message )  ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocationsInOrder [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P3_Replace_Literal]^throw new VerificationInOrderFailure ( join ( "Verification in order failure:Verification in order failur" + message )  ) ;^311^312^313^^^309^314^throw new VerificationInOrderFailure ( join ( "Verification in order failure:" + message )  ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocationsInOrder [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P2_Replace_Operator]^throw new VerificationInOrderFailure ( join ( "Verification in order failure:"  >  message )  ) ;^311^312^313^^^309^314^throw new VerificationInOrderFailure ( join ( "Verification in order failure:" + message )  ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocationsInOrder [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P3_Replace_Literal]^throw new VerificationInOrderFailure ( join ( "" + message )  ) ;^311^312^313^^^309^314^throw new VerificationInOrderFailure ( join ( "Verification in order failure:" + message )  ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocationsInOrder [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P8_Replace_Mix]^throw new VerificationInOrderFailure ( join ( "Verification in order failure", ;^311^312^313^^^309^314^throw new VerificationInOrderFailure ( join ( "Verification in order failure:" + message )  ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocationsInOrder [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P3_Replace_Literal]^throw new VerificationInOrderFailure ( join ( "Verification in order failure:Ve" + message )  ) ;^311^312^313^^^309^314^throw new VerificationInOrderFailure ( join ( "Verification in order failure:" + message )  ) ;^[CLASS] Reporter  [METHOD] tooManyActualInvocationsInOrder [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P14_Delete_Statement]^^311^312^313^314^^309^314^throw new VerificationInOrderFailure ( join ( "Verification in order failure:" + message )  ) ; }^[CLASS] Reporter  [METHOD] tooManyActualInvocationsInOrder [RETURN_TYPE] void   int wantedCount int actualCount PrintableInvocation wanted Location firstUndesired [VARIABLES] boolean  PrintableInvocation  wanted  String  message  int  actualCount  wantedCount  Location  firstUndesired  
[P1_Replace_Type]^char ending = ( lastActualInvocation != null ) ? lastActualInvocation + "\n" : "\n";^318^319^^^^316^329^String ending = ( lastActualInvocation != null ) ? lastActualInvocation + "\n" : "\n";^[CLASS] Reporter  [METHOD] createTooLittleInvocationsMessage [RETURN_TYPE] String   Discrepancy discrepancy PrintableInvocation wanted Location lastActualInvocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  ending  message  Location  lastActualInvocation  
[P2_Replace_Operator]^String ending = ( lastActualInvocation == null ) ? lastActualInvocation + "\n" : "\n";^318^319^^^^316^329^String ending = ( lastActualInvocation != null ) ? lastActualInvocation + "\n" : "\n";^[CLASS] Reporter  [METHOD] createTooLittleInvocationsMessage [RETURN_TYPE] String   Discrepancy discrepancy PrintableInvocation wanted Location lastActualInvocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  ending  message  Location  lastActualInvocation  
[P2_Replace_Operator]^String ending = ( lastActualInvocation != null ) ? lastActualInvocation  ^  "\n" : "\n";^318^319^^^^316^329^String ending = ( lastActualInvocation != null ) ? lastActualInvocation + "\n" : "\n";^[CLASS] Reporter  [METHOD] createTooLittleInvocationsMessage [RETURN_TYPE] String   Discrepancy discrepancy PrintableInvocation wanted Location lastActualInvocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  ending  message  Location  lastActualInvocation  
[P3_Replace_Literal]^String ending = ( lastActualInvocation != null ) ? lastActualInvocation + "\n\" : "\n\";^318^319^^^^316^329^String ending = ( lastActualInvocation != null ) ? lastActualInvocation + "\n" : "\n";^[CLASS] Reporter  [METHOD] createTooLittleInvocationsMessage [RETURN_TYPE] String   Discrepancy discrepancy PrintableInvocation wanted Location lastActualInvocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  ending  message  Location  lastActualInvocation  
[P6_Replace_Expression]^String ending  =  "\n";^318^319^^^^316^329^String ending = ( lastActualInvocation != null ) ? lastActualInvocation + "\n" : "\n";^[CLASS] Reporter  [METHOD] createTooLittleInvocationsMessage [RETURN_TYPE] String   Discrepancy discrepancy PrintableInvocation wanted Location lastActualInvocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  ending  message  Location  lastActualInvocation  
[P6_Replace_Expression]^String ending  =  lastActualInvocation + "\n" ;^318^319^^^^316^329^String ending = ( lastActualInvocation != null ) ? lastActualInvocation + "\n" : "\n";^[CLASS] Reporter  [METHOD] createTooLittleInvocationsMessage [RETURN_TYPE] String   Discrepancy discrepancy PrintableInvocation wanted Location lastActualInvocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  ending  message  Location  lastActualInvocation  
[P1_Replace_Type]^char message = join ( wanted.tochar (  ) , "Wanted " + discrepancy.getPluralizedWantedCount (  )  + ":", new Location (  ) ,^321^322^323^324^^316^329^String message = join ( wanted.toString (  ) , "Wanted " + discrepancy.getPluralizedWantedCount (  )  + ":", new Location (  ) ,^[CLASS] Reporter  [METHOD] createTooLittleInvocationsMessage [RETURN_TYPE] String   Discrepancy discrepancy PrintableInvocation wanted Location lastActualInvocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  ending  message  Location  lastActualInvocation  
[P2_Replace_Operator]^String message = join ( wanted.toString (  >>  ) , "Wanted " + discrepancy.getPluralizedWantedCount (  )  + ":", new Location (  ) ,^321^322^323^324^^316^329^String message = join ( wanted.toString (  ) , "Wanted " + discrepancy.getPluralizedWantedCount (  )  + ":", new Location (  ) ,^[CLASS] Reporter  [METHOD] createTooLittleInvocationsMessage [RETURN_TYPE] String   Discrepancy discrepancy PrintableInvocation wanted Location lastActualInvocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  ending  message  Location  lastActualInvocation  
[P2_Replace_Operator]^String message = join ( wanted.toString (  ) , "Wanted "  ||  discrepancy.getPluralizedWantedCount (  )  + ":", new Location (  ) ,^321^322^323^324^^316^329^String message = join ( wanted.toString (  ) , "Wanted " + discrepancy.getPluralizedWantedCount (  )  + ":", new Location (  ) ,^[CLASS] Reporter  [METHOD] createTooLittleInvocationsMessage [RETURN_TYPE] String   Discrepancy discrepancy PrintableInvocation wanted Location lastActualInvocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  ending  message  Location  lastActualInvocation  
[P2_Replace_Operator]^String message = join ( wanted.toString (  ||  ) , "Wanted " + discrepancy.getPluralizedWantedCount (  )  + ":", new Location (  ) ,^321^322^323^324^^316^329^String message = join ( wanted.toString (  ) , "Wanted " + discrepancy.getPluralizedWantedCount (  )  + ":", new Location (  ) ,^[CLASS] Reporter  [METHOD] createTooLittleInvocationsMessage [RETURN_TYPE] String   Discrepancy discrepancy PrintableInvocation wanted Location lastActualInvocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  ending  message  Location  lastActualInvocation  
[P2_Replace_Operator]^String message = join ( wanted.toString (  >=  ) , "Wanted " + discrepancy.getPluralizedWantedCount (  )  + ":", new Location (  ) ,^321^322^323^324^^316^329^String message = join ( wanted.toString (  ) , "Wanted " + discrepancy.getPluralizedWantedCount (  )  + ":", new Location (  ) ,^[CLASS] Reporter  [METHOD] createTooLittleInvocationsMessage [RETURN_TYPE] String   Discrepancy discrepancy PrintableInvocation wanted Location lastActualInvocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  ending  message  Location  lastActualInvocation  
[P3_Replace_Literal]^String message = join ( wanted.toString (  ) , "aanted " + discrepancy.getPluralizedWantedCount (  )  + ":", new Location (  ) ,^321^322^323^324^^316^329^String message = join ( wanted.toString (  ) , "Wanted " + discrepancy.getPluralizedWantedCount (  )  + ":", new Location (  ) ,^[CLASS] Reporter  [METHOD] createTooLittleInvocationsMessage [RETURN_TYPE] String   Discrepancy discrepancy PrintableInvocation wanted Location lastActualInvocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  ending  message  Location  lastActualInvocation  
[P3_Replace_Literal]^String message = join ( wanted.toString (  ) , "Wanted " + discrepancy.getPluralizedWantedCount (  )  + "", new Location (  ) ,^321^322^323^324^^316^329^String message = join ( wanted.toString (  ) , "Wanted " + discrepancy.getPluralizedWantedCount (  )  + ":", new Location (  ) ,^[CLASS] Reporter  [METHOD] createTooLittleInvocationsMessage [RETURN_TYPE] String   Discrepancy discrepancy PrintableInvocation wanted Location lastActualInvocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  ending  message  Location  lastActualInvocation  
[P5_Replace_Variable]^String message = join ( discrepancy.toString (  ) , "Wanted " + wanted.getPluralizedWantedCount (  )  + ":", new Location (  ) ,^321^322^323^324^^316^329^String message = join ( wanted.toString (  ) , "Wanted " + discrepancy.getPluralizedWantedCount (  )  + ":", new Location (  ) ,^[CLASS] Reporter  [METHOD] createTooLittleInvocationsMessage [RETURN_TYPE] String   Discrepancy discrepancy PrintableInvocation wanted Location lastActualInvocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  ending  message  Location  lastActualInvocation  
[P8_Replace_Mix]^String message = join ( wanted .StringBuilder ( ending )  , "Wanted " + discrepancy.getPluralizedWantedCount (  )  + ":", new Location (  ) ,^321^322^323^324^^316^329^String message = join ( wanted.toString (  ) , "Wanted " + discrepancy.getPluralizedWantedCount (  )  + ":", new Location (  ) ,^[CLASS] Reporter  [METHOD] createTooLittleInvocationsMessage [RETURN_TYPE] String   Discrepancy discrepancy PrintableInvocation wanted Location lastActualInvocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  ending  message  Location  lastActualInvocation  
[P2_Replace_Operator]^String message = join ( wanted.toString (  <  ) , "Wanted " + discrepancy.getPluralizedWantedCount (  )  + ":", new Location (  ) ,^321^322^323^324^^316^329^String message = join ( wanted.toString (  ) , "Wanted " + discrepancy.getPluralizedWantedCount (  )  + ":", new Location (  ) ,^[CLASS] Reporter  [METHOD] createTooLittleInvocationsMessage [RETURN_TYPE] String   Discrepancy discrepancy PrintableInvocation wanted Location lastActualInvocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  ending  message  Location  lastActualInvocation  
[P2_Replace_Operator]^String message = join ( wanted.toString (  ) , "Wanted "  ==  discrepancy.getPluralizedWantedCount (  )  + ":", new Location (  ) ,^321^322^323^324^^316^329^String message = join ( wanted.toString (  ) , "Wanted " + discrepancy.getPluralizedWantedCount (  )  + ":", new Location (  ) ,^[CLASS] Reporter  [METHOD] createTooLittleInvocationsMessage [RETURN_TYPE] String   Discrepancy discrepancy PrintableInvocation wanted Location lastActualInvocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  ending  message  Location  lastActualInvocation  
[P3_Replace_Literal]^String message = join ( wanted.toString (  ) , "" + discrepancy.getPluralizedWantedCount (  )  + ":", new Location (  ) ,^321^322^323^324^^316^329^String message = join ( wanted.toString (  ) , "Wanted " + discrepancy.getPluralizedWantedCount (  )  + ":", new Location (  ) ,^[CLASS] Reporter  [METHOD] createTooLittleInvocationsMessage [RETURN_TYPE] String   Discrepancy discrepancy PrintableInvocation wanted Location lastActualInvocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  ending  message  Location  lastActualInvocation  
[P8_Replace_Mix]^String message = join ( wanted.toString (  ) , "Wanted " + discrepancy .getPluralizedActualCount (  )   + ":", new Location (  ) ,^321^322^323^324^^316^329^String message = join ( wanted.toString (  ) , "Wanted " + discrepancy.getPluralizedWantedCount (  )  + ":", new Location (  ) ,^[CLASS] Reporter  [METHOD] createTooLittleInvocationsMessage [RETURN_TYPE] String   Discrepancy discrepancy PrintableInvocation wanted Location lastActualInvocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  ending  message  Location  lastActualInvocation  
[P8_Replace_Mix]^wanted .StringBuilder ( ending )  , "Wanted " + discrepancy.getPluralizedWantedCount (  )  + ":", new Location (  ) , "But was " + discrepancy.getPluralizedActualCount (  )  + ":",^322^323^324^325^^316^329^wanted.toString (  ) , "Wanted " + discrepancy.getPluralizedWantedCount (  )  + ":", new Location (  ) , "But was " + discrepancy.getPluralizedActualCount (  )  + ":",^[CLASS] Reporter  [METHOD] createTooLittleInvocationsMessage [RETURN_TYPE] String   Discrepancy discrepancy PrintableInvocation wanted Location lastActualInvocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  ending  message  Location  lastActualInvocation  
[P7_Replace_Invocation]^"Wanted " + discrepancy .getPluralizedActualCount (  )   + ":", new Location (  ) , "But was " + discrepancy.getPluralizedActualCount (  )  + ":", ending^323^324^325^326^^316^329^"Wanted " + discrepancy.getPluralizedWantedCount (  )  + ":", new Location (  ) , "But was " + discrepancy.getPluralizedActualCount (  )  + ":", ending^[CLASS] Reporter  [METHOD] createTooLittleInvocationsMessage [RETURN_TYPE] String   Discrepancy discrepancy PrintableInvocation wanted Location lastActualInvocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  ending  message  Location  lastActualInvocation  
[P7_Replace_Invocation]^"But was " + discrepancy .getPluralizedWantedCount (  )   + ":", ending ) ;^325^326^327^^^316^329^"But was " + discrepancy.getPluralizedActualCount (  )  + ":", ending ) ;^[CLASS] Reporter  [METHOD] createTooLittleInvocationsMessage [RETURN_TYPE] String   Discrepancy discrepancy PrintableInvocation wanted Location lastActualInvocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  ending  message  Location  lastActualInvocation  
[P14_Delete_Statement]^^325^326^327^^^316^329^"But was " + discrepancy.getPluralizedActualCount (  )  + ":", ending ) ;^[CLASS] Reporter  [METHOD] createTooLittleInvocationsMessage [RETURN_TYPE] String   Discrepancy discrepancy PrintableInvocation wanted Location lastActualInvocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  ending  message  Location  lastActualInvocation  
[P8_Replace_Mix]^return ending;^328^^^^^316^329^return message;^[CLASS] Reporter  [METHOD] createTooLittleInvocationsMessage [RETURN_TYPE] String   Discrepancy discrepancy PrintableInvocation wanted Location lastActualInvocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  ending  message  Location  lastActualInvocation  
[P1_Replace_Type]^char message = createTooLittleInvocationsMessage ( discrepancy, wanted, lastActualLocation ) ;^332^^^^^331^335^String message = createTooLittleInvocationsMessage ( discrepancy, wanted, lastActualLocation ) ;^[CLASS] Reporter  [METHOD] tooLittleActualInvocations [RETURN_TYPE] void   Discrepancy discrepancy PrintableInvocation wanted Location lastActualLocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  message  Location  lastActualLocation  
[P5_Replace_Variable]^String message = createTooLittleInvocationsMessage (  wanted, lastActualLocation ) ;^332^^^^^331^335^String message = createTooLittleInvocationsMessage ( discrepancy, wanted, lastActualLocation ) ;^[CLASS] Reporter  [METHOD] tooLittleActualInvocations [RETURN_TYPE] void   Discrepancy discrepancy PrintableInvocation wanted Location lastActualLocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  message  Location  lastActualLocation  
[P5_Replace_Variable]^String message = createTooLittleInvocationsMessage ( discrepancy,  lastActualLocation ) ;^332^^^^^331^335^String message = createTooLittleInvocationsMessage ( discrepancy, wanted, lastActualLocation ) ;^[CLASS] Reporter  [METHOD] tooLittleActualInvocations [RETURN_TYPE] void   Discrepancy discrepancy PrintableInvocation wanted Location lastActualLocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  message  Location  lastActualLocation  
[P5_Replace_Variable]^String message = createTooLittleInvocationsMessage ( discrepancy, wanted ) ;^332^^^^^331^335^String message = createTooLittleInvocationsMessage ( discrepancy, wanted, lastActualLocation ) ;^[CLASS] Reporter  [METHOD] tooLittleActualInvocations [RETURN_TYPE] void   Discrepancy discrepancy PrintableInvocation wanted Location lastActualLocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  message  Location  lastActualLocation  
[P5_Replace_Variable]^String message = createTooLittleInvocationsMessage ( lastActualLocation, wanted, discrepancy ) ;^332^^^^^331^335^String message = createTooLittleInvocationsMessage ( discrepancy, wanted, lastActualLocation ) ;^[CLASS] Reporter  [METHOD] tooLittleActualInvocations [RETURN_TYPE] void   Discrepancy discrepancy PrintableInvocation wanted Location lastActualLocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  message  Location  lastActualLocation  
[P5_Replace_Variable]^String message = createTooLittleInvocationsMessage ( wanted, discrepancy, lastActualLocation ) ;^332^^^^^331^335^String message = createTooLittleInvocationsMessage ( discrepancy, wanted, lastActualLocation ) ;^[CLASS] Reporter  [METHOD] tooLittleActualInvocations [RETURN_TYPE] void   Discrepancy discrepancy PrintableInvocation wanted Location lastActualLocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  message  Location  lastActualLocation  
[P5_Replace_Variable]^String message = createTooLittleInvocationsMessage ( discrepancy, lastActualLocation, wanted ) ;^332^^^^^331^335^String message = createTooLittleInvocationsMessage ( discrepancy, wanted, lastActualLocation ) ;^[CLASS] Reporter  [METHOD] tooLittleActualInvocations [RETURN_TYPE] void   Discrepancy discrepancy PrintableInvocation wanted Location lastActualLocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  message  Location  lastActualLocation  
[P7_Replace_Invocation]^String message = tooLittleActualInvocations ( discrepancy, wanted, lastActualLocation ) ;^332^^^^^331^335^String message = createTooLittleInvocationsMessage ( discrepancy, wanted, lastActualLocation ) ;^[CLASS] Reporter  [METHOD] tooLittleActualInvocations [RETURN_TYPE] void   Discrepancy discrepancy PrintableInvocation wanted Location lastActualLocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  message  Location  lastActualLocation  
[P11_Insert_Donor_Statement]^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;String message = createTooLittleInvocationsMessage ( discrepancy, wanted, lastActualLocation ) ;^332^^^^^331^335^String message = createTooLittleInvocationsMessage ( discrepancy, wanted, lastActualLocation ) ;^[CLASS] Reporter  [METHOD] tooLittleActualInvocations [RETURN_TYPE] void   Discrepancy discrepancy PrintableInvocation wanted Location lastActualLocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  message  Location  lastActualLocation  
[P14_Delete_Statement]^^332^^^^^331^335^String message = createTooLittleInvocationsMessage ( discrepancy, wanted, lastActualLocation ) ;^[CLASS] Reporter  [METHOD] tooLittleActualInvocations [RETURN_TYPE] void   Discrepancy discrepancy PrintableInvocation wanted Location lastActualLocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  message  Location  lastActualLocation  
[P4_Replace_Constructor]^throw throw  new TooManyActualInvocations ( message )  ;^334^^^^^331^335^throw new TooLittleActualInvocations ( message ) ;^[CLASS] Reporter  [METHOD] tooLittleActualInvocations [RETURN_TYPE] void   Discrepancy discrepancy PrintableInvocation wanted Location lastActualLocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  message  Location  lastActualLocation  
[P8_Replace_Mix]^throw new TooManyActualInvocations ( message ) ; ;^334^^^^^331^335^throw new TooLittleActualInvocations ( message ) ;^[CLASS] Reporter  [METHOD] tooLittleActualInvocations [RETURN_TYPE] void   Discrepancy discrepancy PrintableInvocation wanted Location lastActualLocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  message  Location  lastActualLocation  
[P11_Insert_Donor_Statement]^throw new TooManyActualInvocations ( message ) ;throw new TooLittleActualInvocations ( message ) ;^334^^^^^331^335^throw new TooLittleActualInvocations ( message ) ;^[CLASS] Reporter  [METHOD] tooLittleActualInvocations [RETURN_TYPE] void   Discrepancy discrepancy PrintableInvocation wanted Location lastActualLocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  message  Location  lastActualLocation  
[P11_Insert_Donor_Statement]^throw new ArgumentsAreDifferent ( message ) ;throw new TooLittleActualInvocations ( message ) ;^334^^^^^331^335^throw new TooLittleActualInvocations ( message ) ;^[CLASS] Reporter  [METHOD] tooLittleActualInvocations [RETURN_TYPE] void   Discrepancy discrepancy PrintableInvocation wanted Location lastActualLocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  message  Location  lastActualLocation  
[P1_Replace_Type]^char message = createTooLittleInvocationsMessage ( discrepancy, wanted, lastActualLocation ) ;^338^^^^^337^343^String message = createTooLittleInvocationsMessage ( discrepancy, wanted, lastActualLocation ) ;^[CLASS] Reporter  [METHOD] tooLittleActualInvocationsInOrder [RETURN_TYPE] void   Discrepancy discrepancy PrintableInvocation wanted Location lastActualLocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  message  Location  lastActualLocation  
[P5_Replace_Variable]^String message = createTooLittleInvocationsMessage (  wanted, lastActualLocation ) ;^338^^^^^337^343^String message = createTooLittleInvocationsMessage ( discrepancy, wanted, lastActualLocation ) ;^[CLASS] Reporter  [METHOD] tooLittleActualInvocationsInOrder [RETURN_TYPE] void   Discrepancy discrepancy PrintableInvocation wanted Location lastActualLocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  message  Location  lastActualLocation  
[P5_Replace_Variable]^String message = createTooLittleInvocationsMessage ( discrepancy,  lastActualLocation ) ;^338^^^^^337^343^String message = createTooLittleInvocationsMessage ( discrepancy, wanted, lastActualLocation ) ;^[CLASS] Reporter  [METHOD] tooLittleActualInvocationsInOrder [RETURN_TYPE] void   Discrepancy discrepancy PrintableInvocation wanted Location lastActualLocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  message  Location  lastActualLocation  
[P5_Replace_Variable]^String message = createTooLittleInvocationsMessage ( discrepancy, wanted ) ;^338^^^^^337^343^String message = createTooLittleInvocationsMessage ( discrepancy, wanted, lastActualLocation ) ;^[CLASS] Reporter  [METHOD] tooLittleActualInvocationsInOrder [RETURN_TYPE] void   Discrepancy discrepancy PrintableInvocation wanted Location lastActualLocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  message  Location  lastActualLocation  
[P5_Replace_Variable]^String message = createTooLittleInvocationsMessage ( lastActualLocation, wanted, discrepancy ) ;^338^^^^^337^343^String message = createTooLittleInvocationsMessage ( discrepancy, wanted, lastActualLocation ) ;^[CLASS] Reporter  [METHOD] tooLittleActualInvocationsInOrder [RETURN_TYPE] void   Discrepancy discrepancy PrintableInvocation wanted Location lastActualLocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  message  Location  lastActualLocation  
[P5_Replace_Variable]^String message = createTooLittleInvocationsMessage ( discrepancy, lastActualLocation, wanted ) ;^338^^^^^337^343^String message = createTooLittleInvocationsMessage ( discrepancy, wanted, lastActualLocation ) ;^[CLASS] Reporter  [METHOD] tooLittleActualInvocationsInOrder [RETURN_TYPE] void   Discrepancy discrepancy PrintableInvocation wanted Location lastActualLocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  message  Location  lastActualLocation  
[P7_Replace_Invocation]^String message = tooLittleActualInvocations ( discrepancy, wanted, lastActualLocation ) ;^338^^^^^337^343^String message = createTooLittleInvocationsMessage ( discrepancy, wanted, lastActualLocation ) ;^[CLASS] Reporter  [METHOD] tooLittleActualInvocationsInOrder [RETURN_TYPE] void   Discrepancy discrepancy PrintableInvocation wanted Location lastActualLocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  message  Location  lastActualLocation  
[P11_Insert_Donor_Statement]^String message = createTooManyInvocationsMessage ( wantedCount, actualCount, wanted, firstUndesired ) ;String message = createTooLittleInvocationsMessage ( discrepancy, wanted, lastActualLocation ) ;^338^^^^^337^343^String message = createTooLittleInvocationsMessage ( discrepancy, wanted, lastActualLocation ) ;^[CLASS] Reporter  [METHOD] tooLittleActualInvocationsInOrder [RETURN_TYPE] void   Discrepancy discrepancy PrintableInvocation wanted Location lastActualLocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  message  Location  lastActualLocation  
[P5_Replace_Variable]^String message = createTooLittleInvocationsMessage ( wanted, discrepancy, lastActualLocation ) ;^338^^^^^337^343^String message = createTooLittleInvocationsMessage ( discrepancy, wanted, lastActualLocation ) ;^[CLASS] Reporter  [METHOD] tooLittleActualInvocationsInOrder [RETURN_TYPE] void   Discrepancy discrepancy PrintableInvocation wanted Location lastActualLocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  message  Location  lastActualLocation  
[P14_Delete_Statement]^^338^^^^^337^343^String message = createTooLittleInvocationsMessage ( discrepancy, wanted, lastActualLocation ) ;^[CLASS] Reporter  [METHOD] tooLittleActualInvocationsInOrder [RETURN_TYPE] void   Discrepancy discrepancy PrintableInvocation wanted Location lastActualLocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  message  Location  lastActualLocation  
[P2_Replace_Operator]^throw new VerificationInOrderFailure ( join ( "Verification in order failure:"  &&  message )  ) ;^340^341^342^^^337^343^throw new VerificationInOrderFailure ( join ( "Verification in order failure:" + message )  ) ;^[CLASS] Reporter  [METHOD] tooLittleActualInvocationsInOrder [RETURN_TYPE] void   Discrepancy discrepancy PrintableInvocation wanted Location lastActualLocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  message  Location  lastActualLocation  
[P3_Replace_Literal]^throw new VerificationInOrderFailure ( join ( "ation in " + message )  ) ;^340^341^342^^^337^343^throw new VerificationInOrderFailure ( join ( "Verification in order failure:" + message )  ) ;^[CLASS] Reporter  [METHOD] tooLittleActualInvocationsInOrder [RETURN_TYPE] void   Discrepancy discrepancy PrintableInvocation wanted Location lastActualLocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  message  Location  lastActualLocation  
[P2_Replace_Operator]^throw new VerificationInOrderFailure ( join ( "Verification in order failure:"  <=  message )  ) ;^340^341^342^^^337^343^throw new VerificationInOrderFailure ( join ( "Verification in order failure:" + message )  ) ;^[CLASS] Reporter  [METHOD] tooLittleActualInvocationsInOrder [RETURN_TYPE] void   Discrepancy discrepancy PrintableInvocation wanted Location lastActualLocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  message  Location  lastActualLocation  
[P3_Replace_Literal]^throw new VerificationInOrderFailure ( join ( "fication in ordererification in order failure:" + message )  ) ;^340^341^342^^^337^343^throw new VerificationInOrderFailure ( join ( "Verification in order failure:" + message )  ) ;^[CLASS] Reporter  [METHOD] tooLittleActualInvocationsInOrder [RETURN_TYPE] void   Discrepancy discrepancy PrintableInvocation wanted Location lastActualLocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  message  Location  lastActualLocation  
[P2_Replace_Operator]^throw new VerificationInOrderFailure ( join ( "Verification in order failure:"  ||  message )  ) ;^340^341^342^^^337^343^throw new VerificationInOrderFailure ( join ( "Verification in order failure:" + message )  ) ;^[CLASS] Reporter  [METHOD] tooLittleActualInvocationsInOrder [RETURN_TYPE] void   Discrepancy discrepancy PrintableInvocation wanted Location lastActualLocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  message  Location  lastActualLocation  
[P3_Replace_Literal]^throw new VerificationInOrderFailure ( join ( "ord" + message )  ) ;^340^341^342^^^337^343^throw new VerificationInOrderFailure ( join ( "Verification in order failure:" + message )  ) ;^[CLASS] Reporter  [METHOD] tooLittleActualInvocationsInOrder [RETURN_TYPE] void   Discrepancy discrepancy PrintableInvocation wanted Location lastActualLocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  message  Location  lastActualLocation  
[P14_Delete_Statement]^^340^341^342^343^^337^343^throw new VerificationInOrderFailure ( join ( "Verification in order failure:" + message )  ) ; }^[CLASS] Reporter  [METHOD] tooLittleActualInvocationsInOrder [RETURN_TYPE] void   Discrepancy discrepancy PrintableInvocation wanted Location lastActualLocation [VARIABLES] Discrepancy  discrepancy  boolean  PrintableInvocation  wanted  String  message  Location  lastActualLocation  
[P3_Replace_Literal]^throw new NoInteractionsWanted ( join ( "No interactions wanted here:o i", new Location (  ) , "But found this interaction:",^346^347^348^349^^345^353^throw new NoInteractionsWanted ( join ( "No interactions wanted here:", new Location (  ) , "But found this interaction:",^[CLASS] Reporter  [METHOD] noMoreInteractionsWanted [RETURN_TYPE] void   PrintableInvocation undesired [VARIABLES] boolean  PrintableInvocation  undesired  
[P3_Replace_Literal]^throw new NoInteractionsWanted ( join ( "No interactions wanted here:", new Location (  ) , "ou",^346^347^348^349^^345^353^throw new NoInteractionsWanted ( join ( "No interactions wanted here:", new Location (  ) , "But found this interaction:",^[CLASS] Reporter  [METHOD] noMoreInteractionsWanted [RETURN_TYPE] void   PrintableInvocation undesired [VARIABLES] boolean  PrintableInvocation  undesired  
[P3_Replace_Literal]^throw new NoInteractionsWanted ( join ( "N", new Location (  ) , "But found this interaction:",^346^347^348^349^^345^353^throw new NoInteractionsWanted ( join ( "No interactions wanted here:", new Location (  ) , "But found this interaction:",^[CLASS] Reporter  [METHOD] noMoreInteractionsWanted [RETURN_TYPE] void   PrintableInvocation undesired [VARIABLES] boolean  PrintableInvocation  undesired  
[P3_Replace_Literal]^throw new NoInteractionsWanted ( join ( "No interactions wanted here:", new Location (  ) , " found this interactionut found this interaction:",^346^347^348^349^^345^353^throw new NoInteractionsWanted ( join ( "No interactions wanted here:", new Location (  ) , "But found this interaction:",^[CLASS] Reporter  [METHOD] noMoreInteractionsWanted [RETURN_TYPE] void   PrintableInvocation undesired [VARIABLES] boolean  PrintableInvocation  undesired  
[P3_Replace_Literal]^throw new NoInteractionsWanted ( join ( "No interactions wanted here:ed ", new Location (  ) , "But found this interaction:",^346^347^348^349^^345^353^throw new NoInteractionsWanted ( join ( "No interactions wanted here:", new Location (  ) , "But found this interaction:",^[CLASS] Reporter  [METHOD] noMoreInteractionsWanted [RETURN_TYPE] void   PrintableInvocation undesired [VARIABLES] boolean  PrintableInvocation  undesired  
[P3_Replace_Literal]^throw new NoInteractionsWanted ( join ( "No interactions wanted here:", new Location (  ) , "But found this interaction:B",^346^347^348^349^^345^353^throw new NoInteractionsWanted ( join ( "No interactions wanted here:", new Location (  ) , "But found this interaction:",^[CLASS] Reporter  [METHOD] noMoreInteractionsWanted [RETURN_TYPE] void   PrintableInvocation undesired [VARIABLES] boolean  PrintableInvocation  undesired  
[P14_Delete_Statement]^^350^351^352^^^345^353^undesired.getLocation (  ) , "" )  ) ;^[CLASS] Reporter  [METHOD] noMoreInteractionsWanted [RETURN_TYPE] void   PrintableInvocation undesired [VARIABLES] boolean  PrintableInvocation  undesired  
[P2_Replace_Operator]^throw new MockitoException ( join ( "Cannot mock/spy "  <  clazz.toString (  ) , "Mockito cannot mock/spy following:", "  - final classes",^356^357^358^359^^355^363^throw new MockitoException ( join ( "Cannot mock/spy " + clazz.toString (  ) , "Mockito cannot mock/spy following:", "  - final classes",^[CLASS] Reporter  [METHOD] cannotMockFinalClass [RETURN_TYPE] void   Class<?> clazz [VARIABLES] boolean  Class  clazz  
[P3_Replace_Literal]^throw new MockitoException ( join ( "annot mock/spannot mock/spy " + clazz.toString (  ) , "Mockito cannot mock/spy following:", "  - final classes",^356^357^358^359^^355^363^throw new MockitoException ( join ( "Cannot mock/spy " + clazz.toString (  ) , "Mockito cannot mock/spy following:", "  - final classes",^[CLASS] Reporter  [METHOD] cannotMockFinalClass [RETURN_TYPE] void   Class<?> clazz [VARIABLES] boolean  Class  clazz  
[P3_Replace_Literal]^throw new MockitoException ( join ( "Cannot mock/spy " + clazz.toString (  ) , "Mockito cannot mock/spy following:ockito c", "  - final classes",^356^357^358^359^^355^363^throw new MockitoException ( join ( "Cannot mock/spy " + clazz.toString (  ) , "Mockito cannot mock/spy following:", "  - final classes",^[CLASS] Reporter  [METHOD] cannotMockFinalClass [RETURN_TYPE] void   Class<?> clazz [VARIABLES] boolean  Class  clazz  
[P3_Replace_Literal]^throw new MockitoException ( join ( "Cannot mock/spy " + clazz.toString (  ) , "Mockito cannot mock/spy following:", "  - final classes final ",^356^357^358^359^^355^363^throw new MockitoException ( join ( "Cannot mock/spy " + clazz.toString (  ) , "Mockito cannot mock/spy following:", "  - final classes",^[CLASS] Reporter  [METHOD] cannotMockFinalClass [RETURN_TYPE] void   Class<?> clazz [VARIABLES] boolean  Class  clazz  
[P2_Replace_Operator]^throw new MockitoException ( join ( "Cannot mock/spy "  ||  clazz.toString (  ) , "Mockito cannot mock/spy following:", "  - final classes",^356^357^358^359^^355^363^throw new MockitoException ( join ( "Cannot mock/spy " + clazz.toString (  ) , "Mockito cannot mock/spy following:", "  - final classes",^[CLASS] Reporter  [METHOD] cannotMockFinalClass [RETURN_TYPE] void   Class<?> clazz [VARIABLES] boolean  Class  clazz  
[P3_Replace_Literal]^throw new MockitoException ( join ( "Cannot mock/spy  mock/s" + clazz.toString (  ) , "Mockito cannot mock/spy following:", "  - final classes",^356^357^358^359^^355^363^throw new MockitoException ( join ( "Cannot mock/spy " + clazz.toString (  ) , "Mockito cannot mock/spy following:", "  - final classes",^[CLASS] Reporter  [METHOD] cannotMockFinalClass [RETURN_TYPE] void   Class<?> clazz [VARIABLES] boolean  Class  clazz  
[P3_Replace_Literal]^throw new MockitoException ( join ( "Cannot mock/spy " + clazz.toString (  ) , "cannot mock/spy ", "  - final classes",^356^357^358^359^^355^363^throw new MockitoException ( join ( "Cannot mock/spy " + clazz.toString (  ) , "Mockito cannot mock/spy following:", "  - final classes",^[CLASS] Reporter  [METHOD] cannotMockFinalClass [RETURN_TYPE] void   Class<?> clazz [VARIABLES] boolean  Class  clazz  
[P3_Replace_Literal]^throw new MockitoException ( join ( "Cannot mock/spy " + clazz.toString (  ) , "Mockito cannot mock/spy following:", "inal clas - final classes",^356^357^358^359^^355^363^throw new MockitoException ( join ( "Cannot mock/spy " + clazz.toString (  ) , "Mockito cannot mock/spy following:", "  - final classes",^[CLASS] Reporter  [METHOD] cannotMockFinalClass [RETURN_TYPE] void   Class<?> clazz [VARIABLES] boolean  Class  clazz  
[P3_Replace_Literal]^throw new MockitoException ( join ( "Caannot mock/spy " + clazz.toString (  ) , "Mockito cannot mock/spy following:", "  - final classes",^356^357^358^359^^355^363^throw new MockitoException ( join ( "Cannot mock/spy " + clazz.toString (  ) , "Mockito cannot mock/spy following:", "  - final classes",^[CLASS] Reporter  [METHOD] cannotMockFinalClass [RETURN_TYPE] void   Class<?> clazz [VARIABLES] boolean  Class  clazz  
[P3_Replace_Literal]^throw new MockitoException ( join ( "Cannot mock/spy " + clazz.toString (  ) , "Moockito cannot mock/spy following:", "  - final classes",^356^357^358^359^^355^363^throw new MockitoException ( join ( "Cannot mock/spy " + clazz.toString (  ) , "Mockito cannot mock/spy following:", "  - final classes",^[CLASS] Reporter  [METHOD] cannotMockFinalClass [RETURN_TYPE] void   Class<?> clazz [VARIABLES] boolean  Class  clazz  
[P3_Replace_Literal]^throw new MockitoException ( join ( "Cannot mock/spy " + clazz.toString (  ) , "Mockito cannot mock/spy following:", "  - final classes final clas",^356^357^358^359^^355^363^throw new MockitoException ( join ( "Cannot mock/spy " + clazz.toString (  ) , "Mockito cannot mock/spy following:", "  - final classes",^[CLASS] Reporter  [METHOD] cannotMockFinalClass [RETURN_TYPE] void   Class<?> clazz [VARIABLES] boolean  Class  clazz  
[P5_Replace_Variable]^throw new MockitoException ( join ( "Cannot mock/spy " + this.toString (  ) , "Mockito cannot mock/spy following:", "  - final classes",^356^357^358^359^^355^363^throw new MockitoException ( join ( "Cannot mock/spy " + clazz.toString (  ) , "Mockito cannot mock/spy following:", "  - final classes",^[CLASS] Reporter  [METHOD] cannotMockFinalClass [RETURN_TYPE] void   Class<?> clazz [VARIABLES] boolean  Class  clazz  
[P3_Replace_Literal]^throw new MockitoException ( join ( " with a retur", "Voids are usually stubbed with Throwables:", "    doThrow ( exception ) .when ( mock ) .someVoidMethod (  ) ;"^366^367^368^369^^365^371^throw new MockitoException ( join ( "Cannot stub a void method with a return value!", "Voids are usually stubbed with Throwables:", "    doThrow ( exception ) .when ( mock ) .someVoidMethod (  ) ;"^[CLASS] Reporter  [METHOD] cannotStubVoidMethodWithAReturnValue [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new MockitoException ( join ( "Cannot stub a void method with a return value!", "ids", "    doThrow ( exception ) .when ( mock ) .someVoidMethod (  ) ;"^366^367^368^369^^365^371^throw new MockitoException ( join ( "Cannot stub a void method with a return value!", "Voids are usually stubbed with Throwables:", "    doThrow ( exception ) .when ( mock ) .someVoidMethod (  ) ;"^[CLASS] Reporter  [METHOD] cannotStubVoidMethodWithAReturnValue [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new MockitoException ( join ( "id method with ", "Voids are usually stubbed with Throwables:", "    doThrow ( exception ) .when ( mock ) .someVoidMethod (  ) ;"^366^367^368^369^^365^371^throw new MockitoException ( join ( "Cannot stub a void method with a return value!", "Voids are usually stubbed with Throwables:", "    doThrow ( exception ) .when ( mock ) .someVoidMethod (  ) ;"^[CLASS] Reporter  [METHOD] cannotStubVoidMethodWithAReturnValue [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new MockitoException ( join ( "Cannot stub a void method with a return value!", "oidoids are usually stubbed with Throwables:", "    doThrow ( exception ) .when ( mock ) .someVoidMethod (  ) ;"^366^367^368^369^^365^371^throw new MockitoException ( join ( "Cannot stub a void method with a return value!", "Voids are usually stubbed with Throwables:", "    doThrow ( exception ) .when ( mock ) .someVoidMethod (  ) ;"^[CLASS] Reporter  [METHOD] cannotStubVoidMethodWithAReturnValue [RETURN_TYPE] void   [VARIABLES] boolean  
[P8_Replace_Mix]^throw new MockitoException ( join ( "Cannot stub a void method with a return value!", ;^366^367^368^369^^365^371^throw new MockitoException ( join ( "Cannot stub a void method with a return value!", "Voids are usually stubbed with Throwables:", "    doThrow ( exception ) .when ( mock ) .someVoidMethod (  ) ;"^[CLASS] Reporter  [METHOD] cannotStubVoidMethodWithAReturnValue [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new MockitoException ( join ( "return value", "Voids are usually stubbed with Throwables:", "    doThrow ( exception ) .when ( mock ) .someVoidMethod (  ) ;"^366^367^368^369^^365^371^throw new MockitoException ( join ( "Cannot stub a void method with a return value!", "Voids are usually stubbed with Throwables:", "    doThrow ( exception ) .when ( mock ) .someVoidMethod (  ) ;"^[CLASS] Reporter  [METHOD] cannotStubVoidMethodWithAReturnValue [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new MockitoException ( join ( "Cannot stub a void method with a return value!", "Voids are usually stubbed with Throwables:s are usually ", "    doThrow ( exception ) .when ( mock ) .someVoidMethod (  ) ;"^366^367^368^369^^365^371^throw new MockitoException ( join ( "Cannot stub a void method with a return value!", "Voids are usually stubbed with Throwables:", "    doThrow ( exception ) .when ( mock ) .someVoidMethod (  ) ;"^[CLASS] Reporter  [METHOD] cannotStubVoidMethodWithAReturnValue [RETURN_TYPE] void   [VARIABLES] boolean  
[P2_Replace_Operator]^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  <  ) ", methodName + " (  )  should return " + expectedType )  ) ;^386^387^388^389^^385^390^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^[CLASS] Reporter  [METHOD] wrongTypeOfReturnValue [RETURN_TYPE] void   String expectedType String actualType String methodName [VARIABLES] boolean  String  actualType  expectedType  methodName  
[P2_Replace_Operator]^throw new WrongTypeOfReturnValue ( join ( actualType  &&  " cannot be returned by "  &&  methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^386^387^388^389^^385^390^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^[CLASS] Reporter  [METHOD] wrongTypeOfReturnValue [RETURN_TYPE] void   String expectedType String actualType String methodName [VARIABLES] boolean  String  actualType  expectedType  methodName  
[P2_Replace_Operator]^throw new WrongTypeOfReturnValue ( join ( actualType   instanceof   " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^386^387^388^389^^385^390^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^[CLASS] Reporter  [METHOD] wrongTypeOfReturnValue [RETURN_TYPE] void   String expectedType String actualType String methodName [VARIABLES] boolean  String  actualType  expectedType  methodName  
[P2_Replace_Operator]^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName  >  " (  )  should return "  >  expectedType )  ) ;^386^387^388^389^^385^390^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^[CLASS] Reporter  [METHOD] wrongTypeOfReturnValue [RETURN_TYPE] void   String expectedType String actualType String methodName [VARIABLES] boolean  String  actualType  expectedType  methodName  
[P2_Replace_Operator]^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName  ||  " (  )  should return " + expectedType )  ) ;^386^387^388^389^^385^390^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^[CLASS] Reporter  [METHOD] wrongTypeOfReturnValue [RETURN_TYPE] void   String expectedType String actualType String methodName [VARIABLES] boolean  String  actualType  expectedType  methodName  
[P3_Replace_Literal]^throw new WrongTypeOfReturnValue ( join ( actualType + " canno" + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^386^387^388^389^^385^390^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^[CLASS] Reporter  [METHOD] wrongTypeOfReturnValue [RETURN_TYPE] void   String expectedType String actualType String methodName [VARIABLES] boolean  String  actualType  expectedType  methodName  
[P4_Replace_Constructor]^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) " + " (  )  should return " + expectedType )  ) ;^386^387^388^389^^385^390^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^[CLASS] Reporter  [METHOD] wrongTypeOfReturnValue [RETURN_TYPE] void   String expectedType String actualType String methodName [VARIABLES] boolean  String  actualType  expectedType  methodName  
[P5_Replace_Variable]^throw new WrongTypeOfReturnValue ( join ( methodName + " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^386^387^388^389^^385^390^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^[CLASS] Reporter  [METHOD] wrongTypeOfReturnValue [RETURN_TYPE] void   String expectedType String actualType String methodName [VARIABLES] boolean  String  actualType  expectedType  methodName  
[P5_Replace_Variable]^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + actualType + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^386^387^388^389^^385^390^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^[CLASS] Reporter  [METHOD] wrongTypeOfReturnValue [RETURN_TYPE] void   String expectedType String actualType String methodName [VARIABLES] boolean  String  actualType  expectedType  methodName  
[P5_Replace_Variable]^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + methodName )  ) ;^386^387^388^389^^385^390^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^[CLASS] Reporter  [METHOD] wrongTypeOfReturnValue [RETURN_TYPE] void   String expectedType String actualType String methodName [VARIABLES] boolean  String  actualType  expectedType  methodName  
[P5_Replace_Variable]^throw new WrongTypeOfReturnValue ( join ( expectedType + " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + actualType )  ) ;^386^387^388^389^^385^390^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^[CLASS] Reporter  [METHOD] wrongTypeOfReturnValue [RETURN_TYPE] void   String expectedType String actualType String methodName [VARIABLES] boolean  String  actualType  expectedType  methodName  
[P5_Replace_Variable]^throw new WrongTypeOfReturnValue ( join ( methodName + " cannot be returned by " + actualType + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^386^387^388^389^^385^390^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^[CLASS] Reporter  [METHOD] wrongTypeOfReturnValue [RETURN_TYPE] void   String expectedType String actualType String methodName [VARIABLES] boolean  String  actualType  expectedType  methodName  
[P2_Replace_Operator]^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ||  ) ", methodName + " (  )  should return " + expectedType )  ) ;^386^387^388^389^^385^390^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^[CLASS] Reporter  [METHOD] wrongTypeOfReturnValue [RETURN_TYPE] void   String expectedType String actualType String methodName [VARIABLES] boolean  String  actualType  expectedType  methodName  
[P2_Replace_Operator]^throw new WrongTypeOfReturnValue ( join ( actualType  <  " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^386^387^388^389^^385^390^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^[CLASS] Reporter  [METHOD] wrongTypeOfReturnValue [RETURN_TYPE] void   String expectedType String actualType String methodName [VARIABLES] boolean  String  actualType  expectedType  methodName  
[P2_Replace_Operator]^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName  >>  " (  )  should return " + expectedType )  ) ;^386^387^388^389^^385^390^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^[CLASS] Reporter  [METHOD] wrongTypeOfReturnValue [RETURN_TYPE] void   String expectedType String actualType String methodName [VARIABLES] boolean  String  actualType  expectedType  methodName  
[P3_Replace_Literal]^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by e retur" + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^386^387^388^389^^385^390^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^[CLASS] Reporter  [METHOD] wrongTypeOfReturnValue [RETURN_TYPE] void   String expectedType String actualType String methodName [VARIABLES] boolean  String  actualType  expectedType  methodName  
[P5_Replace_Variable]^throw new WrongTypeOfReturnValue ( join ( expectedType + " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^386^387^388^389^^385^390^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^[CLASS] Reporter  [METHOD] wrongTypeOfReturnValue [RETURN_TYPE] void   String expectedType String actualType String methodName [VARIABLES] boolean  String  actualType  expectedType  methodName  
[P5_Replace_Variable]^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + expectedType + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^386^387^388^389^^385^390^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^[CLASS] Reporter  [METHOD] wrongTypeOfReturnValue [RETURN_TYPE] void   String expectedType String actualType String methodName [VARIABLES] boolean  String  actualType  expectedType  methodName  
[P5_Replace_Variable]^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + expectedType + " (  ) ", methodName + " (  )  should return " + methodName )  ) ;^386^387^388^389^^385^390^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^[CLASS] Reporter  [METHOD] wrongTypeOfReturnValue [RETURN_TYPE] void   String expectedType String actualType String methodName [VARIABLES] boolean  String  actualType  expectedType  methodName  
[P2_Replace_Operator]^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  !=  ) ", methodName + " (  )  should return " + expectedType )  ) ;^386^387^388^389^^385^390^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^[CLASS] Reporter  [METHOD] wrongTypeOfReturnValue [RETURN_TYPE] void   String expectedType String actualType String methodName [VARIABLES] boolean  String  actualType  expectedType  methodName  
[P2_Replace_Operator]^throw new WrongTypeOfReturnValue ( join ( actualType  >=  " cannot be returned by "  >=  methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^386^387^388^389^^385^390^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^[CLASS] Reporter  [METHOD] wrongTypeOfReturnValue [RETURN_TYPE] void   String expectedType String actualType String methodName [VARIABLES] boolean  String  actualType  expectedType  methodName  
[P2_Replace_Operator]^throw new WrongTypeOfReturnValue ( join ( actualType  ==  " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^386^387^388^389^^385^390^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^[CLASS] Reporter  [METHOD] wrongTypeOfReturnValue [RETURN_TYPE] void   String expectedType String actualType String methodName [VARIABLES] boolean  String  actualType  expectedType  methodName  
[P2_Replace_Operator]^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName  ==  " (  )  should return "  ==  expectedType )  ) ;^386^387^388^389^^385^390^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^[CLASS] Reporter  [METHOD] wrongTypeOfReturnValue [RETURN_TYPE] void   String expectedType String actualType String methodName [VARIABLES] boolean  String  actualType  expectedType  methodName  
[P2_Replace_Operator]^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName  &  " (  )  should return " + expectedType )  ) ;^386^387^388^389^^385^390^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^[CLASS] Reporter  [METHOD] wrongTypeOfReturnValue [RETURN_TYPE] void   String expectedType String actualType String methodName [VARIABLES] boolean  String  actualType  expectedType  methodName  
[P3_Replace_Literal]^throw new WrongTypeOfReturnValue ( join ( actualType + "be returned bycannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^386^387^388^389^^385^390^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^[CLASS] Reporter  [METHOD] wrongTypeOfReturnValue [RETURN_TYPE] void   String expectedType String actualType String methodName [VARIABLES] boolean  String  actualType  expectedType  methodName  
[P5_Replace_Variable]^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + actualType )  ) ;^386^387^388^389^^385^390^throw new WrongTypeOfReturnValue ( join ( actualType + " cannot be returned by " + methodName + " (  ) ", methodName + " (  )  should return " + expectedType )  ) ;^[CLASS] Reporter  [METHOD] wrongTypeOfReturnValue [RETURN_TYPE] void   String expectedType String actualType String methodName [VARIABLES] boolean  String  actualType  expectedType  methodName  
[P2_Replace_Operator]^throw new MockitoAssertionError ( join ( "Wanted at most " + pluralize ( maxNumberOfInvocations )  <=  + " but was " + foundSize )  ) ;^393^^^^^392^394^throw new MockitoAssertionError ( join ( "Wanted at most " + pluralize ( maxNumberOfInvocations )  + " but was " + foundSize )  ) ;^[CLASS] Reporter  [METHOD] wantedAtMostX [RETURN_TYPE] void   int maxNumberOfInvocations int foundSize [VARIABLES] boolean  int  foundSize  maxNumberOfInvocations  
[P2_Replace_Operator]^throw new MockitoAssertionError ( join ( "Wanted at most " + pluralize ( maxNumberOfInvocations )  !=  + " but was " + foundSize )  ) ;^393^^^^^392^394^throw new MockitoAssertionError ( join ( "Wanted at most " + pluralize ( maxNumberOfInvocations )  + " but was " + foundSize )  ) ;^[CLASS] Reporter  [METHOD] wantedAtMostX [RETURN_TYPE] void   int maxNumberOfInvocations int foundSize [VARIABLES] boolean  int  foundSize  maxNumberOfInvocations  
[P2_Replace_Operator]^throw new MockitoAssertionError ( join ( "Wanted at most "  >  pluralize ( maxNumberOfInvocations )  + " but was " + foundSize )  ) ;^393^^^^^392^394^throw new MockitoAssertionError ( join ( "Wanted at most " + pluralize ( maxNumberOfInvocations )  + " but was " + foundSize )  ) ;^[CLASS] Reporter  [METHOD] wantedAtMostX [RETURN_TYPE] void   int maxNumberOfInvocations int foundSize [VARIABLES] boolean  int  foundSize  maxNumberOfInvocations  
[P3_Replace_Literal]^throw new MockitoAssertionError ( join ( "Wanted at most d" + pluralize ( maxNumberOfInvocations )  + " but was " + foundSize )  ) ;^393^^^^^392^394^throw new MockitoAssertionError ( join ( "Wanted at most " + pluralize ( maxNumberOfInvocations )  + " but was " + foundSize )  ) ;^[CLASS] Reporter  [METHOD] wantedAtMostX [RETURN_TYPE] void   int maxNumberOfInvocations int foundSize [VARIABLES] boolean  int  foundSize  maxNumberOfInvocations  
[P3_Replace_Literal]^throw new MockitoAssertionError ( join ( "Wanted at most " + pluralize ( maxNumberOfInvocations )  + " " + foundSize )  ) ;^393^^^^^392^394^throw new MockitoAssertionError ( join ( "Wanted at most " + pluralize ( maxNumberOfInvocations )  + " but was " + foundSize )  ) ;^[CLASS] Reporter  [METHOD] wantedAtMostX [RETURN_TYPE] void   int maxNumberOfInvocations int foundSize [VARIABLES] boolean  int  foundSize  maxNumberOfInvocations  
[P5_Replace_Variable]^throw new MockitoAssertionError ( join ( "Wanted at most " + pluralize ( foundSize )  + " but was " + maxNumberOfInvocations )  ) ;^393^^^^^392^394^throw new MockitoAssertionError ( join ( "Wanted at most " + pluralize ( maxNumberOfInvocations )  + " but was " + foundSize )  ) ;^[CLASS] Reporter  [METHOD] wantedAtMostX [RETURN_TYPE] void   int maxNumberOfInvocations int foundSize [VARIABLES] boolean  int  foundSize  maxNumberOfInvocations  
[P7_Replace_Invocation]^throw new MockitoAssertionError ( join ( "Wanted at most " + join ( maxNumberOfInvocations )  + " but was " + foundSize )  ) ;^393^^^^^392^394^throw new MockitoAssertionError ( join ( "Wanted at most " + pluralize ( maxNumberOfInvocations )  + " but was " + foundSize )  ) ;^[CLASS] Reporter  [METHOD] wantedAtMostX [RETURN_TYPE] void   int maxNumberOfInvocations int foundSize [VARIABLES] boolean  int  foundSize  maxNumberOfInvocations  
[P2_Replace_Operator]^throw new MockitoAssertionError ( join ( "Wanted at most " + pluralize ( maxNumberOfInvocations )  >=  + " but was " + foundSize )  ) ;^393^^^^^392^394^throw new MockitoAssertionError ( join ( "Wanted at most " + pluralize ( maxNumberOfInvocations )  + " but was " + foundSize )  ) ;^[CLASS] Reporter  [METHOD] wantedAtMostX [RETURN_TYPE] void   int maxNumberOfInvocations int foundSize [VARIABLES] boolean  int  foundSize  maxNumberOfInvocations  
[P2_Replace_Operator]^throw new MockitoAssertionError ( join ( "Wanted at most "  ==  pluralize ( maxNumberOfInvocations )  + " but was " + foundSize )  ) ;^393^^^^^392^394^throw new MockitoAssertionError ( join ( "Wanted at most " + pluralize ( maxNumberOfInvocations )  + " but was " + foundSize )  ) ;^[CLASS] Reporter  [METHOD] wantedAtMostX [RETURN_TYPE] void   int maxNumberOfInvocations int foundSize [VARIABLES] boolean  int  foundSize  maxNumberOfInvocations  
[P3_Replace_Literal]^throw new MockitoAssertionError ( join ( "nted at mo" + pluralize ( maxNumberOfInvocations )  + " but was " + foundSize )  ) ;^393^^^^^392^394^throw new MockitoAssertionError ( join ( "Wanted at most " + pluralize ( maxNumberOfInvocations )  + " but was " + foundSize )  ) ;^[CLASS] Reporter  [METHOD] wantedAtMostX [RETURN_TYPE] void   int maxNumberOfInvocations int foundSize [VARIABLES] boolean  int  foundSize  maxNumberOfInvocations  
[P3_Replace_Literal]^throw new MockitoAssertionError ( join ( "Wanted at most " + pluralize ( maxNumberOfInvocations )  + " but was  but was" + foundSize )  ) ;^393^^^^^392^394^throw new MockitoAssertionError ( join ( "Wanted at most " + pluralize ( maxNumberOfInvocations )  + " but was " + foundSize )  ) ;^[CLASS] Reporter  [METHOD] wantedAtMostX [RETURN_TYPE] void   int maxNumberOfInvocations int foundSize [VARIABLES] boolean  int  foundSize  maxNumberOfInvocations  
[P2_Replace_Operator]^throw new MockitoAssertionError ( join ( "Wanted at most " + pluralize ( maxNumberOfInvocations )  ==  + " but was " + foundSize )  ) ;^393^^^^^392^394^throw new MockitoAssertionError ( join ( "Wanted at most " + pluralize ( maxNumberOfInvocations )  + " but was " + foundSize )  ) ;^[CLASS] Reporter  [METHOD] wantedAtMostX [RETURN_TYPE] void   int maxNumberOfInvocations int foundSize [VARIABLES] boolean  int  foundSize  maxNumberOfInvocations  
[P2_Replace_Operator]^throw new MockitoAssertionError ( join ( "Wanted at most " + pluralize ( maxNumberOfInvocations )  &&  + " but was " + foundSize )  ) ;^393^^^^^392^394^throw new MockitoAssertionError ( join ( "Wanted at most " + pluralize ( maxNumberOfInvocations )  + " but was " + foundSize )  ) ;^[CLASS] Reporter  [METHOD] wantedAtMostX [RETURN_TYPE] void   int maxNumberOfInvocations int foundSize [VARIABLES] boolean  int  foundSize  maxNumberOfInvocations  
[P3_Replace_Literal]^throw new MockitoAssertionError ( join ( "Wanted at most Wanted at mos" + pluralize ( maxNumberOfInvocations )  + " but was " + foundSize )  ) ;^393^^^^^392^394^throw new MockitoAssertionError ( join ( "Wanted at most " + pluralize ( maxNumberOfInvocations )  + " but was " + foundSize )  ) ;^[CLASS] Reporter  [METHOD] wantedAtMostX [RETURN_TYPE] void   int maxNumberOfInvocations int foundSize [VARIABLES] boolean  int  foundSize  maxNumberOfInvocations  
[P3_Replace_Literal]^throw new MockitoAssertionError ( join ( "Wanted at most " + pluralize ( maxNumberOfInvocations )  + "but was " + foundSize )  ) ;^393^^^^^392^394^throw new MockitoAssertionError ( join ( "Wanted at most " + pluralize ( maxNumberOfInvocations )  + " but was " + foundSize )  ) ;^[CLASS] Reporter  [METHOD] wantedAtMostX [RETURN_TYPE] void   int maxNumberOfInvocations int foundSize [VARIABLES] boolean  int  foundSize  maxNumberOfInvocations  
[P14_Delete_Statement]^^393^^^^^392^394^throw new MockitoAssertionError ( join ( "Wanted at most " + pluralize ( maxNumberOfInvocations )  + " but was " + foundSize )  ) ;^[CLASS] Reporter  [METHOD] wantedAtMostX [RETURN_TYPE] void   int maxNumberOfInvocations int foundSize [VARIABLES] boolean  int  foundSize  maxNumberOfInvocations  
[P5_Replace_Variable]^throw new MockitoAssertionError ( join ( "Wanted at most " + pluralize ( foundSize )  + " but was " + foundSize )  ) ;^393^^^^^392^394^throw new MockitoAssertionError ( join ( "Wanted at most " + pluralize ( maxNumberOfInvocations )  + " but was " + foundSize )  ) ;^[CLASS] Reporter  [METHOD] wantedAtMostX [RETURN_TYPE] void   int maxNumberOfInvocations int foundSize [VARIABLES] boolean  int  foundSize  maxNumberOfInvocations  
[P8_Replace_Mix]^throw new MockitoAssertionError ( join ( "Wanted at most " + join ( foundSize )  + " but was " + foundSize )  ) ;^393^^^^^392^394^throw new MockitoAssertionError ( join ( "Wanted at most " + pluralize ( maxNumberOfInvocations )  + " but was " + foundSize )  ) ;^[CLASS] Reporter  [METHOD] wantedAtMostX [RETURN_TYPE] void   int maxNumberOfInvocations int foundSize [VARIABLES] boolean  int  foundSize  maxNumberOfInvocations  
[P3_Replace_Literal]^throw new InvalidUseOfMatchersException ( join ( "argument matcher detected hereisplaced argument matcher detected here:", location, "",^397^398^399^400^^396^411^throw new InvalidUseOfMatchersException ( join ( "Misplaced argument matcher detected here:", location, "",^[CLASS] Reporter  [METHOD] misplacedArgumentMatcher [RETURN_TYPE] void   Location location [VARIABLES] boolean  Location  location  
[P3_Replace_Literal]^throw new InvalidUseOfMatchersException ( join ( "isisplaced argument matcher detected here:", location, "",^397^398^399^400^^396^411^throw new InvalidUseOfMatchersException ( join ( "Misplaced argument matcher detected here:", location, "",^[CLASS] Reporter  [METHOD] misplacedArgumentMatcher [RETURN_TYPE] void   Location location [VARIABLES] boolean  Location  location  
[P3_Replace_Literal]^throw new InvalidUseOfMatchersException ( join ( "ed ar", location, "",^397^398^399^400^^396^411^throw new InvalidUseOfMatchersException ( join ( "Misplaced argument matcher detected here:", location, "",^[CLASS] Reporter  [METHOD] misplacedArgumentMatcher [RETURN_TYPE] void   Location location [VARIABLES] boolean  Location  location  
[P3_Replace_Literal]^throw new SmartNullPointerException ( join ( "e a NullPointerException her", new Location (  ) , "Because this method was *not* stubbed correctly:",^414^415^416^417^^413^421^throw new SmartNullPointerException ( join ( "You have a NullPointerException here:", new Location (  ) , "Because this method was *not* stubbed correctly:",^[CLASS] Reporter  [METHOD] smartNullPointerException [RETURN_TYPE] void   Location location [VARIABLES] boolean  Location  location  
[P3_Replace_Literal]^throw new SmartNullPointerException ( join ( "You have a NullPointerException here:", new Location (  ) , "ause this method was",^414^415^416^417^^413^421^throw new SmartNullPointerException ( join ( "You have a NullPointerException here:", new Location (  ) , "Because this method was *not* stubbed correctly:",^[CLASS] Reporter  [METHOD] smartNullPointerException [RETURN_TYPE] void   Location location [VARIABLES] boolean  Location  location  
[P3_Replace_Literal]^throw new SmartNullPointerException ( join ( " a NullPointerExceptou have a NullPointerException here:", new Location (  ) , "Because this method was *not* stubbed correctly:",^414^415^416^417^^413^421^throw new SmartNullPointerException ( join ( "You have a NullPointerException here:", new Location (  ) , "Because this method was *not* stubbed correctly:",^[CLASS] Reporter  [METHOD] smartNullPointerException [RETURN_TYPE] void   Location location [VARIABLES] boolean  Location  location  
[P3_Replace_Literal]^throw new SmartNullPointerException ( join ( "You have a NullPointerException here:", new Location (  ) , "Because this method was *not* stubbed correctly:Bec",^414^415^416^417^^413^421^throw new SmartNullPointerException ( join ( "You have a NullPointerException here:", new Location (  ) , "Because this method was *not* stubbed correctly:",^[CLASS] Reporter  [METHOD] smartNullPointerException [RETURN_TYPE] void   Location location [VARIABLES] boolean  Location  location  
[P3_Replace_Literal]^throw new SmartNullPointerException ( join ( "er", new Location (  ) , "Because this method was *not* stubbed correctly:",^414^415^416^417^^413^421^throw new SmartNullPointerException ( join ( "You have a NullPointerException here:", new Location (  ) , "Because this method was *not* stubbed correctly:",^[CLASS] Reporter  [METHOD] smartNullPointerException [RETURN_TYPE] void   Location location [VARIABLES] boolean  Location  location  
[P3_Replace_Literal]^throw new SmartNullPointerException ( join ( "You have a NullPointerException here:", new Location (  ) , "Becaecause this method was *not* stubbed correctly:",^414^415^416^417^^413^421^throw new SmartNullPointerException ( join ( "You have a NullPointerException here:", new Location (  ) , "Because this method was *not* stubbed correctly:",^[CLASS] Reporter  [METHOD] smartNullPointerException [RETURN_TYPE] void   Location location [VARIABLES] boolean  Location  location  
[P3_Replace_Literal]^throw new MockitoException ( join ( "argo argument value was captured!", "You might have forgotten to use argument.capture (  )  in verify (  ) ...", "...or you used capture (  )  in stubbing but stubbed method was not called.",^424^425^426^427^^423^436^throw new MockitoException ( join ( "No argument value was captured!", "You might have forgotten to use argument.capture (  )  in verify (  ) ...", "...or you used capture (  )  in stubbing but stubbed method was not called.",^[CLASS] Reporter  [METHOD] noArgumentValueWasCaptured [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new MockitoException ( join ( "No argument value was captured!o ar", "You might have forgotten to use argument.capture (  )  in verify (  ) ...", "...or you used capture (  )  in stubbing but stubbed method was not called.",^424^425^426^427^^423^436^throw new MockitoException ( join ( "No argument value was captured!", "You might have forgotten to use argument.capture (  )  in verify (  ) ...", "...or you used capture (  )  in stubbing but stubbed method was not called.",^[CLASS] Reporter  [METHOD] noArgumentValueWasCaptured [RETURN_TYPE] void   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new MockitoException ( join ( "umo argument value was captured!", "You might have forgotten to use argument.capture (  )  in verify (  ) ...", "...or you used capture (  )  in stubbing but stubbed method was not called.",^424^425^426^427^^423^436^throw new MockitoException ( join ( "No argument value was captured!", "You might have forgotten to use argument.capture (  )  in verify (  ) ...", "...or you used capture (  )  in stubbing but stubbed method was not called.",^[CLASS] Reporter  [METHOD] noArgumentValueWasCaptured [RETURN_TYPE] void   [VARIABLES] boolean  
[P14_Delete_Statement]^^439^440^441^^^438^442^throw new MockitoException ( join ( "extraInterfaces (  )  does not accept null parameters." )  ) ;^[CLASS] Reporter  [METHOD] extraInterfacesDoesNotAcceptNullParameters [RETURN_TYPE] void   [VARIABLES] boolean  
[P2_Replace_Operator]^throw new MockitoException ( join ( "extraInterfaces (  >  )  accepts only interfaces.", "You passed following type: " + wrongType.getSimpleName (  )  + " which is not an interface." )  ) ;^445^446^447^448^^444^449^throw new MockitoException ( join ( "extraInterfaces (  )  accepts only interfaces.", "You passed following type: " + wrongType.getSimpleName (  )  + " which is not an interface." )  ) ;^[CLASS] Reporter  [METHOD] extraInterfacesAcceptsOnlyInterfaces [RETURN_TYPE] void   Class<?> wrongType [VARIABLES] boolean  Class  wrongType  
[P2_Replace_Operator]^throw new MockitoException ( join ( "extraInterfaces (  )  accepts only interfaces.", "You passed following type: "  &&  wrongType.getSimpleName (  )  + " which is not an interface." )  ) ;^445^446^447^448^^444^449^throw new MockitoException ( join ( "extraInterfaces (  )  accepts only interfaces.", "You passed following type: " + wrongType.getSimpleName (  )  + " which is not an interface." )  ) ;^[CLASS] Reporter  [METHOD] extraInterfacesAcceptsOnlyInterfaces [RETURN_TYPE] void   Class<?> wrongType [VARIABLES] boolean  Class  wrongType  
[P3_Replace_Literal]^throw new MockitoException ( join ( "extraInterfaces (  )  accepts only interfaces.", "tyou passed following type: " + wrongType.getSimpleName (  )  + " which is not an interface." )  ) ;^445^446^447^448^^444^449^throw new MockitoException ( join ( "extraInterfaces (  )  accepts only interfaces.", "You passed following type: " + wrongType.getSimpleName (  )  + " which is not an interface." )  ) ;^[CLASS] Reporter  [METHOD] extraInterfacesAcceptsOnlyInterfaces [RETURN_TYPE] void   Class<?> wrongType [VARIABLES] boolean  Class  wrongType  
[P3_Replace_Literal]^throw new MockitoException ( join ( "extraInterfaces (  )  accepts only interfaces.", "You passed following type: " + wrongType.getSimpleName (  )  + " which is not an interface.ich is not an interfac" )  ) ;^445^446^447^448^^444^449^throw new MockitoException ( join ( "extraInterfaces (  )  accepts only interfaces.", "You passed following type: " + wrongType.getSimpleName (  )  + " which is not an interface." )  ) ;^[CLASS] Reporter  [METHOD] extraInterfacesAcceptsOnlyInterfaces [RETURN_TYPE] void   Class<?> wrongType [VARIABLES] boolean  Class  wrongType  
[P7_Replace_Invocation]^throw new MockitoException ( join ( "extraInterfaces (  )  accepts only interfaces.", "You passed following type: " + wrongType .toString (  )   + " which is not an interface." )  ) ;^445^446^447^448^^444^449^throw new MockitoException ( join ( "extraInterfaces (  )  accepts only interfaces.", "You passed following type: " + wrongType.getSimpleName (  )  + " which is not an interface." )  ) ;^[CLASS] Reporter  [METHOD] extraInterfacesAcceptsOnlyInterfaces [RETURN_TYPE] void   Class<?> wrongType [VARIABLES] boolean  Class  wrongType  
[P2_Replace_Operator]^throw new MockitoException ( join ( "extraInterfaces (  !=  )  accepts only interfaces.", "You passed following type: " + wrongType.getSimpleName (  )  + " which is not an interface." )  ) ;^445^446^447^448^^444^449^throw new MockitoException ( join ( "extraInterfaces (  )  accepts only interfaces.", "You passed following type: " + wrongType.getSimpleName (  )  + " which is not an interface." )  ) ;^[CLASS] Reporter  [METHOD] extraInterfacesAcceptsOnlyInterfaces [RETURN_TYPE] void   Class<?> wrongType [VARIABLES] boolean  Class  wrongType  
[P2_Replace_Operator]^throw new MockitoException ( join ( "extraInterfaces (  )  accepts only interfaces.", "You passed following type: "  >  wrongType.getSimpleName (  )  + " which is not an interface." )  ) ;^445^446^447^448^^444^449^throw new MockitoException ( join ( "extraInterfaces (  )  accepts only interfaces.", "You passed following type: " + wrongType.getSimpleName (  )  + " which is not an interface." )  ) ;^[CLASS] Reporter  [METHOD] extraInterfacesAcceptsOnlyInterfaces [RETURN_TYPE] void   Class<?> wrongType [VARIABLES] boolean  Class  wrongType  
[P3_Replace_Literal]^throw new MockitoException ( join ( "extraInterfaces (  )  accepts only interfaces.", "You passed fol" + wrongType.getSimpleName (  )  + " which is not an interface." )  ) ;^445^446^447^448^^444^449^throw new MockitoException ( join ( "extraInterfaces (  )  accepts only interfaces.", "You passed following type: " + wrongType.getSimpleName (  )  + " which is not an interface." )  ) ;^[CLASS] Reporter  [METHOD] extraInterfacesAcceptsOnlyInterfaces [RETURN_TYPE] void   Class<?> wrongType [VARIABLES] boolean  Class  wrongType  
[P3_Replace_Literal]^throw new MockitoException ( join ( "extraInterfaces (  )  accepts only interfaces.", "You passed following type: " + wrongType.getSimpleName (  )  + " which is not an interface. is " )  ) ;^445^446^447^448^^444^449^throw new MockitoException ( join ( "extraInterfaces (  )  accepts only interfaces.", "You passed following type: " + wrongType.getSimpleName (  )  + " which is not an interface." )  ) ;^[CLASS] Reporter  [METHOD] extraInterfacesAcceptsOnlyInterfaces [RETURN_TYPE] void   Class<?> wrongType [VARIABLES] boolean  Class  wrongType  
[P2_Replace_Operator]^throw new MockitoException ( join ( "extraInterfaces (  ||  )  accepts only interfaces.", "You passed following type: " + wrongType.getSimpleName (  )  + " which is not an interface." )  ) ;^445^446^447^448^^444^449^throw new MockitoException ( join ( "extraInterfaces (  )  accepts only interfaces.", "You passed following type: " + wrongType.getSimpleName (  )  + " which is not an interface." )  ) ;^[CLASS] Reporter  [METHOD] extraInterfacesAcceptsOnlyInterfaces [RETURN_TYPE] void   Class<?> wrongType [VARIABLES] boolean  Class  wrongType  
[P2_Replace_Operator]^throw new MockitoException ( join ( "extraInterfaces (  )  accepts only interfaces.", "You passed following type: "  |  wrongType.getSimpleName (  )  + " which is not an interface." )  ) ;^445^446^447^448^^444^449^throw new MockitoException ( join ( "extraInterfaces (  )  accepts only interfaces.", "You passed following type: " + wrongType.getSimpleName (  )  + " which is not an interface." )  ) ;^[CLASS] Reporter  [METHOD] extraInterfacesAcceptsOnlyInterfaces [RETURN_TYPE] void   Class<?> wrongType [VARIABLES] boolean  Class  wrongType  
[P3_Replace_Literal]^throw new MockitoException ( join ( "extraInterfaces (  )  accepts only interfaces.", "d fou passed following type: " + wrongType.getSimpleName (  )  + " which is not an interface." )  ) ;^445^446^447^448^^444^449^throw new MockitoException ( join ( "extraInterfaces (  )  accepts only interfaces.", "You passed following type: " + wrongType.getSimpleName (  )  + " which is not an interface." )  ) ;^[CLASS] Reporter  [METHOD] extraInterfacesAcceptsOnlyInterfaces [RETURN_TYPE] void   Class<?> wrongType [VARIABLES] boolean  Class  wrongType  
[P3_Replace_Literal]^throw new MockitoException ( join ( "extraInterfaces (  )  accepts only interfaces.", "You passed following type: " + wrongType.getSimpleName (  )  + " which is not an interwhich is not an interface." )  ) ;^445^446^447^448^^444^449^throw new MockitoException ( join ( "extraInterfaces (  )  accepts only interfaces.", "You passed following type: " + wrongType.getSimpleName (  )  + " which is not an interface." )  ) ;^[CLASS] Reporter  [METHOD] extraInterfacesAcceptsOnlyInterfaces [RETURN_TYPE] void   Class<?> wrongType [VARIABLES] boolean  Class  wrongType  
[P8_Replace_Mix]^"You passed following type: " + 4.getSimpleName (  )  + " which is not an interface." )  ) ;^447^448^^^^444^449^"You passed following type: " + wrongType.getSimpleName (  )  + " which is not an interface." )  ) ;^[CLASS] Reporter  [METHOD] extraInterfacesAcceptsOnlyInterfaces [RETURN_TYPE] void   Class<?> wrongType [VARIABLES] boolean  Class  wrongType  
[P14_Delete_Statement]^^447^448^^^^444^449^"You passed following type: " + wrongType.getSimpleName (  )  + " which is not an interface." )  ) ;^[CLASS] Reporter  [METHOD] extraInterfacesAcceptsOnlyInterfaces [RETURN_TYPE] void   Class<?> wrongType [VARIABLES] boolean  Class  wrongType  
[P2_Replace_Operator]^throw new MockitoException ( join ( "extraInterfaces (  )  does not accept the same type as the mocked type.", "You mocked following type: "  ||  wrongType.getSimpleName (  ) , "and you passed the same very interface to the extraInterfaces (  ) "^452^453^454^455^^451^457^throw new MockitoException ( join ( "extraInterfaces (  )  does not accept the same type as the mocked type.", "You mocked following type: " + wrongType.getSimpleName (  ) , "and you passed the same very interface to the extraInterfaces (  ) "^[CLASS] Reporter  [METHOD] extraInterfacesCannotContainMockedType [RETURN_TYPE] void   Class<?> wrongType [VARIABLES] boolean  Class  wrongType  
[P3_Replace_Literal]^throw new MockitoException ( join ( "extraInterfaces (  )  does not accept the same type as the mocked type.", "ked followin" + wrongType.getSimpleName (  ) , "and you passed the same very interface to the extraInterfaces (  ) "^452^453^454^455^^451^457^throw new MockitoException ( join ( "extraInterfaces (  )  does not accept the same type as the mocked type.", "You mocked following type: " + wrongType.getSimpleName (  ) , "and you passed the same very interface to the extraInterfaces (  ) "^[CLASS] Reporter  [METHOD] extraInterfacesCannotContainMockedType [RETURN_TYPE] void   Class<?> wrongType [VARIABLES] boolean  Class  wrongType  
[P5_Replace_Variable]^throw new MockitoException ( join ( "extraInterfaces (  )  does not accept the same type as the mocked type.", "You mocked following type: " + 0.getSimpleName (  ) , "and you passed the same very interface to the extraInterfaces (  ) "^452^453^454^455^^451^457^throw new MockitoException ( join ( "extraInterfaces (  )  does not accept the same type as the mocked type.", "You mocked following type: " + wrongType.getSimpleName (  ) , "and you passed the same very interface to the extraInterfaces (  ) "^[CLASS] Reporter  [METHOD] extraInterfacesCannotContainMockedType [RETURN_TYPE] void   Class<?> wrongType [VARIABLES] boolean  Class  wrongType  
[P2_Replace_Operator]^throw new MockitoException ( join ( "extraInterfaces (  )  does not accept the same type as the mocked type.", "You mocked following type: "  !=  wrongType.getSimpleName (  ) , "and you passed the same very interface to the extraInterfaces (  ) "^452^453^454^455^^451^457^throw new MockitoException ( join ( "extraInterfaces (  )  does not accept the same type as the mocked type.", "You mocked following type: " + wrongType.getSimpleName (  ) , "and you passed the same very interface to the extraInterfaces (  ) "^[CLASS] Reporter  [METHOD] extraInterfacesCannotContainMockedType [RETURN_TYPE] void   Class<?> wrongType [VARIABLES] boolean  Class  wrongType  
[P3_Replace_Literal]^throw new MockitoException ( join ( "extraInterfaces (  )  does not accept the same type as the mocked type.", " mocked following typou mocked following type: " + wrongType.getSimpleName (  ) , "and you passed the same very interface to the extraInterfaces (  ) "^452^453^454^455^^451^457^throw new MockitoException ( join ( "extraInterfaces (  )  does not accept the same type as the mocked type.", "You mocked following type: " + wrongType.getSimpleName (  ) , "and you passed the same very interface to the extraInterfaces (  ) "^[CLASS] Reporter  [METHOD] extraInterfacesCannotContainMockedType [RETURN_TYPE] void   Class<?> wrongType [VARIABLES] boolean  Class  wrongType  
[P2_Replace_Operator]^throw new MockitoException ( join ( "extraInterfaces (  )  does not accept the same type as the mocked type.", "You mocked following type: "  &  wrongType.getSimpleName (  ) , "and you passed the same very interface to the extraInterfaces (  ) "^452^453^454^455^^451^457^throw new MockitoException ( join ( "extraInterfaces (  )  does not accept the same type as the mocked type.", "You mocked following type: " + wrongType.getSimpleName (  ) , "and you passed the same very interface to the extraInterfaces (  ) "^[CLASS] Reporter  [METHOD] extraInterfacesCannotContainMockedType [RETURN_TYPE] void   Class<?> wrongType [VARIABLES] boolean  Class  wrongType  
[P3_Replace_Literal]^throw new MockitoException ( join ( "extraInterfaces (  )  does not accept the same type as the mocked type.", "You mocked following type: ocked" + wrongType.getSimpleName (  ) , "and you passed the same very interface to the extraInterfaces (  ) "^452^453^454^455^^451^457^throw new MockitoException ( join ( "extraInterfaces (  )  does not accept the same type as the mocked type.", "You mocked following type: " + wrongType.getSimpleName (  ) , "and you passed the same very interface to the extraInterfaces (  ) "^[CLASS] Reporter  [METHOD] extraInterfacesCannotContainMockedType [RETURN_TYPE] void   Class<?> wrongType [VARIABLES] boolean  Class  wrongType  
[P7_Replace_Invocation]^"You mocked following type: " + wrongType .toString (  )  , "and you passed the same very interface to the extraInterfaces (  ) " )  ) ;^454^455^456^^^451^457^"You mocked following type: " + wrongType.getSimpleName (  ) , "and you passed the same very interface to the extraInterfaces (  ) " )  ) ;^[CLASS] Reporter  [METHOD] extraInterfacesCannotContainMockedType [RETURN_TYPE] void   Class<?> wrongType [VARIABLES] boolean  Class  wrongType  
[P14_Delete_Statement]^^454^455^456^^^451^457^"You mocked following type: " + wrongType.getSimpleName (  ) , "and you passed the same very interface to the extraInterfaces (  ) " )  ) ;^[CLASS] Reporter  [METHOD] extraInterfacesCannotContainMockedType [RETURN_TYPE] void   Class<?> wrongType [VARIABLES] boolean  Class  wrongType  
[P14_Delete_Statement]^^460^461^462^^^459^463^throw new MockitoException ( join ( "extraInterfaces (  )  requires at least one interface." )  ) ;^[CLASS] Reporter  [METHOD] extraInterfacesRequiresAtLeastOneInterface [RETURN_TYPE] void   [VARIABLES] boolean  
