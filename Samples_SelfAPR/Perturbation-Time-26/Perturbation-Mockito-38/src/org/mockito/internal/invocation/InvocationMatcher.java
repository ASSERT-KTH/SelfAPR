[P8_Replace_Mix]^private  Invocation invocation;^20^^^^^15^25^private final Invocation invocation;^[CLASS] InvocationMatcher   [VARIABLES] 
[P8_Replace_Mix]^private  List<Matcher> matchers;^21^^^^^16^26^private final List<Matcher> matchers;^[CLASS] InvocationMatcher   [VARIABLES] 
[P8_Replace_Mix]^this.invocation =  null;^24^^^^^23^30^this.invocation = invocation;^[CLASS] InvocationMatcher  [METHOD] <init> [RETURN_TYPE] List)   Invocation invocation Matcher> matchers [VARIABLES] Invocation  invocation  List  matchers  boolean  
[P5_Replace_Variable]^if  ( null.isEmpty (  )  )  {^25^^^^^23^30^if  ( matchers.isEmpty (  )  )  {^[CLASS] InvocationMatcher  [METHOD] <init> [RETURN_TYPE] List)   Invocation invocation Matcher> matchers [VARIABLES] Invocation  invocation  List  matchers  boolean  
[P7_Replace_Invocation]^if  ( matchers.get (  )  )  {^25^^^^^23^30^if  ( matchers.isEmpty (  )  )  {^[CLASS] InvocationMatcher  [METHOD] <init> [RETURN_TYPE] List)   Invocation invocation Matcher> matchers [VARIABLES] Invocation  invocation  List  matchers  boolean  
[P15_Unwrap_Block]^this.matchers = invocation.argumentsToMatchers();^25^26^27^28^29^23^30^if  ( matchers.isEmpty (  )  )  { this.matchers = invocation.argumentsToMatchers (  ) ; } else { this.matchers = matchers; }^[CLASS] InvocationMatcher  [METHOD] <init> [RETURN_TYPE] List)   Invocation invocation Matcher> matchers [VARIABLES] Invocation  invocation  List  matchers  boolean  
[P16_Remove_Block]^^25^26^27^28^29^23^30^if  ( matchers.isEmpty (  )  )  { this.matchers = invocation.argumentsToMatchers (  ) ; } else { this.matchers = matchers; }^[CLASS] InvocationMatcher  [METHOD] <init> [RETURN_TYPE] List)   Invocation invocation Matcher> matchers [VARIABLES] Invocation  invocation  List  matchers  boolean  
[P8_Replace_Mix]^this.matchers =  null;^28^^^^^23^30^this.matchers = matchers;^[CLASS] InvocationMatcher  [METHOD] <init> [RETURN_TYPE] List)   Invocation invocation Matcher> matchers [VARIABLES] Invocation  invocation  List  matchers  boolean  
[P8_Replace_Mix]^this.matchers =  null.argumentsToMatchers (  ) ;^26^^^^^23^30^this.matchers = invocation.argumentsToMatchers (  ) ;^[CLASS] InvocationMatcher  [METHOD] <init> [RETURN_TYPE] List)   Invocation invocation Matcher> matchers [VARIABLES] Invocation  invocation  List  matchers  boolean  
[P8_Replace_Mix]^this.matchers = invocation .getMethod (  )  ;^26^^^^^23^30^this.matchers = invocation.argumentsToMatchers (  ) ;^[CLASS] InvocationMatcher  [METHOD] <init> [RETURN_TYPE] List)   Invocation invocation Matcher> matchers [VARIABLES] Invocation  invocation  List  matchers  boolean  
[P14_Delete_Statement]^^26^^^^^23^30^this.matchers = invocation.argumentsToMatchers (  ) ;^[CLASS] InvocationMatcher  [METHOD] <init> [RETURN_TYPE] List)   Invocation invocation Matcher> matchers [VARIABLES] Invocation  invocation  List  matchers  boolean  
[P14_Delete_Statement]^^33^^^^^32^34^this ( invocation, Collections.<Matcher>emptyList (  )  ) ;^[CLASS] InvocationMatcher  [METHOD] <init> [RETURN_TYPE] Invocation)   Invocation invocation [VARIABLES] Invocation  invocation  List  matchers  boolean  
[P7_Replace_Invocation]^return invocation.getMock (  ) ;^37^^^^^36^38^return invocation.getMethod (  ) ;^[CLASS] InvocationMatcher  [METHOD] getMethod [RETURN_TYPE] Method   [VARIABLES] Invocation  invocation  List  matchers  boolean  
[P8_Replace_Mix]^return invocation .getLocation (  )  ;^37^^^^^36^38^return invocation.getMethod (  ) ;^[CLASS] InvocationMatcher  [METHOD] getMethod [RETURN_TYPE] Method   [VARIABLES] Invocation  invocation  List  matchers  boolean  
[P14_Delete_Statement]^^37^^^^^36^38^return invocation.getMethod (  ) ;^[CLASS] InvocationMatcher  [METHOD] getMethod [RETURN_TYPE] Method   [VARIABLES] Invocation  invocation  List  matchers  boolean  
[P5_Replace_Variable]^return invocation;^41^^^^^40^42^return this.invocation;^[CLASS] InvocationMatcher  [METHOD] getInvocation [RETURN_TYPE] Invocation   [VARIABLES] Invocation  invocation  List  matchers  boolean  
[P5_Replace_Variable]^return invocation.toString (  new PrintSettings (  )  ) ;^49^^^^^48^50^return invocation.toString ( matchers, new PrintSettings (  )  ) ;^[CLASS] InvocationMatcher  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Invocation  invocation  List  matchers  boolean  
[P5_Replace_Variable]^return matchers.toString ( invocation, new PrintSettings (  )  ) ;^49^^^^^48^50^return invocation.toString ( matchers, new PrintSettings (  )  ) ;^[CLASS] InvocationMatcher  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Invocation  invocation  List  matchers  boolean  
[P7_Replace_Invocation]^return invocation.argumentsToMatchers ( matchers, new PrintSettings (  )  ) ;^49^^^^^48^50^return invocation.toString ( matchers, new PrintSettings (  )  ) ;^[CLASS] InvocationMatcher  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Invocation  invocation  List  matchers  boolean  
[P14_Delete_Statement]^^49^^^^^48^50^return invocation.toString ( matchers, new PrintSettings (  )  ) ;^[CLASS] InvocationMatcher  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] Invocation  invocation  List  matchers  boolean  
[P2_Replace_Operator]^return invocation.getMock (  ) .equals ( actual.getMock (  )  ) || hasSameMethod ( actual ) &&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^53^54^55^^^52^56^return invocation.getMock (  ) .equals ( actual.getMock (  )  ) && hasSameMethod ( actual ) &&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^[CLASS] InvocationMatcher  [METHOD] matches [RETURN_TYPE] boolean   Invocation actual [VARIABLES] Invocation  actual  invocation  List  matchers  boolean  
[P5_Replace_Variable]^return actual.getMock (  ) .equals ( invocation.getMock (  )  ) && hasSameMethod ( actual ) &&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^53^54^55^^^52^56^return invocation.getMock (  ) .equals ( actual.getMock (  )  ) && hasSameMethod ( actual ) &&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^[CLASS] InvocationMatcher  [METHOD] matches [RETURN_TYPE] boolean   Invocation actual [VARIABLES] Invocation  actual  invocation  List  matchers  boolean  
[P7_Replace_Invocation]^return invocation.getMock (  ) .matches ( actual.getMock (  )  ) && hasSameMethod ( actual ) &&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^53^54^55^^^52^56^return invocation.getMock (  ) .equals ( actual.getMock (  )  ) && hasSameMethod ( actual ) &&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^[CLASS] InvocationMatcher  [METHOD] matches [RETURN_TYPE] boolean   Invocation actual [VARIABLES] Invocation  actual  invocation  List  matchers  boolean  
[P7_Replace_Invocation]^return invocation.getMethod (  ) .equals ( actual.getMock (  )  ) && hasSameMethod ( actual ) &&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^53^54^55^^^52^56^return invocation.getMock (  ) .equals ( actual.getMock (  )  ) && hasSameMethod ( actual ) &&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^[CLASS] InvocationMatcher  [METHOD] matches [RETURN_TYPE] boolean   Invocation actual [VARIABLES] Invocation  actual  invocation  List  matchers  boolean  
[P7_Replace_Invocation]^return invocation.getMock (  ) .equals ( actual.getMock (  )  ) && hasSimilarMethod ( actual ) &&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^53^54^55^^^52^56^return invocation.getMock (  ) .equals ( actual.getMock (  )  ) && hasSameMethod ( actual ) &&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^[CLASS] InvocationMatcher  [METHOD] matches [RETURN_TYPE] boolean   Invocation actual [VARIABLES] Invocation  actual  invocation  List  matchers  boolean  
[P7_Replace_Invocation]^return invocation.getMock (  ) .equals ( actual.getMock (  )  ) && hasSameMethod ( actual ) &&  ( safelyArgumentsMatch ( actual.getArguments (  )  )  ) ;^53^54^55^^^52^56^return invocation.getMock (  ) .equals ( actual.getMock (  )  ) && hasSameMethod ( actual ) &&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^[CLASS] InvocationMatcher  [METHOD] matches [RETURN_TYPE] boolean   Invocation actual [VARIABLES] Invocation  actual  invocation  List  matchers  boolean  
[P7_Replace_Invocation]^return invocation.getMock (  ) .equals ( actual.getMock (  )  ) && hasSameMethod ( actual ) &&  ( argumentsMatch ( actual .getMethod (  )   )  ) ;^53^54^55^^^52^56^return invocation.getMock (  ) .equals ( actual.getMock (  )  ) && hasSameMethod ( actual ) &&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^[CLASS] InvocationMatcher  [METHOD] matches [RETURN_TYPE] boolean   Invocation actual [VARIABLES] Invocation  actual  invocation  List  matchers  boolean  
[P7_Replace_Invocation]^return invocation .getLocation (  )  .equals ( actual^53^54^55^^^52^56^return invocation.getMock (  ) .equals ( actual.getMock (  )  ) && hasSameMethod ( actual ) &&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^[CLASS] InvocationMatcher  [METHOD] matches [RETURN_TYPE] boolean   Invocation actual [VARIABLES] Invocation  actual  invocation  List  matchers  boolean  
[P14_Delete_Statement]^^53^54^55^^^52^56^return invocation.getMock (  ) .equals ( actual.getMock (  )  ) && hasSameMethod ( actual ) &&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^[CLASS] InvocationMatcher  [METHOD] matches [RETURN_TYPE] boolean   Invocation actual [VARIABLES] Invocation  actual  invocation  List  matchers  boolean  
[P5_Replace_Variable]^return actual.getMock (  ) .equals ( actual.getMock (  )  ) && hasSameMethod ( actual ) &&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^53^54^55^^^52^56^return invocation.getMock (  ) .equals ( actual.getMock (  )  ) && hasSameMethod ( actual ) &&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^[CLASS] InvocationMatcher  [METHOD] matches [RETURN_TYPE] boolean   Invocation actual [VARIABLES] Invocation  actual  invocation  List  matchers  boolean  
[P5_Replace_Variable]^return invocation.getMock (  ) .equals ( invocation.getMock (  )  ) && hasSameMethod ( actual ) &&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^53^54^55^^^52^56^return invocation.getMock (  ) .equals ( actual.getMock (  )  ) && hasSameMethod ( actual ) &&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^[CLASS] InvocationMatcher  [METHOD] matches [RETURN_TYPE] boolean   Invocation actual [VARIABLES] Invocation  actual  invocation  List  matchers  boolean  
[P5_Replace_Variable]^&& hasSameMethod ( invocation ) &&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^54^55^^^^52^56^&& hasSameMethod ( actual ) &&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^[CLASS] InvocationMatcher  [METHOD] matches [RETURN_TYPE] boolean   Invocation actual [VARIABLES] Invocation  actual  invocation  List  matchers  boolean  
[P7_Replace_Invocation]^&& hasSimilarMethod ( actual ) &&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^54^55^^^^52^56^&& hasSameMethod ( actual ) &&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^[CLASS] InvocationMatcher  [METHOD] matches [RETURN_TYPE] boolean   Invocation actual [VARIABLES] Invocation  actual  invocation  List  matchers  boolean  
[P14_Delete_Statement]^^54^55^^^^52^56^&& hasSameMethod ( actual ) &&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^[CLASS] InvocationMatcher  [METHOD] matches [RETURN_TYPE] boolean   Invocation actual [VARIABLES] Invocation  actual  invocation  List  matchers  boolean  
[P11_Insert_Donor_Statement]^&&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;&& hasSameMethod ( actual ) &&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^54^55^^^^52^56^&& hasSameMethod ( actual ) &&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^[CLASS] InvocationMatcher  [METHOD] matches [RETURN_TYPE] boolean   Invocation actual [VARIABLES] Invocation  actual  invocation  List  matchers  boolean  
[P5_Replace_Variable]^&&  ( argumentsMatch ( invocation.getArguments (  )  )  ) ;^55^^^^^52^56^&&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^[CLASS] InvocationMatcher  [METHOD] matches [RETURN_TYPE] boolean   Invocation actual [VARIABLES] Invocation  actual  invocation  List  matchers  boolean  
[P7_Replace_Invocation]^&&  ( safelyArgumentsMatch ( actual.getArguments (  )  )  ) ;^55^^^^^52^56^&&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^[CLASS] InvocationMatcher  [METHOD] matches [RETURN_TYPE] boolean   Invocation actual [VARIABLES] Invocation  actual  invocation  List  matchers  boolean  
[P8_Replace_Mix]^&&  ( safelyArgumentsMatch ( invocation.getArguments (  )  )  ) ;^55^^^^^52^56^&&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^[CLASS] InvocationMatcher  [METHOD] matches [RETURN_TYPE] boolean   Invocation actual [VARIABLES] Invocation  actual  invocation  List  matchers  boolean  
[P14_Delete_Statement]^^55^^^^^52^56^&&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^[CLASS] InvocationMatcher  [METHOD] matches [RETURN_TYPE] boolean   Invocation actual [VARIABLES] Invocation  actual  invocation  List  matchers  boolean  
[P11_Insert_Donor_Statement]^return argumentsMatch ( actualArgs ) ;&&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^55^^^^^52^56^&&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^[CLASS] InvocationMatcher  [METHOD] matches [RETURN_TYPE] boolean   Invocation actual [VARIABLES] Invocation  actual  invocation  List  matchers  boolean  
[P11_Insert_Donor_Statement]^&& hasSameMethod ( actual ) &&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;&&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^55^^^^^52^56^&&  ( argumentsMatch ( actual.getArguments (  )  )  ) ;^[CLASS] InvocationMatcher  [METHOD] matches [RETURN_TYPE] boolean   Invocation actual [VARIABLES] Invocation  actual  invocation  List  matchers  boolean  
[P2_Replace_Operator]^if  ( actualArgs.length == matchers.size (  )  )  {^59^^^^^58^68^if  ( actualArgs.length != matchers.size (  )  )  {^[CLASS] InvocationMatcher  [METHOD] argumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  int  i  
[P3_Replace_Literal]^if  ( actualArgs.length != matchers.size() + 4  )  {^59^^^^^58^68^if  ( actualArgs.length != matchers.size (  )  )  {^[CLASS] InvocationMatcher  [METHOD] argumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  int  i  
[P5_Replace_Variable]^if  ( i != matchers.size (  )  )  {^59^^^^^58^68^if  ( actualArgs.length != matchers.size (  )  )  {^[CLASS] InvocationMatcher  [METHOD] argumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  int  i  
[P5_Replace_Variable]^if  ( actualArgs.length != null.size (  )  )  {^59^^^^^58^68^if  ( actualArgs.length != matchers.size (  )  )  {^[CLASS] InvocationMatcher  [METHOD] argumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  int  i  
[P5_Replace_Variable]^if  ( actualArgs.length.length != matchers.size (  )  )  {^59^^^^^58^68^if  ( actualArgs.length != matchers.size (  )  )  {^[CLASS] InvocationMatcher  [METHOD] argumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  int  i  
[P5_Replace_Variable]^if  ( actualArgs != matchers.size (  )  )  {^59^^^^^58^68^if  ( actualArgs.length != matchers.size (  )  )  {^[CLASS] InvocationMatcher  [METHOD] argumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  int  i  
[P5_Replace_Variable]^if  ( matchers != actualArgs.length.size (  )  )  {^59^^^^^58^68^if  ( actualArgs.length != matchers.size (  )  )  {^[CLASS] InvocationMatcher  [METHOD] argumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  int  i  
[P7_Replace_Invocation]^if  ( actualArgs.length != matchers.isEmpty (  )  )  {^59^^^^^58^68^if  ( actualArgs.length != matchers.size (  )  )  {^[CLASS] InvocationMatcher  [METHOD] argumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  int  i  
[P8_Replace_Mix]^if  ( i != matchers.isEmpty (  )  )  {^59^^^^^58^68^if  ( actualArgs.length != matchers.size (  )  )  {^[CLASS] InvocationMatcher  [METHOD] argumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  int  i  
[P15_Unwrap_Block]^return false;^59^60^61^^^58^68^if  ( actualArgs.length != matchers.size (  )  )  { return false; }^[CLASS] InvocationMatcher  [METHOD] argumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  int  i  
[P16_Remove_Block]^^59^60^61^^^58^68^if  ( actualArgs.length != matchers.size (  )  )  { return false; }^[CLASS] InvocationMatcher  [METHOD] argumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  int  i  
[P13_Insert_Block]^if  ( ! ( matchers.get ( i ) .matches ( actualArgs[i] )  )  )  {     return false; }^59^^^^^58^68^[Delete]^[CLASS] InvocationMatcher  [METHOD] argumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  int  i  
[P3_Replace_Literal]^return true;^60^^^^^58^68^return false;^[CLASS] InvocationMatcher  [METHOD] argumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  int  i  
[P3_Replace_Literal]^if  ( actualArgs.length != matchers.size() + 7  )  {^59^^^^^58^68^if  ( actualArgs.length != matchers.size (  )  )  {^[CLASS] InvocationMatcher  [METHOD] argumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  int  i  
[P5_Replace_Variable]^if  ( !matchers.get ( actualArgs ) .matches ( i[i] )  )  {^63^^^^^58^68^if  ( !matchers.get ( i ) .matches ( actualArgs[i] )  )  {^[CLASS] InvocationMatcher  [METHOD] argumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  int  i  
[P8_Replace_Mix]^if  ( !matchers .isEmpty (  )  .matches ( actualArgs[i] )  )  {^63^^^^^58^68^if  ( !matchers.get ( i ) .matches ( actualArgs[i] )  )  {^[CLASS] InvocationMatcher  [METHOD] argumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  int  i  
[P15_Unwrap_Block]^return false;^63^64^65^^^58^68^if  ( !matchers.get ( i ) .matches ( actualArgs[i] )  )  { return false; }^[CLASS] InvocationMatcher  [METHOD] argumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  int  i  
[P16_Remove_Block]^^63^64^65^^^58^68^if  ( !matchers.get ( i ) .matches ( actualArgs[i] )  )  { return false; }^[CLASS] InvocationMatcher  [METHOD] argumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  int  i  
[P13_Insert_Block]^if  (  ( actualArgs.length )  !=  ( matchers.size (  )  )  )  {     return false; }^63^^^^^58^68^[Delete]^[CLASS] InvocationMatcher  [METHOD] argumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  int  i  
[P3_Replace_Literal]^return true;^64^^^^^58^68^return false;^[CLASS] InvocationMatcher  [METHOD] argumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  int  i  
[P1_Replace_Type]^for  (  long  i = 0; i < actualArgs.length; i++ )  {^62^^^^^58^68^for  ( int i = 0; i < actualArgs.length; i++ )  {^[CLASS] InvocationMatcher  [METHOD] argumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i <= actualArgs.length; i++ )  {^62^^^^^58^68^for  ( int i = 0; i < actualArgs.length; i++ )  {^[CLASS] InvocationMatcher  [METHOD] argumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  int  i  
[P3_Replace_Literal]^for  ( int i = i; i < actualArgs.length; i++ )  {^62^^^^^58^68^for  ( int i = 0; i < actualArgs.length; i++ )  {^[CLASS] InvocationMatcher  [METHOD] argumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  int  i  
[P5_Replace_Variable]^for  ( actualArgs.lengthnt i = 0; i < i; i++ )  {^62^^^^^58^68^for  ( int i = 0; i < actualArgs.length; i++ )  {^[CLASS] InvocationMatcher  [METHOD] argumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  int  i  
[P5_Replace_Variable]^for  ( int i = 0; i < actualArgs.length.length; i++ )  {^62^^^^^58^68^for  ( int i = 0; i < actualArgs.length; i++ )  {^[CLASS] InvocationMatcher  [METHOD] argumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  int  i  
[P8_Replace_Mix]^if  ( matchers.get ( i ) .matches ( actualArgs[i] )  )  {^63^^^^^58^68^if  ( !matchers.get ( i ) .matches ( actualArgs[i] )  )  {^[CLASS] InvocationMatcher  [METHOD] argumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  int  i  
[P13_Insert_Block]^if  ( ! ( matchers.get ( i ) .matches ( actualArgs[i] )  )  )  {     return false; }^63^^^^^58^68^[Delete]^[CLASS] InvocationMatcher  [METHOD] argumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  int  i  
[P1_Replace_Type]^for  (  short  i = 0; i < actualArgs.length; i++ )  {^62^^^^^58^68^for  ( int i = 0; i < actualArgs.length; i++ )  {^[CLASS] InvocationMatcher  [METHOD] argumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  int  i  
[P3_Replace_Literal]^return false;^67^^^^^58^68^return true;^[CLASS] InvocationMatcher  [METHOD] argumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  int  i  
[P7_Replace_Invocation]^return safelyArgumentsMatch ( actualArgs ) ;^72^^^^^70^76^return argumentsMatch ( actualArgs ) ;^[CLASS] InvocationMatcher  [METHOD] safelyArgumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] Throwable  t  List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  
[P14_Delete_Statement]^^72^^^^^70^76^return argumentsMatch ( actualArgs ) ;^[CLASS] InvocationMatcher  [METHOD] safelyArgumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] Throwable  t  List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  
[P3_Replace_Literal]^return true;^74^^^^^70^76^return false;^[CLASS] InvocationMatcher  [METHOD] safelyArgumentsMatch [RETURN_TYPE] boolean   Object[] actualArgs [VARIABLES] Throwable  t  List  matchers  boolean  Invocation  actual  invocation  Object[]  actualArgs  
[P1_Replace_Type]^char wantedMethodName = getMethod (  ) .getName (  ) ;^83^^^^^82^97^String wantedMethodName = getMethod (  ) .getName (  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P7_Replace_Invocation]^String wantedMethodName = getInvocation (  ) .getName (  ) ;^83^^^^^82^97^String wantedMethodName = getMethod (  ) .getName (  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P11_Insert_Donor_Statement]^String currentMethodName = candidate.getMethod (  ) .getName (  ) ;String wantedMethodName = getMethod (  ) .getName (  ) ;^83^^^^^82^97^String wantedMethodName = getMethod (  ) .getName (  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P14_Delete_Statement]^^83^^^^^82^97^String wantedMethodName = getMethod (  ) .getName (  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P14_Delete_Statement]^^83^84^^^^82^97^String wantedMethodName = getMethod (  ) .getName (  ) ; String currentMethodName = candidate.getMethod (  ) .getName (  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P1_Replace_Type]^char currentMethodName = candidate.getMethod (  ) .getName (  ) ;^84^^^^^82^97^String currentMethodName = candidate.getMethod (  ) .getName (  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P5_Replace_Variable]^String currentMethodName = invocation.getMethod (  ) .getName (  ) ;^84^^^^^82^97^String currentMethodName = candidate.getMethod (  ) .getName (  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P7_Replace_Invocation]^String currentMethodName = candidate.getMethod (  ) .matches (  ) ;^84^^^^^82^97^String currentMethodName = candidate.getMethod (  ) .getName (  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P7_Replace_Invocation]^String currentMethodName = candidate .getLocation (  )  .getName (  ) ;^84^^^^^82^97^String currentMethodName = candidate.getMethod (  ) .getName (  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P8_Replace_Mix]^String currentMethodName = invocation.getMethod (  ) .matches (  ) ;^84^^^^^82^97^String currentMethodName = candidate.getMethod (  ) .getName (  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P11_Insert_Donor_Statement]^String wantedMethodName = getMethod (  ) .getName (  ) ;String currentMethodName = candidate.getMethod (  ) .getName (  ) ;^84^^^^^82^97^String currentMethodName = candidate.getMethod (  ) .getName (  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P14_Delete_Statement]^^84^^^^^82^97^String currentMethodName = candidate.getMethod (  ) .getName (  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P5_Replace_Variable]^final boolean methodNameEquals = currentMethodName.equals ( currentMethodName ) ;^86^^^^^82^97^final boolean methodNameEquals = wantedMethodName.equals ( currentMethodName ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P5_Replace_Variable]^final boolean methodNameEquals = currentMethodName.equals ( wantedMethodName ) ;^86^^^^^82^97^final boolean methodNameEquals = wantedMethodName.equals ( currentMethodName ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P7_Replace_Invocation]^final boolean methodNameEquals = wantedMethodName .equals (  )  ;^86^^^^^82^97^final boolean methodNameEquals = wantedMethodName.equals ( currentMethodName ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P11_Insert_Donor_Statement]^final boolean methodEquals = hasSameMethod ( candidate ) ;final boolean methodNameEquals = wantedMethodName.equals ( currentMethodName ) ;^86^^^^^82^97^final boolean methodNameEquals = wantedMethodName.equals ( currentMethodName ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P14_Delete_Statement]^^86^87^^^^82^97^final boolean methodNameEquals = wantedMethodName.equals ( currentMethodName ) ; final boolean isUnverified = !candidate.isVerified (  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P2_Replace_Operator]^final boolean mockIsTheSame = getInvocation (  ) .getMock (  )  >= candidate.getMock (  ) ;^88^^^^^82^97^final boolean mockIsTheSame = getInvocation (  ) .getMock (  )  == candidate.getMock (  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P5_Replace_Variable]^final boolean mockIsTheSame = getInvocation (  ) .getMock (  )  == invocation.getMock (  ) ;^88^^^^^82^97^final boolean mockIsTheSame = getInvocation (  ) .getMock (  )  == candidate.getMock (  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P7_Replace_Invocation]^final boolean mockIsTheSame = getInvocation (  ) .getMethod (  )  == candidate.getMock (  ) ;^88^^^^^82^97^final boolean mockIsTheSame = getInvocation (  ) .getMock (  )  == candidate.getMock (  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P7_Replace_Invocation]^final boolean mockIsTheSame = getMethod (  ) .getMock (  )  == candidate.getMock (  ) ;^88^^^^^82^97^final boolean mockIsTheSame = getInvocation (  ) .getMock (  )  == candidate.getMock (  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P8_Replace_Mix]^final boolean mockIsTheSame = getMethod (  ) .getMock (  )  == invocation.getMock (  ) ;^88^^^^^82^97^final boolean mockIsTheSame = getInvocation (  ) .getMock (  )  == candidate.getMock (  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P7_Replace_Invocation]^final boolean mockIsTheSame = getInvocation (  )  .getLocation (  )   == candidate^88^^^^^82^97^final boolean mockIsTheSame = getInvocation (  ) .getMock (  )  == candidate.getMock (  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P14_Delete_Statement]^^88^^^^^82^97^final boolean mockIsTheSame = getInvocation (  ) .getMock (  )  == candidate.getMock (  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P14_Delete_Statement]^^88^89^^^^82^97^final boolean mockIsTheSame = getInvocation (  ) .getMock (  )  == candidate.getMock (  ) ; final boolean methodEquals = hasSameMethod ( candidate ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P5_Replace_Variable]^final boolean methodEquals = hasSameMethod ( invocation ) ;^89^^^^^82^97^final boolean methodEquals = hasSameMethod ( candidate ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P7_Replace_Invocation]^final boolean methodEquals = hasSimilarMethod ( candidate ) ;^89^^^^^82^97^final boolean methodEquals = hasSameMethod ( candidate ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P11_Insert_Donor_Statement]^final boolean methodNameEquals = wantedMethodName.equals ( currentMethodName ) ;final boolean methodEquals = hasSameMethod ( candidate ) ;^89^^^^^82^97^final boolean methodEquals = hasSameMethod ( candidate ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P14_Delete_Statement]^^89^90^^^^82^97^final boolean methodEquals = hasSameMethod ( candidate ) ; final boolean overloadedButSameArgs = !methodEquals && safelyArgumentsMatch ( candidate.getArguments (  )  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P2_Replace_Operator]^final boolean overloadedButSameArgs = !methodEquals || safelyArgumentsMatch ( candidate.getArguments (  )  ) ;^90^^^^^82^97^final boolean overloadedButSameArgs = !methodEquals && safelyArgumentsMatch ( candidate.getArguments (  )  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P5_Replace_Variable]^final boolean overloadedButSameArgs = !mockIsTheSame && safelyArgumentsMatch ( candidate.getArguments (  )  ) ;^90^^^^^82^97^final boolean overloadedButSameArgs = !methodEquals && safelyArgumentsMatch ( candidate.getArguments (  )  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P5_Replace_Variable]^final boolean overloadedButSameArgs = !methodEquals && safelyArgumentsMatch ( invocation.getArguments (  )  ) ;^90^^^^^82^97^final boolean overloadedButSameArgs = !methodEquals && safelyArgumentsMatch ( candidate.getArguments (  )  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P7_Replace_Invocation]^final boolean overloadedButSameArgs = !methodEquals && argumentsMatch ( candidate.getArguments (  )  ) ;^90^^^^^82^97^final boolean overloadedButSameArgs = !methodEquals && safelyArgumentsMatch ( candidate.getArguments (  )  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P8_Replace_Mix]^final boolean overloadedButSameArgs = !methodEquals && argumentsMatch ( invocation.getArguments (  )  ) ;^90^^^^^82^97^final boolean overloadedButSameArgs = !methodEquals && safelyArgumentsMatch ( candidate.getArguments (  )  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P14_Delete_Statement]^^90^^^^^82^97^final boolean overloadedButSameArgs = !methodEquals && safelyArgumentsMatch ( candidate.getArguments (  )  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P2_Replace_Operator]^if  ( methodNameEquals || isUnverified && mockIsTheSame && !overloadedButSameArgs )  {^92^^^^^82^97^if  ( methodNameEquals && isUnverified && mockIsTheSame && !overloadedButSameArgs )  {^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P5_Replace_Variable]^if  ( mockIsTheSame && isUnverified && mockIsTheSame && !overloadedButSameArgs )  {^92^^^^^82^97^if  ( methodNameEquals && isUnverified && mockIsTheSame && !overloadedButSameArgs )  {^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P5_Replace_Variable]^if  ( methodNameEquals && mockIsTheSame && mockIsTheSame && !overloadedButSameArgs )  {^92^^^^^82^97^if  ( methodNameEquals && isUnverified && mockIsTheSame && !overloadedButSameArgs )  {^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P5_Replace_Variable]^if  ( methodNameEquals && isUnverified && overloadedButSameArgs && !overloadedButSameArgs )  {^92^^^^^82^97^if  ( methodNameEquals && isUnverified && mockIsTheSame && !overloadedButSameArgs )  {^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P5_Replace_Variable]^if  ( methodNameEquals && isUnverified && mockIsTheSame && !mockIsTheSame )  {^92^^^^^82^97^if  ( methodNameEquals && isUnverified && mockIsTheSame && !overloadedButSameArgs )  {^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P5_Replace_Variable]^if  ( methodNameEquals && mockIsTheSame && isUnverified && !overloadedButSameArgs )  {^92^^^^^82^97^if  ( methodNameEquals && isUnverified && mockIsTheSame && !overloadedButSameArgs )  {^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P6_Replace_Expression]^if  ( methodNameEquals ) {^92^^^^^82^97^if  ( methodNameEquals && isUnverified && mockIsTheSame && !overloadedButSameArgs )  {^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P6_Replace_Expression]^if  (  isUnverified && mockIsTheSame && !overloadedButSameArgs )  {^92^^^^^82^97^if  ( methodNameEquals && isUnverified && mockIsTheSame && !overloadedButSameArgs )  {^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P6_Replace_Expression]^if  ( (methodNameEquals && isUnverified && mockIsTheSame) )  {^92^^^^^82^97^if  ( methodNameEquals && isUnverified && mockIsTheSame && !overloadedButSameArgs )  {^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P6_Replace_Expression]^if  ( (methodNameEquals && isUnverified) )  {^92^^^^^82^97^if  ( methodNameEquals && isUnverified && mockIsTheSame && !overloadedButSameArgs )  {^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P8_Replace_Mix]^if  ( methodNameEquals && overloadedButSameArgs && mockIsTheSame && !overloadedButSameArgs )  {^92^^^^^82^97^if  ( methodNameEquals && isUnverified && mockIsTheSame && !overloadedButSameArgs )  {^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P15_Unwrap_Block]^return true;^92^93^94^^^82^97^if  ( methodNameEquals && isUnverified && mockIsTheSame && !overloadedButSameArgs )  { return true; }^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P16_Remove_Block]^^92^93^94^^^82^97^if  ( methodNameEquals && isUnverified && mockIsTheSame && !overloadedButSameArgs )  { return true; }^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P3_Replace_Literal]^return false;^93^^^^^82^97^return true;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P3_Replace_Literal]^return true;^96^^^^^82^97^return false;^[CLASS] InvocationMatcher  [METHOD] hasSimilarMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] List  matchers  String  currentMethodName  wantedMethodName  boolean  isUnverified  methodEquals  methodNameEquals  mockIsTheSame  overloadedButSameArgs  Invocation  actual  candidate  invocation  
[P5_Replace_Variable]^return invocation.getMethod (  ) .equals ( actual.getMethod (  )  ) ;^100^^^^^99^101^return invocation.getMethod (  ) .equals ( candidate.getMethod (  )  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSameMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] Invocation  actual  candidate  invocation  List  matchers  boolean  
[P5_Replace_Variable]^return actual.getMethod (  ) .equals ( candidate.getMethod (  )  ) ;^100^^^^^99^101^return invocation.getMethod (  ) .equals ( candidate.getMethod (  )  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSameMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] Invocation  actual  candidate  invocation  List  matchers  boolean  
[P5_Replace_Variable]^return candidate.getMethod (  ) .equals ( invocation.getMethod (  )  ) ;^100^^^^^99^101^return invocation.getMethod (  ) .equals ( candidate.getMethod (  )  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSameMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] Invocation  actual  candidate  invocation  List  matchers  boolean  
[P7_Replace_Invocation]^return invocation.getMethod (  ) .matches ( candidate.getMethod (  )  ) ;^100^^^^^99^101^return invocation.getMethod (  ) .equals ( candidate.getMethod (  )  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSameMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] Invocation  actual  candidate  invocation  List  matchers  boolean  
[P7_Replace_Invocation]^return invocation.getMock (  ) .equals ( candidate.getMethod (  )  ) ;^100^^^^^99^101^return invocation.getMethod (  ) .equals ( candidate.getMethod (  )  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSameMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] Invocation  actual  candidate  invocation  List  matchers  boolean  
[P7_Replace_Invocation]^return invocation .getLocation (  )  .equals ( candidate^100^^^^^99^101^return invocation.getMethod (  ) .equals ( candidate.getMethod (  )  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSameMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] Invocation  actual  candidate  invocation  List  matchers  boolean  
[P7_Replace_Invocation]^return invocation.getMethod (  )  .getName (  )  ;^100^^^^^99^101^return invocation.getMethod (  ) .equals ( candidate.getMethod (  )  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSameMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] Invocation  actual  candidate  invocation  List  matchers  boolean  
[P14_Delete_Statement]^^100^^^^^99^101^return invocation.getMethod (  ) .equals ( candidate.getMethod (  )  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSameMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] Invocation  actual  candidate  invocation  List  matchers  boolean  
[P5_Replace_Variable]^return candidate.getMethod (  ) .equals ( candidate.getMethod (  )  ) ;^100^^^^^99^101^return invocation.getMethod (  ) .equals ( candidate.getMethod (  )  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSameMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] Invocation  actual  candidate  invocation  List  matchers  boolean  
[P5_Replace_Variable]^return invocation.getMethod (  ) .equals ( invocation.getMethod (  )  ) ;^100^^^^^99^101^return invocation.getMethod (  ) .equals ( candidate.getMethod (  )  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSameMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] Invocation  actual  candidate  invocation  List  matchers  boolean  
[P8_Replace_Mix]^return invocation .getLocation (  )  .equals ( invocation^100^^^^^99^101^return invocation.getMethod (  ) .equals ( candidate.getMethod (  )  ) ;^[CLASS] InvocationMatcher  [METHOD] hasSameMethod [RETURN_TYPE] boolean   Invocation candidate [VARIABLES] Invocation  actual  candidate  invocation  List  matchers  boolean  
[P5_Replace_Variable]^return candidate.getLocation (  ) ;^104^^^^^103^105^return invocation.getLocation (  ) ;^[CLASS] InvocationMatcher  [METHOD] getLocation [RETURN_TYPE] Location   [VARIABLES] Invocation  actual  candidate  invocation  List  matchers  boolean  
[P7_Replace_Invocation]^return invocation.getMethod (  ) ;^104^^^^^103^105^return invocation.getLocation (  ) ;^[CLASS] InvocationMatcher  [METHOD] getLocation [RETURN_TYPE] Location   [VARIABLES] Invocation  actual  candidate  invocation  List  matchers  boolean  
[P8_Replace_Mix]^return candidate.getMethod (  ) ;^104^^^^^103^105^return invocation.getLocation (  ) ;^[CLASS] InvocationMatcher  [METHOD] getLocation [RETURN_TYPE] Location   [VARIABLES] Invocation  actual  candidate  invocation  List  matchers  boolean  
[P14_Delete_Statement]^^104^^^^^103^105^return invocation.getLocation (  ) ;^[CLASS] InvocationMatcher  [METHOD] getLocation [RETURN_TYPE] Location   [VARIABLES] Invocation  actual  candidate  invocation  List  matchers  boolean  
[P5_Replace_Variable]^return candidate.toString ( matchers, printSettings ) ;^108^^^^^107^109^return invocation.toString ( matchers, printSettings ) ;^[CLASS] InvocationMatcher  [METHOD] toString [RETURN_TYPE] String   PrintSettings printSettings [VARIABLES] PrintSettings  printSettings  List  matchers  boolean  Invocation  actual  candidate  invocation  
[P5_Replace_Variable]^return invocation.toString ( matchers ) ;^108^^^^^107^109^return invocation.toString ( matchers, printSettings ) ;^[CLASS] InvocationMatcher  [METHOD] toString [RETURN_TYPE] String   PrintSettings printSettings [VARIABLES] PrintSettings  printSettings  List  matchers  boolean  Invocation  actual  candidate  invocation  
[P5_Replace_Variable]^return invocation.toString (  printSettings ) ;^108^^^^^107^109^return invocation.toString ( matchers, printSettings ) ;^[CLASS] InvocationMatcher  [METHOD] toString [RETURN_TYPE] String   PrintSettings printSettings [VARIABLES] PrintSettings  printSettings  List  matchers  boolean  Invocation  actual  candidate  invocation  
[P5_Replace_Variable]^return invocation.toString ( printSettings, matchers ) ;^108^^^^^107^109^return invocation.toString ( matchers, printSettings ) ;^[CLASS] InvocationMatcher  [METHOD] toString [RETURN_TYPE] String   PrintSettings printSettings [VARIABLES] PrintSettings  printSettings  List  matchers  boolean  Invocation  actual  candidate  invocation  
[P5_Replace_Variable]^return printSettings.toString ( matchers, invocation ) ;^108^^^^^107^109^return invocation.toString ( matchers, printSettings ) ;^[CLASS] InvocationMatcher  [METHOD] toString [RETURN_TYPE] String   PrintSettings printSettings [VARIABLES] PrintSettings  printSettings  List  matchers  boolean  Invocation  actual  candidate  invocation  
[P8_Replace_Mix]^return invocation .toString ( this , printSettings )  ;^108^^^^^107^109^return invocation.toString ( matchers, printSettings ) ;^[CLASS] InvocationMatcher  [METHOD] toString [RETURN_TYPE] String   PrintSettings printSettings [VARIABLES] PrintSettings  printSettings  List  matchers  boolean  Invocation  actual  candidate  invocation  
[P5_Replace_Variable]^return matchers.toString ( invocation, printSettings ) ;^108^^^^^107^109^return invocation.toString ( matchers, printSettings ) ;^[CLASS] InvocationMatcher  [METHOD] toString [RETURN_TYPE] String   PrintSettings printSettings [VARIABLES] PrintSettings  printSettings  List  matchers  boolean  Invocation  actual  candidate  invocation  
[P14_Delete_Statement]^^108^^^^^107^109^return invocation.toString ( matchers, printSettings ) ;^[CLASS] InvocationMatcher  [METHOD] toString [RETURN_TYPE] String   PrintSettings printSettings [VARIABLES] PrintSettings  printSettings  List  matchers  boolean  Invocation  actual  candidate  invocation  
