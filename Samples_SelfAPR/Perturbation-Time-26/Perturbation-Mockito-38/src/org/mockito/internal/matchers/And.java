[P8_Replace_Mix]^this.matchers =  null;^20^^^^^19^21^this.matchers = matchers;^[CLASS] And  [METHOD] <init> [RETURN_TYPE] List)   Matcher> matchers [VARIABLES] List  matchers  boolean  
[P7_Replace_Invocation]^if  ( !matcher .matches ( actual )   )  {^25^^^^^23^30^if  ( !matcher.matches ( actual )  )  {^[CLASS] And  [METHOD] matches [RETURN_TYPE] boolean   Object actual [VARIABLES] List  matchers  Object  actual  boolean  Matcher  matcher  
[P15_Unwrap_Block]^return false;^25^26^27^^^23^30^if  ( !matcher.matches ( actual )  )  { return false; }^[CLASS] And  [METHOD] matches [RETURN_TYPE] boolean   Object actual [VARIABLES] List  matchers  Object  actual  boolean  Matcher  matcher  
[P16_Remove_Block]^^25^26^27^^^23^30^if  ( !matcher.matches ( actual )  )  { return false; }^[CLASS] And  [METHOD] matches [RETURN_TYPE] boolean   Object actual [VARIABLES] List  matchers  Object  actual  boolean  Matcher  matcher  
[P3_Replace_Literal]^return true;^26^^^^^23^30^return false;^[CLASS] And  [METHOD] matches [RETURN_TYPE] boolean   Object actual [VARIABLES] List  matchers  Object  actual  boolean  Matcher  matcher  
[P3_Replace_Literal]^return false;^29^^^^^23^30^return true;^[CLASS] And  [METHOD] matches [RETURN_TYPE] boolean   Object actual [VARIABLES] List  matchers  Object  actual  boolean  Matcher  matcher  
[P14_Delete_Statement]^^33^^^^^32^41^description.appendText ( "and ( " ) ;^[CLASS] And  [METHOD] describeTo [RETURN_TYPE] void   Description description [VARIABLES] Iterator  it  List  matchers  Description  description  boolean  
[P11_Insert_Donor_Statement]^description.appendText ( ", " ) ;description.appendText ( "and ( " ) ;^33^^^^^32^41^description.appendText ( "and ( " ) ;^[CLASS] And  [METHOD] describeTo [RETURN_TYPE] void   Description description [VARIABLES] Iterator  it  List  matchers  Description  description  boolean  
[P11_Insert_Donor_Statement]^description.appendText ( " ) " ) ;description.appendText ( "and ( " ) ;^33^^^^^32^41^description.appendText ( "and ( " ) ;^[CLASS] And  [METHOD] describeTo [RETURN_TYPE] void   Description description [VARIABLES] Iterator  it  List  matchers  Description  description  boolean  
[P15_Unwrap_Block]^description.appendText(", ");^36^37^38^^^32^41^if  ( it.hasNext (  )  )  { description.appendText ( ", " ) ; }^[CLASS] And  [METHOD] describeTo [RETURN_TYPE] void   Description description [VARIABLES] Iterator  it  List  matchers  Description  description  boolean  
[P16_Remove_Block]^^36^37^38^^^32^41^if  ( it.hasNext (  )  )  { description.appendText ( ", " ) ; }^[CLASS] And  [METHOD] describeTo [RETURN_TYPE] void   Description description [VARIABLES] Iterator  it  List  matchers  Description  description  boolean  
[P14_Delete_Statement]^^37^^^^^32^41^description.appendText ( ", " ) ;^[CLASS] And  [METHOD] describeTo [RETURN_TYPE] void   Description description [VARIABLES] Iterator  it  List  matchers  Description  description  boolean  
[P13_Insert_Block]^if  ( it.hasNext (  )  )  {     description.appendText ( ", " ) ; }^37^^^^^32^41^[Delete]^[CLASS] And  [METHOD] describeTo [RETURN_TYPE] void   Description description [VARIABLES] Iterator  it  List  matchers  Description  description  boolean  
[P5_Replace_Variable]^for  ( Iterator<Matcher> it = 0.iterator (  ) ; it.hasNext (  ) ; )  {^34^^^^^32^41^for  ( Iterator<Matcher> it = matchers.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] And  [METHOD] describeTo [RETURN_TYPE] void   Description description [VARIABLES] Iterator  it  List  matchers  Description  description  boolean  
[P5_Replace_Variable]^for  ( Iterator<Matcher> matchers = it.iterator (  ) ; it.hasNext (  ) ; )  {^34^^^^^32^41^for  ( Iterator<Matcher> it = matchers.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] And  [METHOD] describeTo [RETURN_TYPE] void   Description description [VARIABLES] Iterator  it  List  matchers  Description  description  boolean  
[P8_Replace_Mix]^for  ( Iterator<Matcher> it = matchers.iterator (  ) ; it .next (  )  ; )  {^34^^^^^32^41^for  ( Iterator<Matcher> it = matchers.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] And  [METHOD] describeTo [RETURN_TYPE] void   Description description [VARIABLES] Iterator  it  List  matchers  Description  description  boolean  
[P8_Replace_Mix]^if  ( it .next (  )   )  {^36^^^^^32^41^if  ( it.hasNext (  )  )  {^[CLASS] And  [METHOD] describeTo [RETURN_TYPE] void   Description description [VARIABLES] Iterator  it  List  matchers  Description  description  boolean  
[P7_Replace_Invocation]^it .hasNext (  )  .describeTo ( description ) ;^35^^^^^32^41^it.next (  ) .describeTo ( description ) ;^[CLASS] And  [METHOD] describeTo [RETURN_TYPE] void   Description description [VARIABLES] Iterator  it  List  matchers  Description  description  boolean  
[P14_Delete_Statement]^^35^^^^^32^41^it.next (  ) .describeTo ( description ) ;^[CLASS] And  [METHOD] describeTo [RETURN_TYPE] void   Description description [VARIABLES] Iterator  it  List  matchers  Description  description  boolean  
[P3_Replace_Literal]^description.appendText ( " " ) ;^37^^^^^32^41^description.appendText ( ", " ) ;^[CLASS] And  [METHOD] describeTo [RETURN_TYPE] void   Description description [VARIABLES] Iterator  it  List  matchers  Description  description  boolean  
[P14_Delete_Statement]^^34^35^36^37^38^32^41^for  ( Iterator<Matcher> it = matchers.iterator (  ) ; it.hasNext (  ) ; )  { it.next (  ) .describeTo ( description ) ; if  ( it.hasNext (  )  )  { description.appendText ( ", " ) ; }^[CLASS] And  [METHOD] describeTo [RETURN_TYPE] void   Description description [VARIABLES] Iterator  it  List  matchers  Description  description  boolean  
[P14_Delete_Statement]^^40^^^^^32^41^description.appendText ( " ) " ) ;^[CLASS] And  [METHOD] describeTo [RETURN_TYPE] void   Description description [VARIABLES] Iterator  it  List  matchers  Description  description  boolean  
