[P3_Replace_Literal]^configClass =  ( Class )  Class.forName ( "rrg.mockito.configuration.MockitoConfiguration" ) ;^20^^^^^16^35^configClass =  ( Class )  Class.forName ( "org.mockito.configuration.MockitoConfiguration" ) ;^[CLASS] ClassPathLoader  [METHOD] loadConfiguration [RETURN_TYPE] IMockitoConfiguration   [VARIABLES] boolean  ClassCastException  e  Class  configClass  ClassNotFoundException  e  Exception  e  
[P7_Replace_Invocation]^configClass =  ( Class )  Class .newInstance (  )  ;^20^^^^^16^35^configClass =  ( Class )  Class.forName ( "org.mockito.configuration.MockitoConfiguration" ) ;^[CLASS] ClassPathLoader  [METHOD] loadConfiguration [RETURN_TYPE] IMockitoConfiguration   [VARIABLES] boolean  ClassCastException  e  Class  configClass  ClassNotFoundException  e  Exception  e  
[P8_Replace_Mix]^configClass ;^20^^^^^16^35^configClass =  ( Class )  Class.forName ( "org.mockito.configuration.MockitoConfiguration" ) ;^[CLASS] ClassPathLoader  [METHOD] loadConfiguration [RETURN_TYPE] IMockitoConfiguration   [VARIABLES] boolean  ClassCastException  e  Class  configClass  ClassNotFoundException  e  Exception  e  
[P3_Replace_Literal]^configClass =  ( Class )  Class.forName ( "o.configuration.Mocki" ) ;^20^^^^^16^35^configClass =  ( Class )  Class.forName ( "org.mockito.configuration.MockitoConfiguration" ) ;^[CLASS] ClassPathLoader  [METHOD] loadConfiguration [RETURN_TYPE] IMockitoConfiguration   [VARIABLES] boolean  ClassCastException  e  Class  configClass  ClassNotFoundException  e  Exception  e  
[P14_Delete_Statement]^^20^21^^23^24^16^35^configClass =  ( Class )  Class.forName ( "org.mockito.configuration.MockitoConfiguration" ) ; } catch  ( ClassNotFoundException e )  { return null; }^[CLASS] ClassPathLoader  [METHOD] loadConfiguration [RETURN_TYPE] IMockitoConfiguration   [VARIABLES] boolean  ClassCastException  e  Class  configClass  ClassNotFoundException  e  Exception  e  
[P3_Replace_Literal]^configClass =  ( Class )  Class.forName ( "org.mockito.configuration.MockitoConfigurationorg.mockito" ) ;^20^^^^^16^35^configClass =  ( Class )  Class.forName ( "org.mockito.configuration.MockitoConfiguration" ) ;^[CLASS] ClassPathLoader  [METHOD] loadConfiguration [RETURN_TYPE] IMockitoConfiguration   [VARIABLES] boolean  ClassCastException  e  Class  configClass  ClassNotFoundException  e  Exception  e  
[P8_Replace_Mix]^configClass  = null ;^20^^^^^16^35^configClass =  ( Class )  Class.forName ( "org.mockito.configuration.MockitoConfiguration" ) ;^[CLASS] ClassPathLoader  [METHOD] loadConfiguration [RETURN_TYPE] IMockitoConfiguration   [VARIABLES] boolean  ClassCastException  e  Class  configClass  ClassNotFoundException  e  Exception  e  
[P8_Replace_Mix]^return this;^23^^^^^16^35^return null;^[CLASS] ClassPathLoader  [METHOD] loadConfiguration [RETURN_TYPE] IMockitoConfiguration   [VARIABLES] boolean  ClassCastException  e  Class  configClass  ClassNotFoundException  e  Exception  e  
[P3_Replace_Literal]^configClass =  ( Class )  Class.forName ( "org.mockito.configurrg.mockito.configuration.MockitoConfiguration" ) ;^20^^^^^16^35^configClass =  ( Class )  Class.forName ( "org.mockito.configuration.MockitoConfiguration" ) ;^[CLASS] ClassPathLoader  [METHOD] loadConfiguration [RETURN_TYPE] IMockitoConfiguration   [VARIABLES] boolean  ClassCastException  e  Class  configClass  ClassNotFoundException  e  Exception  e  
[P14_Delete_Statement]^^27^^^^^16^35^return  ( IMockitoConfiguration )  configClass.newInstance (  ) ;^[CLASS] ClassPathLoader  [METHOD] loadConfiguration [RETURN_TYPE] IMockitoConfiguration   [VARIABLES] boolean  ClassCastException  e  Class  configClass  ClassNotFoundException  e  Exception  e  
[P3_Replace_Literal]^throw new MockitoConfigurationException ( "\n" + "MockitoConfiguration class must implement org.mockito.configuration.IMockitoConfiguration interface.nt org.mockito.configuration.IMocki", e ) ;^29^30^^^^16^35^throw new MockitoConfigurationException ( "\n" + "MockitoConfiguration class must implement org.mockito.configuration.IMockitoConfiguration interface.", e ) ;^[CLASS] ClassPathLoader  [METHOD] loadConfiguration [RETURN_TYPE] IMockitoConfiguration   [VARIABLES] boolean  ClassCastException  e  Class  configClass  ClassNotFoundException  e  Exception  e  
[P3_Replace_Literal]^throw new MockitoConfigurationException ( "\n" + "Unable to instantianable to instantianate org.mockito.configuration.MockitoConfiguration class. Does it have a safe, no-arg constructor?", e ) ;^32^33^^^^16^35^throw new MockitoConfigurationException ( "\n" + "Unable to instantianate org.mockito.configuration.MockitoConfiguration class. Does it have a safe, no-arg constructor?", e ) ;^[CLASS] ClassPathLoader  [METHOD] loadConfiguration [RETURN_TYPE] IMockitoConfiguration   [VARIABLES] boolean  ClassCastException  e  Class  configClass  ClassNotFoundException  e  Exception  e  
[P3_Replace_Literal]^throw new MockitoConfigurationException ( "" + "MockitoConfiguration class must implement org.mockito.configuration.IMockitoConfiguration interface.", e ) ;^29^30^^^^16^35^throw new MockitoConfigurationException ( "\n" + "MockitoConfiguration class must implement org.mockito.configuration.IMockitoConfiguration interface.", e ) ;^[CLASS] ClassPathLoader  [METHOD] loadConfiguration [RETURN_TYPE] IMockitoConfiguration   [VARIABLES] boolean  ClassCastException  e  Class  configClass  ClassNotFoundException  e  Exception  e  
[P3_Replace_Literal]^throw new MockitoConfigurationException ( "\n" + "toConfiguockitoConfiguration class must implement org.mockito.configuration.IMockitoConfiguration interface.", e ) ;^29^30^^^^16^35^throw new MockitoConfigurationException ( "\n" + "MockitoConfiguration class must implement org.mockito.configuration.IMockitoConfiguration interface.", e ) ;^[CLASS] ClassPathLoader  [METHOD] loadConfiguration [RETURN_TYPE] IMockitoConfiguration   [VARIABLES] boolean  ClassCastException  e  Class  configClass  ClassNotFoundException  e  Exception  e  
[P8_Replace_Mix]^throw new MockitoConfigurationException ( "\n" + "Unable to instantianate org.mockito.configuration.MockitoConfiguration class. Does it have a safe, no-arg constructor?", e ) ; ;^29^30^^^^16^35^throw new MockitoConfigurationException ( "\n" + "MockitoConfiguration class must implement org.mockito.configuration.IMockitoConfiguration interface.", e ) ;^[CLASS] ClassPathLoader  [METHOD] loadConfiguration [RETURN_TYPE] IMockitoConfiguration   [VARIABLES] boolean  ClassCastException  e  Class  configClass  ClassNotFoundException  e  Exception  e  
[P11_Insert_Donor_Statement]^throw new MockitoConfigurationException ( "\n" + "Unable to instantianate org.mockito.configuration.MockitoConfiguration class. Does it have a safe, no-arg constructor?", e ) ;throw new MockitoConfigurationException ( "\n" + "MockitoConfiguration class must implement org.mockito.configuration.IMockitoConfiguration interface.", e ) ;^29^30^^^^16^35^throw new MockitoConfigurationException ( "\n" + "MockitoConfiguration class must implement org.mockito.configuration.IMockitoConfiguration interface.", e ) ;^[CLASS] ClassPathLoader  [METHOD] loadConfiguration [RETURN_TYPE] IMockitoConfiguration   [VARIABLES] boolean  ClassCastException  e  Class  configClass  ClassNotFoundException  e  Exception  e  
[P3_Replace_Literal]^throw new MockitoConfigurationException ( "\n\" + "Unable to instantianate org.mockito.configuration.MockitoConfiguration class. Does it have a safe, no-arg constructor?", e ) ;^32^33^^^^16^35^throw new MockitoConfigurationException ( "\n" + "Unable to instantianate org.mockito.configuration.MockitoConfiguration class. Does it have a safe, no-arg constructor?", e ) ;^[CLASS] ClassPathLoader  [METHOD] loadConfiguration [RETURN_TYPE] IMockitoConfiguration   [VARIABLES] boolean  ClassCastException  e  Class  configClass  ClassNotFoundException  e  Exception  e  
[P3_Replace_Literal]^throw new MockitoConfigurationException ( "\n" + "nable to instanable to instantianate org.mockito.configuration.MockitoConfiguration class. Does it have a safe, no-arg constructor?", e ) ;^32^33^^^^16^35^throw new MockitoConfigurationException ( "\n" + "Unable to instantianate org.mockito.configuration.MockitoConfiguration class. Does it have a safe, no-arg constructor?", e ) ;^[CLASS] ClassPathLoader  [METHOD] loadConfiguration [RETURN_TYPE] IMockitoConfiguration   [VARIABLES] boolean  ClassCastException  e  Class  configClass  ClassNotFoundException  e  Exception  e  
[P11_Insert_Donor_Statement]^throw new MockitoConfigurationException ( "\n" + "MockitoConfiguration class must implement org.mockito.configuration.IMockitoConfiguration interface.", e ) ;throw new MockitoConfigurationException ( "\n" + "Unable to instantianate org.mockito.configuration.MockitoConfiguration class. Does it have a safe, no-arg constructor?", e ) ;^32^33^^^^16^35^throw new MockitoConfigurationException ( "\n" + "Unable to instantianate org.mockito.configuration.MockitoConfiguration class. Does it have a safe, no-arg constructor?", e ) ;^[CLASS] ClassPathLoader  [METHOD] loadConfiguration [RETURN_TYPE] IMockitoConfiguration   [VARIABLES] boolean  ClassCastException  e  Class  configClass  ClassNotFoundException  e  Exception  e  
