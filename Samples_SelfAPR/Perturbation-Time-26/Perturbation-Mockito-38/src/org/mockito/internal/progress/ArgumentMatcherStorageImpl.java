[P4_Replace_Constructor]^private Stack<LocalizedMatcher> matcherStack = private new LocalizedMatcher> ( matcherStack )  ;^24^^^^^19^29^private Stack<LocalizedMatcher> matcherStack = new Stack<LocalizedMatcher> (  ) ;^[CLASS] ArgumentMatcherStorageImpl   [VARIABLES] 
[P8_Replace_Mix]^private Stack<LocalizedMatcher> matcherStack  = null ;^24^^^^^19^29^private Stack<LocalizedMatcher> matcherStack = new Stack<LocalizedMatcher> (  ) ;^[CLASS] ArgumentMatcherStorageImpl   [VARIABLES] 
[P7_Replace_Invocation]^matcherStack .subList (  )  ;^30^^^^^29^32^matcherStack.push ( new LocalizedMatcher ( matcher )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportMatcher [RETURN_TYPE] HandyReturnValues   Matcher matcher [VARIABLES] Matcher  matcher  Stack  matcherStack  boolean  
[P14_Delete_Statement]^^30^31^^^^29^32^matcherStack.push ( new LocalizedMatcher ( matcher )  ) ; return new HandyReturnValues (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportMatcher [RETURN_TYPE] HandyReturnValues   Matcher matcher [VARIABLES] Matcher  matcher  Stack  matcherStack  boolean  
[P7_Replace_Invocation]^if  ( matcherStack.Stack (  )  )  {^38^^^^^37^45^if  ( matcherStack.isEmpty (  )  )  {^[CLASS] ArgumentMatcherStorageImpl  [METHOD] pullMatchers [RETURN_TYPE] List   [VARIABLES] List  matchers  Stack  matcherStack  boolean  
[P9_Replace_Statement]^if  ( !matcherStack.isEmpty (  )  )  {^38^^^^^37^45^if  ( matcherStack.isEmpty (  )  )  {^[CLASS] ArgumentMatcherStorageImpl  [METHOD] pullMatchers [RETURN_TYPE] List   [VARIABLES] List  matchers  Stack  matcherStack  boolean  
[P15_Unwrap_Block]^return java.util.Collections.emptyList();^38^39^40^^^37^45^if  ( matcherStack.isEmpty (  )  )  { return Collections.emptyList (  ) ; }^[CLASS] ArgumentMatcherStorageImpl  [METHOD] pullMatchers [RETURN_TYPE] List   [VARIABLES] List  matchers  Stack  matcherStack  boolean  
[P16_Remove_Block]^^38^39^40^^^37^45^if  ( matcherStack.isEmpty (  )  )  { return Collections.emptyList (  ) ; }^[CLASS] ArgumentMatcherStorageImpl  [METHOD] pullMatchers [RETURN_TYPE] List   [VARIABLES] List  matchers  Stack  matcherStack  boolean  
[P13_Insert_Block]^if  ( matcherStack.isEmpty (  )  )  {     return emptyList (  ) ; }^39^^^^^37^45^[Delete]^[CLASS] ArgumentMatcherStorageImpl  [METHOD] pullMatchers [RETURN_TYPE] List   [VARIABLES] List  matchers  Stack  matcherStack  boolean  
[P14_Delete_Statement]^^39^^^^^37^45^return Collections.emptyList (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] pullMatchers [RETURN_TYPE] List   [VARIABLES] List  matchers  Stack  matcherStack  boolean  
[P8_Replace_Mix]^if  ( matcherStack .lastElement (  )   )  {^38^^^^^37^45^if  ( matcherStack.isEmpty (  )  )  {^[CLASS] ArgumentMatcherStorageImpl  [METHOD] pullMatchers [RETURN_TYPE] List   [VARIABLES] List  matchers  Stack  matcherStack  boolean  
[P1_Replace_Type]^List<LocalizedMatcher> matchers = new  Set <LocalizedMatcher> ( matcherStack ) ;^42^^^^^37^45^List<LocalizedMatcher> matchers = new ArrayList<LocalizedMatcher> ( matcherStack ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] pullMatchers [RETURN_TYPE] List   [VARIABLES] List  matchers  Stack  matcherStack  boolean  
[P7_Replace_Invocation]^matcherStack.Stack (  ) ;^43^^^^^37^45^matcherStack.clear (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] pullMatchers [RETURN_TYPE] List   [VARIABLES] List  matchers  Stack  matcherStack  boolean  
[P7_Replace_Invocation]^matcherStack .lastElement (  )  ;^43^^^^^37^45^matcherStack.clear (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] pullMatchers [RETURN_TYPE] List   [VARIABLES] List  matchers  Stack  matcherStack  boolean  
[P14_Delete_Statement]^^43^44^^^^37^45^matcherStack.clear (  ) ; return  ( List )  matchers;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] pullMatchers [RETURN_TYPE] List   [VARIABLES] List  matchers  Stack  matcherStack  boolean  
[P11_Insert_Donor_Statement]^matcherStack.pop (  ) ;matcherStack.clear (  ) ;^43^^^^^37^45^matcherStack.clear (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] pullMatchers [RETURN_TYPE] List   [VARIABLES] List  matchers  Stack  matcherStack  boolean  
[P12_Insert_Condition]^if  ( !matcherStack.isEmpty (  )  )  { matcherStack.clear (  ) ; }^43^^^^^37^45^matcherStack.clear (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] pullMatchers [RETURN_TYPE] List   [VARIABLES] List  matchers  Stack  matcherStack  boolean  
[P12_Insert_Condition]^if  ( matcherStack.isEmpty (  )  )  { matcherStack.clear (  ) ; }^43^^^^^37^45^matcherStack.clear (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] pullMatchers [RETURN_TYPE] List   [VARIABLES] List  matchers  Stack  matcherStack  boolean  
[P1_Replace_Type]^return  (  Set  )  matchers;^44^^^^^37^45^return  ( List )  matchers;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] pullMatchers [RETURN_TYPE] List   [VARIABLES] List  matchers  Stack  matcherStack  boolean  
[P7_Replace_Invocation]^popLastArgumentMatchers ( !matcherStack.isEmpty (  ) , "No matchers found for And ( ? ) ." ) ;^51^^^^^50^55^assertState ( !matcherStack.isEmpty (  ) , "No matchers found for And ( ? ) ." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportAnd [RETURN_TYPE] HandyReturnValues   [VARIABLES] And  and  Stack  matcherStack  boolean  
[P7_Replace_Invocation]^assertState ( !matcherStack.Stack (  ) , "No matchers found for And ( ? ) ." ) ;^51^^^^^50^55^assertState ( !matcherStack.isEmpty (  ) , "No matchers found for And ( ? ) ." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportAnd [RETURN_TYPE] HandyReturnValues   [VARIABLES] And  and  Stack  matcherStack  boolean  
[P7_Replace_Invocation]^assertState ( !matcherStack .lastElement (  )  , "No matchers found for And ( ? ) ." ) ;^51^^^^^50^55^assertState ( !matcherStack.isEmpty (  ) , "No matchers found for And ( ? ) ." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportAnd [RETURN_TYPE] HandyReturnValues   [VARIABLES] And  and  Stack  matcherStack  boolean  
[P14_Delete_Statement]^^51^52^53^54^55^50^55^assertState ( !matcherStack.isEmpty (  ) , "No matchers found for And ( ? ) ." ) ; And and = new And ( popLastArgumentMatchers ( 2 )  ) ; matcherStack.push ( new LocalizedMatcher ( and )  ) ; return new HandyReturnValues (  ) ; }^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportAnd [RETURN_TYPE] HandyReturnValues   [VARIABLES] And  and  Stack  matcherStack  boolean  
[P11_Insert_Donor_Statement]^assertState ( !matcherStack.isEmpty (  ) , "No matchers found for Not ( ? ) ." ) ;assertState ( !matcherStack.isEmpty (  ) , "No matchers found for And ( ? ) ." ) ;^51^^^^^50^55^assertState ( !matcherStack.isEmpty (  ) , "No matchers found for And ( ? ) ." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportAnd [RETURN_TYPE] HandyReturnValues   [VARIABLES] And  and  Stack  matcherStack  boolean  
[P11_Insert_Donor_Statement]^assertState ( !matcherStack.isEmpty (  ) , "No matchers found." ) ;assertState ( !matcherStack.isEmpty (  ) , "No matchers found for And ( ? ) ." ) ;^51^^^^^50^55^assertState ( !matcherStack.isEmpty (  ) , "No matchers found for And ( ? ) ." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportAnd [RETURN_TYPE] HandyReturnValues   [VARIABLES] And  and  Stack  matcherStack  boolean  
[P3_Replace_Literal]^And and = new And ( popLastArgumentMatchers ( -3 )  ) ;^52^^^^^50^55^And and = new And ( popLastArgumentMatchers ( 2 )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportAnd [RETURN_TYPE] HandyReturnValues   [VARIABLES] And  and  Stack  matcherStack  boolean  
[P7_Replace_Invocation]^And and = new And ( reportMatcher ( 2 )  ) ;^52^^^^^50^55^And and = new And ( popLastArgumentMatchers ( 2 )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportAnd [RETURN_TYPE] HandyReturnValues   [VARIABLES] And  and  Stack  matcherStack  boolean  
[P3_Replace_Literal]^And and = new And ( popLastArgumentMatchers ( 7 )  ) ;^52^^^^^50^55^And and = new And ( popLastArgumentMatchers ( 2 )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportAnd [RETURN_TYPE] HandyReturnValues   [VARIABLES] And  and  Stack  matcherStack  boolean  
[P11_Insert_Donor_Statement]^Or or = new Or ( popLastArgumentMatchers ( 2 )  ) ;And and = new And ( popLastArgumentMatchers ( 2 )  ) ;^52^^^^^50^55^And and = new And ( popLastArgumentMatchers ( 2 )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportAnd [RETURN_TYPE] HandyReturnValues   [VARIABLES] And  and  Stack  matcherStack  boolean  
[P11_Insert_Donor_Statement]^Not not = new Not ( popLastArgumentMatchers ( 1 ) .get ( 0 )  ) ;And and = new And ( popLastArgumentMatchers ( 2 )  ) ;^52^^^^^50^55^And and = new And ( popLastArgumentMatchers ( 2 )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportAnd [RETURN_TYPE] HandyReturnValues   [VARIABLES] And  and  Stack  matcherStack  boolean  
[P3_Replace_Literal]^And and = new And ( popLastArgumentMatchers ( 5 )  ) ;^52^^^^^50^55^And and = new And ( popLastArgumentMatchers ( 2 )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportAnd [RETURN_TYPE] HandyReturnValues   [VARIABLES] And  and  Stack  matcherStack  boolean  
[P14_Delete_Statement]^^52^^^^^50^55^And and = new And ( popLastArgumentMatchers ( 2 )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportAnd [RETURN_TYPE] HandyReturnValues   [VARIABLES] And  and  Stack  matcherStack  boolean  
[P7_Replace_Invocation]^matcherStack .subList (  )  ;^53^^^^^50^55^matcherStack.push ( new LocalizedMatcher ( and )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportAnd [RETURN_TYPE] HandyReturnValues   [VARIABLES] And  and  Stack  matcherStack  boolean  
[P14_Delete_Statement]^^53^^^^^50^55^matcherStack.push ( new LocalizedMatcher ( and )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportAnd [RETURN_TYPE] HandyReturnValues   [VARIABLES] And  and  Stack  matcherStack  boolean  
[P7_Replace_Invocation]^popLastArgumentMatchers ( !matcherStack.isEmpty (  ) , "No matchers found for Not ( ? ) ." ) ;^61^^^^^60^65^assertState ( !matcherStack.isEmpty (  ) , "No matchers found for Not ( ? ) ." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportNot [RETURN_TYPE] HandyReturnValues   [VARIABLES] Not  not  Stack  matcherStack  boolean  
[P7_Replace_Invocation]^assertState ( !matcherStack.Stack (  ) , "No matchers found for Not ( ? ) ." ) ;^61^^^^^60^65^assertState ( !matcherStack.isEmpty (  ) , "No matchers found for Not ( ? ) ." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportNot [RETURN_TYPE] HandyReturnValues   [VARIABLES] Not  not  Stack  matcherStack  boolean  
[P7_Replace_Invocation]^assertState ( !matcherStack .lastElement (  )  , "No matchers found for Not ( ? ) ." ) ;^61^^^^^60^65^assertState ( !matcherStack.isEmpty (  ) , "No matchers found for Not ( ? ) ." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportNot [RETURN_TYPE] HandyReturnValues   [VARIABLES] Not  not  Stack  matcherStack  boolean  
[P14_Delete_Statement]^^61^62^63^64^65^60^65^assertState ( !matcherStack.isEmpty (  ) , "No matchers found for Not ( ? ) ." ) ; Not not = new Not ( popLastArgumentMatchers ( 1 ) .get ( 0 )  ) ; matcherStack.push ( new LocalizedMatcher ( not )  ) ; return new HandyReturnValues (  ) ; }^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportNot [RETURN_TYPE] HandyReturnValues   [VARIABLES] Not  not  Stack  matcherStack  boolean  
[P11_Insert_Donor_Statement]^assertState ( !matcherStack.isEmpty (  ) , "No matchers found." ) ;assertState ( !matcherStack.isEmpty (  ) , "No matchers found for Not ( ? ) ." ) ;^61^^^^^60^65^assertState ( !matcherStack.isEmpty (  ) , "No matchers found for Not ( ? ) ." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportNot [RETURN_TYPE] HandyReturnValues   [VARIABLES] Not  not  Stack  matcherStack  boolean  
[P11_Insert_Donor_Statement]^assertState ( !matcherStack.isEmpty (  ) , "No matchers found for And ( ? ) ." ) ;assertState ( !matcherStack.isEmpty (  ) , "No matchers found for Not ( ? ) ." ) ;^61^^^^^60^65^assertState ( !matcherStack.isEmpty (  ) , "No matchers found for Not ( ? ) ." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportNot [RETURN_TYPE] HandyReturnValues   [VARIABLES] Not  not  Stack  matcherStack  boolean  
[P3_Replace_Literal]^Not not = new Not ( popLastArgumentMatchers ( -1 ) .get ( 0 )  ) ;^62^^^^^60^65^Not not = new Not ( popLastArgumentMatchers ( 1 ) .get ( 0 )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportNot [RETURN_TYPE] HandyReturnValues   [VARIABLES] Not  not  Stack  matcherStack  boolean  
[P3_Replace_Literal]^Not not = new Not ( popLastArgumentMatchers ( 1 ) .get ( -3 )  ) ;^62^^^^^60^65^Not not = new Not ( popLastArgumentMatchers ( 1 ) .get ( 0 )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportNot [RETURN_TYPE] HandyReturnValues   [VARIABLES] Not  not  Stack  matcherStack  boolean  
[P7_Replace_Invocation]^Not not = new Not ( reportMatcher ( 1 ) .get ( 0 )  ) ;^62^^^^^60^65^Not not = new Not ( popLastArgumentMatchers ( 1 ) .get ( 0 )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportNot [RETURN_TYPE] HandyReturnValues   [VARIABLES] Not  not  Stack  matcherStack  boolean  
[P3_Replace_Literal]^Not not = new Not ( popLastArgumentMatchers ( 2 ) .get ( 0 )  ) ;^62^^^^^60^65^Not not = new Not ( popLastArgumentMatchers ( 1 ) .get ( 0 )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportNot [RETURN_TYPE] HandyReturnValues   [VARIABLES] Not  not  Stack  matcherStack  boolean  
[P3_Replace_Literal]^Not not = new Not ( popLastArgumentMatchers ( 1 ) .get ( 3 )  ) ;^62^^^^^60^65^Not not = new Not ( popLastArgumentMatchers ( 1 ) .get ( 0 )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportNot [RETURN_TYPE] HandyReturnValues   [VARIABLES] Not  not  Stack  matcherStack  boolean  
[P11_Insert_Donor_Statement]^Or or = new Or ( popLastArgumentMatchers ( 2 )  ) ;Not not = new Not ( popLastArgumentMatchers ( 1 ) .get ( 0 )  ) ;^62^^^^^60^65^Not not = new Not ( popLastArgumentMatchers ( 1 ) .get ( 0 )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportNot [RETURN_TYPE] HandyReturnValues   [VARIABLES] Not  not  Stack  matcherStack  boolean  
[P11_Insert_Donor_Statement]^And and = new And ( popLastArgumentMatchers ( 2 )  ) ;Not not = new Not ( popLastArgumentMatchers ( 1 ) .get ( 0 )  ) ;^62^^^^^60^65^Not not = new Not ( popLastArgumentMatchers ( 1 ) .get ( 0 )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportNot [RETURN_TYPE] HandyReturnValues   [VARIABLES] Not  not  Stack  matcherStack  boolean  
[P3_Replace_Literal]^Not not = new Not ( popLastArgumentMatchers ( 1 ) .get ( -9 )  ) ;^62^^^^^60^65^Not not = new Not ( popLastArgumentMatchers ( 1 ) .get ( 0 )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportNot [RETURN_TYPE] HandyReturnValues   [VARIABLES] Not  not  Stack  matcherStack  boolean  
[P14_Delete_Statement]^^62^^^^^60^65^Not not = new Not ( popLastArgumentMatchers ( 1 ) .get ( 0 )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportNot [RETURN_TYPE] HandyReturnValues   [VARIABLES] Not  not  Stack  matcherStack  boolean  
[P3_Replace_Literal]^Not not = new Not ( popLastArgumentMatchers (  ) .get ( 0 )  ) ;^62^^^^^60^65^Not not = new Not ( popLastArgumentMatchers ( 1 ) .get ( 0 )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportNot [RETURN_TYPE] HandyReturnValues   [VARIABLES] Not  not  Stack  matcherStack  boolean  
[P8_Replace_Mix]^matcherStack .subList (  )  ;^63^^^^^60^65^matcherStack.push ( new LocalizedMatcher ( not )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportNot [RETURN_TYPE] HandyReturnValues   [VARIABLES] Not  not  Stack  matcherStack  boolean  
[P14_Delete_Statement]^^63^^^^^60^65^matcherStack.push ( new LocalizedMatcher ( not )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportNot [RETURN_TYPE] HandyReturnValues   [VARIABLES] Not  not  Stack  matcherStack  boolean  
[P3_Replace_Literal]^assertState ( !matcherStack.isEmpty (  ) , "No matchers found.foun" ) ;^68^^^^^67^77^assertState ( !matcherStack.isEmpty (  ) , "No matchers found." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P7_Replace_Invocation]^popLastArgumentMatchers ( !matcherStack.isEmpty (  ) , "No matchers found." ) ;^68^^^^^67^77^assertState ( !matcherStack.isEmpty (  ) , "No matchers found." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P7_Replace_Invocation]^assertState ( !matcherStack.Stack (  ) , "No matchers found." ) ;^68^^^^^67^77^assertState ( !matcherStack.isEmpty (  ) , "No matchers found." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P14_Delete_Statement]^^68^^^^^67^77^assertState ( !matcherStack.isEmpty (  ) , "No matchers found." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P11_Insert_Donor_Statement]^assertState ( !matcherStack.isEmpty (  ) , "No matchers found for Not ( ? ) ." ) ;assertState ( !matcherStack.isEmpty (  ) , "No matchers found." ) ;^68^^^^^67^77^assertState ( !matcherStack.isEmpty (  ) , "No matchers found." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P11_Insert_Donor_Statement]^assertState ( !matcherStack.isEmpty (  ) , "No matchers found for And ( ? ) ." ) ;assertState ( !matcherStack.isEmpty (  ) , "No matchers found." ) ;^68^^^^^67^77^assertState ( !matcherStack.isEmpty (  ) , "No matchers found." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P2_Replace_Operator]^assertState ( matcherStack.size (  )  == count, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^69^70^^^^67^77^assertState ( matcherStack.size (  )  >= count, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P2_Replace_Operator]^assertState ( matcherStack.size (  <<  )  >= count, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^69^70^^^^67^77^assertState ( matcherStack.size (  )  >= count, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P2_Replace_Operator]^assertState ( matcherStack.size (  )  >= count, ""  !=  count  !=  " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^69^70^^^^67^77^assertState ( matcherStack.size (  )  >= count, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P2_Replace_Operator]^assertState ( matcherStack.size (  )  >= count, ""  >>  count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^69^70^^^^67^77^assertState ( matcherStack.size (  )  >= count, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P3_Replace_Literal]^assertState ( matcherStack.size (  )  >= count, "" + count + "smatchers expected, " + matcherStack.size (  )  + " recorded." ) ;^69^70^^^^67^77^assertState ( matcherStack.size (  )  >= count, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P3_Replace_Literal]^assertState ( matcherStack.size (  )  >= count, "" + count + " matchers expected, " + matcherStack.size (  )  + "r" ) ;^69^70^^^^67^77^assertState ( matcherStack.size (  )  >= count, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P3_Replace_Literal]^assertState ( matcherStack.size() + 0  >= count, "" + count + " matchers expected, " + matcherStack.size() + 0  + " recorded." ) ;^69^70^^^^67^77^assertState ( matcherStack.size (  )  >= count, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P5_Replace_Variable]^assertState ( matcherStack.size (  )  >= i, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^69^70^^^^67^77^assertState ( matcherStack.size (  )  >= count, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P5_Replace_Variable]^assertState ( matcherStack.size (  )  >=  "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^69^70^^^^67^77^assertState ( matcherStack.size (  )  >= count, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P5_Replace_Variable]^assertState ( count.size (  )  >= matcherStack, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^69^70^^^^67^77^assertState ( matcherStack.size (  )  >= count, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P7_Replace_Invocation]^assertState ( matcherStack.Stack (  )  >= count, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^69^70^^^^67^77^assertState ( matcherStack.size (  )  >= count, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P7_Replace_Invocation]^assertState ( matcherStack .subList (  )   >= count, "" + count + " matchers expected, " + matcherStack^69^70^^^^67^77^assertState ( matcherStack.size (  )  >= count, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P8_Replace_Mix]^assertState ( matcherStack .subList (  )   >= i, "" + count + " matchers expected, " + matcherStack^69^70^^^^67^77^assertState ( matcherStack.size (  )  >= count, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P14_Delete_Statement]^^69^70^^^^67^77^assertState ( matcherStack.size (  )  >= count, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P11_Insert_Donor_Statement]^"" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;assertState ( matcherStack.size (  )  >= count, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^69^70^^^^67^77^assertState ( matcherStack.size (  )  >= count, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P3_Replace_Literal]^"" + count + " matchers expected, " + matcherStack.size() - 4  + " recorded." ) ;^70^^^^^67^77^"" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P7_Replace_Invocation]^"" + count + " matchers expected, " + matcherStack.Stack (  )  + " recorded." ) ;^70^^^^^67^77^"" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P14_Delete_Statement]^^70^71^^^^67^77^"" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ; List<Matcher> result = new LinkedList<Matcher> (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P11_Insert_Donor_Statement]^assertState ( matcherStack.size (  )  >= count, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;"" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^70^^^^^67^77^"" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P1_Replace_Type]^List<Matcher> result = new  List <Matcher> (  ) ;^71^^^^^67^77^List<Matcher> result = new LinkedList<Matcher> (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P2_Replace_Operator]^result.addAll ( matcherStack.subList ( matcherStack.size (  )   &  count, matcherStack.size (  )  )  ) ;^72^^^^^67^77^result.addAll ( matcherStack.subList ( matcherStack.size (  )  - count, matcherStack.size (  )  )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P3_Replace_Literal]^result.addAll ( matcherStack.subList ( matcherStack.size() + 6  - count, matcherStack.size() + 6  )  ) ;^72^^^^^67^77^result.addAll ( matcherStack.subList ( matcherStack.size (  )  - count, matcherStack.size (  )  )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P5_Replace_Variable]^result.addAll ( matcherStack.subList ( matcherStack.size (  )  - i, matcherStack.size (  )  )  ) ;^72^^^^^67^77^result.addAll ( matcherStack.subList ( matcherStack.size (  )  - count, matcherStack.size (  )  )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P5_Replace_Variable]^result.addAll ( null.subList ( matcherStack.size (  )  - count, matcherStack.size (  )  )  ) ;^72^^^^^67^77^result.addAll ( matcherStack.subList ( matcherStack.size (  )  - count, matcherStack.size (  )  )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P5_Replace_Variable]^result.addAll ( matcherStack.subList ( matcherStack.size (  )  -  matcherStack.size (  )  )  ) ;^72^^^^^67^77^result.addAll ( matcherStack.subList ( matcherStack.size (  )  - count, matcherStack.size (  )  )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P5_Replace_Variable]^result.addAll ( matcherStack.subList ( matcherStack.size (  )  - count.size (  )  )  ) ;^72^^^^^67^77^result.addAll ( matcherStack.subList ( matcherStack.size (  )  - count, matcherStack.size (  )  )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P5_Replace_Variable]^result.addAll ( count.subList ( matcherStack.size (  )  - matcherStack, matcherStack.size (  )  )  ) ;^72^^^^^67^77^result.addAll ( matcherStack.subList ( matcherStack.size (  )  - count, matcherStack.size (  )  )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P7_Replace_Invocation]^result.addAll ( matcherStack.push ( matcherStack.size (  )  - count, matcherStack.size (  )  )  ) ;^72^^^^^67^77^result.addAll ( matcherStack.subList ( matcherStack.size (  )  - count, matcherStack.size (  )  )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P7_Replace_Invocation]^result.addAll ( matcherStack.subList ( matcherStack.Stack (  )  - count, matcherStack.size (  )  )  ) ;^72^^^^^67^77^result.addAll ( matcherStack.subList ( matcherStack.size (  )  - count, matcherStack.size (  )  )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P14_Delete_Statement]^^72^^^^^67^77^result.addAll ( matcherStack.subList ( matcherStack.size (  )  - count, matcherStack.size (  )  )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P2_Replace_Operator]^result.addAll ( matcherStack.subList ( matcherStack.size (  )   ||  count, matcherStack.size (  )  )  ) ;^72^^^^^67^77^result.addAll ( matcherStack.subList ( matcherStack.size (  )  - count, matcherStack.size (  )  )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P3_Replace_Literal]^result.addAll ( matcherStack.subList ( matcherStack.size() + 5  - count, matcherStack.size() + 5  )  ) ;^72^^^^^67^77^result.addAll ( matcherStack.subList ( matcherStack.size (  )  - count, matcherStack.size (  )  )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P3_Replace_Literal]^result.addAll ( matcherStack.subList ( matcherStack.size() - 4  - count, matcherStack.size() - 4  )  ) ;^72^^^^^67^77^result.addAll ( matcherStack.subList ( matcherStack.size (  )  - count, matcherStack.size (  )  )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P3_Replace_Literal]^result.addAll ( matcherStack.subList ( matcherStack.size() + 9  - count, matcherStack.size() + 9  )  ) ;^72^^^^^67^77^result.addAll ( matcherStack.subList ( matcherStack.size (  )  - count, matcherStack.size (  )  )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P1_Replace_Type]^for  (  long  i = 0; i < count; i++ )  {^73^^^^^67^77^for  ( int i = 0; i < count; i++ )  {^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P2_Replace_Operator]^for  ( int i = 0; i > count; i++ )  {^73^^^^^67^77^for  ( int i = 0; i < count; i++ )  {^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P3_Replace_Literal]^for  ( int i = 6; i < count; i++ )  {^73^^^^^67^77^for  ( int i = 0; i < count; i++ )  {^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P5_Replace_Variable]^for  ( countnt i = 0; i < count; i++ )  {^73^^^^^67^77^for  ( int i = 0; i < count; i++ )  {^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P5_Replace_Variable]^for  ( countnt i = 0; i < i; i++ )  {^73^^^^^67^77^for  ( int i = 0; i < count; i++ )  {^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P7_Replace_Invocation]^matcherStack.size (  ) ;^74^^^^^67^77^matcherStack.pop (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P14_Delete_Statement]^^74^^^^^67^77^matcherStack.pop (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P11_Insert_Donor_Statement]^matcherStack.clear (  ) ;matcherStack.pop (  ) ;^74^^^^^67^77^matcherStack.pop (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P12_Insert_Condition]^if  ( !matcherStack.isEmpty (  )  )  { matcherStack.pop (  ) ; }^74^^^^^67^77^matcherStack.pop (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P12_Insert_Condition]^if  ( matcherStack.isEmpty (  )  )  { matcherStack.pop (  ) ; }^74^^^^^67^77^matcherStack.pop (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[P8_Replace_Mix]^if  ( toAssert )  {^80^^^^^79^84^if  ( !toAssert )  {^[CLASS] ArgumentMatcherStorageImpl  [METHOD] assertState [RETURN_TYPE] void   boolean toAssert String message [VARIABLES] Stack  matcherStack  boolean  toAssert  String  message  
[P15_Unwrap_Block]^matcherStack.clear(); throw new org.mockito.exceptions.misusing.InvalidUseOfMatchersException(message);^80^81^82^83^^79^84^if  ( !toAssert )  { matcherStack.clear (  ) ; throw new InvalidUseOfMatchersException  (" ")  ; }^[CLASS] ArgumentMatcherStorageImpl  [METHOD] assertState [RETURN_TYPE] void   boolean toAssert String message [VARIABLES] Stack  matcherStack  boolean  toAssert  String  message  
[P16_Remove_Block]^^80^81^82^83^^79^84^if  ( !toAssert )  { matcherStack.clear (  ) ; throw new InvalidUseOfMatchersException  (" ")  ; }^[CLASS] ArgumentMatcherStorageImpl  [METHOD] assertState [RETURN_TYPE] void   boolean toAssert String message [VARIABLES] Stack  matcherStack  boolean  toAssert  String  message  
[P8_Replace_Mix]^return ;^82^^^^^79^84^throw new InvalidUseOfMatchersException  (" ")  ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] assertState [RETURN_TYPE] void   boolean toAssert String message [VARIABLES] Stack  matcherStack  boolean  toAssert  String  message  
[P7_Replace_Invocation]^matcherStack.Stack (  ) ;^81^^^^^79^84^matcherStack.clear (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] assertState [RETURN_TYPE] void   boolean toAssert String message [VARIABLES] Stack  matcherStack  boolean  toAssert  String  message  
[P7_Replace_Invocation]^matcherStack .lastElement (  )  ;^81^^^^^79^84^matcherStack.clear (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] assertState [RETURN_TYPE] void   boolean toAssert String message [VARIABLES] Stack  matcherStack  boolean  toAssert  String  message  
[P14_Delete_Statement]^^81^^^^^79^84^matcherStack.clear (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] assertState [RETURN_TYPE] void   boolean toAssert String message [VARIABLES] Stack  matcherStack  boolean  toAssert  String  message  
[P11_Insert_Donor_Statement]^matcherStack.pop (  ) ;matcherStack.clear (  ) ;^81^^^^^79^84^matcherStack.clear (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] assertState [RETURN_TYPE] void   boolean toAssert String message [VARIABLES] Stack  matcherStack  boolean  toAssert  String  message  
[P12_Insert_Condition]^if  ( !matcherStack.isEmpty (  )  )  { matcherStack.clear (  ) ; }^81^^^^^79^84^matcherStack.clear (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] assertState [RETURN_TYPE] void   boolean toAssert String message [VARIABLES] Stack  matcherStack  boolean  toAssert  String  message  
[P12_Insert_Condition]^if  ( matcherStack.isEmpty (  )  )  { matcherStack.clear (  ) ; }^81^^^^^79^84^matcherStack.clear (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] assertState [RETURN_TYPE] void   boolean toAssert String message [VARIABLES] Stack  matcherStack  boolean  toAssert  String  message  
[P3_Replace_Literal]^assertState ( !matcherStack.isEmpty (  ) , "ers" ) ;^90^^^^^89^94^assertState ( !matcherStack.isEmpty (  ) , "No matchers found." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportOr [RETURN_TYPE] HandyReturnValues   [VARIABLES] Stack  matcherStack  Or  or  boolean  
[P7_Replace_Invocation]^popLastArgumentMatchers ( !matcherStack.isEmpty (  ) , "No matchers found." ) ;^90^^^^^89^94^assertState ( !matcherStack.isEmpty (  ) , "No matchers found." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportOr [RETURN_TYPE] HandyReturnValues   [VARIABLES] Stack  matcherStack  Or  or  boolean  
[P7_Replace_Invocation]^assertState ( !matcherStack.Stack (  ) , "No matchers found." ) ;^90^^^^^89^94^assertState ( !matcherStack.isEmpty (  ) , "No matchers found." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportOr [RETURN_TYPE] HandyReturnValues   [VARIABLES] Stack  matcherStack  Or  or  boolean  
[P14_Delete_Statement]^^90^^^^^89^94^assertState ( !matcherStack.isEmpty (  ) , "No matchers found." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportOr [RETURN_TYPE] HandyReturnValues   [VARIABLES] Stack  matcherStack  Or  or  boolean  
[P11_Insert_Donor_Statement]^assertState ( !matcherStack.isEmpty (  ) , "No matchers found for Not ( ? ) ." ) ;assertState ( !matcherStack.isEmpty (  ) , "No matchers found." ) ;^90^^^^^89^94^assertState ( !matcherStack.isEmpty (  ) , "No matchers found." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportOr [RETURN_TYPE] HandyReturnValues   [VARIABLES] Stack  matcherStack  Or  or  boolean  
[P11_Insert_Donor_Statement]^assertState ( !matcherStack.isEmpty (  ) , "No matchers found for And ( ? ) ." ) ;assertState ( !matcherStack.isEmpty (  ) , "No matchers found." ) ;^90^^^^^89^94^assertState ( !matcherStack.isEmpty (  ) , "No matchers found." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportOr [RETURN_TYPE] HandyReturnValues   [VARIABLES] Stack  matcherStack  Or  or  boolean  
[P14_Delete_Statement]^^90^91^^^^89^94^assertState ( !matcherStack.isEmpty (  ) , "No matchers found." ) ; Or or = new Or ( popLastArgumentMatchers ( 2 )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportOr [RETURN_TYPE] HandyReturnValues   [VARIABLES] Stack  matcherStack  Or  or  boolean  
[P3_Replace_Literal]^Or or = new Or ( popLastArgumentMatchers ( -6 )  ) ;^91^^^^^89^94^Or or = new Or ( popLastArgumentMatchers ( 2 )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportOr [RETURN_TYPE] HandyReturnValues   [VARIABLES] Stack  matcherStack  Or  or  boolean  
[P7_Replace_Invocation]^Or or = new Or ( reportMatcher ( 2 )  ) ;^91^^^^^89^94^Or or = new Or ( popLastArgumentMatchers ( 2 )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportOr [RETURN_TYPE] HandyReturnValues   [VARIABLES] Stack  matcherStack  Or  or  boolean  
[P3_Replace_Literal]^Or or = new Or ( popLastArgumentMatchers ( 4 )  ) ;^91^^^^^89^94^Or or = new Or ( popLastArgumentMatchers ( 2 )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportOr [RETURN_TYPE] HandyReturnValues   [VARIABLES] Stack  matcherStack  Or  or  boolean  
[P11_Insert_Donor_Statement]^And and = new And ( popLastArgumentMatchers ( 2 )  ) ;Or or = new Or ( popLastArgumentMatchers ( 2 )  ) ;^91^^^^^89^94^Or or = new Or ( popLastArgumentMatchers ( 2 )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportOr [RETURN_TYPE] HandyReturnValues   [VARIABLES] Stack  matcherStack  Or  or  boolean  
[P11_Insert_Donor_Statement]^Not not = new Not ( popLastArgumentMatchers ( 1 ) .get ( 0 )  ) ;Or or = new Or ( popLastArgumentMatchers ( 2 )  ) ;^91^^^^^89^94^Or or = new Or ( popLastArgumentMatchers ( 2 )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportOr [RETURN_TYPE] HandyReturnValues   [VARIABLES] Stack  matcherStack  Or  or  boolean  
[P14_Delete_Statement]^^91^92^^^^89^94^Or or = new Or ( popLastArgumentMatchers ( 2 )  ) ; matcherStack.push ( new LocalizedMatcher ( or )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportOr [RETURN_TYPE] HandyReturnValues   [VARIABLES] Stack  matcherStack  Or  or  boolean  
[P14_Delete_Statement]^^92^93^^^^89^94^matcherStack.push ( new LocalizedMatcher ( or )  ) ; return new HandyReturnValues (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportOr [RETURN_TYPE] HandyReturnValues   [VARIABLES] Stack  matcherStack  Or  or  boolean  
[P7_Replace_Invocation]^if  ( !matcherStack.Stack (  )  )  {^100^^^^^99^105^if  ( !matcherStack.isEmpty (  )  )  {^[CLASS] ArgumentMatcherStorageImpl  [METHOD] validateState [RETURN_TYPE] void   [VARIABLES] LocalizedMatcher  lastMatcher  Stack  matcherStack  boolean  
[P9_Replace_Statement]^if  ( matcherStack.isEmpty (  )  )  {^100^^^^^99^105^if  ( !matcherStack.isEmpty (  )  )  {^[CLASS] ArgumentMatcherStorageImpl  [METHOD] validateState [RETURN_TYPE] void   [VARIABLES] LocalizedMatcher  lastMatcher  Stack  matcherStack  boolean  
[P15_Unwrap_Block]^org.mockito.internal.matchers.LocalizedMatcher lastMatcher = matcherStack.lastElement(); matcherStack.clear(); new org.mockito.exceptions.Reporter().misplacedArgumentMatcher(lastMatcher.getLocation());^100^101^102^103^104^99^105^if  ( !matcherStack.isEmpty (  )  )  { LocalizedMatcher lastMatcher = matcherStack.lastElement (  ) ; matcherStack.clear (  ) ; new Reporter (  ) .misplacedArgumentMatcher ( lastMatcher.getLocation (  )  ) ; }^[CLASS] ArgumentMatcherStorageImpl  [METHOD] validateState [RETURN_TYPE] void   [VARIABLES] LocalizedMatcher  lastMatcher  Stack  matcherStack  boolean  
[P16_Remove_Block]^^100^101^102^103^104^99^105^if  ( !matcherStack.isEmpty (  )  )  { LocalizedMatcher lastMatcher = matcherStack.lastElement (  ) ; matcherStack.clear (  ) ; new Reporter (  ) .misplacedArgumentMatcher ( lastMatcher.getLocation (  )  ) ; }^[CLASS] ArgumentMatcherStorageImpl  [METHOD] validateState [RETURN_TYPE] void   [VARIABLES] LocalizedMatcher  lastMatcher  Stack  matcherStack  boolean  
[P7_Replace_Invocation]^LocalizedMatcher lastMatcher = matcherStack.isEmpty (  ) ;^101^^^^^99^105^LocalizedMatcher lastMatcher = matcherStack.lastElement (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] validateState [RETURN_TYPE] void   [VARIABLES] LocalizedMatcher  lastMatcher  Stack  matcherStack  boolean  
[P8_Replace_Mix]^LocalizedMatcher lastMatcher = 4.isEmpty (  ) ;^101^^^^^99^105^LocalizedMatcher lastMatcher = matcherStack.lastElement (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] validateState [RETURN_TYPE] void   [VARIABLES] LocalizedMatcher  lastMatcher  Stack  matcherStack  boolean  
[P14_Delete_Statement]^^101^102^^^^99^105^LocalizedMatcher lastMatcher = matcherStack.lastElement (  ) ; matcherStack.clear (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] validateState [RETURN_TYPE] void   [VARIABLES] LocalizedMatcher  lastMatcher  Stack  matcherStack  boolean  
[P7_Replace_Invocation]^matcherStack.Stack (  ) ;^102^^^^^99^105^matcherStack.clear (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] validateState [RETURN_TYPE] void   [VARIABLES] LocalizedMatcher  lastMatcher  Stack  matcherStack  boolean  
[P8_Replace_Mix]^matcherStack .lastElement (  )  ;^102^^^^^99^105^matcherStack.clear (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] validateState [RETURN_TYPE] void   [VARIABLES] LocalizedMatcher  lastMatcher  Stack  matcherStack  boolean  
[P14_Delete_Statement]^^102^^^^^99^105^matcherStack.clear (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] validateState [RETURN_TYPE] void   [VARIABLES] LocalizedMatcher  lastMatcher  Stack  matcherStack  boolean  
[P11_Insert_Donor_Statement]^matcherStack.pop (  ) ;matcherStack.clear (  ) ;^102^^^^^99^105^matcherStack.clear (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] validateState [RETURN_TYPE] void   [VARIABLES] LocalizedMatcher  lastMatcher  Stack  matcherStack  boolean  
[P12_Insert_Condition]^if  ( !matcherStack.isEmpty (  )  )  { matcherStack.clear (  ) ; }^102^^^^^99^105^matcherStack.clear (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] validateState [RETURN_TYPE] void   [VARIABLES] LocalizedMatcher  lastMatcher  Stack  matcherStack  boolean  
[P12_Insert_Condition]^if  ( matcherStack.isEmpty (  )  )  { matcherStack.clear (  ) ; }^102^^^^^99^105^matcherStack.clear (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] validateState [RETURN_TYPE] void   [VARIABLES] LocalizedMatcher  lastMatcher  Stack  matcherStack  boolean  
[P7_Replace_Invocation]^new Reporter (  )  .Reporter (  )  ;^103^^^^^99^105^new Reporter (  ) .misplacedArgumentMatcher ( lastMatcher.getLocation (  )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] validateState [RETURN_TYPE] void   [VARIABLES] LocalizedMatcher  lastMatcher  Stack  matcherStack  boolean  
[P14_Delete_Statement]^^103^^^^^99^105^new Reporter (  ) .misplacedArgumentMatcher ( lastMatcher.getLocation (  )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] validateState [RETURN_TYPE] void   [VARIABLES] LocalizedMatcher  lastMatcher  Stack  matcherStack  boolean  
[P7_Replace_Invocation]^if  ( !matcherStack .lastElement (  )   )  {^100^^^^^99^105^if  ( !matcherStack.isEmpty (  )  )  {^[CLASS] ArgumentMatcherStorageImpl  [METHOD] validateState [RETURN_TYPE] void   [VARIABLES] LocalizedMatcher  lastMatcher  Stack  matcherStack  boolean  
[P14_Delete_Statement]^^102^103^^^^99^105^matcherStack.clear (  ) ; new Reporter (  ) .misplacedArgumentMatcher ( lastMatcher.getLocation (  )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] validateState [RETURN_TYPE] void   [VARIABLES] LocalizedMatcher  lastMatcher  Stack  matcherStack  boolean  
[P7_Replace_Invocation]^matcherStack.Stack (  ) ;^111^^^^^110^112^matcherStack.clear (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] Stack  matcherStack  boolean  
[P8_Replace_Mix]^matcherStack .lastElement (  )  ;^111^^^^^110^112^matcherStack.clear (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] Stack  matcherStack  boolean  
[P14_Delete_Statement]^^111^^^^^110^112^matcherStack.clear (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] Stack  matcherStack  boolean  
[P11_Insert_Donor_Statement]^matcherStack.pop (  ) ;matcherStack.clear (  ) ;^111^^^^^110^112^matcherStack.clear (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] Stack  matcherStack  boolean  
[P12_Insert_Condition]^if  ( !matcherStack.isEmpty (  )  )  { matcherStack.clear (  ) ; }^111^^^^^110^112^matcherStack.clear (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] Stack  matcherStack  boolean  
[P12_Insert_Condition]^if  ( matcherStack.isEmpty (  )  )  { matcherStack.clear (  ) ; }^111^^^^^110^112^matcherStack.clear (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] Stack  matcherStack  boolean  
