[P1_Replace_Type]^private static final  short  MERGESORT_THRESHOLD = 12;^21^^^^^16^26^private static final int MERGESORT_THRESHOLD = 12;^[CLASS] SorterTemplate   [VARIABLES] 
[P8_Replace_Mix]^private static final  short  MERGESORT_THRESHOLD = 12 >> 3;^21^^^^^16^26^private static final int MERGESORT_THRESHOLD = 12;^[CLASS] SorterTemplate   [VARIABLES] 
[P12_Insert_Condition]^if  ( diff <= MERGESORT_THRESHOLD )  { private static final int MERGESORT_THRESHOLD = 12; }^21^^^^^16^26^private static final int MERGESORT_THRESHOLD = 12;^[CLASS] SorterTemplate   [VARIABLES] 
[P1_Replace_Type]^private static final  short  QUICKSORT_THRESHOLD = 7;^22^^^^^17^27^private static final int QUICKSORT_THRESHOLD = 7;^[CLASS] SorterTemplate   [VARIABLES] 
[P3_Replace_Literal]^private static final int QUICKSORT_THRESHOLD = 0;^22^^^^^17^27^private static final int QUICKSORT_THRESHOLD = 7;^[CLASS] SorterTemplate   [VARIABLES] 
[P8_Replace_Mix]^private static  int QUICKSORT_THRESHOLD = 7 / 3;^22^^^^^17^27^private static final int QUICKSORT_THRESHOLD = 7;^[CLASS] SorterTemplate   [VARIABLES] 
[P12_Insert_Condition]^if  ( diff <= QUICKSORT_THRESHOLD )  { private static final int QUICKSORT_THRESHOLD = 7; }^22^^^^^17^27^private static final int QUICKSORT_THRESHOLD = 7;^[CLASS] SorterTemplate   [VARIABLES] 
[P5_Replace_Variable]^quickSortHelper ( j, hi ) ;^28^^^^^27^30^quickSortHelper ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[P5_Replace_Variable]^quickSortHelper ( lo, j ) ;^28^^^^^27^30^quickSortHelper ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[P5_Replace_Variable]^quickSortHelper (  hi ) ;^28^^^^^27^30^quickSortHelper ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[P5_Replace_Variable]^quickSortHelper ( lo ) ;^28^^^^^27^30^quickSortHelper ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[P5_Replace_Variable]^quickSortHelper ( hi, lo ) ;^28^^^^^27^30^quickSortHelper ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[P7_Replace_Invocation]^quickSort ( lo, hi ) ;^28^^^^^27^30^quickSortHelper ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[P14_Delete_Statement]^^28^29^^^^27^30^quickSortHelper ( lo, hi ) ; insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[P11_Insert_Donor_Statement]^insertionSort ( lo, hi ) ;quickSortHelper ( lo, hi ) ;^28^^^^^27^30^quickSortHelper ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[P11_Insert_Donor_Statement]^quickSortHelper ( i + 1, hi ) ;quickSortHelper ( lo, hi ) ;^28^^^^^27^30^quickSortHelper ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[P11_Insert_Donor_Statement]^swap ( lo, hi ) ;quickSortHelper ( lo, hi ) ;^28^^^^^27^30^quickSortHelper ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[P11_Insert_Donor_Statement]^mergeSort ( lo, mid ) ;quickSortHelper ( lo, hi ) ;^28^^^^^27^30^quickSortHelper ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[P11_Insert_Donor_Statement]^quickSortHelper ( lo, j ) ;quickSortHelper ( lo, hi ) ;^28^^^^^27^30^quickSortHelper ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[P5_Replace_Variable]^insertionSort ( j, hi ) ;^29^^^^^27^30^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[P5_Replace_Variable]^insertionSort ( lo, j ) ;^29^^^^^27^30^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[P5_Replace_Variable]^insertionSort (  hi ) ;^29^^^^^27^30^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[P5_Replace_Variable]^insertionSort ( lo ) ;^29^^^^^27^30^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[P5_Replace_Variable]^insertionSort ( hi, lo ) ;^29^^^^^27^30^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[P7_Replace_Invocation]^mergeSort ( lo, hi ) ;^29^^^^^27^30^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[P14_Delete_Statement]^^29^^^^^27^30^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[P11_Insert_Donor_Statement]^swap ( lo, hi ) ;insertionSort ( lo, hi ) ;^29^^^^^27^30^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[P11_Insert_Donor_Statement]^mergeSort ( lo, mid ) ;insertionSort ( lo, hi ) ;^29^^^^^27^30^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[P11_Insert_Donor_Statement]^quickSortHelper ( lo, hi ) ;insertionSort ( lo, hi ) ;^29^^^^^27^30^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[P11_Insert_Donor_Statement]^quickSortHelper ( lo, j ) ;insertionSort ( lo, hi ) ;^29^^^^^27^30^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[P11_Insert_Donor_Statement]^mergeSort ( mid, hi ) ;insertionSort ( lo, hi ) ;^29^^^^^27^30^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[P2_Replace_Operator]^while  ( compare ( ++i, v )  > 0 )  {^53^^^^^38^68^while  ( compare ( ++i, v )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^while  ( compare ( ++i, v )  < 7 )  {^53^^^^^38^68^while  ( compare ( ++i, v )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^while  ( compare ( ++i, lo )  < 0 )  {^53^^^^^38^68^while  ( compare ( ++i, v )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^while  ( compare ( --j, v )  >= 0 )  {^56^^^^^41^71^while  ( compare ( --j, v )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^while  ( compare ( --j, v )  >  )  {^56^^^^^41^71^while  ( compare ( --j, v )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^while  ( compare ( --j, lo )  > 0 )  {^56^^^^^41^71^while  ( compare ( --j, v )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^while  ( compare ( --j, j )  > 0 )  {^56^^^^^41^71^while  ( compare ( --j, v )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^if  ( diff == QUICKSORT_THRESHOLD )  {^35^^^^^20^50^if  ( diff <= QUICKSORT_THRESHOLD )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( v <= QUICKSORT_THRESHOLD )  {^35^^^^^20^50^if  ( diff <= QUICKSORT_THRESHOLD )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( diff <= v )  {^35^^^^^20^50^if  ( diff <= QUICKSORT_THRESHOLD )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( QUICKSORT_THRESHOLD <= diff )  {^35^^^^^20^50^if  ( diff <= QUICKSORT_THRESHOLD )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^if  ( diff <= lo )  {^35^^^^^20^50^if  ( diff <= QUICKSORT_THRESHOLD )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P9_Replace_Statement]^if  ( diff <= MERGESORT_THRESHOLD )  {^35^^^^^20^50^if  ( diff <= QUICKSORT_THRESHOLD )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P15_Unwrap_Block]^break;^35^36^37^^^20^50^if  ( diff <= QUICKSORT_THRESHOLD )  { break; }^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P16_Remove_Block]^^35^36^37^^^20^50^if  ( diff <= QUICKSORT_THRESHOLD )  { break; }^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P13_Insert_Block]^if  ( diff <=  ( MERGESORT_THRESHOLD )  )  {     insertionSort ( lo, hi ) ;     return ; }^35^^^^^20^50^[Delete]^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^if  ( compare ( lo, i )  == 0 )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^if  ( compare ( lo, i )  > MERGESORT_THRESHOLD )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( compare ( v, i )  > 0 )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( compare ( lo, j )  > 0 )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( compare (  i )  > 0 )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( compare ( lo )  > 0 )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( compare ( i, lo )  > 0 )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P7_Replace_Invocation]^if  ( swap ( lo, i )  > 0 )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^if  ( compare ( lo, i )  > 0 / 1 )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P9_Replace_Statement]^if  ( compare ( pivot, lo )  < 0 )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P9_Replace_Statement]^if  ( compare ( lo, hi )  > 0 )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P9_Replace_Statement]^if  ( compare ( mid, val )  < 0 )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P9_Replace_Statement]^if  ( compare ( val, mid )  < 0 )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P9_Replace_Statement]^if  ( compare ( j - 1, j )  > 0 )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P9_Replace_Statement]^if  ( compare ( i, hi )  > 0 )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P15_Unwrap_Block]^swap(lo, i);^39^40^41^^^24^54^if  ( compare ( lo, i )  > 0 )  { swap ( lo, i ) ; }^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P16_Remove_Block]^^39^40^41^^^24^54^if  ( compare ( lo, i )  > 0 )  { swap ( lo, i ) ; }^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P13_Insert_Block]^if  (  ( compare ( lo, hi )  )  > 0 )  {     swap ( lo, hi ) ; }^39^^^^^24^54^[Delete]^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P13_Insert_Block]^if  (  ( compare (  ( j - 1 ) , j )  )  > 0 )  {     swap (  ( j - 1 ) , j ) ; }else {     break; }^39^^^^^24^54^[Delete]^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P13_Insert_Block]^if  (  ( compare ( i, hi )  )  > 0 )  {     swap ( i, hi ) ; }^39^^^^^24^54^[Delete]^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P13_Insert_Block]^if  (  ( compare ( pivot, lo )  )  < 0 )  {     swap ( pivot, lo ) ; }^39^^^^^24^54^[Delete]^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap ( v, i ) ;^40^^^^^25^55^swap ( lo, i ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap ( lo, j ) ;^40^^^^^25^55^swap ( lo, i ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap (  i ) ;^40^^^^^25^55^swap ( lo, i ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap ( lo ) ;^40^^^^^25^55^swap ( lo, i ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap ( i, lo ) ;^40^^^^^25^55^swap ( lo, i ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P7_Replace_Invocation]^compare ( lo, i ) ;^40^^^^^25^55^swap ( lo, i ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P14_Delete_Statement]^^40^^^^^25^55^swap ( lo, i ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( i, hi - 1 ) ;swap ( lo, i ) ;^40^^^^^25^55^swap ( lo, i ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lo, hi ) ;swap ( lo, i ) ;^40^^^^^25^55^swap ( lo, i ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( j - 1, j ) ;swap ( lo, i ) ;^40^^^^^25^55^swap ( lo, i ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^mergeSort ( lo, mid ) ;swap ( lo, i ) ;^40^^^^^25^55^swap ( lo, i ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( i, j ) ;swap ( lo, i ) ;^40^^^^^25^55^swap ( lo, i ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( i, hi ) ;swap ( lo, i ) ;^40^^^^^25^55^swap ( lo, i ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( pivot, lo ) ;swap ( lo, i ) ;^40^^^^^25^55^swap ( lo, i ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lot++, hit-- ) ;swap ( lo, i ) ;^40^^^^^25^55^swap ( lo, i ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^if  ( compare ( lo, hi )  >= 0 )  {^42^^^^^27^57^if  ( compare ( lo, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^if  ( compare ( lo, hi )  > -5 )  {^42^^^^^27^57^if  ( compare ( lo, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( compare (  hi )  > 0 )  {^42^^^^^27^57^if  ( compare ( lo, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( compare ( lo )  > 0 )  {^42^^^^^27^57^if  ( compare ( lo, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( compare ( hi, lo )  > 0 )  {^42^^^^^27^57^if  ( compare ( lo, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P7_Replace_Invocation]^if  ( swap ( lo, hi )  > 0 )  {^42^^^^^27^57^if  ( compare ( lo, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^if  ( swap ( lo, hi )  > 0 - 2 )  {^42^^^^^27^57^if  ( compare ( lo, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P9_Replace_Statement]^if  ( compare ( pivot, lo )  < 0 )  {^42^^^^^27^57^if  ( compare ( lo, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P9_Replace_Statement]^if  ( compare ( lo, i )  > 0 )  {^42^^^^^27^57^if  ( compare ( lo, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P9_Replace_Statement]^if  ( compare ( mid, val )  < 0 )  {^42^^^^^27^57^if  ( compare ( lo, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P9_Replace_Statement]^if  ( compare ( val, mid )  < 0 )  {^42^^^^^27^57^if  ( compare ( lo, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P9_Replace_Statement]^if  ( compare ( j - 1, j )  > 0 )  {^42^^^^^27^57^if  ( compare ( lo, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P9_Replace_Statement]^if  ( compare ( i, hi )  > 0 )  {^42^^^^^27^57^if  ( compare ( lo, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P15_Unwrap_Block]^swap(lo, hi);^42^43^44^^^27^57^if  ( compare ( lo, hi )  > 0 )  { swap ( lo, hi ) ; }^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P16_Remove_Block]^^42^43^44^^^27^57^if  ( compare ( lo, hi )  > 0 )  { swap ( lo, hi ) ; }^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P13_Insert_Block]^if  (  ( compare (  ( j - 1 ) , j )  )  > 0 )  {     swap (  ( j - 1 ) , j ) ; }else {     break; }^42^^^^^27^57^[Delete]^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P13_Insert_Block]^if  (  ( compare ( lo, i )  )  > 0 )  {     swap ( lo, i ) ; }^42^^^^^27^57^[Delete]^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P13_Insert_Block]^if  (  ( compare ( i, hi )  )  > 0 )  {     swap ( i, hi ) ; }^42^^^^^27^57^[Delete]^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P13_Insert_Block]^if  (  ( compare ( pivot, lo )  )  < 0 )  {     swap ( pivot, lo ) ; }^42^^^^^27^57^[Delete]^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap ( v, hi ) ;^43^^^^^28^58^swap ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap ( lo, v ) ;^43^^^^^28^58^swap ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap (  hi ) ;^43^^^^^28^58^swap ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap ( lo ) ;^43^^^^^28^58^swap ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap ( hi, lo ) ;^43^^^^^28^58^swap ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P7_Replace_Invocation]^compare ( lo, hi ) ;^43^^^^^28^58^swap ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^compare ( j, hi ) ;^43^^^^^28^58^swap ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P14_Delete_Statement]^^43^^^^^28^58^swap ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^insertionSort ( lo, hi ) ;swap ( lo, hi ) ;^43^^^^^28^58^swap ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( i, hi - 1 ) ;swap ( lo, hi ) ;^43^^^^^28^58^swap ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( j - 1, j ) ;swap ( lo, hi ) ;^43^^^^^28^58^swap ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^mergeSort ( lo, mid ) ;swap ( lo, hi ) ;^43^^^^^28^58^swap ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^quickSortHelper ( lo, hi ) ;swap ( lo, hi ) ;^43^^^^^28^58^swap ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( i, j ) ;swap ( lo, hi ) ;^43^^^^^28^58^swap ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lo, i ) ;swap ( lo, hi ) ;^43^^^^^28^58^swap ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( i, hi ) ;swap ( lo, hi ) ;^43^^^^^28^58^swap ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( pivot, lo ) ;swap ( lo, hi ) ;^43^^^^^28^58^swap ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^mergeSort ( mid, hi ) ;swap ( lo, hi ) ;^43^^^^^28^58^swap ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lot++, hit-- ) ;swap ( lo, hi ) ;^43^^^^^28^58^swap ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^if  ( compare ( i, hi )  >= 0 )  {^45^^^^^30^60^if  ( compare ( i, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^if  ( compare ( i, hi )  > j )  {^45^^^^^30^60^if  ( compare ( i, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( compare ( v, hi )  > 0 )  {^45^^^^^30^60^if  ( compare ( i, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( compare ( i, v )  > 0 )  {^45^^^^^30^60^if  ( compare ( i, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( compare (  hi )  > 0 )  {^45^^^^^30^60^if  ( compare ( i, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( compare ( i )  > 0 )  {^45^^^^^30^60^if  ( compare ( i, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( compare ( hi, i )  > 0 )  {^45^^^^^30^60^if  ( compare ( i, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P7_Replace_Invocation]^if  ( swap ( i, hi )  > 0 )  {^45^^^^^30^60^if  ( compare ( i, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^if  ( compare ( i, hi )  > 3 )  {^45^^^^^30^60^if  ( compare ( i, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P9_Replace_Statement]^if  ( compare ( pivot, lo )  < 0 )  {^45^^^^^30^60^if  ( compare ( i, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P9_Replace_Statement]^if  ( compare ( lo, hi )  > 0 )  {^45^^^^^30^60^if  ( compare ( i, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P9_Replace_Statement]^if  ( compare ( lo, i )  > 0 )  {^45^^^^^30^60^if  ( compare ( i, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P9_Replace_Statement]^if  ( compare ( mid, val )  < 0 )  {^45^^^^^30^60^if  ( compare ( i, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P9_Replace_Statement]^if  ( compare ( val, mid )  < 0 )  {^45^^^^^30^60^if  ( compare ( i, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P9_Replace_Statement]^if  ( compare ( j - 1, j )  > 0 )  {^45^^^^^30^60^if  ( compare ( i, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P15_Unwrap_Block]^swap(i, hi);^45^46^47^^^30^60^if  ( compare ( i, hi )  > 0 )  { swap ( i, hi ) ; }^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P16_Remove_Block]^^45^46^47^^^30^60^if  ( compare ( i, hi )  > 0 )  { swap ( i, hi ) ; }^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P13_Insert_Block]^if  (  ( compare ( lo, hi )  )  > 0 )  {     swap ( lo, hi ) ; }^45^^^^^30^60^[Delete]^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P13_Insert_Block]^if  (  ( compare (  ( j - 1 ) , j )  )  > 0 )  {     swap (  ( j - 1 ) , j ) ; }else {     break; }^45^^^^^30^60^[Delete]^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P13_Insert_Block]^if  (  ( compare ( lo, i )  )  > 0 )  {     swap ( lo, i ) ; }^45^^^^^30^60^[Delete]^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P13_Insert_Block]^if  (  ( compare ( pivot, lo )  )  < 0 )  {     swap ( pivot, lo ) ; }^45^^^^^30^60^[Delete]^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap ( v, hi ) ;^46^^^^^31^61^swap ( i, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap ( i, v ) ;^46^^^^^31^61^swap ( i, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap (  hi ) ;^46^^^^^31^61^swap ( i, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap ( i ) ;^46^^^^^31^61^swap ( i, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap ( hi, i ) ;^46^^^^^31^61^swap ( i, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P7_Replace_Invocation]^compare ( i, hi ) ;^46^^^^^31^61^swap ( i, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P14_Delete_Statement]^^46^^^^^31^61^swap ( i, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( i, hi - 1 ) ;swap ( i, hi ) ;^46^^^^^31^61^swap ( i, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lo, hi ) ;swap ( i, hi ) ;^46^^^^^31^61^swap ( i, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( j - 1, j ) ;swap ( i, hi ) ;^46^^^^^31^61^swap ( i, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( i, j ) ;swap ( i, hi ) ;^46^^^^^31^61^swap ( i, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lo, i ) ;swap ( i, hi ) ;^46^^^^^31^61^swap ( i, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( pivot, lo ) ;swap ( i, hi ) ;^46^^^^^31^61^swap ( i, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^mergeSort ( mid, hi ) ;swap ( i, hi ) ;^46^^^^^31^61^swap ( i, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lot++, hit-- ) ;swap ( i, hi ) ;^46^^^^^31^61^swap ( i, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^if  ( j <= i )  {^59^^^^^44^74^if  ( j < i )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( v < i )  {^59^^^^^44^74^if  ( j < i )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( j < v )  {^59^^^^^44^74^if  ( j < i )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( i < j )  {^59^^^^^44^74^if  ( j < i )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P15_Unwrap_Block]^break;^59^60^61^^^44^74^if  ( j < i )  { break; }^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P16_Remove_Block]^^59^60^61^^^44^74^if  ( j < i )  { break; }^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^if  ( j - lo < hi - i + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^if  ( j  <  lo <= hi - i + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^if  ( j - lo <= hi - i  &&  1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^if  ( j - lo <= hi  |  i + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^if  ( j - lo <= hi - i   instanceof   1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^if  ( j - lo <= hi - i + diff )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^if  ( j - lo <= hi - i  )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^if  ( j - lo <= hi - i + v )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( v - lo <= hi - i + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( j - j <= hi - i + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( j - lo <= v - i + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( j - lo <= hi - lo + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( hi - lo <= j - i + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( lo - j <= hi - i + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( j - lo <= i - hi + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( j - i <= hi - lo + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P6_Replace_Expression]^if  ( j - lo )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P6_Replace_Expression]^if  ( hi - i + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P6_Replace_Expression]^if  ( hi - i )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P6_Replace_Expression]^if  ( i + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^if  ( j - lo <= hi - i + 1 - 3 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^hi = v;^70^^^^^65^71^hi = j;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^i = lo;hi = j;^70^^^^^65^71^hi = j;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^quickSortHelper ( i + hi, hi ) ;^69^^^^^65^71^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^quickSortHelper ( v + 1, hi ) ;^69^^^^^65^71^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^quickSortHelper ( i + 1, v ) ;^69^^^^^65^71^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^quickSortHelper ( i + 1 ) ;^69^^^^^65^71^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^quickSortHelper ( hi + 1, i ) ;^69^^^^^65^71^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P7_Replace_Invocation]^upper ( i + 1, hi ) ;^69^^^^^65^71^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^upper ( v + 1, hi ) ;^69^^^^^65^71^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P14_Delete_Statement]^^69^^^^^65^71^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^quickSortHelper ( lo, hi ) ;quickSortHelper ( i + 1, hi ) ;^69^^^^^65^71^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^quickSortHelper ( lo, j ) ;quickSortHelper ( i + 1, hi ) ;^69^^^^^65^71^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^lo = i ;^67^^^^^52^82^lo = i + 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^lo = j + 1;^67^^^^^52^82^lo = i + 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^lo = i + 2;^67^^^^^52^82^lo = i + 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^lo = mid + 1;lo = i + 1;^67^^^^^52^82^lo = i + 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^quickSortHelper ( i, j ) ;^66^^^^^51^81^quickSortHelper ( lo, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^quickSortHelper ( lo, v ) ;^66^^^^^51^81^quickSortHelper ( lo, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^quickSortHelper (  j ) ;^66^^^^^51^81^quickSortHelper ( lo, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^quickSortHelper ( lo ) ;^66^^^^^51^81^quickSortHelper ( lo, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^quickSortHelper ( j, lo ) ;^66^^^^^51^81^quickSortHelper ( lo, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P7_Replace_Invocation]^quickSort ( lo, j ) ;^66^^^^^51^81^quickSortHelper ( lo, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^quickSortHelper ( v, j ) ;^66^^^^^51^81^quickSortHelper ( lo, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P14_Delete_Statement]^^66^67^^^^51^81^quickSortHelper ( lo, j ) ; lo = i + 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^insertionSort ( lo, hi ) ;quickSortHelper ( lo, j ) ;^66^^^^^51^81^quickSortHelper ( lo, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^quickSortHelper ( i + 1, hi ) ;quickSortHelper ( lo, j ) ;^66^^^^^51^81^quickSortHelper ( lo, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^quickSortHelper ( lo, hi ) ;quickSortHelper ( lo, j ) ;^66^^^^^51^81^quickSortHelper ( lo, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^while  ( compare ( ++i, v )  <= 0 )  {^53^^^^^38^68^while  ( compare ( ++i, v )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^while  ( compare ( ++i, v )  < MERGESORT_THRESHOLD )  {^53^^^^^38^68^while  ( compare ( ++i, v )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^while  ( compare ( ++i, j )  < 0 )  {^53^^^^^38^68^while  ( compare ( ++i, v )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^while  ( compare ( --j, v )  == 0 )  {^56^^^^^41^71^while  ( compare ( --j, v )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^while  ( compare ( --j, v )  > diff )  {^56^^^^^41^71^while  ( compare ( --j, v )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^if  ( diff < QUICKSORT_THRESHOLD )  {^35^^^^^20^50^if  ( diff <= QUICKSORT_THRESHOLD )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( lo <= QUICKSORT_THRESHOLD )  {^35^^^^^20^50^if  ( diff <= QUICKSORT_THRESHOLD )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^if  ( compare ( lo, i )  >= 0 )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^if  ( compare ( lo, i )  > v )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( compare ( lo, v )  > 0 )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^if  ( compare ( lo, i )  > 3 )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap ( lo, v ) ;^40^^^^^25^55^swap ( lo, i ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^if  ( compare ( lo, hi )  > 9 )  {^42^^^^^27^57^if  ( compare ( lo, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( compare ( v, hi )  > 0 )  {^42^^^^^27^57^if  ( compare ( lo, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( compare ( lo, j )  > 0 )  {^42^^^^^27^57^if  ( compare ( lo, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^if  ( compare ( lo, hi )  > 1 )  {^42^^^^^27^57^if  ( compare ( lo, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap ( j, hi ) ;^43^^^^^28^58^swap ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap ( lo, j ) ;^43^^^^^28^58^swap ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^if  ( compare ( i, hi )  > diff )  {^45^^^^^30^60^if  ( compare ( i, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^if  ( compare ( i, hi )  > 4 )  {^45^^^^^30^60^if  ( compare ( i, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^if  ( j > i )  {^59^^^^^44^74^if  ( j < i )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( lo < i )  {^59^^^^^44^74^if  ( j < i )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( j < lo )  {^59^^^^^44^74^if  ( j < i )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^if  ( j  <=  lo <= hi - i + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^if  ( j - lo <= hi - i  ||  1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^if  ( j - lo <= hi  ||  i + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^if  ( j - lo <= hi - i  <<  1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^if  ( j - lo <= hi - i + j )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( j - v <= hi - i + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( j - lo <= lo - i + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( j - lo <= hi - v + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^if  ( j - lo <= hi - i + 2 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^hi = lo;^70^^^^^65^71^hi = j;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^quickSortHelper ( i + , hi ) ;^69^^^^^65^71^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^quickSortHelper ( lo + 1, hi ) ;^69^^^^^65^71^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^upper ( i + 1, lo ) ;^69^^^^^65^71^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^lo = i + 1 - 1;^67^^^^^52^82^lo = i + 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^quickSort ( lo, v ) ;^66^^^^^51^81^quickSortHelper ( lo, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P14_Delete_Statement]^^66^^^^^51^81^quickSortHelper ( lo, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^while  ( compare ( --j, v )  > -2 )  {^56^^^^^41^71^while  ( compare ( --j, v )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^while  ( compare ( --j, i )  > 0 )  {^56^^^^^41^71^while  ( compare ( --j, v )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap ( v, j ) ;^62^^^^^47^77^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap ( i, v ) ;^62^^^^^47^77^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap (  j ) ;^62^^^^^47^77^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap ( i ) ;^62^^^^^47^77^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap ( j, i ) ;^62^^^^^47^77^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P7_Replace_Invocation]^compare ( i, j ) ;^62^^^^^47^77^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^swap ( lo, j ) ;^62^^^^^47^77^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P14_Delete_Statement]^^62^^^^^47^77^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( i, hi - 1 ) ;swap ( i, j ) ;^62^^^^^47^77^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lo, hi ) ;swap ( i, j ) ;^62^^^^^47^77^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( j - 1, j ) ;swap ( i, j ) ;^62^^^^^47^77^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lo, i ) ;swap ( i, j ) ;^62^^^^^47^77^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( i, hi ) ;swap ( i, j ) ;^62^^^^^47^77^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( pivot, lo ) ;swap ( i, j ) ;^62^^^^^47^77^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lot++, hit-- ) ;swap ( i, j ) ;^62^^^^^47^77^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^i = i;^50^^^^^35^65^i = lo;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^i =  v;^50^^^^^35^65^i = lo;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^hi = j;i = lo;^50^^^^^35^65^i = lo;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^lo = i + v;^67^^^^^52^82^lo = i + 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^hi = v;^70^^^^^55^85^hi = j;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^hi =  lo;^70^^^^^55^85^hi = j;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^i = lo;hi = j;^70^^^^^55^85^hi = j;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P1_Replace_Type]^short  diff = hi - lo;^34^^^^^19^49^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^int diff = hi  !=  lo;^34^^^^^19^49^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^int diff = lo - lo;^34^^^^^19^49^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^int diff = hi - v;^34^^^^^19^49^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^int diff = lo - hi;^34^^^^^19^49^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^int half = len / 2;int diff = hi - lo;^34^^^^^19^49^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^int mid = lo + half;int diff = hi - lo;^34^^^^^19^49^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^int len = hi - lo;int diff = hi - lo;^34^^^^^19^49^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^int hit = mid - 1;int diff = hi - lo;^34^^^^^19^49^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^int lot = lo;int diff = hi - lo;^34^^^^^19^49^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^int j = hi - 1;int diff = hi - lo;^34^^^^^19^49^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P1_Replace_Type]^long  i =  ( hi + lo )  / 2;^38^^^^^23^53^int i =  ( hi + lo )  / 2;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^int i =  ( hi + lo )  + 2;^38^^^^^23^53^int i =  ( hi + lo )  / 2;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^int i =  ( hi  !=  lo )  / 2;^38^^^^^23^53^int i =  ( hi + lo )  / 2;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^int i =  ( hi + lo )  / -6;^38^^^^^23^53^int i =  ( hi + lo )  / 2;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^int i =  ( v + lo )  / 2;^38^^^^^23^53^int i =  ( hi + lo )  / 2;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^int i =  ( hi + v )  / 2;^38^^^^^23^53^int i =  ( hi + lo )  / 2;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^int i =  ( lo + hi )  / 2;^38^^^^^23^53^int i =  ( hi + lo )  / 2;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^int i =  ( hi + j )  / 2;^38^^^^^23^53^int i =  ( hi + lo )  / 2;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^int mid = lo + diff / 2;int i =  ( hi + lo )  / 2;^38^^^^^23^53^int i =  ( hi + lo )  / 2;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P1_Replace_Type]^short  j = hi - 1;^48^^^^^33^63^int j = hi - 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^int j = hi  !=  1;^48^^^^^33^63^int j = hi - 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^int j = hi - MERGESORT_THRESHOLD;^48^^^^^33^63^int j = hi - 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^int j = v - 1;^48^^^^^33^63^int j = hi - 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^int diff = hi - lo;int j = hi - 1;^48^^^^^33^63^int j = hi - 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^int half = len / 2;int j = hi - 1;^48^^^^^33^63^int j = hi - 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^int len = hi - lo;int j = hi - 1;^48^^^^^33^63^int j = hi - 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^int hit = mid - 1;int j = hi - 1;^48^^^^^33^63^int j = hi - 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^int v = j;int j = hi - 1;^48^^^^^33^63^int j = hi - 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P1_Replace_Type]^long  v = j;^51^^^^^36^66^int v = j;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^int v = lo;^51^^^^^36^66^int v = j;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^int lot = lo;int v = j;^51^^^^^36^66^int v = j;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^int j = hi - 1;int v = j;^51^^^^^36^66^int v = j;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( compare ( j, i )  > 0 )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^if  ( swap ( j, i )  > 0 )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^compare ( lo, v ) ;^40^^^^^25^55^swap ( lo, i ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( compare ( j, hi )  > 0 )  {^42^^^^^27^57^if  ( compare ( lo, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( compare ( lo, v )  > 0 )  {^42^^^^^27^57^if  ( compare ( lo, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^if  ( swap ( lo, j )  > 0 )  {^42^^^^^27^57^if  ( compare ( lo, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap ( v, j ) ;^49^^^^^34^64^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap ( i, lo ) ;^49^^^^^34^64^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap (  j ) ;^49^^^^^34^64^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap ( i ) ;^49^^^^^34^64^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap ( j, i ) ;^49^^^^^34^64^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P7_Replace_Invocation]^compare ( i, j ) ;^49^^^^^34^64^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^compare ( lo, j ) ;^49^^^^^34^64^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P14_Delete_Statement]^^49^50^^^^34^64^swap ( i, j ) ; i = lo;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( i, hi - 1 ) ;swap ( i, j ) ;^49^^^^^34^64^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lo, hi ) ;swap ( i, j ) ;^49^^^^^34^64^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( j - 1, j ) ;swap ( i, j ) ;^49^^^^^34^64^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lo, i ) ;swap ( i, j ) ;^49^^^^^34^64^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( i, hi ) ;swap ( i, j ) ;^49^^^^^34^64^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( pivot, lo ) ;swap ( i, j ) ;^49^^^^^34^64^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lot++, hit-- ) ;swap ( i, j ) ;^49^^^^^34^64^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^while  ( compare ( ++i, i )  < 0 )  {^53^^^^^38^68^while  ( compare ( ++i, v )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^swap ( i, hi  >  1 ) ;^64^^^^^49^79^swap ( i, hi - 1 ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^swap ( i, hi - i ) ;^64^^^^^49^79^swap ( i, hi - 1 ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap ( v, hi - 1 ) ;^64^^^^^49^79^swap ( i, hi - 1 ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap ( i, v - 1 ) ;^64^^^^^49^79^swap ( i, hi - 1 ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap (  hi - 1 ) ;^64^^^^^49^79^swap ( i, hi - 1 ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap ( i - 1 ) ;^64^^^^^49^79^swap ( i, hi - 1 ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap ( hi, i - 1 ) ;^64^^^^^49^79^swap ( i, hi - 1 ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P7_Replace_Invocation]^lower ( i, hi - 1 ) ;^64^^^^^49^79^swap ( i, hi - 1 ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^swap ( i, lo - 1 ) ;^64^^^^^49^79^swap ( i, hi - 1 ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P14_Delete_Statement]^^64^^^^^49^79^swap ( i, hi - 1 ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lo, hi ) ;swap ( i, hi - 1 ) ;^64^^^^^49^79^swap ( i, hi - 1 ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( j - 1, j ) ;swap ( i, hi - 1 ) ;^64^^^^^49^79^swap ( i, hi - 1 ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( i, j ) ;swap ( i, hi - 1 ) ;^64^^^^^49^79^swap ( i, hi - 1 ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lo, i ) ;swap ( i, hi - 1 ) ;^64^^^^^49^79^swap ( i, hi - 1 ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( i, hi ) ;swap ( i, hi - 1 ) ;^64^^^^^49^79^swap ( i, hi - 1 ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( pivot, lo ) ;swap ( i, hi - 1 ) ;^64^^^^^49^79^swap ( i, hi - 1 ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lot++, hit-- ) ;swap ( i, hi - 1 ) ;^64^^^^^49^79^swap ( i, hi - 1 ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^quickSortHelper ( i + MERGESORT_THRESHOLD, hi ) ;^69^^^^^54^84^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^quickSortHelper ( v + 1, hi ) ;^69^^^^^54^84^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^quickSortHelper ( i + 1, lo ) ;^69^^^^^54^84^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^quickSortHelper ( i + 1 ) ;^69^^^^^54^84^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^quickSortHelper ( hi + 1, i ) ;^69^^^^^54^84^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P7_Replace_Invocation]^upper ( i + 1, hi ) ;^69^^^^^54^84^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^quickSortHelper ( i + 1, v ) ;^69^^^^^54^84^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P14_Delete_Statement]^^69^^^^^54^84^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^quickSortHelper ( lo, hi ) ;quickSortHelper ( i + 1, hi ) ;^69^^^^^54^84^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^quickSortHelper ( lo, j ) ;quickSortHelper ( i + 1, hi ) ;^69^^^^^54^84^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^while  ( compare ( ++i, v )  < -4 )  {^53^^^^^38^68^while  ( compare ( ++i, v )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^while  ( compare ( --j, v )  > 8 )  {^56^^^^^41^71^while  ( compare ( --j, v )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^compare ( lo, j ) ;^62^^^^^47^77^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^lo = i + hi;^67^^^^^52^82^lo = i + 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^lo = v + 1;^67^^^^^52^82^lo = i + 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^int diff = hi  |  lo;^34^^^^^19^49^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^int diff = v - lo;^34^^^^^19^49^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P1_Replace_Type]^short  i =  ( hi + lo )  / 2;^38^^^^^23^53^int i =  ( hi + lo )  / 2;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^int i =  ( hi  >  lo )  / 2;^38^^^^^23^53^int i =  ( hi + lo )  / 2;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^int i =  ( hi + lo )  / ;^38^^^^^23^53^int i =  ( hi + lo )  / 2;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^int i =  ( lo + lo )  / 2;^38^^^^^23^53^int i =  ( hi + lo )  / 2;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P1_Replace_Type]^long  j = hi - 1;^48^^^^^33^63^int j = hi - 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^int j = hi  <=  1;^48^^^^^33^63^int j = hi - 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^int j = hi ;^48^^^^^33^63^int j = hi - 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P1_Replace_Type]^short  v = j;^51^^^^^36^66^int v = j;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^swap ( lo, hi ) ;^46^^^^^31^61^swap ( i, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap ( i, v ) ;^49^^^^^34^64^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^compare ( i, lo ) ;^49^^^^^34^64^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^swap ( i, hi  ||  1 ) ;^64^^^^^49^79^swap ( i, hi - 1 ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^lower ( i, lo - 1 ) ;^64^^^^^49^79^swap ( i, hi - 1 ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^quickSortHelper ( i + j, hi ) ;^69^^^^^54^84^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^quickSortHelper ( lo + 1, hi ) ;^69^^^^^54^84^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P14_Delete_Statement]^^69^70^^^^54^84^quickSortHelper ( i + 1, hi ) ; hi = j;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^if  ( compare ( j - 1, j )  >= 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^if  ( compare ( j  >  1, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^if  ( compare ( j  !=  1, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^if  ( compare ( j , j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^if  ( compare ( j - 1, j )  > -6 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( compare ( v - 1, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P6_Replace_Expression]^if  ( j - 1 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P7_Replace_Invocation]^if  ( rotate ( j - 1, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^if  ( rotate ( lo - 1 / 4, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P9_Replace_Statement]^if  ( compare ( pivot, lo )  < 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P9_Replace_Statement]^if  ( compare ( lo, hi )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P9_Replace_Statement]^if  ( compare ( lo, i )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P9_Replace_Statement]^if  ( compare ( mid, val )  < 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P9_Replace_Statement]^if  ( compare ( val, mid )  < 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P9_Replace_Statement]^if  ( compare ( i, hi )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P15_Unwrap_Block]^swap((j - 1), j);^78^79^80^81^82^75^85^if  ( compare ( j - 1, j )  > 0 )  { swap ( j - 1, j ) ; } else { break; }^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P16_Remove_Block]^^78^79^80^81^82^75^85^if  ( compare ( j - 1, j )  > 0 )  { swap ( j - 1, j ) ; } else { break; }^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P13_Insert_Block]^if  (  ( compare ( lo, hi )  )  > 0 )  {     swap ( lo, hi ) ; }^78^^^^^75^85^[Delete]^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P13_Insert_Block]^if  (  ( compare ( lo, i )  )  > 0 )  {     swap ( lo, i ) ; }^78^^^^^75^85^[Delete]^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P13_Insert_Block]^if  (  ( compare ( i, hi )  )  > 0 )  {     swap ( i, hi ) ; }^78^^^^^75^85^[Delete]^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P13_Insert_Block]^if  (  ( compare ( pivot, lo )  )  < 0 )  {     swap ( pivot, lo ) ; }^78^^^^^75^85^[Delete]^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^swap ( j  ==  1, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^swap ( j , j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap ( v - 1, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P7_Replace_Invocation]^lower ( j - 1, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^lower ( i - 1, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P14_Delete_Statement]^^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( i, hi - 1 ) ;swap ( j - 1, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lo, hi ) ;swap ( j - 1, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( i, j ) ;swap ( j - 1, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lo, i ) ;swap ( j - 1, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( i, hi ) ;swap ( j - 1, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( pivot, lo ) ;swap ( j - 1, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lot++, hit-- ) ;swap ( j - 1, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P1_Replace_Type]^for  (  long  i = lo + 1 ; i <= hi; i++ )  {^76^^^^^75^85^for  ( int i = lo + 1 ; i <= hi; i++ )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^for  ( int i = lo  ==  1 ; i <= hi; i++ )  {^76^^^^^75^85^for  ( int i = lo + 1 ; i <= hi; i++ )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^for  ( int i = lo + 1 ; i < hi; i++ )  {^76^^^^^75^85^for  ( int i = lo + 1 ; i <= hi; i++ )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^for  ( int i = lo +  ; i <= hi; i++ )  {^76^^^^^75^85^for  ( int i = lo + 1 ; i <= hi; i++ )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^for  ( int i = lo + lo ; i <= hi; i++ )  {^76^^^^^75^85^for  ( int i = lo + 1 ; i <= hi; i++ )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^for  ( int i = lo  ; i <= hi; i++ )  {^76^^^^^75^85^for  ( int i = lo + 1 ; i <= hi; i++ )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^for  ( int i = v + 1 ; i <= hi; i++ )  {^76^^^^^75^85^for  ( int i = lo + 1 ; i <= hi; i++ )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^for  ( jnt i = lo + 1 ; i <= hi; i++ )  {^76^^^^^75^85^for  ( int i = lo + 1 ; i <= hi; i++ )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^for  ( int i = lo + 1 ; i <= lo; i++ )  {^76^^^^^75^85^for  ( int i = lo + 1 ; i <= hi; i++ )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^for  ( lont i = i + 1 ; i <= hi; i++ )  {^76^^^^^75^85^for  ( int i = lo + 1 ; i <= hi; i++ )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^for  ( hint i = lo + 1 ; i <= i; i++ )  {^76^^^^^75^85^for  ( int i = lo + 1 ; i <= hi; i++ )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^if  ( compare ( j  ^  1, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^if  ( compare ( j  <  1, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^if  ( compare ( j - 1, j )  > -4 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^if  ( compare ( j - i, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( compare ( lo - 1, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^if  ( compare ( j - 1 - 4, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^swap ( j  <  1, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^swap ( lo - 1, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P1_Replace_Type]^for  (  short  j = i; j > lo; j-- )  {^77^^^^^75^85^for  ( int j = i; j > lo; j-- )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^for  ( int j = i; j >= lo; j-- )  {^77^^^^^75^85^for  ( int j = i; j > lo; j-- )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^for  ( vnt j = i; j > lo; j-- )  {^77^^^^^75^85^for  ( int j = i; j > lo; j-- )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^for  ( int j = i; j > i; j-- )  {^77^^^^^75^85^for  ( int j = i; j > lo; j-- )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^for  ( jnt i = i; j > lo; j-- )  {^77^^^^^75^85^for  ( int j = i; j > lo; j-- )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^for  ( int lo = i; j > j; j-- )  {^77^^^^^75^85^for  ( int j = i; j > lo; j-- )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^for  ( int j = i; j > v; j-- )  {^77^^^^^75^85^for  ( int j = i; j > lo; j-- )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^if  ( compare ( j - 1, j )  == 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^if  ( compare ( j  >>  1, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^if  ( compare ( j  ||  1, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^if  ( compare ( j - j, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^if  ( compare ( j - 1, j )  > j )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^if  ( compare ( i - 1, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^if  ( compare ( j - 1L, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^swap ( i - 1, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^if  ( compare ( j - v, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^swap ( j  <=  1, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^swap ( j - lo, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^lower ( lo - 1, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P1_Replace_Type]^for  (  long  j = i; j > lo; j-- )  {^77^^^^^75^85^for  ( int j = i; j > lo; j-- )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^swap ( j   instanceof   1, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^lower ( v - 1, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^for  ( int j = i; j < lo; j-- )  {^77^^^^^75^85^for  ( int j = i; j > lo; j-- )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^for  ( int i = i; j > lo; j-- )  {^77^^^^^75^85^for  ( int j = i; j > lo; j-- )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P5_Replace_Variable]^for  ( lont j = i; j > i; j-- )  {^77^^^^^75^85^for  ( int j = i; j > lo; j-- )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^if  ( compare ( j  ==  1, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^if  ( compare ( j - , j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^if  ( compare ( j - 1, j )  > hi )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^if  ( compare ( j - MERGESORT_THRESHOLD, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^if  ( compare ( j - 1 >> 3, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^swap ( j  !=  1, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^if  ( compare ( j - hi, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^swap ( j  &  1, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P3_Replace_Literal]^swap ( j - MERGESORT_THRESHOLD, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^for  ( int i = lo  <=  1 ; i <= hi; i++ )  {^76^^^^^75^85^for  ( int i = lo + 1 ; i <= hi; i++ )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P8_Replace_Mix]^for  ( int i = j + 1 ; i <= hi; i++ )  {^76^^^^^75^85^for  ( int i = lo + 1 ; i <= hi; i++ )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P2_Replace_Operator]^if  ( compare ( j  |  1, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[P1_Replace_Type]^short  diff = hi - lo;^88^^^^^87^97^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P2_Replace_Operator]^int diff = hi  >>  lo;^88^^^^^87^97^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^int diff = hi - mid;^88^^^^^87^97^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^int diff = lo - hi;^88^^^^^87^97^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P8_Replace_Mix]^int diff = hi - v;^88^^^^^87^97^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P11_Insert_Donor_Statement]^int half = len / 2;int diff = hi - lo;^88^^^^^87^97^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P11_Insert_Donor_Statement]^int mid = lo + half;int diff = hi - lo;^88^^^^^87^97^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P11_Insert_Donor_Statement]^int len = hi - lo;int diff = hi - lo;^88^^^^^87^97^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P11_Insert_Donor_Statement]^int hit = mid - 1;int diff = hi - lo;^88^^^^^87^97^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P11_Insert_Donor_Statement]^int lot = lo;int diff = hi - lo;^88^^^^^87^97^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P11_Insert_Donor_Statement]^int j = hi - 1;int diff = hi - lo;^88^^^^^87^97^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P2_Replace_Operator]^if  ( diff > MERGESORT_THRESHOLD )  {^89^^^^^87^97^if  ( diff <= MERGESORT_THRESHOLD )  {^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^if  ( lo <= MERGESORT_THRESHOLD )  {^89^^^^^87^97^if  ( diff <= MERGESORT_THRESHOLD )  {^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^if  ( diff <= v )  {^89^^^^^87^97^if  ( diff <= MERGESORT_THRESHOLD )  {^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P8_Replace_Mix]^if  ( v <= MERGESORT_THRESHOLD )  {^89^^^^^87^97^if  ( diff <= MERGESORT_THRESHOLD )  {^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P9_Replace_Statement]^if  ( diff <= QUICKSORT_THRESHOLD )  {^89^^^^^87^97^if  ( diff <= MERGESORT_THRESHOLD )  {^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P15_Unwrap_Block]^insertionSort(lo, hi); return ;^89^90^91^92^^87^97^if  ( diff <= MERGESORT_THRESHOLD )  { insertionSort ( lo, hi ) ; return; }^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P16_Remove_Block]^^89^90^91^92^^87^97^if  ( diff <= MERGESORT_THRESHOLD )  { insertionSort ( lo, hi ) ; return; }^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P13_Insert_Block]^if  ( diff <=  ( QUICKSORT_THRESHOLD )  )  {     break; }^89^^^^^87^97^[Delete]^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^insertionSort ( j, hi ) ;^90^^^^^87^97^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^insertionSort ( lo, mid ) ;^90^^^^^87^97^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^insertionSort (  hi ) ;^90^^^^^87^97^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^insertionSort ( lo ) ;^90^^^^^87^97^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^insertionSort ( hi, lo ) ;^90^^^^^87^97^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P7_Replace_Invocation]^mergeSort ( lo, hi ) ;^90^^^^^87^97^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P14_Delete_Statement]^^90^91^^^^87^97^insertionSort ( lo, hi ) ; return;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lo, hi ) ;insertionSort ( lo, hi ) ;^90^^^^^87^97^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P11_Insert_Donor_Statement]^mergeSort ( lo, mid ) ;insertionSort ( lo, hi ) ;^90^^^^^87^97^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P11_Insert_Donor_Statement]^quickSortHelper ( lo, hi ) ;insertionSort ( lo, hi ) ;^90^^^^^87^97^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P11_Insert_Donor_Statement]^quickSortHelper ( lo, j ) ;insertionSort ( lo, hi ) ;^90^^^^^87^97^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P11_Insert_Donor_Statement]^mergeSort ( mid, hi ) ;insertionSort ( lo, hi ) ;^90^^^^^87^97^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^insertionSort ( v, hi ) ;^90^^^^^87^97^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^insertionSort ( lo, j ) ;^90^^^^^87^97^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P1_Replace_Type]^long  mid = lo + diff / 2;^93^^^^^87^97^int mid = lo + diff / 2;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P2_Replace_Operator]^int mid = lo + diff * 2;^93^^^^^87^97^int mid = lo + diff / 2;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P3_Replace_Literal]^int mid = lo + diff / 4;^93^^^^^87^97^int mid = lo + diff / 2;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^int mid = v + diff / 2;^93^^^^^87^97^int mid = lo + diff / 2;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^int mid = lo + v / 2;^93^^^^^87^97^int mid = lo + diff / 2;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^int mid = diff + lo / 2;^93^^^^^87^97^int mid = lo + diff / 2;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P8_Replace_Mix]^int mid = i + diff / 2;^93^^^^^87^97^int mid = lo + diff / 2;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P11_Insert_Donor_Statement]^int i =  ( hi + lo )  / 2;int mid = lo + diff / 2;^93^^^^^87^97^int mid = lo + diff / 2;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P11_Insert_Donor_Statement]^int mid = lo + half;int mid = lo + diff / 2;^93^^^^^87^97^int mid = lo + diff / 2;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^mergeSort ( i, mid ) ;^94^^^^^87^97^mergeSort ( lo, mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^mergeSort ( lo, i ) ;^94^^^^^87^97^mergeSort ( lo, mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^mergeSort (  mid ) ;^94^^^^^87^97^mergeSort ( lo, mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^mergeSort ( lo ) ;^94^^^^^87^97^mergeSort ( lo, mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^mergeSort ( mid, lo ) ;^94^^^^^87^97^mergeSort ( lo, mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P7_Replace_Invocation]^quickSort ( lo, mid ) ;^94^^^^^87^97^mergeSort ( lo, mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P8_Replace_Mix]^quickSort ( lo, j ) ;^94^^^^^87^97^mergeSort ( lo, mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P14_Delete_Statement]^^94^95^^^^87^97^mergeSort ( lo, mid ) ; mergeSort ( mid, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P11_Insert_Donor_Statement]^insertionSort ( lo, hi ) ;mergeSort ( lo, mid ) ;^94^^^^^87^97^mergeSort ( lo, mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lo, hi ) ;mergeSort ( lo, mid ) ;^94^^^^^87^97^mergeSort ( lo, mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P11_Insert_Donor_Statement]^quickSortHelper ( lo, hi ) ;mergeSort ( lo, mid ) ;^94^^^^^87^97^mergeSort ( lo, mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lo, i ) ;mergeSort ( lo, mid ) ;^94^^^^^87^97^mergeSort ( lo, mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P11_Insert_Donor_Statement]^mergeSort ( mid, hi ) ;mergeSort ( lo, mid ) ;^94^^^^^87^97^mergeSort ( lo, mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^mergeSort ( j, hi ) ;^95^^^^^87^97^mergeSort ( mid, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^mergeSort ( mid, j ) ;^95^^^^^87^97^mergeSort ( mid, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^mergeSort (  hi ) ;^95^^^^^87^97^mergeSort ( mid, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^mergeSort ( mid ) ;^95^^^^^87^97^mergeSort ( mid, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^mergeSort ( hi, mid ) ;^95^^^^^87^97^mergeSort ( mid, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P7_Replace_Invocation]^quickSort ( mid, hi ) ;^95^^^^^87^97^mergeSort ( mid, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P8_Replace_Mix]^mergeSort ( mid, lo ) ;^95^^^^^87^97^mergeSort ( mid, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P14_Delete_Statement]^^95^^^^^87^97^mergeSort ( mid, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P11_Insert_Donor_Statement]^insertionSort ( lo, hi ) ;mergeSort ( mid, hi ) ;^95^^^^^87^97^mergeSort ( mid, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lo, hi ) ;mergeSort ( mid, hi ) ;^95^^^^^87^97^mergeSort ( mid, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P11_Insert_Donor_Statement]^mergeSort ( lo, mid ) ;mergeSort ( mid, hi ) ;^95^^^^^87^97^mergeSort ( mid, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P11_Insert_Donor_Statement]^swap ( i, hi ) ;mergeSort ( mid, hi ) ;^95^^^^^87^97^mergeSort ( mid, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P2_Replace_Operator]^merge ( lo, mid, hi, mid  !=  lo, hi - mid ) ;^96^^^^^87^97^merge ( lo, mid, hi, mid - lo, hi - mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P2_Replace_Operator]^merge ( lo, mid, hi, mid - lo, hi  ==  mid ) ;^96^^^^^87^97^merge ( lo, mid, hi, mid - lo, hi - mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^merge ( j, mid, hi, mid - lo, hi - mid ) ;^96^^^^^87^97^merge ( lo, mid, hi, mid - lo, hi - mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^merge ( lo, lo, hi, mid - lo, hi - mid ) ;^96^^^^^87^97^merge ( lo, mid, hi, mid - lo, hi - mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^merge ( lo, mid, v, mid - lo, hi - mid ) ;^96^^^^^87^97^merge ( lo, mid, hi, mid - lo, hi - mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^merge (  mid, hi, mid - lo, hi - mid ) ;^96^^^^^87^97^merge ( lo, mid, hi, mid - lo, hi - mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^merge ( lo,  hi, mid - lo, hi - mid ) ;^96^^^^^87^97^merge ( lo, mid, hi, mid - lo, hi - mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^merge ( lo, mid,  mid - lo, hi - mid ) ;^96^^^^^87^97^merge ( lo, mid, hi, mid - lo, hi - mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^merge ( mid, lo, hi, mid - lo, hi - mid ) ;^96^^^^^87^97^merge ( lo, mid, hi, mid - lo, hi - mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^merge ( lo, hi, mid, mid - lo, hi - mid ) ;^96^^^^^87^97^merge ( lo, mid, hi, mid - lo, hi - mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P5_Replace_Variable]^merge ( hi, mid, lo, mid - lo, hi - mid ) ;^96^^^^^87^97^merge ( lo, mid, hi, mid - lo, hi - mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P8_Replace_Mix]^merge ( lo, mid, mid, mid - lo, hi - mid ) ;^96^^^^^87^97^merge ( lo, mid, hi, mid - lo, hi - mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P14_Delete_Statement]^^96^^^^^87^97^merge ( lo, mid, hi, mid - lo, hi - mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[P2_Replace_Operator]^if  ( len1 == 0 && len2 == 0 )  {^100^^^^^99^126^if  ( len1 == 0 || len2 == 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P2_Replace_Operator]^if  ( len1 != 0 || len2 == 0 )  {^100^^^^^99^126^if  ( len1 == 0 || len2 == 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P2_Replace_Operator]^if  ( len1 == 0 || len2 != 0 )  {^100^^^^^99^126^if  ( len1 == 0 || len2 == 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P3_Replace_Literal]^if  ( len1 == new_mid || len2 == new_mid )  {^100^^^^^99^126^if  ( len1 == 0 || len2 == 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P3_Replace_Literal]^if  ( len1 == -5 || len2 == -5 )  {^100^^^^^99^126^if  ( len1 == 0 || len2 == 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^if  ( new_mid == 0 || len2 == 0 )  {^100^^^^^99^126^if  ( len1 == 0 || len2 == 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^if  ( len1 == 0 || len22 == 0 )  {^100^^^^^99^126^if  ( len1 == 0 || len2 == 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^if  ( len2 == 0 || len1 == 0 )  {^100^^^^^99^126^if  ( len1 == 0 || len2 == 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P6_Replace_Expression]^if  ( len1 == 0 ) {^100^^^^^99^126^if  ( len1 == 0 || len2 == 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P6_Replace_Expression]^if  (  len2 == 0 )  {^100^^^^^99^126^if  ( len1 == 0 || len2 == 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^if  ( len1 == 2 || lo == 2 )  {^100^^^^^99^126^if  ( len1 == 0 || len2 == 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P9_Replace_Statement]^if  ( len1 + len2 == 2 )  {^100^^^^^99^126^if  ( len1 == 0 || len2 == 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P15_Unwrap_Block]^return ;^100^101^102^^^99^126^if  ( len1 == 0 || len2 == 0 )  { return; }^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P16_Remove_Block]^^100^101^102^^^99^126^if  ( len1 == 0 || len2 == 0 )  { return; }^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P2_Replace_Operator]^if  ( len1 + len2 != 2 )  {^103^^^^^99^126^if  ( len1 + len2 == 2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P2_Replace_Operator]^if  ( len1  ^  len2 == 2 )  {^103^^^^^99^126^if  ( len1 + len2 == 2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P3_Replace_Literal]^if  ( len1 + len ==  )  {^103^^^^^99^126^if  ( len1 + len2 == 2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^if  ( len2 + len1 == 2 )  {^103^^^^^99^126^if  ( len1 + len2 == 2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P6_Replace_Expression]^if  ( len1 + len2 )  {^103^^^^^99^126^if  ( len1 + len2 == 2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P6_Replace_Expression]^if  ( compare(pivot, lo) < 0 )  {^103^^^^^99^126^if  ( len1 + len2 == 2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^if  ( len1 + len2 + 3 == 2 + 3 )  {^103^^^^^99^126^if  ( len1 + len2 == 2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P9_Replace_Statement]^if  ( len1 > len2 )  {^103^^^^^99^126^if  ( len1 + len2 == 2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P9_Replace_Statement]^if  ( len1 == 0 || len2 == 0 )  {^103^^^^^99^126^if  ( len1 + len2 == 2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P15_Unwrap_Block]^if ((compare(pivot, lo)) < 0) {    swap(pivot, lo);}; return ;^103^104^105^106^^99^126^if  ( len1 + len2 == 2 )  { if  ( compare ( pivot, lo )  < 0 )  { swap ( pivot, lo ) ; }^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P16_Remove_Block]^^103^104^105^106^^99^126^if  ( len1 + len2 == 2 )  { if  ( compare ( pivot, lo )  < 0 )  { swap ( pivot, lo ) ; }^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P13_Insert_Block]^if  (  ( compare ( pivot, lo )  )  < 0 )  {     swap ( pivot, lo ) ; }^103^^^^^99^126^[Delete]^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P2_Replace_Operator]^if  ( compare ( pivot, lo )  <= 0 )  {^104^^^^^99^126^if  ( compare ( pivot, lo )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P3_Replace_Literal]^if  ( compare ( pivot, lo )  < j )  {^104^^^^^99^126^if  ( compare ( pivot, lo )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^if  ( compare ( len22, lo )  < 0 )  {^104^^^^^99^126^if  ( compare ( pivot, lo )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^if  ( compare ( pivot, len11 )  < 0 )  {^104^^^^^99^126^if  ( compare ( pivot, lo )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^if  ( compare (  lo )  < 0 )  {^104^^^^^99^126^if  ( compare ( pivot, lo )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^if  ( compare ( pivot )  < 0 )  {^104^^^^^99^126^if  ( compare ( pivot, lo )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^if  ( compare ( lo, pivot )  < 0 )  {^104^^^^^99^126^if  ( compare ( pivot, lo )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P7_Replace_Invocation]^if  ( swap ( pivot, lo )  < 0 )  {^104^^^^^99^126^if  ( compare ( pivot, lo )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^if  ( compare ( pivot, lo )  < 3 )  {^104^^^^^99^126^if  ( compare ( pivot, lo )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P9_Replace_Statement]^if  ( compare ( lo, hi )  > 0 )  {^104^^^^^99^126^if  ( compare ( pivot, lo )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P9_Replace_Statement]^if  ( compare ( lo, i )  > 0 )  {^104^^^^^99^126^if  ( compare ( pivot, lo )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P9_Replace_Statement]^if  ( compare ( mid, val )  < 0 )  {^104^^^^^99^126^if  ( compare ( pivot, lo )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P9_Replace_Statement]^if  ( compare ( val, mid )  < 0 )  {^104^^^^^99^126^if  ( compare ( pivot, lo )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P9_Replace_Statement]^if  ( compare ( j - 1, j )  > 0 )  {^104^^^^^99^126^if  ( compare ( pivot, lo )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P9_Replace_Statement]^if  ( compare ( i, hi )  > 0 )  {^104^^^^^99^126^if  ( compare ( pivot, lo )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P15_Unwrap_Block]^swap(pivot, lo);^104^105^106^^^99^126^if  ( compare ( pivot, lo )  < 0 )  { swap ( pivot, lo ) ; }^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P16_Remove_Block]^^104^105^106^^^99^126^if  ( compare ( pivot, lo )  < 0 )  { swap ( pivot, lo ) ; }^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P13_Insert_Block]^if  (  ( compare ( lo, hi )  )  > 0 )  {     swap ( lo, hi ) ; }^104^^^^^99^126^[Delete]^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P13_Insert_Block]^if  (  ( compare (  ( j - 1 ) , j )  )  > 0 )  {     swap (  ( j - 1 ) , j ) ; }else {     break; }^104^^^^^99^126^[Delete]^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P13_Insert_Block]^if  (  ( compare ( lo, i )  )  > 0 )  {     swap ( lo, i ) ; }^104^^^^^99^126^[Delete]^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P13_Insert_Block]^if  (  ( compare ( i, hi )  )  > 0 )  {     swap ( i, hi ) ; }^104^^^^^99^126^[Delete]^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P13_Insert_Block]^if  (  ( len1 + len2 )  == 2 )  {     if  (  ( compare ( pivot, lo )  )  < 0 )  {         swap ( pivot, lo ) ;     }     return ; }^104^^^^^99^126^[Delete]^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^swap ( len22, lo ) ;^105^^^^^99^126^swap ( pivot, lo ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^swap ( pivot, len11 ) ;^105^^^^^99^126^swap ( pivot, lo ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^swap (  lo ) ;^105^^^^^99^126^swap ( pivot, lo ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^swap ( pivot ) ;^105^^^^^99^126^swap ( pivot, lo ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^swap ( lo, pivot ) ;^105^^^^^99^126^swap ( pivot, lo ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P7_Replace_Invocation]^compare ( pivot, lo ) ;^105^^^^^99^126^swap ( pivot, lo ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P14_Delete_Statement]^^105^^^^^99^126^swap ( pivot, lo ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^swap ( i, hi - 1 ) ;swap ( pivot, lo ) ;^105^^^^^99^126^swap ( pivot, lo ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lo, hi ) ;swap ( pivot, lo ) ;^105^^^^^99^126^swap ( pivot, lo ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^swap ( j - 1, j ) ;swap ( pivot, lo ) ;^105^^^^^99^126^swap ( pivot, lo ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^swap ( i, j ) ;swap ( pivot, lo ) ;^105^^^^^99^126^swap ( pivot, lo ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lo, i ) ;swap ( pivot, lo ) ;^105^^^^^99^126^swap ( pivot, lo ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^swap ( i, hi ) ;swap ( pivot, lo ) ;^105^^^^^99^126^swap ( pivot, lo ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lot++, hit-- ) ;swap ( pivot, lo ) ;^105^^^^^99^126^swap ( pivot, lo ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^if  ( compare ( v, lo )  < 0 )  {^104^^^^^99^126^if  ( compare ( pivot, lo )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^swap ( len11, lo ) ;^105^^^^^99^126^swap ( pivot, lo ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^swap ( pivot, len2 ) ;^105^^^^^99^126^swap ( pivot, lo ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^compare ( v, lo ) ;^105^^^^^99^126^swap ( pivot, lo ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P3_Replace_Literal]^if  ( compare ( pivot, lo )  < diff )  {^104^^^^^99^126^if  ( compare ( pivot, lo )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^if  ( compare ( pivot, len22 )  < 0 )  {^104^^^^^99^126^if  ( compare ( pivot, lo )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^if  ( compare ( pivot, lo )  < 0 / 3 )  {^104^^^^^99^126^if  ( compare ( pivot, lo )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^compare ( mid, lo ) ;^105^^^^^99^126^swap ( pivot, lo ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^if  ( compare ( len11, lo )  < 0 )  {^104^^^^^99^126^if  ( compare ( pivot, lo )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^swap ( v, lo ) ;^105^^^^^99^126^swap ( pivot, lo ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^swap ( pivot, len22 ) ;^105^^^^^99^126^swap ( pivot, lo ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^swap ( second_cut, lo ) ;^105^^^^^99^126^swap ( pivot, lo ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P1_Replace_Type]^long  first_cut, second_cut;^109^^^^^99^126^int first_cut, second_cut;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P1_Replace_Type]^short  first_cut, second_cut;^109^^^^^99^126^int first_cut, second_cut;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P1_Replace_Type]^short  len11, len22;^110^^^^^99^126^int len11, len22;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^int half = len / 2;int len11, len22;^110^^^^^99^126^int len11, len22;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P2_Replace_Operator]^if  ( len1 >= len2 )  {^111^^^^^99^126^if  ( len1 > len2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P3_Replace_Literal]^if  ( len1 > lenlen22 )  {^111^^^^^99^126^if  ( len1 > len2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P3_Replace_Literal]^if  ( len1 > len11 )  {^111^^^^^99^126^if  ( len1 > len2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^if  ( mid > len2 )  {^111^^^^^99^126^if  ( len1 > len2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P6_Replace_Expression]^if  ( len1 / 2 )  {^111^^^^^99^126^if  ( len1 > len2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P6_Replace_Expression]^if  ( lo + len11 )  {^111^^^^^99^126^if  ( len1 > len2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P6_Replace_Expression]^if  ( second_cut - pivot )  {^111^^^^^99^126^if  ( len1 > len2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P6_Replace_Expression]^if  ( len2 / 2 )  {^111^^^^^99^126^if  ( len1 > len2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P6_Replace_Expression]^if  ( pivot + len22 )  {^111^^^^^99^126^if  ( len1 > len2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P6_Replace_Expression]^if  ( first_cut - lo )  {^111^^^^^99^126^if  ( len1 > len2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^if  ( len1 > len4 )  {^111^^^^^99^126^if  ( len1 > len2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P9_Replace_Statement]^if  ( len1 + len2 == 2 )  {^111^^^^^99^126^if  ( len1 > len2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P2_Replace_Operator]^len22 = len2 + 2;^117^^^^^111^121^len22 = len2 / 2;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P3_Replace_Literal]^len-1-1 = len-1 / -1;^117^^^^^111^121^len22 = len2 / 2;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^len22 = mid / 2;^117^^^^^111^121^len22 = len2 / 2;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^len2 - 22 - 2 = len2 - 2 / 2 - 2;^117^^^^^111^121^len22 = len2 / 2;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^len11 = len1 / 2;len22 = len2 / 2;^117^^^^^111^121^len22 = len2 / 2;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^second_cut = pivot + len11;^118^^^^^111^121^second_cut = pivot + len22;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^second_cut = len22 + pivot;^118^^^^^111^121^second_cut = pivot + len22;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^second_cut =  len2 + len22;^118^^^^^111^121^second_cut = pivot + len22;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^first_cut = lo + len11;second_cut = pivot + len22;^118^^^^^111^121^second_cut = pivot + len22;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^first_cut = upper ( lo, v, second_cut ) ;^119^^^^^111^121^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^first_cut = upper ( lo, pivot, lo ) ;^119^^^^^111^121^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^first_cut = upper (  pivot, second_cut ) ;^119^^^^^111^121^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^first_cut = upper ( lo,  second_cut ) ;^119^^^^^111^121^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^first_cut = upper ( lo, pivot ) ;^119^^^^^111^121^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^first_cut = upper ( second_cut, pivot, lo ) ;^119^^^^^111^121^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^first_cut = upper ( pivot, lo, second_cut ) ;^119^^^^^111^121^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P7_Replace_Invocation]^first_cut = lower ( lo, pivot, second_cut ) ;^119^^^^^111^121^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^first_cut =  upper ( len2, pivot, second_cut ) ;^119^^^^^111^121^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^second_cut = lower ( pivot, hi, first_cut ) ;first_cut = upper ( lo, pivot, second_cut ) ;^119^^^^^111^121^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P2_Replace_Operator]^len11 = first_cut  >>  lo;^120^^^^^111^121^len11 = first_cut - lo;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^len11 = len2 - lo;^120^^^^^111^121^len11 = first_cut - lo;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^len11 = first_cut - second_cut;^120^^^^^111^121^len11 = first_cut - lo;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^len11 = lo - first_cut;^120^^^^^111^121^len11 = first_cut - lo;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^len11 =  mid - lo;^120^^^^^111^121^len11 = first_cut - lo;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^len22 = second_cut - pivot;len11 = first_cut - lo;^120^^^^^111^121^len11 = first_cut - lo;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^first_cut = upper ( new_mid, pivot, second_cut ) ;^119^^^^^111^121^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^first_cut = upper ( lo, len11, second_cut ) ;^119^^^^^111^121^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^first_cut = upper ( lo, pivot, len22 ) ;^119^^^^^111^121^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P14_Delete_Statement]^^119^120^^^^111^121^first_cut = upper ( lo, pivot, second_cut ) ; len11 = first_cut - lo;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^rotate ( first_cut, pivot, second_cut ) ;first_cut = upper ( lo, pivot, second_cut ) ;^119^^^^^111^121^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P2_Replace_Operator]^len11 = len1 + 2;^112^^^^^99^126^len11 = len1 / 2;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P3_Replace_Literal]^len11 = len1 / -4;^112^^^^^99^126^len11 = len1 / 2;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^len11 = len1 / 2 + 0;^112^^^^^99^126^len11 = len1 / 2;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^len22 = len2 / 2;len11 = len1 / 2;^112^^^^^99^126^len11 = len1 / 2;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^first_cut = mid + len11;^113^^^^^99^126^first_cut = lo + len11;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^first_cut = lo + pivot;^113^^^^^99^126^first_cut = lo + len11;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^first_cut = len11 + lo;^113^^^^^99^126^first_cut = lo + len11;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^first_cut =  pivot + len11;^113^^^^^99^126^first_cut = lo + len11;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^second_cut = pivot + len22;first_cut = lo + len11;^113^^^^^99^126^first_cut = lo + len11;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^second_cut = lower ( v, hi, first_cut ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^second_cut = lower ( pivot, len2, first_cut ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^second_cut = lower ( pivot, hi, lo ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^second_cut = lower (  hi, first_cut ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^second_cut = lower ( pivot,  first_cut ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^second_cut = lower ( pivot, hi ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^second_cut = lower ( first_cut, hi, pivot ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^second_cut = lower ( pivot, first_cut, hi ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P7_Replace_Invocation]^second_cut = upper ( pivot, hi, first_cut ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^second_cut =  lower ( len2, hi, first_cut ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^first_cut = upper ( lo, pivot, second_cut ) ;second_cut = lower ( pivot, hi, first_cut ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P2_Replace_Operator]^len22 = second_cut  ||  pivot;^115^^^^^99^126^len22 = second_cut - pivot;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^len22 = len11 - pivot;^115^^^^^99^126^len22 = second_cut - pivot;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^len22 = second_cut - len11;^115^^^^^99^126^len22 = second_cut - pivot;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^len22 = pivot - second_cut;^115^^^^^99^126^len22 = second_cut - pivot;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^len22 =  len2 - pivot;^115^^^^^99^126^len22 = second_cut - pivot;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^len11 = first_cut - lo;len22 = second_cut - pivot;^115^^^^^99^126^len22 = second_cut - pivot;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^second_cut = lower ( len22, hi, first_cut ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^second_cut = lower ( pivot, v, first_cut ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^second_cut = lower ( pivot, hi, mid ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P14_Delete_Statement]^^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P3_Replace_Literal]^len11 = len1 / ;^112^^^^^99^126^len11 = len1 / 2;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^len11 = v / 2;^112^^^^^99^126^len11 = len1 / 2;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^len11 = len1 / 4;^112^^^^^99^126^len11 = len1 / 2;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^first_cut = len2 + len11;^113^^^^^99^126^first_cut = lo + len11;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^first_cut = lo + len22;^113^^^^^99^126^first_cut = lo + len11;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^first_cut =  null + len11;^113^^^^^99^126^first_cut = lo + len11;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^second_cut = lower ( mid, hi, first_cut ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^second_cut = lower ( pivot, lo, first_cut ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^second_cut = lower ( pivot, hi, v ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^second_cut = lower ( hi, pivot, first_cut ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^second_cut =  lower ( len11, hi, first_cut ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P2_Replace_Operator]^len22 = second_cut  ^  pivot;^115^^^^^99^126^len22 = second_cut - pivot;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^len22 = v - pivot;^115^^^^^99^126^len22 = second_cut - pivot;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^len22 = second_cut - lo;^115^^^^^99^126^len22 = second_cut - pivot;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P2_Replace_Operator]^len22 = len2 + 2;^117^^^^^99^126^len22 = len2 / 2;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P3_Replace_Literal]^len = len / ;^117^^^^^99^126^len22 = len2 / 2;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^len22 = len11 / 2;^117^^^^^99^126^len22 = len2 / 2;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^len33 = len3 / 3;^117^^^^^99^126^len22 = len2 / 2;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^len11 = len1 / 2;len22 = len2 / 2;^117^^^^^99^126^len22 = len2 / 2;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^second_cut = len2 + len22;^118^^^^^99^126^second_cut = pivot + len22;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^second_cut = len22 + pivot;^118^^^^^99^126^second_cut = pivot + len22;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^second_cut =  new_mid + len22;^118^^^^^99^126^second_cut = pivot + len22;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^first_cut = lo + len11;second_cut = pivot + len22;^118^^^^^99^126^second_cut = pivot + len22;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^first_cut = upper ( len11, pivot, second_cut ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^first_cut = upper ( lo, len11, second_cut ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^first_cut = upper ( lo, pivot, len22 ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^first_cut = upper (  pivot, second_cut ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^first_cut = upper ( lo,  second_cut ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^first_cut = upper ( lo, pivot ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^first_cut = upper ( second_cut, pivot, lo ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^first_cut = upper ( lo, second_cut, pivot ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P7_Replace_Invocation]^first_cut = lower ( lo, pivot, second_cut ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^first_cut =  upper ( new_mid, pivot, second_cut ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^second_cut = lower ( pivot, hi, first_cut ) ;first_cut = upper ( lo, pivot, second_cut ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P2_Replace_Operator]^len11 = first_cut   instanceof   lo;^120^^^^^99^126^len11 = first_cut - lo;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^len11 = len2 - lo;^120^^^^^99^126^len11 = first_cut - lo;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^len11 = first_cut - len2;^120^^^^^99^126^len11 = first_cut - lo;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^len11 = lo - first_cut;^120^^^^^99^126^len11 = first_cut - lo;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^len11 =  mid - lo;^120^^^^^99^126^len11 = first_cut - lo;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^len22 = second_cut - pivot;len11 = first_cut - lo;^120^^^^^99^126^len11 = first_cut - lo;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^second_cut = lower ( pivot, second_cut, first_cut ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^second_cut = lower ( pivot, hi, len2 ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^second_cut = lower ( lo, hi, first_cut ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P14_Delete_Statement]^^114^115^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ; len22 = second_cut - pivot;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^first_cut = upper ( v, pivot, second_cut ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^first_cut = upper ( lo, mid, second_cut ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^first_cut = upper ( lo, pivot, len2 ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^first_cut = upper ( pivot, lo, second_cut ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^first_cut = upper ( lo, len22, second_cut ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P14_Delete_Statement]^^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^rotate ( first_cut, pivot, second_cut ) ;first_cut = upper ( lo, pivot, second_cut ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^rotate (  pivot, second_cut ) ;^122^^^^^99^126^rotate ( first_cut, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^rotate ( first_cut,  second_cut ) ;^122^^^^^99^126^rotate ( first_cut, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^rotate ( first_cut, pivot ) ;^122^^^^^99^126^rotate ( first_cut, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^rotate ( pivot, first_cut, second_cut ) ;^122^^^^^99^126^rotate ( first_cut, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^rotate ( first_cut, second_cut, pivot ) ;^122^^^^^99^126^rotate ( first_cut, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P7_Replace_Invocation]^lower ( first_cut, pivot, second_cut ) ;^122^^^^^99^126^rotate ( first_cut, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^rotate ( mid, pivot, second_cut ) ;^122^^^^^99^126^rotate ( first_cut, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P14_Delete_Statement]^^122^123^^^^99^126^rotate ( first_cut, pivot, second_cut ) ; int new_mid = first_cut + len22;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^first_cut = upper ( lo, pivot, second_cut ) ;rotate ( first_cut, pivot, second_cut ) ;^122^^^^^99^126^rotate ( first_cut, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P1_Replace_Type]^short  new_mid = first_cut + len22;^123^^^^^99^126^int new_mid = first_cut + len22;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^int new_mid = pivot + len22;^123^^^^^99^126^int new_mid = first_cut + len22;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^int new_mid = first_cut + mid;^123^^^^^99^126^int new_mid = first_cut + len22;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^int new_mid = len22 + first_cut;^123^^^^^99^126^int new_mid = first_cut + len22;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^int new_mid = len2 + len22;^123^^^^^99^126^int new_mid = first_cut + len22;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge ( len11, first_cut, new_mid, len11, len22 ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge ( lo, len22, new_mid, len11, len22 ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge ( lo, first_cut, len2, len11, len22 ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge ( lo, first_cut, new_mid, lo, len22 ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge ( lo, first_cut, new_mid, len11, len2 ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge (  first_cut, new_mid, len11, len22 ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge ( lo,  new_mid, len11, len22 ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge ( lo, first_cut,  len11, len22 ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge ( lo, first_cut, new_mid,  len22 ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge ( lo, first_cut, new_mid, len11 ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge ( len11, first_cut, new_mid, lo, len22 ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge ( lo, len22, new_mid, len11, first_cut ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge ( lo, new_mid, first_cut, len11, len22 ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge ( lo, first_cut, len11, new_mid, len22 ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge ( lo, first_cut, len22, len11, new_mid ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^merge ( mid, first_cut, new_mid, len11, len22 ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P14_Delete_Statement]^^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;merge ( lo, first_cut, new_mid, len11, len22 ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P2_Replace_Operator]^merge ( new_mid, second_cut, hi, len1  >=  len11, len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P2_Replace_Operator]^merge ( new_mid, second_cut, hi, len1 - len11, len2  >=  len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge ( v, second_cut, hi, len1 - len11, len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge ( new_mid, len2, hi, len1 - len11, len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge ( new_mid, second_cut, lo, len1 - len11, len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge ( new_mid, second_cut, hi, v - len11, len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge ( new_mid, second_cut, hi, len1 - lo, len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len2 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge (  second_cut, hi, len1 - len11, len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge ( new_mid,  hi, len1 - len11, len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge ( new_mid, second_cut,  len1 - len11, len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge ( new_mid, second_cut, hi - len11, len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge ( new_mid, second_cut, hi, len1 -  len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge ( new_mid, second_cut, hi, len1 - len11 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge ( len11, second_cut, hi, len1 - new_mid, len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge ( second_cut, new_mid, hi, len1 - len11, len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge ( new_mid, second_cut, len22, len1 - len11, len2 - hi ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge ( new_mid, second_cut, hi, len22 - len11, len2 - len1 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge ( len2, second_cut, hi, len1 - len11, new_mid - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^merge ( new_mid, second_cut, hi, len1 - len11, len22 - len2 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^merge ( new_mid, new_mid, hi, len1 - len11, len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P14_Delete_Statement]^^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^merge ( lo, first_cut, new_mid, len11, len22 ) ;merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[P1_Replace_Type]^short  lot = lo;^129^^^^^128^142^int lot = lo;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^int midt = lo;^129^^^^^128^142^int lot = lo;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^int len22t = lo;^129^^^^^128^142^int lot = lo;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^int diff = hi - lo;int lot = lo;^129^^^^^128^142^int lot = lo;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^int len = hi - lo;int lot = lo;^129^^^^^128^142^int lot = lo;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^int v = j;int lot = lo;^129^^^^^128^142^int lot = lo;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P1_Replace_Type]^short  hit = mid - 1;^130^^^^^128^142^int hit = mid - 1;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P2_Replace_Operator]^int hit = mid  !=  1;^130^^^^^128^142^int hit = mid - 1;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P3_Replace_Literal]^int hit = mid ;^130^^^^^128^142^int hit = mid - 1;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^int hit = len22 - 1;^130^^^^^128^142^int hit = mid - 1;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^int diff = hi - lo;int hit = mid - 1;^130^^^^^128^142^int hit = mid - 1;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^int half = len / 2;int hit = mid - 1;^130^^^^^128^142^int hit = mid - 1;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^int len = hi - lo;int hit = mid - 1;^130^^^^^128^142^int hit = mid - 1;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^int j = hi - 1;int hit = mid - 1;^130^^^^^128^142^int hit = mid - 1;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P2_Replace_Operator]^while  ( lot <= hit )  {^131^^^^^128^142^while  ( lot < hit )  {^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^while  ( lo < hit )  {^131^^^^^128^142^while  ( lot < hit )  {^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^while  ( lot < lo )  {^131^^^^^128^142^while  ( lot < hit )  {^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^while  ( hit < lot )  {^131^^^^^128^142^while  ( lot < hit )  {^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^while  ( len22 < hit )  {^131^^^^^128^142^while  ( lot < hit )  {^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P14_Delete_Statement]^^132^^^^^128^142^swap ( lot++, hit-- ) ;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^swap ( i, hi - 1 ) ;swap ( lot++, hit-- ) ;^132^^^^^128^142^swap ( lot++, hit-- ) ;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lo, hi ) ;swap ( lot++, hit-- ) ;^132^^^^^128^142^swap ( lot++, hit-- ) ;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^swap ( j - 1, j ) ;swap ( lot++, hit-- ) ;^132^^^^^128^142^swap ( lot++, hit-- ) ;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^swap ( i, j ) ;swap ( lot++, hit-- ) ;^132^^^^^128^142^swap ( lot++, hit-- ) ;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lo, i ) ;swap ( lot++, hit-- ) ;^132^^^^^128^142^swap ( lot++, hit-- ) ;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^swap ( i, hi ) ;swap ( lot++, hit-- ) ;^132^^^^^128^142^swap ( lot++, hit-- ) ;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^swap ( pivot, lo ) ;swap ( lot++, hit-- ) ;^132^^^^^128^142^swap ( lot++, hit-- ) ;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^lot = len11; hit = hi - 1;^134^^^^^128^142^lot = mid; hit = hi - 1;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^lot =  len2; hit^134^^^^^128^142^lot = mid; hit = hi - 1;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^lot = lo; hit = hi - 1;lot = mid; hit = hi - 1;^134^^^^^128^142^lot = mid; hit = hi - 1;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P2_Replace_Operator]^lot = mid; hit = hi  >>  1;^134^^^^^128^142^lot = mid; hit = hi - 1;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P3_Replace_Literal]^lot = mid; hit = hi - first_cut;^134^^^^^128^142^lot = mid; hit = hi - 1;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^lot = mid; len2t = hi - 1;^134^^^^^128^142^lot = mid; hit = hi - 1;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^lot = mid; hit = hi - 1 - 0;^134^^^^^128^142^lot = mid; hit = hi - 1;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P2_Replace_Operator]^while  ( lot <= hit )  {^135^^^^^128^142^while  ( lot < hit )  {^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^while  ( len22 < hit )  {^135^^^^^128^142^while  ( lot < hit )  {^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^while  ( lot < len22 )  {^135^^^^^128^142^while  ( lot < hit )  {^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^while  ( hit < lot )  {^135^^^^^128^142^while  ( lot < hit )  {^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^while  ( lot < len2 )  {^135^^^^^128^142^while  ( lot < hit )  {^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P14_Delete_Statement]^^136^^^^^128^142^swap ( lot++, hit-- ) ;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^swap ( i, hi - 1 ) ;swap ( lot++, hit-- ) ;^136^^^^^128^142^swap ( lot++, hit-- ) ;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lo, hi ) ;swap ( lot++, hit-- ) ;^136^^^^^128^142^swap ( lot++, hit-- ) ;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^swap ( j - 1, j ) ;swap ( lot++, hit-- ) ;^136^^^^^128^142^swap ( lot++, hit-- ) ;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^swap ( i, j ) ;swap ( lot++, hit-- ) ;^136^^^^^128^142^swap ( lot++, hit-- ) ;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lo, i ) ;swap ( lot++, hit-- ) ;^136^^^^^128^142^swap ( lot++, hit-- ) ;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^swap ( i, hi ) ;swap ( lot++, hit-- ) ;^136^^^^^128^142^swap ( lot++, hit-- ) ;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^swap ( pivot, lo ) ;swap ( lot++, hit-- ) ;^136^^^^^128^142^swap ( lot++, hit-- ) ;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^lot = len2; hit = hi - 1;^138^^^^^128^142^lot = lo; hit = hi - 1;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^lot =  len11; hit^138^^^^^128^142^lot = lo; hit = hi - 1;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^lot = mid; hit = hi - 1;lot = lo; hit = hi - 1;^138^^^^^128^142^lot = lo; hit = hi - 1;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P2_Replace_Operator]^lot = lo; hit = hi  ||  1;^138^^^^^128^142^lot = lo; hit = hi - 1;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P3_Replace_Literal]^lot = lo; hit = hi - len2;^138^^^^^128^142^lot = lo; hit = hi - 1;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^lot = lo; hit = hi - 3;^138^^^^^128^142^lot = lo; hit = hi - 1;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P2_Replace_Operator]^while  ( lot > hit )  {^139^^^^^128^142^while  ( lot < hit )  {^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^while  ( mid < hit )  {^139^^^^^128^142^while  ( lot < hit )  {^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^while  ( lot < mid )  {^139^^^^^128^142^while  ( lot < hit )  {^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P5_Replace_Variable]^while  ( hit < lot )  {^139^^^^^128^142^while  ( lot < hit )  {^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P8_Replace_Mix]^while  ( new_mid < hit )  {^139^^^^^128^142^while  ( lot < hit )  {^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P14_Delete_Statement]^^140^^^^^128^142^swap ( lot++, hit-- ) ;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^swap ( i, hi - 1 ) ;swap ( lot++, hit-- ) ;^140^^^^^128^142^swap ( lot++, hit-- ) ;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lo, hi ) ;swap ( lot++, hit-- ) ;^140^^^^^128^142^swap ( lot++, hit-- ) ;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^swap ( j - 1, j ) ;swap ( lot++, hit-- ) ;^140^^^^^128^142^swap ( lot++, hit-- ) ;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^swap ( i, j ) ;swap ( lot++, hit-- ) ;^140^^^^^128^142^swap ( lot++, hit-- ) ;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^swap ( lo, i ) ;swap ( lot++, hit-- ) ;^140^^^^^128^142^swap ( lot++, hit-- ) ;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^swap ( i, hi ) ;swap ( lot++, hit-- ) ;^140^^^^^128^142^swap ( lot++, hit-- ) ;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P11_Insert_Donor_Statement]^swap ( pivot, lo ) ;swap ( lot++, hit-- ) ;^140^^^^^128^142^swap ( lot++, hit-- ) ;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[P1_Replace_Type]^long  len = hi - lo;^145^^^^^144^157^int len = hi - lo;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P2_Replace_Operator]^int len = hi  ||  lo;^145^^^^^144^157^int len = hi - lo;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^int len = len22 - lo;^145^^^^^144^157^int len = hi - lo;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^int len = hi - len22;^145^^^^^144^157^int len = hi - lo;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^int len = lo - hi;^145^^^^^144^157^int len = hi - lo;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^int len = hi - lot;^145^^^^^144^157^int len = hi - lo;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P11_Insert_Donor_Statement]^int diff = hi - lo;int len = hi - lo;^145^^^^^144^157^int len = hi - lo;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P11_Insert_Donor_Statement]^int mid = lo + half;int len = hi - lo;^145^^^^^144^157^int len = hi - lo;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P11_Insert_Donor_Statement]^int hit = mid - 1;int len = hi - lo;^145^^^^^144^157^int len = hi - lo;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P11_Insert_Donor_Statement]^int lot = lo;int len = hi - lo;^145^^^^^144^157^int len = hi - lo;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P11_Insert_Donor_Statement]^int j = hi - 1;int len = hi - lo;^145^^^^^144^157^int len = hi - lo;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P2_Replace_Operator]^while  ( len >= 0 )  {^146^^^^^144^157^while  ( len > 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P3_Replace_Literal]^while  ( len > 5 )  {^146^^^^^144^157^while  ( len > 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P3_Replace_Literal]^while  ( len > len11 )  {^146^^^^^144^157^while  ( len > 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^while  ( mid > 0 )  {^146^^^^^144^157^while  ( len > 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^while  ( lot > 0 )  {^146^^^^^144^157^while  ( len > 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P2_Replace_Operator]^if  ( compare ( mid, val )  <= 0 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P3_Replace_Literal]^if  ( compare ( mid, val )  < pivot )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^if  ( compare ( len2, val )  < 0 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^if  ( compare ( mid, lot )  < 0 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^if  ( compare (  val )  < 0 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^if  ( compare ( mid )  < 0 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^if  ( compare ( val, mid )  < 0 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P6_Replace_Expression]^if  ( mid + 1 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P6_Replace_Expression]^if  ( len - half - 1 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P6_Replace_Expression]^if  ( len - half )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P7_Replace_Invocation]^if  ( swap ( mid, val )  < 0 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^if  ( swap ( mid, val )  < 2 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P9_Replace_Statement]^if  ( compare ( pivot, lo )  < 0 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P9_Replace_Statement]^if  ( compare ( lo, hi )  > 0 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P9_Replace_Statement]^if  ( compare ( lo, i )  > 0 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P9_Replace_Statement]^if  ( compare ( j - 1, j )  > 0 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P9_Replace_Statement]^if  ( compare ( i, hi )  > 0 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P15_Unwrap_Block]^lo = mid + 1; len = (len - half) - 1;^149^150^151^152^153^144^157^if  ( compare ( mid, val )  < 0 )  { lo = mid + 1; len = len - half -1; } else { len = half; }^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P16_Remove_Block]^^149^150^151^152^153^144^157^if  ( compare ( mid, val )  < 0 )  { lo = mid + 1; len = len - half -1; } else { len = half; }^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P13_Insert_Block]^if  (  ( compare ( val, mid )  )  < 0 )  {     len = half; }else {     lo = mid + 1;     len =  ( len - half )  - 1; }^149^^^^^144^157^[Delete]^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^len = lot;^153^^^^^144^157^len = half;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P11_Insert_Donor_Statement]^len = len - half -1;len = half;^153^^^^^144^157^len = half;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P3_Replace_Literal]^lo = mid ;^150^^^^^144^157^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^lo = new_mid + 1;^150^^^^^144^157^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^lo = mid + 0;^150^^^^^144^157^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P11_Insert_Donor_Statement]^lo = i + 1;lo = mid + 1;^150^^^^^144^157^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P2_Replace_Operator]^len = len  <=  half -1;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P2_Replace_Operator]^len = len  >  half -1;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P3_Replace_Literal]^len = len - half -2;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^len = len22 - half -1;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^len = len - lot -1;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^len = half - len -1;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^len = len - half -1 * 4;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P11_Insert_Donor_Statement]^len = half;len = len - half -1;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^lo = mid + 2;^150^^^^^144^157^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P2_Replace_Operator]^len = len  >=  half -1;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P2_Replace_Operator]^len = len  ^  half -1;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P3_Replace_Literal]^len = len - half --1;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^len = lot - half -1;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^len = len - mid -1;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^len = len - half -0;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^len = len2;^153^^^^^144^157^len = half;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^len =  new_mid;^153^^^^^144^157^len = half;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P1_Replace_Type]^short  half = len / 2;^147^^^^^144^157^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P2_Replace_Operator]^int half = len * 2;^147^^^^^144^157^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^int half = val / 2;^147^^^^^144^157^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^int half = new_mid / 2;^147^^^^^144^157^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P11_Insert_Donor_Statement]^int diff = hi - lo;int half = len / 2;^147^^^^^144^157^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P11_Insert_Donor_Statement]^int hit = mid - 1;int half = len / 2;^147^^^^^144^157^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P11_Insert_Donor_Statement]^int j = hi - 1;int half = len / 2;^147^^^^^144^157^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P11_Insert_Donor_Statement]^int len11, len22;int half = len / 2;^147^^^^^144^157^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P1_Replace_Type]^short  mid= lo + half;^148^^^^^144^157^int mid= lo + half;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^int mid= len2 + half;^148^^^^^144^157^int mid= lo + half;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^int mid= lo + lo;^148^^^^^144^157^int mid= lo + half;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^int mid= half + lo;^148^^^^^144^157^int mid= lo + half;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^int mid= lo + lot;^148^^^^^144^157^int mid= lo + half;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P11_Insert_Donor_Statement]^int mid = lo + diff / 2;int mid= lo + half;^148^^^^^144^157^int mid= lo + half;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^if  ( compare ( pivot, val )  < 0 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^if  ( compare ( mid, second_cut )  < 0 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^if  ( compare ( mid, len11 )  < 0 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P3_Replace_Literal]^if  ( compare ( mid, val )  < hit )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^if  ( compare ( len22, val )  < 0 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^if  ( compare ( mid, len22 )  < 0 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^if  ( compare ( mid, len22 )  < 1 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^len =  pivot;^153^^^^^144^157^len = half;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P3_Replace_Literal]^lo = mid + hit;^150^^^^^144^157^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^lo = mid + 1 / 4;^150^^^^^144^157^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P3_Replace_Literal]^len = len - half -pivot;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^len = mid - half -1;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^len = len - lo -1;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^len = len - half -1 >> 0;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P3_Replace_Literal]^lo = mid + hi;^150^^^^^144^157^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P2_Replace_Operator]^len = len  ||  half -1;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P2_Replace_Operator]^len = len  <  half -1;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^len = lo - half -1;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^len = len22;^153^^^^^144^157^len = half;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^len =  lo;^153^^^^^144^157^len = half;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P1_Replace_Type]^long  half = len / 2;^147^^^^^144^157^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P2_Replace_Operator]^int half = len - 2;^147^^^^^144^157^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P3_Replace_Literal]^int half = len / pivot;^147^^^^^144^157^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^int half = mid / 2;^147^^^^^144^157^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^int half = lot / 2;^147^^^^^144^157^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P1_Replace_Type]^long  mid= lo + half;^148^^^^^144^157^int mid= lo + half;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^int mid= lot + half;^148^^^^^144^157^int mid= lo + half;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^int mid= len22 + half;^148^^^^^144^157^int mid= lo + half;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^if  ( compare ( mid, len2 )  < 0 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^return len2;^156^^^^^144^157^return lo;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P1_Replace_Type]^long  len = hi - lo;^160^^^^^159^172^int len = hi - lo;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P2_Replace_Operator]^int len = hi  <  lo;^160^^^^^159^172^int len = hi - lo;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^int len = hi - len22;^160^^^^^159^172^int len = hi - lo;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^int len = lo - hi;^160^^^^^159^172^int len = hi - lo;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^int len = hi - val;^160^^^^^159^172^int len = hi - lo;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P11_Insert_Donor_Statement]^int diff = hi - lo;int len = hi - lo;^160^^^^^159^172^int len = hi - lo;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P11_Insert_Donor_Statement]^int mid = lo + half;int len = hi - lo;^160^^^^^159^172^int len = hi - lo;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P11_Insert_Donor_Statement]^int hit = mid - 1;int len = hi - lo;^160^^^^^159^172^int len = hi - lo;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P11_Insert_Donor_Statement]^int lot = lo;int len = hi - lo;^160^^^^^159^172^int len = hi - lo;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P11_Insert_Donor_Statement]^int j = hi - 1;int len = hi - lo;^160^^^^^159^172^int len = hi - lo;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P2_Replace_Operator]^while  ( len >= 0 )  {^161^^^^^159^172^while  ( len > 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P3_Replace_Literal]^while  ( len > 7 )  {^161^^^^^159^172^while  ( len > 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P3_Replace_Literal]^while  ( len > 9 )  {^161^^^^^159^172^while  ( len > 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^while  ( pivot > 0 )  {^161^^^^^159^172^while  ( len > 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^while  ( mid > 0 )  {^161^^^^^159^172^while  ( len > 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P2_Replace_Operator]^if  ( compare ( val, mid )  == 0 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P3_Replace_Literal]^if  ( compare ( val, mid )  < 3 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^if  ( compare ( len2, mid )  < 0 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^if  ( compare ( val, len11 )  < 0 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^if  ( compare (  mid )  < 0 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^if  ( compare ( val )  < 0 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^if  ( compare ( mid, val )  < 0 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P6_Replace_Expression]^if  ( mid + 1 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P6_Replace_Expression]^if  ( len - half - 1 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P6_Replace_Expression]^if  ( len - half )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P7_Replace_Invocation]^if  ( swap ( val, mid )  < 0 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^if  ( compare ( val, mid )  < 2 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P9_Replace_Statement]^if  ( compare ( pivot, lo )  < 0 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P9_Replace_Statement]^if  ( compare ( lo, hi )  > 0 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P9_Replace_Statement]^if  ( compare ( lo, i )  > 0 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P9_Replace_Statement]^if  ( compare ( j - 1, j )  > 0 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P9_Replace_Statement]^if  ( compare ( i, hi )  > 0 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P15_Unwrap_Block]^len = half;^164^165^166^167^168^159^172^if  ( compare ( val, mid )  < 0 )  { len = half; } else { lo = mid + 1; len = len - half -1; }^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P16_Remove_Block]^^164^165^166^167^168^159^172^if  ( compare ( val, mid )  < 0 )  { len = half; } else { lo = mid + 1; len = len - half -1; }^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P13_Insert_Block]^if  (  ( compare ( mid, val )  )  < 0 )  {     lo = mid + 1;     len =  ( len - half )  - 1; }else {     len = half; }^164^^^^^159^172^[Delete]^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P3_Replace_Literal]^lo = mid + QUICKSORT_THRESHOLD;^167^^^^^159^172^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^lo = lot + 1;^167^^^^^159^172^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^lo = mid + 3;^167^^^^^159^172^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P11_Insert_Donor_Statement]^lo = i + 1;lo = mid + 1;^167^^^^^159^172^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P2_Replace_Operator]^len = len  ^  half -1;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P2_Replace_Operator]^len = len  !=  half -1;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P3_Replace_Literal]^len = len - half -3;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^len = lo - half -1;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^len = len - len22 -1;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^len = half - len -1;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^len = len - half -1L;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P11_Insert_Donor_Statement]^len = half;len = len - half -1;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^len = second_cut;^165^^^^^159^172^len = half;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^len =  len22;^165^^^^^159^172^len = half;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P11_Insert_Donor_Statement]^len = len - half -1;len = half;^165^^^^^159^172^len = half;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^len =  lot;^165^^^^^159^172^len = half;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P3_Replace_Literal]^lo = mid + first_cut;^167^^^^^159^172^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^lo = len11 + 1;^167^^^^^159^172^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^lo = mid + 1 - 0;^167^^^^^159^172^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P2_Replace_Operator]^len = len  &  half -1;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P2_Replace_Operator]^len = len   instanceof   half -1;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^len = lot - half -1;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^len = len - lo -1;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^len = len - half -1 << 1;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P1_Replace_Type]^short  half = len / 2;^162^^^^^159^172^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P2_Replace_Operator]^int half = len + 2;^162^^^^^159^172^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P3_Replace_Literal]^int half = len / lo;^162^^^^^159^172^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P11_Insert_Donor_Statement]^int diff = hi - lo;int half = len / 2;^162^^^^^159^172^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P11_Insert_Donor_Statement]^int hit = mid - 1;int half = len / 2;^162^^^^^159^172^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P11_Insert_Donor_Statement]^int j = hi - 1;int half = len / 2;^162^^^^^159^172^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P11_Insert_Donor_Statement]^int len11, len22;int half = len / 2;^162^^^^^159^172^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P1_Replace_Type]^short  mid = lo + half;^163^^^^^159^172^int mid = lo + half;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^int mid = len11 + half;^163^^^^^159^172^int mid = lo + half;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^int mid = lo + second_cut;^163^^^^^159^172^int mid = lo + half;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^int mid = half + lo;^163^^^^^159^172^int mid = lo + half;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^int mid = lo + new_mid;^163^^^^^159^172^int mid = lo + half;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P11_Insert_Donor_Statement]^int diff = hi - lo;int mid = lo + half;^163^^^^^159^172^int mid = lo + half;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P11_Insert_Donor_Statement]^int len = hi - lo;int mid = lo + half;^163^^^^^159^172^int mid = lo + half;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P11_Insert_Donor_Statement]^int mid = lo + diff / 2;int mid = lo + half;^163^^^^^159^172^int mid = lo + half;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^if  ( compare ( len11, mid )  < 0 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^if  ( compare ( val, pivot )  < 0 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P2_Replace_Operator]^if  ( compare ( val, mid )  <= 0 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P3_Replace_Literal]^if  ( compare ( val, mid )  < new_mid )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^if  ( compare ( len22, mid )  < 0 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^if  ( compare ( val, lo )  < 0 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^if  ( compare ( val, mid )  < 0 + 3 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P3_Replace_Literal]^lo = mid + lo;^167^^^^^159^172^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^lo = len2 + 1;^167^^^^^159^172^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^lo = mid + 1 * 3;^167^^^^^159^172^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P2_Replace_Operator]^len = len  <=  half -1;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P2_Replace_Operator]^len = len  ||  half -1;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P3_Replace_Literal]^len = len - half -new_mid;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^len = len - half -4;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^len =  mid;^165^^^^^159^172^len = half;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^len =  val;^165^^^^^159^172^len = half;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P3_Replace_Literal]^lo = mid + len;^167^^^^^159^172^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^lo = v + 1;^167^^^^^159^172^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^lo = mid + 0;^167^^^^^159^172^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P2_Replace_Operator]^len = len  >=  half -1;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P3_Replace_Literal]^len = len - half --8;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^len = len22 - half -1;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^len = len - lot -1;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^len = len - half -0;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P3_Replace_Literal]^int half = len / 10;^162^^^^^159^172^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^int half = mid / 2;^162^^^^^159^172^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^int half = len22 / 2;^162^^^^^159^172^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^int mid = len2 + half;^163^^^^^159^172^int mid = lo + half;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^int mid = lo + lot;^163^^^^^159^172^int mid = lo + half;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^if  ( compare ( lot, mid )  < 0 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^if  ( swap ( val, len22 )  < 0 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P5_Replace_Variable]^return v;^171^^^^^159^172^return lo;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[P8_Replace_Mix]^return mid;^171^^^^^159^172^return lo;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
