[P1_Replace_Type]^public static final char DEBUG_LOCATION_PROPERTY = "cglib.debugLocation";^26^^^^^21^31^public static final String DEBUG_LOCATION_PROPERTY = "cglib.debugLocation";^[CLASS] DebuggingClassWriter 1   [VARIABLES] 
[P3_Replace_Literal]^public static final String DEBUG_LOCATION_PROPERTY = "cglib.debugLocglib.debugLocation";^26^^^^^21^31^public static final String DEBUG_LOCATION_PROPERTY = "cglib.debugLocation";^[CLASS] DebuggingClassWriter 1   [VARIABLES] 
[P8_Replace_Mix]^public static final String DEBUG_LOCATION_PROPERTY  = null ;^26^^^^^21^31^public static final String DEBUG_LOCATION_PROPERTY = "cglib.debugLocation";^[CLASS] DebuggingClassWriter 1   [VARIABLES] 
[P1_Replace_Type]^private static char debugLocation;^28^^^^^23^33^private static String debugLocation;^[CLASS] DebuggingClassWriter 1   [VARIABLES] 
[P1_Replace_Type]^private char className;^31^^^^^26^36^private String className;^[CLASS] DebuggingClassWriter 1   [VARIABLES] 
[P1_Replace_Type]^private char superName;^32^^^^^27^37^private String superName;^[CLASS] DebuggingClassWriter 1   [VARIABLES] 
[P14_Delete_Statement]^^47^^^^^46^48^super ( flags ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] <init> [RETURN_TYPE] DebuggingClassWriter(int)   int flags [VARIABLES] int  flags  boolean  traceEnabled  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  superName  
[P5_Replace_Variable]^className = superName.replace ( '/', '.' ) ;^56^^^^^50^59^className = name.replace ( '/', '.' ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] boolean  traceEnabled  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  name  signature  superName  String[]  interfaces  int  access  version  
[P11_Insert_Donor_Statement]^this.superName = superName.replace ( '/', '.' ) ;className = name.replace ( '/', '.' ) ;^56^^^^^50^59^className = name.replace ( '/', '.' ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] boolean  traceEnabled  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  name  signature  superName  String[]  interfaces  int  access  version  
[P8_Replace_Mix]^className = signature.replace ( '/', '.' ) ;^56^^^^^50^59^className = name.replace ( '/', '.' ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] boolean  traceEnabled  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  name  signature  superName  String[]  interfaces  int  access  version  
[P14_Delete_Statement]^^56^57^^^^50^59^className = name.replace ( '/', '.' ) ; this.superName = superName.replace ( '/', '.' ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] boolean  traceEnabled  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  name  signature  superName  String[]  interfaces  int  access  version  
[P5_Replace_Variable]^this.superName = name.replace ( '/', '.' ) ;^57^^^^^50^59^this.superName = superName.replace ( '/', '.' ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] boolean  traceEnabled  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  name  signature  superName  String[]  interfaces  int  access  version  
[P8_Replace_Mix]^this.superName =  signature.replace ( '/', '.' ) ;^57^^^^^50^59^this.superName = superName.replace ( '/', '.' ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] boolean  traceEnabled  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  name  signature  superName  String[]  interfaces  int  access  version  
[P11_Insert_Donor_Statement]^className = name.replace ( '/', '.' ) ;this.superName = superName.replace ( '/', '.' ) ;^57^^^^^50^59^this.superName = superName.replace ( '/', '.' ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] boolean  traceEnabled  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  name  signature  superName  String[]  interfaces  int  access  version  
[P14_Delete_Statement]^^57^58^^^^50^59^this.superName = superName.replace ( '/', '.' ) ; super.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] boolean  traceEnabled  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  name  signature  superName  String[]  interfaces  int  access  version  
[P5_Replace_Variable]^super.visit ( version, access, name, signatureName, interfaces ) ;^58^^^^^50^59^super.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] boolean  traceEnabled  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  name  signature  superName  String[]  interfaces  int  access  version  
[P5_Replace_Variable]^super.visit (  access, name, signature, superName, interfaces ) ;^58^^^^^50^59^super.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] boolean  traceEnabled  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  name  signature  superName  String[]  interfaces  int  access  version  
[P5_Replace_Variable]^super.visit ( version,  name, signature, superName, interfaces ) ;^58^^^^^50^59^super.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] boolean  traceEnabled  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  name  signature  superName  String[]  interfaces  int  access  version  
[P5_Replace_Variable]^super.visit ( version, access,  signature, superName, interfaces ) ;^58^^^^^50^59^super.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] boolean  traceEnabled  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  name  signature  superName  String[]  interfaces  int  access  version  
[P5_Replace_Variable]^super.visit ( version, access, name,  superName, interfaces ) ;^58^^^^^50^59^super.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] boolean  traceEnabled  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  name  signature  superName  String[]  interfaces  int  access  version  
[P5_Replace_Variable]^super.visit ( version, access, name, signature,  interfaces ) ;^58^^^^^50^59^super.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] boolean  traceEnabled  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  name  signature  superName  String[]  interfaces  int  access  version  
[P5_Replace_Variable]^super.visit ( version, access, name, signature, superName ) ;^58^^^^^50^59^super.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] boolean  traceEnabled  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  name  signature  superName  String[]  interfaces  int  access  version  
[P14_Delete_Statement]^^58^^^^^50^59^super.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] boolean  traceEnabled  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  name  signature  superName  String[]  interfaces  int  access  version  
[P5_Replace_Variable]^return signature;^66^^^^^65^67^return superName;^[CLASS] DebuggingClassWriter 1  [METHOD] getSuperName [RETURN_TYPE] String   [VARIABLES] boolean  traceEnabled  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  name  signature  superName  
[P2_Replace_Operator]^if  ( debugLocation == null )  {^77^^^^^62^92^if  ( debugLocation != null )  {^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^if  ( superName != null )  {^77^^^^^62^92^if  ( debugLocation != null )  {^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P6_Replace_Expression]^if  (  ( debugLocation )  +  ( separatorChar )  + dirs )  {^77^^^^^62^92^if  ( debugLocation != null )  {^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P6_Replace_Expression]^if  ( debugLocation + separatorChar )  {^77^^^^^62^92^if  ( debugLocation != null )  {^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P6_Replace_Expression]^if  ( dirs + ".class" )  {^77^^^^^62^92^if  ( debugLocation != null )  {^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P6_Replace_Expression]^if  ( dirs + ".asm" )  {^77^^^^^62^92^if  ( debugLocation != null )  {^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^if  ( debugLocation != true )  {^77^^^^^62^92^if  ( debugLocation != null )  {^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, -1 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^cr.accept (  0 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P14_Delete_Statement]^^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P7_Replace_Invocation]^pw.PrintWriter (  ) ;^98^^^^^83^113^pw.flush (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P14_Delete_Statement]^^98^^^^^83^113^pw.flush (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P11_Insert_Donor_Statement]^out.close (  ) ;pw.flush (  ) ;^98^^^^^83^113^pw.flush (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^file = new File ( new File ( debugLocation ) , dirs   instanceof   ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^file = new File ( new File ( debugLocation ) , dirs + ".aasm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P4_Replace_Constructor]^file = file =  new File ( new File ( debugLocation ) ,  ( dirs + ".class" )  )  , dirs + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^file = new File ( new File ( debugLocation ) , signature + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^file = new File ( new File ( signature ) , dirs + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^file = new File ( new File ( debugLocation )  + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^file = new File ( new File ( dirs ) , debugLocation + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^file =  new File ( new File ( debugLocation ) , superName + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^out =  new BufferedOutputStream ( new FileOutputStream ( null )  ) ;^92^^^^^77^107^out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^file = new File ( new File ( debugLocation ) , dirs  >>  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^file = new File ( new File ( debugLocation ) , dirs + ".asm.a" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^file = new File ( new File ( superName ) , dirs + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^file = new File ( new File ( name ) , dirs + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, 9 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P7_Replace_Invocation]^out.write (  ) ;^100^^^^^85^115^out.close (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P7_Replace_Invocation]^out .write ( b )  ;^100^^^^^85^115^out.close (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P14_Delete_Statement]^^100^^^^^85^115^out.close (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P11_Insert_Donor_Statement]^out.write ( b ) ;out.close (  ) ;^100^^^^^85^115^out.close (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P11_Insert_Donor_Statement]^pw.flush (  ) ;out.close (  ) ;^100^^^^^85^115^out.close (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^file = new File ( new File ( debugLocation ) , dirs + "." ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^file = new File ( new File ( debugLocation ) , dirs  <  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^file = new File ( new File ( debugLocation ) , dirs + ".asm." ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, -7 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P14_Delete_Statement]^^85^^^^^70^100^out.write ( b ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P11_Insert_Donor_Statement]^out.close (  ) ;out.write ( b ) ;^85^^^^^70^100^out.write ( b ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, 2 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^file = new File ( new File ( debugLocation ) , dirs  ||  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^file =   new File ( new File ( debugLocation ) ,  ( dirs + ".class" )  )  , name + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ||  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (   instanceof   ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^new File ( debugLocation + File.separatorChar + superName ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^new File ( superName + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^new File ( dirs + File.separatorChar + debugLocation ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^File file = new File ( new File ( debugLocation ) , dirs  !=  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P4_Replace_Constructor]^File file = new File ( new File ( debugLocation ) ,  ( dirs + ".asm" )  )  , dirs + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^File file = new File ( new File ( superName ) , dirs + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^File file = new File ( new File ( debugLocation )  + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^File file = new File ( new File ( dirs ) , debugLocation + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^File file = new File ( new File ( signature ) , dirs + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^file = new File ( new File ( debugLocation ) , dirs  ==  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^file = new File ( new File ( debugLocation ) , dirs + ".a" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^File file = new File ( new File ( debugLocation ) , dirs  &  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^File file = new File ( new File ( debugLocation ) , dirs + "" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^File file = new File ( new File ( debugLocation ) , name + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^File file = new File ( new File ( debugLocation ) , superName + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  >  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ==  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^new File ( signature + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P7_Replace_Invocation]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .File (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P7_Replace_Invocation]^new File ( debugLocation + File.separatorChar + dirs ) .File (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P7_Replace_Invocation]^new File ( debugLocation + File.separatorChar + dirs )  .File ( className )  .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^new File ( debugLocation + File.separatorChar + superName ) .getParentFile (  ) .File (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P14_Delete_Statement]^^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  &  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^out .close (  )  ;^85^^^^^70^100^out.write ( b ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P7_Replace_Invocation]^out.write (  ) ;^87^^^^^72^102^out.close (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P14_Delete_Statement]^^87^^^^^72^102^out.close (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P11_Insert_Donor_Statement]^out.write ( b ) ;out.close (  ) ;^87^^^^^72^102^out.close (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P11_Insert_Donor_Statement]^pw.flush (  ) ;out.close (  ) ;^87^^^^^72^102^out.close (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, 4 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P14_Delete_Statement]^^97^98^^^^82^112^cr.accept ( tcv, 0 ) ; pw.flush (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^file = new File ( new File ( debugLocation ) , dirs  >=  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^file =   new File ( new File ( debugLocation ) ,  ( dirs + ".class" )  )  , null + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ^  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  &&  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^new File ( debugLocation + File.separatorChar + signature ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^File file = new File ( new File ( debugLocation ) , dirs   instanceof   ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^File file = new File ( new File ( debugLocation ) , dirs + "sclass" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^file = new File ( new File ( debugLocation ) , dirs  !=  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^file = new File ( new File ( debugLocation ) , dirs + "a" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P1_Replace_Type]^char dirs = className.replace ( '.', File.separatorChar ) ;^78^^^^^63^93^String dirs = className.replace ( '.', File.separatorChar ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^String dirs = superName.replace ( '.', File.separatorChar ) ;^78^^^^^63^93^String dirs = className.replace ( '.', File.separatorChar ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^File file = new File ( new File ( debugLocation ) , dirs  <<  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^File file = new File ( new File ( debugLocation ) , dirs + "c" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^File file = new File ( new File ( name ) , dirs + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^String dirs = name.replace ( '.', File.separatorChar ) ;^78^^^^^63^93^String dirs = className.replace ( '.', File.separatorChar ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^String dirs = signature.replace ( '.', File.separatorChar ) ;^78^^^^^63^93^String dirs = className.replace ( '.', File.separatorChar ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P14_Delete_Statement]^^78^^^^^63^93^String dirs = className.replace ( '.', File.separatorChar ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  >=  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  <<  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P7_Replace_Invocation]^new File ( debugLocation + File.separatorChar + dirs )  .File ( dirs )  .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^new File ( debugLocation + File.separatorChar + superName ) .File (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, 7 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, 6 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^file = new File ( new File ( debugLocation ) , dirs  &&  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, -2 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, -8 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^file = new File ( new File ( debugLocation ) , dirs  &  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^cr .ClassReader ( b )  ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, 1 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^file = new File ( new File ( debugLocation ) , dirs  ^  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^file = new File ( new File ( debugLocation ) , dirs + ".asm.as" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^new File ( name + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^File file = new File ( new File ( debugLocation ) , dirs  >>  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^File file = new File ( new File ( debugLocation ) , dirs + ".class." ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^file = new File ( new File ( debugLocation ) , dirs  <=  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^file = new File ( new File ( debugLocation ) , dirs + ".as" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P7_Replace_Invocation]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  )  .File ( name )  ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^new File ( debugLocation + File.separatorChar + signature ) .File (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^new File ( superName + File.separatorChar + dirs ) .File (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv,  ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^File file = new File ( new File ( debugLocation ) , dirs + "clasclass" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^File file = new File ( new File ( debugLocation ) , signature + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^File file = new File ( new File ( debugLocation ) , dirs  <  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^File file = new File ( new File ( debugLocation ) , dirs + ".cl" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P14_Delete_Statement]^^76^^^^^61^91^byte[] b = DebuggingClassWriter.super.toByteArray (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  !=  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  >>  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P7_Replace_Invocation]^out .write ( b )  ;^87^^^^^72^102^out.close (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P14_Delete_Statement]^^76^^^^^61^91^byte[] b = DebuggingClassWriter.super.toByteArray (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^if  ( debugLocation == null )  {^77^^^^^62^92^if  ( debugLocation != null )  {^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^if  ( superName != null )  {^77^^^^^62^92^if  ( debugLocation != null )  {^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P6_Replace_Expression]^if  (  ( debugLocation )  +  ( separatorChar )  + dirs )  {^77^^^^^62^92^if  ( debugLocation != null )  {^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P6_Replace_Expression]^if  ( debugLocation + separatorChar )  {^77^^^^^62^92^if  ( debugLocation != null )  {^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P6_Replace_Expression]^if  ( dirs + ".class" )  {^77^^^^^62^92^if  ( debugLocation != null )  {^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P6_Replace_Expression]^if  ( dirs + ".asm" )  {^77^^^^^62^92^if  ( debugLocation != null )  {^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^if  ( debugLocation != false )  {^77^^^^^62^92^if  ( debugLocation != null )  {^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, -6 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^cr.accept (  0 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P7_Replace_Invocation]^cr .ClassReader ( b )  ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P14_Delete_Statement]^^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P7_Replace_Invocation]^pw.PrintWriter (  ) ;^98^^^^^83^113^pw.flush (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P14_Delete_Statement]^^98^^^^^83^113^pw.flush (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P11_Insert_Donor_Statement]^out.close (  ) ;pw.flush (  ) ;^98^^^^^83^113^pw.flush (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^file = new File ( new File ( debugLocation ) , dirs  <  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^file = new File ( new File ( debugLocation ) , dirs + ".asma" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P4_Replace_Constructor]^file = file =  new File ( new File ( debugLocation ) ,  ( dirs + ".class" )  )  , dirs + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^file = new File ( new File ( debugLocation ) , superName + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^file = new File ( new File ( signature ) , dirs + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^file = new File ( new File ( debugLocation )  + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^file = new File ( new File ( dirs ) , debugLocation + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^out =  new BufferedOutputStream ( new FileOutputStream ( null )  ) ;^92^^^^^77^107^out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^file = new File ( new File ( debugLocation ) , dirs  ==  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^file = new File ( new File ( debugLocation ) , dirs + ".asm." ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^file = new File ( new File ( superName ) , dirs + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv,  ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P7_Replace_Invocation]^out.write (  ) ;^100^^^^^85^115^out.close (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P7_Replace_Invocation]^out .write ( b )  ;^100^^^^^85^115^out.close (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P14_Delete_Statement]^^100^^^^^85^115^out.close (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P11_Insert_Donor_Statement]^out.write ( b ) ;out.close (  ) ;^100^^^^^85^115^out.close (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P11_Insert_Donor_Statement]^pw.flush (  ) ;out.close (  ) ;^100^^^^^85^115^out.close (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, -9 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^file = new File ( new File ( debugLocation ) , dirs  >>  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^file = new File ( new File ( debugLocation ) , dirs + "sasm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^file = new File ( new File ( debugLocation ) , signature + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, -5 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P14_Delete_Statement]^^97^98^^^^82^112^cr.accept ( tcv, 0 ) ; pw.flush (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P7_Replace_Invocation]^out .close (  )  ;^85^^^^^70^100^out.write ( b ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P14_Delete_Statement]^^85^^^^^70^100^out.write ( b ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P11_Insert_Donor_Statement]^out.close (  ) ;out.write ( b ) ;^85^^^^^70^100^out.write ( b ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, 3 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^file = new File ( new File ( debugLocation ) , dirs  &  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^file = new File ( new File ( debugLocation ) , dirs + "." ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (   instanceof   ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  >=  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^new File ( debugLocation + File.separatorChar + superName ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^new File ( signature + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^new File ( name + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^File file = new File ( new File ( debugLocation ) , dirs  &&  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^File file = new File ( new File ( debugLocation ) , dirs + ".classc" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P4_Replace_Constructor]^File file = new File ( new File ( debugLocation ) ,  ( dirs + ".asm" )  )  , dirs + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^File file = new File ( new File ( debugLocation ) , superName + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^File file = new File ( new File ( signature ) , dirs + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^File file = new File ( new File ( debugLocation )  + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^File file = new File ( new File ( dirs ) , debugLocation + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^file = new File ( new File ( debugLocation ) , dirs  >  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^file = new File ( new File ( name ) , dirs + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^File file = new File ( new File ( debugLocation ) , dirs  >  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^File file = new File ( new File ( debugLocation ) , dirs + ".classlas" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^File file = new File ( new File ( debugLocation ) , signature + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^File file = new File ( new File ( superName ) , dirs + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^File file = new File ( new File ( debugLocation ) , name + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  &  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  >  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^new File ( superName + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^new File ( dirs + File.separatorChar + debugLocation ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P7_Replace_Invocation]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .File (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P7_Replace_Invocation]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  )  .File ( superName )  ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P7_Replace_Invocation]^new File ( debugLocation + File.separatorChar + dirs ) .File (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P14_Delete_Statement]^^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  &&  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  <<  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P7_Replace_Invocation]^new File ( debugLocation + File.separatorChar + dirs )  .File ( superName )  .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P7_Replace_Invocation]^out.write (  ) ;^87^^^^^72^102^out.close (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^out .write ( b )  ;^87^^^^^72^102^out.close (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P14_Delete_Statement]^^87^^^^^72^102^out.close (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P11_Insert_Donor_Statement]^out.write ( b ) ;out.close (  ) ;^87^^^^^72^102^out.close (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P11_Insert_Donor_Statement]^pw.flush (  ) ;out.close (  ) ;^87^^^^^72^102^out.close (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, 9 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^file = new File ( new File ( debugLocation ) , dirs  ^  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  >>  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^File file = new File ( new File ( debugLocation ) , dirs  <<  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^File file = new File ( new File ( debugLocation ) , dirs + "la" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^file = new File ( new File ( debugLocation ) , dirs  &&  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^file = new File ( new File ( debugLocation ) , dirs + ".asms" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P1_Replace_Type]^char dirs = className.replace ( '.', File.separatorChar ) ;^78^^^^^63^93^String dirs = className.replace ( '.', File.separatorChar ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^String dirs = signature.replace ( '.', File.separatorChar ) ;^78^^^^^63^93^String dirs = className.replace ( '.', File.separatorChar ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^String dirs = superName.replace ( '.', File.separatorChar ) ;^78^^^^^63^93^String dirs = className.replace ( '.', File.separatorChar ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^String dirs = className.replace ( '.', File.this ) ;^78^^^^^63^93^String dirs = className.replace ( '.', File.separatorChar ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P14_Delete_Statement]^^78^^^^^63^93^String dirs = className.replace ( '.', File.separatorChar ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  <=  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^new File ( signature + File.separatorChar + dirs ) .File (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  !=  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P7_Replace_Invocation]^new File ( debugLocation + File.separatorChar + dirs )  .File ( dirs )  .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, 1 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^file = new File ( new File ( debugLocation ) , dirs  ||  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^file = new File ( new File ( debugLocation ) , dirs + "" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^file = new File ( new File ( debugLocation ) , dirs  >=  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, 6 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, -3 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^file = new File ( new File ( debugLocation ) , dirs + ".as" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^file =   new File ( new File ( debugLocation ) ,  ( dirs + ".class" )  )  , superName + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^file = new File ( new File ( debugLocation ) , dirs  <<  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, -1 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^file = new File ( new File ( debugLocation ) , dirs + ".a" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^file =   new File ( new File ( debugLocation ) ,  ( dirs + ".class" )  )  , name + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^File file = new File ( new File ( debugLocation ) , dirs  ||  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^File file = new File ( new File ( debugLocation ) , dirs + "l" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^File file = new File ( new File ( name ) , dirs + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^File file = new File ( new File ( debugLocation ) , dirs  <=  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^File file = new File ( new File ( debugLocation ) , dirs + "" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^new File ( debugLocation + File.separatorChar + name ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, 5 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, 2 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^file = new File ( new File ( debugLocation ) , dirs + ".aasm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ^  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^new File ( debugLocation + File.2 + dirs ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^File file = new File ( new File ( debugLocation ) , dirs + ".clas" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^file = new File ( new File ( debugLocation ) , dirs + ".asasm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^File file = new File ( new File ( debugLocation ) , dirs  &  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^File file = new File ( new File ( debugLocation ) , dirs + "clclass" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^String dirs = name.replace ( '.', File.separatorChar ) ;^78^^^^^63^93^String dirs = className.replace ( '.', File.separatorChar ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  |  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^new File ( debugLocation + File.separatorChar + signature ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^new File ( debugLocation + File.4 + dirs ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, 4 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[P14_Delete_Statement]^^76^^^^^61^91^byte[] b = DebuggingClassWriter.super.toByteArray (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^if  ( debugLocation == null )  {^77^^^^^62^92^if  ( debugLocation != null )  {^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P6_Replace_Expression]^if  (  ( debugLocation )  +  ( separatorChar )  + dirs )  {^77^^^^^62^92^if  ( debugLocation != null )  {^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P6_Replace_Expression]^if  ( debugLocation + separatorChar )  {^77^^^^^62^92^if  ( debugLocation != null )  {^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P6_Replace_Expression]^if  ( dirs + ".class" )  {^77^^^^^62^92^if  ( debugLocation != null )  {^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P6_Replace_Expression]^if  ( dirs + ".asm" )  {^77^^^^^62^92^if  ( debugLocation != null )  {^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^if  ( debugLocation != true )  {^77^^^^^62^92^if  ( debugLocation != null )  {^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, 8 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^cr.accept (  0 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^cr .ClassReader ( b )  ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P14_Delete_Statement]^^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P7_Replace_Invocation]^pw.PrintWriter (  ) ;^98^^^^^83^113^pw.flush (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P14_Delete_Statement]^^98^^^^^83^113^pw.flush (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P11_Insert_Donor_Statement]^out.close (  ) ;pw.flush (  ) ;^98^^^^^83^113^pw.flush (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^file = new File ( new File ( debugLocation ) , dirs  >=  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^file = new File ( new File ( debugLocation ) , dirs + ".asms" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P4_Replace_Constructor]^file = file =  new File ( new File ( debugLocation ) ,  ( dirs + ".class" )  )  , dirs + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^file = new File ( new File ( debugLocation )  + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^file = new File ( new File ( dirs ) , debugLocation + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^file =  new File ( new File ( debugLocation ) , null + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^out =  new BufferedOutputStream ( new FileOutputStream ( null )  ) ;^92^^^^^77^107^out = new BufferedOutputStream ( new FileOutputStream ( file )  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^file = new File ( new File ( debugLocation ) , dirs  &&  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^file = new File ( new File ( debugLocation ) , dirs + ".asm.as" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^file = new File ( new File ( dirs ) , dirs + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, -6 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P7_Replace_Invocation]^out.write (  ) ;^100^^^^^85^115^out.close (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P14_Delete_Statement]^^100^^^^^85^115^out.close (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P11_Insert_Donor_Statement]^out.write ( b ) ;out.close (  ) ;^100^^^^^85^115^out.close (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P11_Insert_Donor_Statement]^pw.flush (  ) ;out.close (  ) ;^100^^^^^85^115^out.close (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, 4 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^file = new File ( new File ( debugLocation ) , dirs  ||  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^file = new File ( new File ( debugLocation ) , dirs  &  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^file = new File ( new File ( debugLocation ) , dirs + ".asasm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P14_Delete_Statement]^^97^98^^^^82^112^cr.accept ( tcv, 0 ) ; pw.flush (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P7_Replace_Invocation]^out .write ( b )  ;^100^^^^^85^115^out.close (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P7_Replace_Invocation]^out .close (  )  ;^85^^^^^70^100^out.write ( b ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P14_Delete_Statement]^^85^^^^^70^100^out.write ( b ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P11_Insert_Donor_Statement]^out.close (  ) ;out.write ( b ) ;^85^^^^^70^100^out.write ( b ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, -4 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^file = new File ( new File ( debugLocation ) , dirs  <=  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^file = new File ( new File ( debugLocation ) , dirs + "" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^file =   new File ( new File ( debugLocation ) ,  ( dirs + ".class" )  )  , null + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  <  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^new File ( dirs + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^new File ( dirs + File.separatorChar + debugLocation ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^File file = new File ( new File ( debugLocation ) , dirs  |  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^File file = new File ( new File ( debugLocation ) , dirs + ".clclass" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P4_Replace_Constructor]^File file = new File ( new File ( debugLocation ) ,  ( dirs + ".asm" )  )  , dirs + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^File file = new File ( new File ( debugLocation )  + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^File file = new File ( new File ( dirs ) , debugLocation + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^File file = new File ( new File ( dirs ) , dirs + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^file = new File ( new File ( debugLocation ) , dirs  ^  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^File file = new File ( new File ( debugLocation ) , dirs  &  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^File file = new File ( new File ( debugLocation ) , dirs + ".classs" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  !=  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  &  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P5_Replace_Variable]^new File ( debugLocation + File.null + dirs ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P7_Replace_Invocation]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .File (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P7_Replace_Invocation]^new File ( debugLocation + File.separatorChar + dirs ) .File (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P14_Delete_Statement]^^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  >>  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  >=  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P7_Replace_Invocation]^new File ( debugLocation + File.separatorChar + dirs )  .File ( dirs )  .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P7_Replace_Invocation]^out.write (  ) ;^87^^^^^72^102^out.close (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P14_Delete_Statement]^^87^^^^^72^102^out.close (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P11_Insert_Donor_Statement]^out.write ( b ) ;out.close (  ) ;^87^^^^^72^102^out.close (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P11_Insert_Donor_Statement]^pw.flush (  ) ;out.close (  ) ;^87^^^^^72^102^out.close (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, 5 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, -7 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ==  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^File file = new File ( new File ( debugLocation ) , dirs  !=  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^file = new File ( new File ( debugLocation ) , dirs  |  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^file = new File ( new File ( debugLocation ) , dirs + ".aasm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P1_Replace_Type]^char dirs = className.replace ( '.', File.separatorChar ) ;^78^^^^^63^93^String dirs = className.replace ( '.', File.separatorChar ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^String dirs = className.replace ( '.', File.this ) ;^78^^^^^63^93^String dirs = className.replace ( '.', File.separatorChar ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^File file = new File ( new File ( debugLocation ) , dirs  >  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^File file = new File ( new File ( debugLocation ) , dirs + ".class.cla" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^return ;^104^^^^^89^119^throw new CodeGenerationException  (" ")  ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P8_Replace_Mix]^String dirs = dirs.replace ( '.', File.separatorChar ) ;^78^^^^^63^93^String dirs = className.replace ( '.', File.separatorChar ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P14_Delete_Statement]^^78^^^^^63^93^String dirs = className.replace ( '.', File.separatorChar ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (   instanceof   ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P7_Replace_Invocation]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  )  .File ( dirs )  ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P7_Replace_Invocation]^out .write ( b )  ;^87^^^^^72^102^out.close (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, -2 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, -5 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^file = new File ( new File ( debugLocation ) , dirs  >  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^file = new File ( new File ( debugLocation ) , dirs + "." ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, 3 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^file = new File ( new File ( debugLocation ) , dirs  <  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^file = new File ( new File ( debugLocation ) , dirs + ".asm.a" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv,  ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^file = new File ( new File ( debugLocation ) , dirs  <<  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ^  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  |  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^file = new File ( new File ( debugLocation ) , dirs + ".as" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^File file = new File ( new File ( debugLocation ) , dirs  <  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^File file = new File ( new File ( debugLocation ) , dirs + "c" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, 7 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^cr.accept ( tcv, -8 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^file = new File ( new File ( debugLocation ) , dirs + "asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^File file = new File ( new File ( debugLocation ) , dirs  >=  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^File file = new File ( new File ( debugLocation ) , dirs + "cl" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P3_Replace_Literal]^File file = new File ( new File ( debugLocation ) , dirs + "clasclass" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[P2_Replace_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ||  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
