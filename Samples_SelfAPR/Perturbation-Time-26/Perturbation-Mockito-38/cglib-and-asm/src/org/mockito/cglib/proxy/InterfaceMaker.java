[P7_Replace_Invocation]^private static final Source SOURCE = new Source ( InterfaceMaker.class.getMethods (  )  ) ;^35^^^^^30^40^private static final Source SOURCE = new Source ( InterfaceMaker.class.getName (  )  ) ;^[CLASS] InterfaceMaker   [VARIABLES] 
[P8_Replace_Mix]^private static final Source SOURCE  = null ;^35^^^^^30^40^private static final Source SOURCE = new Source ( InterfaceMaker.class.getName (  )  ) ;^[CLASS] InterfaceMaker   [VARIABLES] 
[P8_Replace_Mix]^private Map signatures ;^36^^^^^31^41^private Map signatures = new HashMap (  ) ;^[CLASS] InterfaceMaker   [VARIABLES] 
[P14_Delete_Statement]^^44^^^^^43^45^super ( SOURCE ) ;^[CLASS] InterfaceMaker  [METHOD] <init> [RETURN_TYPE] InterfaceMaker()   [VARIABLES] Map  signatures  Source  SOURCE  boolean  
[P5_Replace_Variable]^signatures.put (  exceptions ) ;^53^^^^^52^54^signatures.put ( sig, exceptions ) ;^[CLASS] InterfaceMaker  [METHOD] add [RETURN_TYPE] void   Signature sig Type[] exceptions [VARIABLES] Type[]  exceptions  boolean  Map  signatures  Source  SOURCE  Signature  sig  
[P5_Replace_Variable]^signatures.put ( sig ) ;^53^^^^^52^54^signatures.put ( sig, exceptions ) ;^[CLASS] InterfaceMaker  [METHOD] add [RETURN_TYPE] void   Signature sig Type[] exceptions [VARIABLES] Type[]  exceptions  boolean  Map  signatures  Source  SOURCE  Signature  sig  
[P14_Delete_Statement]^^53^^^^^52^54^signatures.put ( sig, exceptions ) ;^[CLASS] InterfaceMaker  [METHOD] add [RETURN_TYPE] void   Signature sig Type[] exceptions [VARIABLES] Type[]  exceptions  boolean  Map  signatures  Source  SOURCE  Signature  sig  
[P11_Insert_Donor_Statement]^Signature sig =  ( Signature ) it.next (  ) ;signatures.put ( sig, exceptions ) ;^53^^^^^52^54^signatures.put ( sig, exceptions ) ;^[CLASS] InterfaceMaker  [METHOD] add [RETURN_TYPE] void   Signature sig Type[] exceptions [VARIABLES] Type[]  exceptions  boolean  Map  signatures  Source  SOURCE  Signature  sig  
[P7_Replace_Invocation]^add ( ReflectUtils.getExceptionTypes ( method ) , ReflectUtils.getExceptionTypes ( method )  ) ;^62^63^^^^61^64^add ( ReflectUtils.getSignature ( method ) , ReflectUtils.getExceptionTypes ( method )  ) ;^[CLASS] InterfaceMaker  [METHOD] add [RETURN_TYPE] void   Method method [VARIABLES] Method  method  boolean  Map  signatures  Source  SOURCE  
[P7_Replace_Invocation]^add ( ReflectUtils.getSignature ( method ) , ReflectUtils.getSignature ( method )  ) ;^62^63^^^^61^64^add ( ReflectUtils.getSignature ( method ) , ReflectUtils.getExceptionTypes ( method )  ) ;^[CLASS] InterfaceMaker  [METHOD] add [RETURN_TYPE] void   Method method [VARIABLES] Method  method  boolean  Map  signatures  Source  SOURCE  
[P14_Delete_Statement]^^62^63^^^^61^64^add ( ReflectUtils.getSignature ( method ) , ReflectUtils.getExceptionTypes ( method )  ) ;^[CLASS] InterfaceMaker  [METHOD] add [RETURN_TYPE] void   Method method [VARIABLES] Method  method  boolean  Map  signatures  Source  SOURCE  
[P11_Insert_Donor_Statement]^ReflectUtils.getExceptionTypes ( method )  ) ;add ( ReflectUtils.getSignature ( method ) , ReflectUtils.getExceptionTypes ( method )  ) ;^62^63^^^^61^64^add ( ReflectUtils.getSignature ( method ) , ReflectUtils.getExceptionTypes ( method )  ) ;^[CLASS] InterfaceMaker  [METHOD] add [RETURN_TYPE] void   Method method [VARIABLES] Method  method  boolean  Map  signatures  Source  SOURCE  
[P7_Replace_Invocation]^ReflectUtils.getSignature ( method )  ) ;^63^^^^^61^64^ReflectUtils.getExceptionTypes ( method )  ) ;^[CLASS] InterfaceMaker  [METHOD] add [RETURN_TYPE] void   Method method [VARIABLES] Method  method  boolean  Map  signatures  Source  SOURCE  
[P14_Delete_Statement]^^63^^^^^61^64^ReflectUtils.getExceptionTypes ( method )  ) ;^[CLASS] InterfaceMaker  [METHOD] add [RETURN_TYPE] void   Method method [VARIABLES] Method  method  boolean  Map  signatures  Source  SOURCE  
[P11_Insert_Donor_Statement]^add ( ReflectUtils.getSignature ( method ) , ReflectUtils.getExceptionTypes ( method )  ) ;ReflectUtils.getExceptionTypes ( method )  ) ;^63^^^^^61^64^ReflectUtils.getExceptionTypes ( method )  ) ;^[CLASS] InterfaceMaker  [METHOD] add [RETURN_TYPE] void   Method method [VARIABLES] Method  method  boolean  Map  signatures  Source  SOURCE  
[P14_Delete_Statement]^^73^^^^^72^80^Method[] methods = clazz.getMethods (  ) ;^[CLASS] InterfaceMaker  [METHOD] add [RETURN_TYPE] void   Class clazz [VARIABLES] boolean  Class  clazz  Method  m  Method[]  methods  Map  signatures  Source  SOURCE  int  i  
[P3_Replace_Literal]^if  ( !m.getDeclaringClass (  ) .getName (  ) .equals ( "java.lang.Objectg.Obj" )  )  {^76^^^^^72^80^if  ( !m.getDeclaringClass (  ) .getName (  ) .equals ( "java.lang.Object" )  )  {^[CLASS] InterfaceMaker  [METHOD] add [RETURN_TYPE] void   Class clazz [VARIABLES] boolean  Class  clazz  Method  m  Method[]  methods  Map  signatures  Source  SOURCE  int  i  
[P7_Replace_Invocation]^if  ( !m.getDeclaringClass (  )  .getMethods (  )  .equals ( "java.lang.Object" )  )  {^76^^^^^72^80^if  ( !m.getDeclaringClass (  ) .getName (  ) .equals ( "java.lang.Object" )  )  {^[CLASS] InterfaceMaker  [METHOD] add [RETURN_TYPE] void   Class clazz [VARIABLES] boolean  Class  clazz  Method  m  Method[]  methods  Map  signatures  Source  SOURCE  int  i  
[P8_Replace_Mix]^if  ( m.getDeclaringClass (  ) .getName (  ) .equals ( "java.lang.Object" )  )  {^76^^^^^72^80^if  ( !m.getDeclaringClass (  ) .getName (  ) .equals ( "java.lang.Object" )  )  {^[CLASS] InterfaceMaker  [METHOD] add [RETURN_TYPE] void   Class clazz [VARIABLES] boolean  Class  clazz  Method  m  Method[]  methods  Map  signatures  Source  SOURCE  int  i  
[P15_Unwrap_Block]^add(m);^76^77^78^^^72^80^if  ( !m.getDeclaringClass (  ) .getName (  ) .equals ( "java.lang.Object" )  )  { add ( m ) ; }^[CLASS] InterfaceMaker  [METHOD] add [RETURN_TYPE] void   Class clazz [VARIABLES] boolean  Class  clazz  Method  m  Method[]  methods  Map  signatures  Source  SOURCE  int  i  
[P16_Remove_Block]^^76^77^78^^^72^80^if  ( !m.getDeclaringClass (  ) .getName (  ) .equals ( "java.lang.Object" )  )  { add ( m ) ; }^[CLASS] InterfaceMaker  [METHOD] add [RETURN_TYPE] void   Class clazz [VARIABLES] boolean  Class  clazz  Method  m  Method[]  methods  Map  signatures  Source  SOURCE  int  i  
[P14_Delete_Statement]^^77^^^^^72^80^add ( m ) ;^[CLASS] InterfaceMaker  [METHOD] add [RETURN_TYPE] void   Class clazz [VARIABLES] boolean  Class  clazz  Method  m  Method[]  methods  Map  signatures  Source  SOURCE  int  i  
[P1_Replace_Type]^for  (  long  i = 0; i < methods.length; i++ )  {^74^^^^^72^80^for  ( int i = 0; i < methods.length; i++ )  {^[CLASS] InterfaceMaker  [METHOD] add [RETURN_TYPE] void   Class clazz [VARIABLES] boolean  Class  clazz  Method  m  Method[]  methods  Map  signatures  Source  SOURCE  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i <= methods.length; i++ )  {^74^^^^^72^80^for  ( int i = 0; i < methods.length; i++ )  {^[CLASS] InterfaceMaker  [METHOD] add [RETURN_TYPE] void   Class clazz [VARIABLES] boolean  Class  clazz  Method  m  Method[]  methods  Map  signatures  Source  SOURCE  int  i  
[P3_Replace_Literal]^for  ( int i = i; i < methods.length; i++ )  {^74^^^^^72^80^for  ( int i = 0; i < methods.length; i++ )  {^[CLASS] InterfaceMaker  [METHOD] add [RETURN_TYPE] void   Class clazz [VARIABLES] boolean  Class  clazz  Method  m  Method[]  methods  Map  signatures  Source  SOURCE  int  i  
[P5_Replace_Variable]^for  ( methods.lengthnt i = 0; i < i; i++ )  {^74^^^^^72^80^for  ( int i = 0; i < methods.length; i++ )  {^[CLASS] InterfaceMaker  [METHOD] add [RETURN_TYPE] void   Class clazz [VARIABLES] boolean  Class  clazz  Method  m  Method[]  methods  Map  signatures  Source  SOURCE  int  i  
[P5_Replace_Variable]^for  ( int i = 0; i < m.length; i++ )  {^74^^^^^72^80^for  ( int i = 0; i < methods.length; i++ )  {^[CLASS] InterfaceMaker  [METHOD] add [RETURN_TYPE] void   Class clazz [VARIABLES] boolean  Class  clazz  Method  m  Method[]  methods  Map  signatures  Source  SOURCE  int  i  
[P5_Replace_Variable]^for  ( int i = 0; i < methodsethods.length; i++ )  {^74^^^^^72^80^for  ( int i = 0; i < methods.length; i++ )  {^[CLASS] InterfaceMaker  [METHOD] add [RETURN_TYPE] void   Class clazz [VARIABLES] boolean  Class  clazz  Method  m  Method[]  methods  Map  signatures  Source  SOURCE  int  i  
[P3_Replace_Literal]^if  ( !m.getDeclaringClass (  ) .getName (  ) .equals ( "l" )  )  {^76^^^^^72^80^if  ( !m.getDeclaringClass (  ) .getName (  ) .equals ( "java.lang.Object" )  )  {^[CLASS] InterfaceMaker  [METHOD] add [RETURN_TYPE] void   Class clazz [VARIABLES] boolean  Class  clazz  Method  m  Method[]  methods  Map  signatures  Source  SOURCE  int  i  
[P3_Replace_Literal]^if  ( !m.getDeclaringClass (  ) .getName (  ) .equals ( "java." )  )  {^76^^^^^72^80^if  ( !m.getDeclaringClass (  ) .getName (  ) .equals ( "java.lang.Object" )  )  {^[CLASS] InterfaceMaker  [METHOD] add [RETURN_TYPE] void   Class clazz [VARIABLES] boolean  Class  clazz  Method  m  Method[]  methods  Map  signatures  Source  SOURCE  int  i  
[P13_Insert_Block]^if  ( ! ( m.getDeclaringClass (  ) .getName (  ) .equals ( Object" )  )  )  {     add ( m ) ; }^76^^^^^72^80^[Delete]^[CLASS] InterfaceMaker  [METHOD] add [RETURN_TYPE] void   Class clazz [VARIABLES] boolean  Class  clazz  Method  m  Method[]  methods  Map  signatures  Source  SOURCE  int  i  
[P1_Replace_Type]^for  (  short  i = 0; i < methods.length; i++ )  {^74^^^^^72^80^for  ( int i = 0; i < methods.length; i++ )  {^[CLASS] InterfaceMaker  [METHOD] add [RETURN_TYPE] void   Class clazz [VARIABLES] boolean  Class  clazz  Method  m  Method[]  methods  Map  signatures  Source  SOURCE  int  i  
[P3_Replace_Literal]^for  ( int i = -6; i < methods.length; i++ )  {^74^^^^^72^80^for  ( int i = 0; i < methods.length; i++ )  {^[CLASS] InterfaceMaker  [METHOD] add [RETURN_TYPE] void   Class clazz [VARIABLES] boolean  Class  clazz  Method  m  Method[]  methods  Map  signatures  Source  SOURCE  int  i  
[P3_Replace_Literal]^if  ( !m.getDeclaringClass (  ) .getName (  ) .equals ( "java.lang.Objectava." )  )  {^76^^^^^72^80^if  ( !m.getDeclaringClass (  ) .getName (  ) .equals ( "java.lang.Object" )  )  {^[CLASS] InterfaceMaker  [METHOD] add [RETURN_TYPE] void   Class clazz [VARIABLES] boolean  Class  clazz  Method  m  Method[]  methods  Map  signatures  Source  SOURCE  int  i  
[P3_Replace_Literal]^setUseCache ( true ) ;^86^^^^^85^88^setUseCache ( false ) ;^[CLASS] InterfaceMaker  [METHOD] create [RETURN_TYPE] Class   [VARIABLES] Map  signatures  Source  SOURCE  boolean  
[P7_Replace_Invocation]^create ( false ) ;^86^^^^^85^88^setUseCache ( false ) ;^[CLASS] InterfaceMaker  [METHOD] create [RETURN_TYPE] Class   [VARIABLES] Map  signatures  Source  SOURCE  boolean  
[P14_Delete_Statement]^^86^87^^^^85^88^setUseCache ( false ) ; return  ( Class ) super.create ( this ) ;^[CLASS] InterfaceMaker  [METHOD] create [RETURN_TYPE] Class   [VARIABLES] Map  signatures  Source  SOURCE  boolean  
[P7_Replace_Invocation]^return  ( Class ) super.setUseCache ( this ) ;^87^^^^^85^88^return  ( Class ) super.create ( this ) ;^[CLASS] InterfaceMaker  [METHOD] create [RETURN_TYPE] Class   [VARIABLES] Map  signatures  Source  SOURCE  boolean  
[P14_Delete_Statement]^^87^^^^^85^88^return  ( Class ) super.create ( this ) ;^[CLASS] InterfaceMaker  [METHOD] create [RETURN_TYPE] Class   [VARIABLES] Map  signatures  Source  SOURCE  boolean  
[P8_Replace_Mix]^return true;^91^^^^^90^92^return null;^[CLASS] InterfaceMaker  [METHOD] getDefaultClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] Map  signatures  Source  SOURCE  boolean  
[P8_Replace_Mix]^return ;^99^^^^^98^100^throw new IllegalStateException  (" ")  ;^[CLASS] InterfaceMaker  [METHOD] nextInstance [RETURN_TYPE] Object   Object instance [VARIABLES] Object  instance  boolean  Map  signatures  Source  SOURCE  
[P2_Replace_Operator]^ce.begin_class  <=  ( Constants.V1_2, Constants.ACC_PUBLIC | Constants.ACC_INTERFACE, getClassName (  ) , null,^104^105^106^107^^102^118^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC | Constants.ACC_INTERFACE, getClassName (  ) , null,^[CLASS] InterfaceMaker  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Signature  sig  ClassEmitter  ce  Iterator  it  Type[]  exceptions  ClassVisitor  v  Map  signatures  Source  SOURCE  
[P5_Replace_Variable]^ce.begin_class ( Constants.V1_2 | Constants.ACC_INTERFACE, getClassName (  ) , null,^104^105^106^107^^102^118^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC | Constants.ACC_INTERFACE, getClassName (  ) , null,^[CLASS] InterfaceMaker  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Signature  sig  ClassEmitter  ce  Iterator  it  Type[]  exceptions  ClassVisitor  v  Map  signatures  Source  SOURCE  
[P5_Replace_Variable]^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC |  getClassName (  ) , null,^104^105^106^107^^102^118^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC | Constants.ACC_INTERFACE, getClassName (  ) , null,^[CLASS] InterfaceMaker  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Signature  sig  ClassEmitter  ce  Iterator  it  Type[]  exceptions  ClassVisitor  v  Map  signatures  Source  SOURCE  
[P5_Replace_Variable]^ce.begin_class ( Constants.V1_2, Constants.ACC_INTERFACE | Constants.ACC_PUBLIC, getClassName (  ) , null,^104^105^106^107^^102^118^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC | Constants.ACC_INTERFACE, getClassName (  ) , null,^[CLASS] InterfaceMaker  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Signature  sig  ClassEmitter  ce  Iterator  it  Type[]  exceptions  ClassVisitor  v  Map  signatures  Source  SOURCE  
[P7_Replace_Invocation]^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC | Constants.ACC_INTERFACE, end_method (  ) , null,^104^105^106^107^^102^118^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC | Constants.ACC_INTERFACE, getClassName (  ) , null,^[CLASS] InterfaceMaker  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Signature  sig  ClassEmitter  ce  Iterator  it  Type[]  exceptions  ClassVisitor  v  Map  signatures  Source  SOURCE  
[P7_Replace_Invocation]^end_method (  ) , null, null, Constants.SOURCE_FILE ) ;^106^107^108^109^^102^118^getClassName (  ) , null, null, Constants.SOURCE_FILE ) ;^[CLASS] InterfaceMaker  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Signature  sig  ClassEmitter  ce  Iterator  it  Type[]  exceptions  ClassVisitor  v  Map  signatures  Source  SOURCE  
[P5_Replace_Variable]^for  ( Iterator signatures = it.keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^110^^^^^102^118^for  ( Iterator it = signatures.keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] InterfaceMaker  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Signature  sig  ClassEmitter  ce  Iterator  it  Type[]  exceptions  ClassVisitor  v  Map  signatures  Source  SOURCE  
[P7_Replace_Invocation]^for  ( Iterator it = signatures.keySet (  ) .iterator (  ) ; it .next (  )  ; )  {^110^^^^^102^118^for  ( Iterator it = signatures.keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] InterfaceMaker  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Signature  sig  ClassEmitter  ce  Iterator  it  Type[]  exceptions  ClassVisitor  v  Map  signatures  Source  SOURCE  
[P8_Replace_Mix]^Signature sig =  ( Signature ) it .hasNext (  )  ;^111^^^^^102^118^Signature sig =  ( Signature ) it.next (  ) ;^[CLASS] InterfaceMaker  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Signature  sig  ClassEmitter  ce  Iterator  it  Type[]  exceptions  ClassVisitor  v  Map  signatures  Source  SOURCE  
[P5_Replace_Variable]^Type[] exceptions =  ( Type[] ) signaturesnatures.get ( sig ) ;^112^^^^^102^118^Type[] exceptions =  ( Type[] ) signatures.get ( sig ) ;^[CLASS] InterfaceMaker  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Signature  sig  ClassEmitter  ce  Iterator  it  Type[]  exceptions  ClassVisitor  v  Map  signatures  Source  SOURCE  
[P5_Replace_Variable]^Type[] exceptions =  ( Type[] ) sig.get ( signatures ) ;^112^^^^^102^118^Type[] exceptions =  ( Type[] ) signatures.get ( sig ) ;^[CLASS] InterfaceMaker  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Signature  sig  ClassEmitter  ce  Iterator  it  Type[]  exceptions  ClassVisitor  v  Map  signatures  Source  SOURCE  
[P14_Delete_Statement]^^111^112^^^^102^118^Signature sig =  ( Signature ) it.next (  ) ; Type[] exceptions =  ( Type[] ) signatures.get ( sig ) ;^[CLASS] InterfaceMaker  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Signature  sig  ClassEmitter  ce  Iterator  it  Type[]  exceptions  ClassVisitor  v  Map  signatures  Source  SOURCE  
[P11_Insert_Donor_Statement]^signatures.put ( sig, exceptions ) ;Signature sig =  ( Signature ) it.next (  ) ;^111^^^^^102^118^Signature sig =  ( Signature ) it.next (  ) ;^[CLASS] InterfaceMaker  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Signature  sig  ClassEmitter  ce  Iterator  it  Type[]  exceptions  ClassVisitor  v  Map  signatures  Source  SOURCE  
[P14_Delete_Statement]^^112^^^^^102^118^Type[] exceptions =  ( Type[] ) signatures.get ( sig ) ;^[CLASS] InterfaceMaker  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Signature  sig  ClassEmitter  ce  Iterator  it  Type[]  exceptions  ClassVisitor  v  Map  signatures  Source  SOURCE  
[P2_Replace_Operator]^ce.begin_method  !=  ( Constants.ACC_PUBLIC | Constants.ACC_ABSTRACT, sig, exceptions ) .end_method (  ) ;^113^114^115^^^102^118^ce.begin_method ( Constants.ACC_PUBLIC | Constants.ACC_ABSTRACT, sig, exceptions ) .end_method (  ) ;^[CLASS] InterfaceMaker  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Signature  sig  ClassEmitter  ce  Iterator  it  Type[]  exceptions  ClassVisitor  v  Map  signatures  Source  SOURCE  
[P5_Replace_Variable]^ce.begin_method ( Constants.ACC_PUBLIC | Constants.ACC_ABSTRACT,  exceptions ) .end_method (  ) ;^113^114^115^^^102^118^ce.begin_method ( Constants.ACC_PUBLIC | Constants.ACC_ABSTRACT, sig, exceptions ) .end_method (  ) ;^[CLASS] InterfaceMaker  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Signature  sig  ClassEmitter  ce  Iterator  it  Type[]  exceptions  ClassVisitor  v  Map  signatures  Source  SOURCE  
[P5_Replace_Variable]^ce.begin_method ( Constants.ACC_PUBLIC | Constants.ACC_ABSTRACT, sig ) .end_method (  ) ;^113^114^115^^^102^118^ce.begin_method ( Constants.ACC_PUBLIC | Constants.ACC_ABSTRACT, sig, exceptions ) .end_method (  ) ;^[CLASS] InterfaceMaker  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Signature  sig  ClassEmitter  ce  Iterator  it  Type[]  exceptions  ClassVisitor  v  Map  signatures  Source  SOURCE  
[P5_Replace_Variable]^ce.begin_method ( Constants.ACC_PUBLIC |  sig, exceptions ) .end_method (  ) ;^113^114^115^^^102^118^ce.begin_method ( Constants.ACC_PUBLIC | Constants.ACC_ABSTRACT, sig, exceptions ) .end_method (  ) ;^[CLASS] InterfaceMaker  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Signature  sig  ClassEmitter  ce  Iterator  it  Type[]  exceptions  ClassVisitor  v  Map  signatures  Source  SOURCE  
[P5_Replace_Variable]^ce.begin_method ( exceptions | Constants.ACC_ABSTRACT, sig, Constants.ACC_PUBLIC ) .end_method (  ) ;^113^114^115^^^102^118^ce.begin_method ( Constants.ACC_PUBLIC | Constants.ACC_ABSTRACT, sig, exceptions ) .end_method (  ) ;^[CLASS] InterfaceMaker  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Signature  sig  ClassEmitter  ce  Iterator  it  Type[]  exceptions  ClassVisitor  v  Map  signatures  Source  SOURCE  
[P5_Replace_Variable]^ce.begin_method ( Constants.ACC_ABSTRACT | Constants.ACC_PUBLIC, sig, exceptions ) .end_method (  ) ;^113^114^115^^^102^118^ce.begin_method ( Constants.ACC_PUBLIC | Constants.ACC_ABSTRACT, sig, exceptions ) .end_method (  ) ;^[CLASS] InterfaceMaker  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Signature  sig  ClassEmitter  ce  Iterator  it  Type[]  exceptions  ClassVisitor  v  Map  signatures  Source  SOURCE  
[P5_Replace_Variable]^ce.begin_method ( Constants.ACC_PUBLIC | exceptions, sig, Constants.ACC_ABSTRACT ) .end_method (  ) ;^113^114^115^^^102^118^ce.begin_method ( Constants.ACC_PUBLIC | Constants.ACC_ABSTRACT, sig, exceptions ) .end_method (  ) ;^[CLASS] InterfaceMaker  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Signature  sig  ClassEmitter  ce  Iterator  it  Type[]  exceptions  ClassVisitor  v  Map  signatures  Source  SOURCE  
[P14_Delete_Statement]^^113^114^115^^^102^118^ce.begin_method ( Constants.ACC_PUBLIC | Constants.ACC_ABSTRACT, sig, exceptions ) .end_method (  ) ;^[CLASS] InterfaceMaker  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Signature  sig  ClassEmitter  ce  Iterator  it  Type[]  exceptions  ClassVisitor  v  Map  signatures  Source  SOURCE  
[P5_Replace_Variable]^ce.begin_method ( Constants.ACC_PUBLIC | Constants.ACC_ABSTRACT, exceptions, sig ) .end_method (  ) ;^113^114^115^^^102^118^ce.begin_method ( Constants.ACC_PUBLIC | Constants.ACC_ABSTRACT, sig, exceptions ) .end_method (  ) ;^[CLASS] InterfaceMaker  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Signature  sig  ClassEmitter  ce  Iterator  it  Type[]  exceptions  ClassVisitor  v  Map  signatures  Source  SOURCE  
[P8_Replace_Mix]^ce.begin_method ( null | Constants.ACC_ABSTRACT, sig, exceptions ) .end_method (  ) ;^113^114^115^^^102^118^ce.begin_method ( Constants.ACC_PUBLIC | Constants.ACC_ABSTRACT, sig, exceptions ) .end_method (  ) ;^[CLASS] InterfaceMaker  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Signature  sig  ClassEmitter  ce  Iterator  it  Type[]  exceptions  ClassVisitor  v  Map  signatures  Source  SOURCE  
[P14_Delete_Statement]^^111^^^^^102^118^Signature sig =  ( Signature ) it.next (  ) ;^[CLASS] InterfaceMaker  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Signature  sig  ClassEmitter  ce  Iterator  it  Type[]  exceptions  ClassVisitor  v  Map  signatures  Source  SOURCE  
[P2_Replace_Operator]^ce.begin_method  >>  ( Constants.ACC_PUBLIC | Constants.ACC_ABSTRACT, sig, exceptions ) .end_method (  ) ;^113^114^115^^^102^118^ce.begin_method ( Constants.ACC_PUBLIC | Constants.ACC_ABSTRACT, sig, exceptions ) .end_method (  ) ;^[CLASS] InterfaceMaker  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Signature  sig  ClassEmitter  ce  Iterator  it  Type[]  exceptions  ClassVisitor  v  Map  signatures  Source  SOURCE  
[P5_Replace_Variable]^ce.begin_method ( Constants.ACC_PUBLIC | sig, Constants.ACC_ABSTRACT, exceptions ) .end_method (  ) ;^113^114^115^^^102^118^ce.begin_method ( Constants.ACC_PUBLIC | Constants.ACC_ABSTRACT, sig, exceptions ) .end_method (  ) ;^[CLASS] InterfaceMaker  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Signature  sig  ClassEmitter  ce  Iterator  it  Type[]  exceptions  ClassVisitor  v  Map  signatures  Source  SOURCE  
[P5_Replace_Variable]^ce.begin_method ( sig | Constants.ACC_ABSTRACT, Constants.ACC_PUBLIC, exceptions ) .end_method (  ) ;^113^114^115^^^102^118^ce.begin_method ( Constants.ACC_PUBLIC | Constants.ACC_ABSTRACT, sig, exceptions ) .end_method (  ) ;^[CLASS] InterfaceMaker  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Signature  sig  ClassEmitter  ce  Iterator  it  Type[]  exceptions  ClassVisitor  v  Map  signatures  Source  SOURCE  
[P2_Replace_Operator]^ce.begin_method  >=  ( Constants.ACC_PUBLIC | Constants.ACC_ABSTRACT, sig, exceptions ) .end_method (  ) ;^113^114^115^^^102^118^ce.begin_method ( Constants.ACC_PUBLIC | Constants.ACC_ABSTRACT, sig, exceptions ) .end_method (  ) ;^[CLASS] InterfaceMaker  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Signature  sig  ClassEmitter  ce  Iterator  it  Type[]  exceptions  ClassVisitor  v  Map  signatures  Source  SOURCE  
[P5_Replace_Variable]^ce.begin_method ( Constants.ACC_PUBLIC | null, sig, exceptions ) .end_method (  ) ;^113^114^115^^^102^118^ce.begin_method ( Constants.ACC_PUBLIC | Constants.ACC_ABSTRACT, sig, exceptions ) .end_method (  ) ;^[CLASS] InterfaceMaker  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Signature  sig  ClassEmitter  ce  Iterator  it  Type[]  exceptions  ClassVisitor  v  Map  signatures  Source  SOURCE  
[P14_Delete_Statement]^^117^^^^^102^118^ce.end_class (  ) ;^[CLASS] InterfaceMaker  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Signature  sig  ClassEmitter  ce  Iterator  it  Type[]  exceptions  ClassVisitor  v  Map  signatures  Source  SOURCE  
