[P8_Replace_Mix]^private static final Map transforms ;^23^^^^^18^28^private static final Map transforms = new HashMap (  ) ;^[CLASS] TypeUtils   [VARIABLES] 
[P8_Replace_Mix]^private static  Map rtransforms = new HashMap (  ) ;^24^^^^^19^29^private static final Map rtransforms = new HashMap (  ) ;^[CLASS] TypeUtils   [VARIABLES] 
[P2_Replace_Operator]^return Type.getType ( "L" + className.replace ( '.', '/' )  <=  + ";" ) ;^44^^^^^43^45^return Type.getType ( "L" + className.replace ( '.', '/' )  + ";" ) ;^[CLASS] TypeUtils  [METHOD] getType [RETURN_TYPE] Type   String className [VARIABLES] Map  rtransforms  transforms  String  className  boolean  
[P2_Replace_Operator]^return Type.getType ( "L"  !=  className.replace ( '.', '/' )  + ";" ) ;^44^^^^^43^45^return Type.getType ( "L" + className.replace ( '.', '/' )  + ";" ) ;^[CLASS] TypeUtils  [METHOD] getType [RETURN_TYPE] Type   String className [VARIABLES] Map  rtransforms  transforms  String  className  boolean  
[P3_Replace_Literal]^return Type.getType ( "" + className.replace ( '.', '/' )  + ";" ) ;^44^^^^^43^45^return Type.getType ( "L" + className.replace ( '.', '/' )  + ";" ) ;^[CLASS] TypeUtils  [METHOD] getType [RETURN_TYPE] Type   String className [VARIABLES] Map  rtransforms  transforms  String  className  boolean  
[P7_Replace_Invocation]^return Type .getType ( className )  ;^44^^^^^43^45^return Type.getType ( "L" + className.replace ( '.', '/' )  + ";" ) ;^[CLASS] TypeUtils  [METHOD] getType [RETURN_TYPE] Type   String className [VARIABLES] Map  rtransforms  transforms  String  className  boolean  
[P8_Replace_Mix]^return Type.getType ( "L" + className.replace ( '.', '/' )  +className ) ;^44^^^^^43^45^return Type.getType ( "L" + className.replace ( '.', '/' )  + ";" ) ;^[CLASS] TypeUtils  [METHOD] getType [RETURN_TYPE] Type   String className [VARIABLES] Map  rtransforms  transforms  String  className  boolean  
[P2_Replace_Operator]^return Type.getType ( "L" + className.replace ( '.', '/' )  &&  + ";" ) ;^44^^^^^43^45^return Type.getType ( "L" + className.replace ( '.', '/' )  + ";" ) ;^[CLASS] TypeUtils  [METHOD] getType [RETURN_TYPE] Type   String className [VARIABLES] Map  rtransforms  transforms  String  className  boolean  
[P2_Replace_Operator]^return Type.getType ( "L"  <  className.replace ( '.', '/' )  + ";" ) ;^44^^^^^43^45^return Type.getType ( "L" + className.replace ( '.', '/' )  + ";" ) ;^[CLASS] TypeUtils  [METHOD] getType [RETURN_TYPE] Type   String className [VARIABLES] Map  rtransforms  transforms  String  className  boolean  
[P14_Delete_Statement]^^44^^^^^43^45^return Type.getType ( "L" + className.replace ( '.', '/' )  + ";" ) ;^[CLASS] TypeUtils  [METHOD] getType [RETURN_TYPE] Type   String className [VARIABLES] Map  rtransforms  transforms  String  className  boolean  
[P2_Replace_Operator]^return  ( Constants.ACC_FINAL & access )  == 0;^48^^^^^47^49^return  ( Constants.ACC_FINAL & access )  != 0;^[CLASS] TypeUtils  [METHOD] isFinal [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P2_Replace_Operator]^return  ( Constants.ACC_FINAL  <=  access )  != 0;^48^^^^^47^49^return  ( Constants.ACC_FINAL & access )  != 0;^[CLASS] TypeUtils  [METHOD] isFinal [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P3_Replace_Literal]^return  ( Constants.ACC_FINAL & access )  != access;^48^^^^^47^49^return  ( Constants.ACC_FINAL & access )  != 0;^[CLASS] TypeUtils  [METHOD] isFinal [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P5_Replace_Variable]^return  ( access & Constants.ACC_FINAL )  != 0;^48^^^^^47^49^return  ( Constants.ACC_FINAL & access )  != 0;^[CLASS] TypeUtils  [METHOD] isFinal [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P8_Replace_Mix]^return  ( Constants.ACC_FINAL & access )   ;^48^^^^^47^49^return  ( Constants.ACC_FINAL & access )  != 0;^[CLASS] TypeUtils  [METHOD] isFinal [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P2_Replace_Operator]^return  ( Constants.ACC_STATIC & access )  <= 0;^52^^^^^51^53^return  ( Constants.ACC_STATIC & access )  != 0;^[CLASS] TypeUtils  [METHOD] isStatic [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P2_Replace_Operator]^return  ( Constants.ACC_STATIC  ^  access )  != 0;^52^^^^^51^53^return  ( Constants.ACC_STATIC & access )  != 0;^[CLASS] TypeUtils  [METHOD] isStatic [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P3_Replace_Literal]^return  ( Constants.ACC_STATIC & access )  != -6;^52^^^^^51^53^return  ( Constants.ACC_STATIC & access )  != 0;^[CLASS] TypeUtils  [METHOD] isStatic [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P5_Replace_Variable]^return  ( access & Constants.ACC_STATIC )  != 0;^52^^^^^51^53^return  ( Constants.ACC_STATIC & access )  != 0;^[CLASS] TypeUtils  [METHOD] isStatic [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P8_Replace_Mix]^return  ( Constants.ACC_STATIC & access )   ;^52^^^^^51^53^return  ( Constants.ACC_STATIC & access )  != 0;^[CLASS] TypeUtils  [METHOD] isStatic [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P2_Replace_Operator]^return  ( Constants.ACC_PROTECTED & access )  == 0;^56^^^^^55^57^return  ( Constants.ACC_PROTECTED & access )  != 0;^[CLASS] TypeUtils  [METHOD] isProtected [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P2_Replace_Operator]^return  ( Constants.ACC_PROTECTED  ^  access )  != 0;^56^^^^^55^57^return  ( Constants.ACC_PROTECTED & access )  != 0;^[CLASS] TypeUtils  [METHOD] isProtected [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P3_Replace_Literal]^return  ( Constants.ACC_PROTECTED & access )  != access;^56^^^^^55^57^return  ( Constants.ACC_PROTECTED & access )  != 0;^[CLASS] TypeUtils  [METHOD] isProtected [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P5_Replace_Variable]^return  ( access & Constants.ACC_PROTECTED )  != 0;^56^^^^^55^57^return  ( Constants.ACC_PROTECTED & access )  != 0;^[CLASS] TypeUtils  [METHOD] isProtected [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P8_Replace_Mix]^return true ;^56^^^^^55^57^return  ( Constants.ACC_PROTECTED & access )  != 0;^[CLASS] TypeUtils  [METHOD] isProtected [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P2_Replace_Operator]^return  ( Constants.ACC_PUBLIC & access )  == 0;^60^^^^^59^61^return  ( Constants.ACC_PUBLIC & access )  != 0;^[CLASS] TypeUtils  [METHOD] isPublic [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P2_Replace_Operator]^return  ( Constants.ACC_PUBLIC  |  access )  != 0;^60^^^^^59^61^return  ( Constants.ACC_PUBLIC & access )  != 0;^[CLASS] TypeUtils  [METHOD] isPublic [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P3_Replace_Literal]^return  ( Constants.ACC_PUBLIC & access )  != access;^60^^^^^59^61^return  ( Constants.ACC_PUBLIC & access )  != 0;^[CLASS] TypeUtils  [METHOD] isPublic [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P5_Replace_Variable]^return  ( access & Constants.ACC_PUBLIC )  != 0;^60^^^^^59^61^return  ( Constants.ACC_PUBLIC & access )  != 0;^[CLASS] TypeUtils  [METHOD] isPublic [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P8_Replace_Mix]^return  ( Constants.ACC_PUBLIC & access )   ;^60^^^^^59^61^return  ( Constants.ACC_PUBLIC & access )  != 0;^[CLASS] TypeUtils  [METHOD] isPublic [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P2_Replace_Operator]^return  ( Constants.ACC_ABSTRACT & access )  >= 0;^64^^^^^63^65^return  ( Constants.ACC_ABSTRACT & access )  != 0;^[CLASS] TypeUtils  [METHOD] isAbstract [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P2_Replace_Operator]^return  ( Constants.ACC_ABSTRACT  >>  access )  != 0;^64^^^^^63^65^return  ( Constants.ACC_ABSTRACT & access )  != 0;^[CLASS] TypeUtils  [METHOD] isAbstract [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P3_Replace_Literal]^return  ( Constants.ACC_ABSTRACT & access )  != 5;^64^^^^^63^65^return  ( Constants.ACC_ABSTRACT & access )  != 0;^[CLASS] TypeUtils  [METHOD] isAbstract [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P5_Replace_Variable]^return  ( access & Constants.ACC_ABSTRACT )  != 0;^64^^^^^63^65^return  ( Constants.ACC_ABSTRACT & access )  != 0;^[CLASS] TypeUtils  [METHOD] isAbstract [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P8_Replace_Mix]^return false ;^64^^^^^63^65^return  ( Constants.ACC_ABSTRACT & access )  != 0;^[CLASS] TypeUtils  [METHOD] isAbstract [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P2_Replace_Operator]^return  ( Constants.ACC_INTERFACE & access )  == 0;^68^^^^^67^69^return  ( Constants.ACC_INTERFACE & access )  != 0;^[CLASS] TypeUtils  [METHOD] isInterface [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P2_Replace_Operator]^return  ( Constants.ACC_INTERFACE   instanceof   access )  != 0;^68^^^^^67^69^return  ( Constants.ACC_INTERFACE & access )  != 0;^[CLASS] TypeUtils  [METHOD] isInterface [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P3_Replace_Literal]^return  ( Constants.ACC_INTERFACE & access )  != access;^68^^^^^67^69^return  ( Constants.ACC_INTERFACE & access )  != 0;^[CLASS] TypeUtils  [METHOD] isInterface [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P5_Replace_Variable]^return  ( access & Constants.ACC_INTERFACE )  != 0;^68^^^^^67^69^return  ( Constants.ACC_INTERFACE & access )  != 0;^[CLASS] TypeUtils  [METHOD] isInterface [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P8_Replace_Mix]^return true ;^68^^^^^67^69^return  ( Constants.ACC_INTERFACE & access )  != 0;^[CLASS] TypeUtils  [METHOD] isInterface [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P2_Replace_Operator]^return  ( Constants.ACC_PRIVATE & access )  <= 0;^72^^^^^71^73^return  ( Constants.ACC_PRIVATE & access )  != 0;^[CLASS] TypeUtils  [METHOD] isPrivate [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P2_Replace_Operator]^return  ( Constants.ACC_PRIVATE  <<  access )  != 0;^72^^^^^71^73^return  ( Constants.ACC_PRIVATE & access )  != 0;^[CLASS] TypeUtils  [METHOD] isPrivate [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P3_Replace_Literal]^return  ( Constants.ACC_PRIVATE & access )  != -4;^72^^^^^71^73^return  ( Constants.ACC_PRIVATE & access )  != 0;^[CLASS] TypeUtils  [METHOD] isPrivate [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P5_Replace_Variable]^return  ( access & Constants.ACC_PRIVATE )  != 0;^72^^^^^71^73^return  ( Constants.ACC_PRIVATE & access )  != 0;^[CLASS] TypeUtils  [METHOD] isPrivate [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P8_Replace_Mix]^return  ( Constants.ACC_PRIVATE & access )   ;^72^^^^^71^73^return  ( Constants.ACC_PRIVATE & access )  != 0;^[CLASS] TypeUtils  [METHOD] isPrivate [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P2_Replace_Operator]^return  ( Constants.ACC_SYNTHETIC & access )  == 0;^76^^^^^75^77^return  ( Constants.ACC_SYNTHETIC & access )  != 0;^[CLASS] TypeUtils  [METHOD] isSynthetic [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P2_Replace_Operator]^return  ( Constants.ACC_SYNTHETIC  |  access )  != 0;^76^^^^^75^77^return  ( Constants.ACC_SYNTHETIC & access )  != 0;^[CLASS] TypeUtils  [METHOD] isSynthetic [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P5_Replace_Variable]^return  ( access & Constants.ACC_SYNTHETIC )  != 0;^76^^^^^75^77^return  ( Constants.ACC_SYNTHETIC & access )  != 0;^[CLASS] TypeUtils  [METHOD] isSynthetic [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P8_Replace_Mix]^return  ( Constants.ACC_SYNTHETIC & access )   ;^76^^^^^75^77^return  ( Constants.ACC_SYNTHETIC & access )  != 0;^[CLASS] TypeUtils  [METHOD] isSynthetic [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[P7_Replace_Invocation]^return getClassName ( getClassName ( type )  ) ;^81^^^^^80^82^return getPackageName ( getClassName ( type )  ) ;^[CLASS] TypeUtils  [METHOD] getPackageName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P7_Replace_Invocation]^return getPackageName ( getPackageName ( type )  ) ;^81^^^^^80^82^return getPackageName ( getClassName ( type )  ) ;^[CLASS] TypeUtils  [METHOD] getPackageName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P14_Delete_Statement]^^81^^^^^80^82^return getPackageName ( getClassName ( type )  ) ;^[CLASS] TypeUtils  [METHOD] getPackageName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P1_Replace_Type]^short  idx = className.lastIndexOf ( '.' ) ;^85^^^^^84^87^int idx = className.lastIndexOf ( '.' ) ;^[CLASS] TypeUtils  [METHOD] getPackageName [RETURN_TYPE] String   String className [VARIABLES] String  className  boolean  Map  rtransforms  transforms  int  idx  
[P7_Replace_Invocation]^int idx = className.indexOf ( '.' ) ;^85^^^^^84^87^int idx = className.lastIndexOf ( '.' ) ;^[CLASS] TypeUtils  [METHOD] getPackageName [RETURN_TYPE] String   String className [VARIABLES] String  className  boolean  Map  rtransforms  transforms  int  idx  
[P7_Replace_Invocation]^int idx = className .indexOf ( idx )  ;^85^^^^^84^87^int idx = className.lastIndexOf ( '.' ) ;^[CLASS] TypeUtils  [METHOD] getPackageName [RETURN_TYPE] String   String className [VARIABLES] String  className  boolean  Map  rtransforms  transforms  int  idx  
[P11_Insert_Donor_Statement]^int space = s.indexOf ( ' ' ) ;int idx = className.lastIndexOf ( '.' ) ;^85^^^^^84^87^int idx = className.lastIndexOf ( '.' ) ;^[CLASS] TypeUtils  [METHOD] getPackageName [RETURN_TYPE] String   String className [VARIABLES] String  className  boolean  Map  rtransforms  transforms  int  idx  
[P14_Delete_Statement]^^85^^^^^84^87^int idx = className.lastIndexOf ( '.' ) ;^[CLASS] TypeUtils  [METHOD] getPackageName [RETURN_TYPE] String   String className [VARIABLES] String  className  boolean  Map  rtransforms  transforms  int  idx  
[P2_Replace_Operator]^return  ( idx <= 0 )  ? "" : className.substring ( 0, idx ) ;^86^^^^^84^87^return  ( idx < 0 )  ? "" : className.substring ( 0, idx ) ;^[CLASS] TypeUtils  [METHOD] getPackageName [RETURN_TYPE] String   String className [VARIABLES] String  className  boolean  Map  rtransforms  transforms  int  idx  
[P3_Replace_Literal]^return  ( idx < 5 )  ? "" : className.substring ( 5, idx ) ;^86^^^^^84^87^return  ( idx < 0 )  ? "" : className.substring ( 0, idx ) ;^[CLASS] TypeUtils  [METHOD] getPackageName [RETURN_TYPE] String   String className [VARIABLES] String  className  boolean  Map  rtransforms  transforms  int  idx  
[P3_Replace_Literal]^return  ( idx < idx )  ? "" : className.substring ( idx, idx ) ;^86^^^^^84^87^return  ( idx < 0 )  ? "" : className.substring ( 0, idx ) ;^[CLASS] TypeUtils  [METHOD] getPackageName [RETURN_TYPE] String   String className [VARIABLES] String  className  boolean  Map  rtransforms  transforms  int  idx  
[P5_Replace_Variable]^return  ( idx < 0 )  ? "" : className.substring ( 0 ) ;^86^^^^^84^87^return  ( idx < 0 )  ? "" : className.substring ( 0, idx ) ;^[CLASS] TypeUtils  [METHOD] getPackageName [RETURN_TYPE] String   String className [VARIABLES] String  className  boolean  Map  rtransforms  transforms  int  idx  
[P5_Replace_Variable]^return  ( className < 0 )  ? "" : idx.substring ( 0, idx ) ;^86^^^^^84^87^return  ( idx < 0 )  ? "" : className.substring ( 0, idx ) ;^[CLASS] TypeUtils  [METHOD] getPackageName [RETURN_TYPE] String   String className [VARIABLES] String  className  boolean  Map  rtransforms  transforms  int  idx  
[P7_Replace_Invocation]^return  ( idx < 0 )  ? "" : className .substring ( idx , idx )  ;^86^^^^^84^87^return  ( idx < 0 )  ? "" : className.substring ( 0, idx ) ;^[CLASS] TypeUtils  [METHOD] getPackageName [RETURN_TYPE] String   String className [VARIABLES] String  className  boolean  Map  rtransforms  transforms  int  idx  
[P8_Replace_Mix]^return  ( idx  ;^86^^^^^84^87^return  ( idx < 0 )  ? "" : className.substring ( 0, idx ) ;^[CLASS] TypeUtils  [METHOD] getPackageName [RETURN_TYPE] String   String className [VARIABLES] String  className  boolean  Map  rtransforms  transforms  int  idx  
[P14_Delete_Statement]^^86^^^^^84^87^return  ( idx < 0 )  ? "" : className.substring ( 0, idx ) ;^[CLASS] TypeUtils  [METHOD] getPackageName [RETURN_TYPE] String   String className [VARIABLES] String  className  boolean  Map  rtransforms  transforms  int  idx  
[P2_Replace_Operator]^if  ( s == null && s.length (  )  == 0 )  {^90^^^^^89^94^if  ( s == null || s.length (  )  == 0 )  {^[CLASS] TypeUtils  [METHOD] upperFirst [RETURN_TYPE] String   String s [VARIABLES] Map  rtransforms  transforms  String  s  boolean  
[P2_Replace_Operator]^if  ( s != null || s.length (  )  == 0 )  {^90^^^^^89^94^if  ( s == null || s.length (  )  == 0 )  {^[CLASS] TypeUtils  [METHOD] upperFirst [RETURN_TYPE] String   String s [VARIABLES] Map  rtransforms  transforms  String  s  boolean  
[P2_Replace_Operator]^if  ( s == null || s.length (  )  != 0 )  {^90^^^^^89^94^if  ( s == null || s.length (  )  == 0 )  {^[CLASS] TypeUtils  [METHOD] upperFirst [RETURN_TYPE] String   String s [VARIABLES] Map  rtransforms  transforms  String  s  boolean  
[P3_Replace_Literal]^if  ( s == null || s.length (  )  ==  )  {^90^^^^^89^94^if  ( s == null || s.length (  )  == 0 )  {^[CLASS] TypeUtils  [METHOD] upperFirst [RETURN_TYPE] String   String s [VARIABLES] Map  rtransforms  transforms  String  s  boolean  
[P3_Replace_Literal]^if  ( s == null || s.length() - 7  == 0 )  {^90^^^^^89^94^if  ( s == null || s.length (  )  == 0 )  {^[CLASS] TypeUtils  [METHOD] upperFirst [RETURN_TYPE] String   String s [VARIABLES] Map  rtransforms  transforms  String  s  boolean  
[P6_Replace_Expression]^if  ( s == null ) {^90^^^^^89^94^if  ( s == null || s.length (  )  == 0 )  {^[CLASS] TypeUtils  [METHOD] upperFirst [RETURN_TYPE] String   String s [VARIABLES] Map  rtransforms  transforms  String  s  boolean  
[P6_Replace_Expression]^if  (  s.length (  )  == 0 )  {^90^^^^^89^94^if  ( s == null || s.length (  )  == 0 )  {^[CLASS] TypeUtils  [METHOD] upperFirst [RETURN_TYPE] String   String s [VARIABLES] Map  rtransforms  transforms  String  s  boolean  
[P7_Replace_Invocation]^if  ( s == null || s.charAt (  )  == 0 )  {^90^^^^^89^94^if  ( s == null || s.length (  )  == 0 )  {^[CLASS] TypeUtils  [METHOD] upperFirst [RETURN_TYPE] String   String s [VARIABLES] Map  rtransforms  transforms  String  s  boolean  
[P8_Replace_Mix]^if  ( s == false || s.length (  )  == 0 )  {^90^^^^^89^94^if  ( s == null || s.length (  )  == 0 )  {^[CLASS] TypeUtils  [METHOD] upperFirst [RETURN_TYPE] String   String s [VARIABLES] Map  rtransforms  transforms  String  s  boolean  
[P15_Unwrap_Block]^return s;^90^91^92^^^89^94^if  ( s == null || s.length (  )  == 0 )  { return s; }^[CLASS] TypeUtils  [METHOD] upperFirst [RETURN_TYPE] String   String s [VARIABLES] Map  rtransforms  transforms  String  s  boolean  
[P16_Remove_Block]^^90^91^92^^^89^94^if  ( s == null || s.length (  )  == 0 )  { return s; }^[CLASS] TypeUtils  [METHOD] upperFirst [RETURN_TYPE] String   String s [VARIABLES] Map  rtransforms  transforms  String  s  boolean  
[P3_Replace_Literal]^if  ( s == null || s.length() + 8  == 0 )  {^90^^^^^89^94^if  ( s == null || s.length (  )  == 0 )  {^[CLASS] TypeUtils  [METHOD] upperFirst [RETURN_TYPE] String   String s [VARIABLES] Map  rtransforms  transforms  String  s  boolean  
[P2_Replace_Operator]^return Character.toUpperCase ( s.charAt ( 0 )  >  )  + s.substring ( 1 ) ;^93^^^^^89^94^return Character.toUpperCase ( s.charAt ( 0 )  )  + s.substring ( 1 ) ;^[CLASS] TypeUtils  [METHOD] upperFirst [RETURN_TYPE] String   String s [VARIABLES] Map  rtransforms  transforms  String  s  boolean  
[P3_Replace_Literal]^return Character.toUpperCase ( s.charAt ( 6 )  )  + s.substring ( 1 ) ;^93^^^^^89^94^return Character.toUpperCase ( s.charAt ( 0 )  )  + s.substring ( 1 ) ;^[CLASS] TypeUtils  [METHOD] upperFirst [RETURN_TYPE] String   String s [VARIABLES] Map  rtransforms  transforms  String  s  boolean  
[P3_Replace_Literal]^return Character.toUpperCase ( s.charAt ( 0 )  )  + s.substring ( 6 ) ;^93^^^^^89^94^return Character.toUpperCase ( s.charAt ( 0 )  )  + s.substring ( 1 ) ;^[CLASS] TypeUtils  [METHOD] upperFirst [RETURN_TYPE] String   String s [VARIABLES] Map  rtransforms  transforms  String  s  boolean  
[P7_Replace_Invocation]^return Character.toUpperCase ( s.indexOf ( 0 )  )  + s.substring ( 1 ) ;^93^^^^^89^94^return Character.toUpperCase ( s.charAt ( 0 )  )  + s.substring ( 1 ) ;^[CLASS] TypeUtils  [METHOD] upperFirst [RETURN_TYPE] String   String s [VARIABLES] Map  rtransforms  transforms  String  s  boolean  
[P3_Replace_Literal]^return Character.toUpperCase ( s.charAt ( 3 )  )  + s.substring ( 1 ) ;^93^^^^^89^94^return Character.toUpperCase ( s.charAt ( 0 )  )  + s.substring ( 1 ) ;^[CLASS] TypeUtils  [METHOD] upperFirst [RETURN_TYPE] String   String s [VARIABLES] Map  rtransforms  transforms  String  s  boolean  
[P7_Replace_Invocation]^return Character.toUpperCase ( s .trim (  )   )  + s.substring ( 1 ) ;^93^^^^^89^94^return Character.toUpperCase ( s.charAt ( 0 )  )  + s.substring ( 1 ) ;^[CLASS] TypeUtils  [METHOD] upperFirst [RETURN_TYPE] String   String s [VARIABLES] Map  rtransforms  transforms  String  s  boolean  
[P14_Delete_Statement]^^93^^^^^89^94^return Character.toUpperCase ( s.charAt ( 0 )  )  + s.substring ( 1 ) ;^[CLASS] TypeUtils  [METHOD] upperFirst [RETURN_TYPE] String   String s [VARIABLES] Map  rtransforms  transforms  String  s  boolean  
[P7_Replace_Invocation]^if  ( isArray ( type )  )  {^97^^^^^96^104^if  ( isPrimitive ( type )  )  {^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P9_Replace_Statement]^if  ( !isArray ( type )  )  {^97^^^^^96^104^if  ( isPrimitive ( type )  )  {^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P13_Insert_Block]^if  ( isArray ( type )  )  {     return  ( getClassName ( getComponentType ( type )  )  )  + "[]"; }else {     return type.getClassName (  ) ; }^97^^^^^96^104^[Delete]^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P6_Replace_Expression]^} else {^99^^^^^96^104^} else if  ( isArray ( type )  )  {^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P7_Replace_Invocation]^} else if  ( NEWARRAY ( type )  )  {^99^^^^^96^104^} else if  ( isArray ( type )  )  {^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P15_Unwrap_Block]^return (org.mockito.cglib.core.TypeUtils.getClassName(org.mockito.cglib.core.TypeUtils.getComponentType(type))) + "[]";^99^100^101^102^103^96^104^} else if  ( isArray ( type )  )  { return getClassName ( getComponentType ( type )  )  + "[]"; } else { return type.getClassName (  ) ; }^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P16_Remove_Block]^^99^100^101^102^103^96^104^} else if  ( isArray ( type )  )  { return getClassName ( getComponentType ( type )  )  + "[]"; } else { return type.getClassName (  ) ; }^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P13_Insert_Block]^if  ( isPrimitive ( type )  )  {     return  (  ( String )   ( get ( type.getDescriptor (  )  )  )  ) ; }else     if  ( isArray ( type )  )  {         return  ( getClassName ( getComponentType ( type )  )  )  + "[]";     }else {         return type.getClassName (  ) ;     }^99^^^^^96^104^[Delete]^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P13_Insert_Block]^if  ( isArray ( type )  )  {     return type.getDescriptor (  ) .replace ( '/', '.' ) ; }else {     return getClassName ( type ) ; }^99^^^^^96^104^[Delete]^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P7_Replace_Invocation]^return type.getType (  ) ;^102^^^^^96^104^return type.getClassName (  ) ;^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P8_Replace_Mix]^return type .getPackageName ( type )  ;^102^^^^^96^104^return type.getClassName (  ) ;^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P14_Delete_Statement]^^102^^^^^96^104^return type.getClassName (  ) ;^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P2_Replace_Operator]^return getClassName ( getComponentType ( type )  ^  )  + "[]";^100^^^^^96^104^return getClassName ( getComponentType ( type )  )  + "[]";^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P3_Replace_Literal]^return getClassName ( getComponentType ( type )  )  + "]";^100^^^^^96^104^return getClassName ( getComponentType ( type )  )  + "[]";^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P7_Replace_Invocation]^return getPackageName ( getComponentType ( type )  )  + "[]";^100^^^^^96^104^return getClassName ( getComponentType ( type )  )  + "[]";^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P7_Replace_Invocation]^return getClassName ( getBoxedType ( type )  )  + "[]";^100^^^^^96^104^return getClassName ( getComponentType ( type )  )  + "[]";^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P13_Insert_Block]^if  ( isArray ( type )  )  {     return  ( getClassName ( getComponentType ( type )  )  )  + "[]"; }else {     return type.getClassName (  ) ; }^100^^^^^96^104^[Delete]^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P14_Delete_Statement]^^100^^^^^96^104^return getClassName ( getComponentType ( type )  )  + "[]";^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P2_Replace_Operator]^return getClassName ( getComponentType ( type )  >  )  + "[]";^100^^^^^96^104^return getClassName ( getComponentType ( type )  )  + "[]";^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P3_Replace_Literal]^return getClassName ( getComponentType ( type )  )  + "[][";^100^^^^^96^104^return getClassName ( getComponentType ( type )  )  + "[]";^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P1_Replace_Type]^return  ( char ) rtransforms.get ( type.getDescriptor (  )  ) ;^98^^^^^96^104^return  ( String ) rtransforms.get ( type.getDescriptor (  )  ) ;^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P5_Replace_Variable]^return  ( String ) transforms.get ( type.getDescriptor (  )  ) ;^98^^^^^96^104^return  ( String ) rtransforms.get ( type.getDescriptor (  )  ) ;^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P5_Replace_Variable]^return  ( String ) type.get ( rtransforms.getDescriptor (  )  ) ;^98^^^^^96^104^return  ( String ) rtransforms.get ( type.getDescriptor (  )  ) ;^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P7_Replace_Invocation]^return  ( String ) rtransforms.get ( type.getType (  )  ) ;^98^^^^^96^104^return  ( String ) rtransforms.get ( type.getDescriptor (  )  ) ;^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P8_Replace_Mix]^return  ( String ) transforms.get ( type.getType (  )  ) ;^98^^^^^96^104^return  ( String ) rtransforms.get ( type.getDescriptor (  )  ) ;^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P14_Delete_Statement]^^98^99^100^101^102^96^104^return  ( String ) rtransforms.get ( type.getDescriptor (  )  ) ; } else if  ( isArray ( type )  )  { return getClassName ( getComponentType ( type )  )  + "[]"; } else { return type.getClassName (  ) ; }^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P7_Replace_Invocation]^return  ( String ) rtransforms.get ( type .getSort (  )   ) ;^98^^^^^96^104^return  ( String ) rtransforms.get ( type.getDescriptor (  )  ) ;^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P8_Replace_Mix]^}  if  ( NEWARRAY ( type )  )  {^99^^^^^96^104^} else if  ( isArray ( type )  )  {^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P2_Replace_Operator]^return getClassName ( getComponentType ( type )  <  )  + "[]";^100^^^^^96^104^return getClassName ( getComponentType ( type )  )  + "[]";^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P3_Replace_Literal]^return getClassName ( getComponentType ( type )  )  + "";^100^^^^^96^104^return getClassName ( getComponentType ( type )  )  + "[]";^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P2_Replace_Operator]^return getClassName ( getComponentType ( type )  &  )  + "[]";^100^^^^^96^104^return getClassName ( getComponentType ( type )  )  + "[]";^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P2_Replace_Operator]^if  ( types != null )  {^107^^^^^106^119^if  ( types == null )  {^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P6_Replace_Expression]^if  ( types.length + 1 )  {^107^^^^^106^119^if  ( types == null )  {^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P8_Replace_Mix]^if  ( types == true )  {^107^^^^^106^119^if  ( types == null )  {^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P9_Replace_Statement]^if  ( t != null )  {^107^^^^^106^119^if  ( types == null )  {^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P9_Replace_Statement]^if  ( value == 0L )  {^107^^^^^106^119^if  ( types == null )  {^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P9_Replace_Statement]^if  ( names == null )  {^107^^^^^106^119^if  ( types == null )  {^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P9_Replace_Statement]^if  ( classes == null )  {^107^^^^^106^119^if  ( types == null )  {^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P5_Replace_Variable]^if  ( extra.contains ( list )  )  {^111^^^^^106^119^if  ( list.contains ( extra )  )  {^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P15_Unwrap_Block]^return types;^111^112^113^^^106^119^if  ( list.contains ( extra )  )  { return types; }^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P16_Remove_Block]^^111^112^113^^^106^119^if  ( list.contains ( extra )  )  { return types; }^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P13_Insert_Block]^if  ( names == null )  {     return null; }^111^^^^^106^119^[Delete]^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P13_Insert_Block]^if  ( classes == null )  {     return null; }^111^^^^^106^119^[Delete]^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P13_Insert_Block]^if  ( type.equals ( "" )  )  {     return type; }^111^^^^^106^119^[Delete]^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P5_Replace_Variable]^return copy;^112^^^^^106^119^return types;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P8_Replace_Mix]^copy[types.length] ;^116^^^^^106^119^copy[types.length] = extra;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P5_Replace_Variable]^return types;^117^^^^^106^119^return copy;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P1_Replace_Type]^ArrayList  list = Arrays.as ArrayList  ( types ) ;^110^^^^^106^119^List list = Arrays.asList ( types ) ;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P5_Replace_Variable]^List list = Arrays.asList ( copy ) ;^110^^^^^106^119^List list = Arrays.asList ( types ) ;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P11_Insert_Donor_Statement]^List types = new ArrayList ( 5 ) ;List list = Arrays.asList ( types ) ;^110^^^^^106^119^List list = Arrays.asList ( types ) ;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P3_Replace_Literal]^Type[] copy = new Type[types.length ];^114^^^^^106^119^Type[] copy = new Type[types.length + 1];^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P11_Insert_Donor_Statement]^Type[] types = new Type[names.length];Type[] copy = new Type[types.length + 1];^114^^^^^106^119^Type[] copy = new Type[types.length + 1];^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P11_Insert_Donor_Statement]^Type[] types = new Type[names.size (  ) ];Type[] copy = new Type[types.length + 1];^114^^^^^106^119^Type[] copy = new Type[types.length + 1];^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P11_Insert_Donor_Statement]^Type[] all = new Type[t1.length + t2.length];Type[] copy = new Type[types.length + 1];^114^^^^^106^119^Type[] copy = new Type[types.length + 1];^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P11_Insert_Donor_Statement]^String[] names = new String[types.length];Type[] copy = new Type[types.length + 1];^114^^^^^106^119^Type[] copy = new Type[types.length + 1];^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P11_Insert_Donor_Statement]^Type[] types = new Type[classes.length];Type[] copy = new Type[types.length + 1];^114^^^^^106^119^Type[] copy = new Type[types.length + 1];^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P14_Delete_Statement]^^110^^^^^106^119^List list = Arrays.asList ( types ) ;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P3_Replace_Literal]^System.arraycopy ( types, -7, copy, -7, types.length ) ;^115^^^^^106^119^System.arraycopy ( types, 0, copy, 0, types.length ) ;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P3_Replace_Literal]^System.arraycopy ( types, -6, copy, -6, types.length ) ;^115^^^^^106^119^System.arraycopy ( types, 0, copy, 0, types.length ) ;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P5_Replace_Variable]^System.arraycopy (  0, copy, 0, types.length ) ;^115^^^^^106^119^System.arraycopy ( types, 0, copy, 0, types.length ) ;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P5_Replace_Variable]^System.arraycopy ( types, 0,  0, types.length ) ;^115^^^^^106^119^System.arraycopy ( types, 0, copy, 0, types.length ) ;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P5_Replace_Variable]^System.arraycopy ( types, 0, copy, 0 ) ;^115^^^^^106^119^System.arraycopy ( types, 0, copy, 0, types.length ) ;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P14_Delete_Statement]^^115^^^^^106^119^System.arraycopy ( types, 0, copy, 0, types.length ) ;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P11_Insert_Donor_Statement]^System.arraycopy ( t1, 0, all, 0, t1.length ) ;System.arraycopy ( types, 0, copy, 0, types.length ) ;^115^^^^^106^119^System.arraycopy ( types, 0, copy, 0, types.length ) ;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P11_Insert_Donor_Statement]^System.arraycopy ( t2, 0, all, t1.length, t2.length ) ;System.arraycopy ( types, 0, copy, 0, types.length ) ;^115^^^^^106^119^System.arraycopy ( types, 0, copy, 0, types.length ) ;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P8_Replace_Mix]^if  ( list .iterator (  )   )  {^111^^^^^106^119^if  ( list.contains ( extra )  )  {^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P1_Replace_Type]^LinkedHashSet  list = Arrays.as LinkedHashSet  ( types ) ;^110^^^^^106^119^List list = Arrays.asList ( types ) ;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P3_Replace_Literal]^System.arraycopy ( types, -4, copy, -4, types.length ) ;^115^^^^^106^119^System.arraycopy ( types, 0, copy, 0, types.length ) ;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P14_Delete_Statement]^^115^116^^^^106^119^System.arraycopy ( types, 0, copy, 0, types.length ) ; copy[types.length] = extra;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[P11_Insert_Donor_Statement]^Type[] copy = new Type[types.length + 1];Type[] all = new Type[t1.length + t2.length];^123^^^^^121^127^Type[] all = new Type[t1.length + t2.length];^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] t1 Type[] t2 [VARIABLES] Type[]  all  t1  t2  Map  rtransforms  transforms  boolean  
[P11_Insert_Donor_Statement]^Type[] types = new Type[names.length];Type[] all = new Type[t1.length + t2.length];^123^^^^^121^127^Type[] all = new Type[t1.length + t2.length];^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] t1 Type[] t2 [VARIABLES] Type[]  all  t1  t2  Map  rtransforms  transforms  boolean  
[P11_Insert_Donor_Statement]^Type[] types = new Type[classes.length];Type[] all = new Type[t1.length + t2.length];^123^^^^^121^127^Type[] all = new Type[t1.length + t2.length];^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] t1 Type[] t2 [VARIABLES] Type[]  all  t1  t2  Map  rtransforms  transforms  boolean  
[P3_Replace_Literal]^System.arraycopy ( t1, 3, all, 3, t1.length ) ;^124^^^^^121^127^System.arraycopy ( t1, 0, all, 0, t1.length ) ;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] t1 Type[] t2 [VARIABLES] Type[]  all  t1  t2  Map  rtransforms  transforms  boolean  
[P3_Replace_Literal]^System.arraycopy ( t1, 2, all, 2, t1.length ) ;^124^^^^^121^127^System.arraycopy ( t1, 0, all, 0, t1.length ) ;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] t1 Type[] t2 [VARIABLES] Type[]  all  t1  t2  Map  rtransforms  transforms  boolean  
[P5_Replace_Variable]^System.arraycopy (  0, all, 0, t1.length ) ;^124^^^^^121^127^System.arraycopy ( t1, 0, all, 0, t1.length ) ;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] t1 Type[] t2 [VARIABLES] Type[]  all  t1  t2  Map  rtransforms  transforms  boolean  
[P5_Replace_Variable]^System.arraycopy ( t1, 0,  0, t1.length ) ;^124^^^^^121^127^System.arraycopy ( t1, 0, all, 0, t1.length ) ;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] t1 Type[] t2 [VARIABLES] Type[]  all  t1  t2  Map  rtransforms  transforms  boolean  
[P5_Replace_Variable]^System.arraycopy ( t1, 0, all, 0 ) ;^124^^^^^121^127^System.arraycopy ( t1, 0, all, 0, t1.length ) ;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] t1 Type[] t2 [VARIABLES] Type[]  all  t1  t2  Map  rtransforms  transforms  boolean  
[P14_Delete_Statement]^^124^^^^^121^127^System.arraycopy ( t1, 0, all, 0, t1.length ) ;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] t1 Type[] t2 [VARIABLES] Type[]  all  t1  t2  Map  rtransforms  transforms  boolean  
[P11_Insert_Donor_Statement]^System.arraycopy ( types, 0, copy, 0, types.length ) ;System.arraycopy ( t1, 0, all, 0, t1.length ) ;^124^^^^^121^127^System.arraycopy ( t1, 0, all, 0, t1.length ) ;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] t1 Type[] t2 [VARIABLES] Type[]  all  t1  t2  Map  rtransforms  transforms  boolean  
[P11_Insert_Donor_Statement]^System.arraycopy ( t2, 0, all, t1.length, t2.length ) ;System.arraycopy ( t1, 0, all, 0, t1.length ) ;^124^^^^^121^127^System.arraycopy ( t1, 0, all, 0, t1.length ) ;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] t1 Type[] t2 [VARIABLES] Type[]  all  t1  t2  Map  rtransforms  transforms  boolean  
[P3_Replace_Literal]^System.arraycopy ( t2, -5, all, t1.length, t2.length ) ;^125^^^^^121^127^System.arraycopy ( t2, 0, all, t1.length, t2.length ) ;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] t1 Type[] t2 [VARIABLES] Type[]  all  t1  t2  Map  rtransforms  transforms  boolean  
[P5_Replace_Variable]^System.arraycopy (  0, all, t1.length, t2.length ) ;^125^^^^^121^127^System.arraycopy ( t2, 0, all, t1.length, t2.length ) ;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] t1 Type[] t2 [VARIABLES] Type[]  all  t1  t2  Map  rtransforms  transforms  boolean  
[P5_Replace_Variable]^System.arraycopy ( t2, 0,  t1.length, t2.length ) ;^125^^^^^121^127^System.arraycopy ( t2, 0, all, t1.length, t2.length ) ;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] t1 Type[] t2 [VARIABLES] Type[]  all  t1  t2  Map  rtransforms  transforms  boolean  
[P5_Replace_Variable]^System.arraycopy ( t2, 0, all.length, t2.length ) ;^125^^^^^121^127^System.arraycopy ( t2, 0, all, t1.length, t2.length ) ;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] t1 Type[] t2 [VARIABLES] Type[]  all  t1  t2  Map  rtransforms  transforms  boolean  
[P5_Replace_Variable]^System.arraycopy ( t2, 0, all,  t2.length ) ;^125^^^^^121^127^System.arraycopy ( t2, 0, all, t1.length, t2.length ) ;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] t1 Type[] t2 [VARIABLES] Type[]  all  t1  t2  Map  rtransforms  transforms  boolean  
[P5_Replace_Variable]^System.arraycopy ( t2, 0, all, t1.length ) ;^125^^^^^121^127^System.arraycopy ( t2, 0, all, t1.length, t2.length ) ;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] t1 Type[] t2 [VARIABLES] Type[]  all  t1  t2  Map  rtransforms  transforms  boolean  
[P14_Delete_Statement]^^125^^^^^121^127^System.arraycopy ( t2, 0, all, t1.length, t2.length ) ;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] t1 Type[] t2 [VARIABLES] Type[]  all  t1  t2  Map  rtransforms  transforms  boolean  
[P11_Insert_Donor_Statement]^System.arraycopy ( t1, 0, all, 0, t1.length ) ;System.arraycopy ( t2, 0, all, t1.length, t2.length ) ;^125^^^^^121^127^System.arraycopy ( t2, 0, all, t1.length, t2.length ) ;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] t1 Type[] t2 [VARIABLES] Type[]  all  t1  t2  Map  rtransforms  transforms  boolean  
[P11_Insert_Donor_Statement]^System.arraycopy ( types, 0, copy, 0, types.length ) ;System.arraycopy ( t2, 0, all, t1.length, t2.length ) ;^125^^^^^121^127^System.arraycopy ( t2, 0, all, t1.length, t2.length ) ;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] t1 Type[] t2 [VARIABLES] Type[]  all  t1  t2  Map  rtransforms  transforms  boolean  
[P5_Replace_Variable]^return t2;^126^^^^^121^127^return all;^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] t1 Type[] t2 [VARIABLES] Type[]  all  t1  t2  Map  rtransforms  transforms  boolean  
[P2_Replace_Operator]^return Type.getType ( "L"  ||  name  ||  ";" ) ;^131^^^^^129^132^return Type.getType ( "L" + name + ";" ) ;^[CLASS] TypeUtils  [METHOD] fromInternalName [RETURN_TYPE] Type   String name [VARIABLES] Map  rtransforms  transforms  String  name  boolean  
[P2_Replace_Operator]^return Type.getType ( "L"  <=  name + ";" ) ;^131^^^^^129^132^return Type.getType ( "L" + name + ";" ) ;^[CLASS] TypeUtils  [METHOD] fromInternalName [RETURN_TYPE] Type   String name [VARIABLES] Map  rtransforms  transforms  String  name  boolean  
[P3_Replace_Literal]^return Type.getType ( "" + name + ";" ) ;^131^^^^^129^132^return Type.getType ( "L" + name + ";" ) ;^[CLASS] TypeUtils  [METHOD] fromInternalName [RETURN_TYPE] Type   String name [VARIABLES] Map  rtransforms  transforms  String  name  boolean  
[P3_Replace_Literal]^return Type.getType ( "L" + name + "" ) ;^131^^^^^129^132^return Type.getType ( "L" + name + ";" ) ;^[CLASS] TypeUtils  [METHOD] fromInternalName [RETURN_TYPE] Type   String name [VARIABLES] Map  rtransforms  transforms  String  name  boolean  
[P7_Replace_Invocation]^return Type .getType ( name )  ;^131^^^^^129^132^return Type.getType ( "L" + name + ";" ) ;^[CLASS] TypeUtils  [METHOD] fromInternalName [RETURN_TYPE] Type   String name [VARIABLES] Map  rtransforms  transforms  String  name  boolean  
[P8_Replace_Mix]^return Type.getType ( "L" + name +name ) ;^131^^^^^129^132^return Type.getType ( "L" + name + ";" ) ;^[CLASS] TypeUtils  [METHOD] fromInternalName [RETURN_TYPE] Type   String name [VARIABLES] Map  rtransforms  transforms  String  name  boolean  
[P2_Replace_Operator]^return Type.getType ( "L"  ==  name  ==  ";" ) ;^131^^^^^129^132^return Type.getType ( "L" + name + ";" ) ;^[CLASS] TypeUtils  [METHOD] fromInternalName [RETURN_TYPE] Type   String name [VARIABLES] Map  rtransforms  transforms  String  name  boolean  
[P2_Replace_Operator]^return Type.getType ( "L"  >>  name + ";" ) ;^131^^^^^129^132^return Type.getType ( "L" + name + ";" ) ;^[CLASS] TypeUtils  [METHOD] fromInternalName [RETURN_TYPE] Type   String name [VARIABLES] Map  rtransforms  transforms  String  name  boolean  
[P14_Delete_Statement]^^131^^^^^129^132^return Type.getType ( "L" + name + ";" ) ;^[CLASS] TypeUtils  [METHOD] fromInternalName [RETURN_TYPE] Type   String name [VARIABLES] Map  rtransforms  transforms  String  name  boolean  
[P2_Replace_Operator]^if  ( names != null )  {^135^^^^^134^143^if  ( names == null )  {^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P8_Replace_Mix]^if  ( names == true )  {^135^^^^^134^143^if  ( names == null )  {^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P9_Replace_Statement]^if  ( value == 0d )  {^135^^^^^134^143^if  ( names == null )  {^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P9_Replace_Statement]^if  ( t != null )  {^135^^^^^134^143^if  ( names == null )  {^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P9_Replace_Statement]^if  ( value == 0L )  {^135^^^^^134^143^if  ( names == null )  {^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P9_Replace_Statement]^if  ( types == null )  {^135^^^^^134^143^if  ( names == null )  {^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P9_Replace_Statement]^if  ( value == 0f )  {^135^^^^^134^143^if  ( names == null )  {^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P9_Replace_Statement]^if  ( classes == null )  {^135^^^^^134^143^if  ( names == null )  {^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P15_Unwrap_Block]^return null;^135^136^137^^^134^143^if  ( names == null )  { return null; }^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P16_Remove_Block]^^135^136^137^^^134^143^if  ( names == null )  { return null; }^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P13_Insert_Block]^if  ( classes == null )  {     return null; }^135^^^^^134^143^[Delete]^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P13_Insert_Block]^if  ( list.contains ( extra )  )  {     return types; }^135^^^^^134^143^[Delete]^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P13_Insert_Block]^if  ( types == null )  {     return null; }^135^^^^^134^143^[Delete]^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P13_Insert_Block]^if  ( type.equals ( "" )  )  {     return type; }^135^^^^^134^143^[Delete]^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P8_Replace_Mix]^return this;^136^^^^^134^143^return null;^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^Type[] copy = new Type[types.length + 1];Type[] types = new Type[names.length];^138^^^^^134^143^Type[] types = new Type[names.length];^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^Type[] types = new Type[names.size (  ) ];Type[] types = new Type[names.length];^138^^^^^134^143^Type[] types = new Type[names.length];^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^Type[] all = new Type[t1.length + t2.length];Type[] types = new Type[names.length];^138^^^^^134^143^Type[] types = new Type[names.length];^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^String[] names = new String[types.length];Type[] types = new Type[names.length];^138^^^^^134^143^Type[] types = new Type[names.length];^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^Type[] types = new Type[classes.length];Type[] types = new Type[names.length];^138^^^^^134^143^Type[] types = new Type[names.length];^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P1_Replace_Type]^for  (  short  i = 0; i < names.length; i++ )  {^139^^^^^134^143^for  ( int i = 0; i < names.length; i++ )  {^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i <= names.length; i++ )  {^139^^^^^134^143^for  ( int i = 0; i < names.length; i++ )  {^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P3_Replace_Literal]^for  ( int i = -9; i < names.length; i++ )  {^139^^^^^134^143^for  ( int i = 0; i < names.length; i++ )  {^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P5_Replace_Variable]^for  ( names.lengthnt i = 0; i < i; i++ )  {^139^^^^^134^143^for  ( int i = 0; i < names.length; i++ )  {^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P7_Replace_Invocation]^types[i] = add ( names[i] ) ;^140^^^^^134^143^types[i] = fromInternalName ( names[i] ) ;^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P8_Replace_Mix]^types[i]  = null ;^140^^^^^134^143^types[i] = fromInternalName ( names[i] ) ;^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^types[i] = Type.getType ( classes[i] ) ;types[i] = fromInternalName ( names[i] ) ;^140^^^^^134^143^types[i] = fromInternalName ( names[i] ) ;^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P14_Delete_Statement]^^140^^^^^134^143^types[i] = fromInternalName ( names[i] ) ;^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P8_Replace_Mix]^types[i]  =  types[i] ;^140^^^^^134^143^types[i] = fromInternalName ( names[i] ) ;^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P3_Replace_Literal]^for  ( int i = 3; i < names.length; i++ )  {^139^^^^^134^143^for  ( int i = 0; i < names.length; i++ )  {^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P1_Replace_Type]^long  size = 0;^146^^^^^145^151^int size = 0;^[CLASS] TypeUtils  [METHOD] getStackSize [RETURN_TYPE] int   Type[] types [VARIABLES] Type[]  types  boolean  Map  rtransforms  transforms  int  i  size  
[P3_Replace_Literal]^int size = 6;^146^^^^^145^151^int size = 0;^[CLASS] TypeUtils  [METHOD] getStackSize [RETURN_TYPE] int   Type[] types [VARIABLES] Type[]  types  boolean  Map  rtransforms  transforms  int  i  size  
[P11_Insert_Donor_Statement]^int index = 0;int size = 0;^146^^^^^145^151^int size = 0;^[CLASS] TypeUtils  [METHOD] getStackSize [RETURN_TYPE] int   Type[] types [VARIABLES] Type[]  types  boolean  Map  rtransforms  transforms  int  i  size  
[P1_Replace_Type]^for  (  long  i = 0; i < types.length; i++ )  {^147^^^^^145^151^for  ( int i = 0; i < types.length; i++ )  {^[CLASS] TypeUtils  [METHOD] getStackSize [RETURN_TYPE] int   Type[] types [VARIABLES] Type[]  types  boolean  Map  rtransforms  transforms  int  i  size  
[P2_Replace_Operator]^for  ( int i = 0; i > types.length; i++ )  {^147^^^^^145^151^for  ( int i = 0; i < types.length; i++ )  {^[CLASS] TypeUtils  [METHOD] getStackSize [RETURN_TYPE] int   Type[] types [VARIABLES] Type[]  types  boolean  Map  rtransforms  transforms  int  i  size  
[P2_Replace_Operator]^for  >  ( int i = 0; i < types.length; i++ )  {^147^^^^^145^151^for  ( int i = 0; i < types.length; i++ )  {^[CLASS] TypeUtils  [METHOD] getStackSize [RETURN_TYPE] int   Type[] types [VARIABLES] Type[]  types  boolean  Map  rtransforms  transforms  int  i  size  
[P3_Replace_Literal]^for  ( int i = i; i < types.length; i++ )  {^147^^^^^145^151^for  ( int i = 0; i < types.length; i++ )  {^[CLASS] TypeUtils  [METHOD] getStackSize [RETURN_TYPE] int   Type[] types [VARIABLES] Type[]  types  boolean  Map  rtransforms  transforms  int  i  size  
[P7_Replace_Invocation]^size += types[i].replace (  ) ;^148^^^^^145^151^size += types[i].getSize (  ) ;^[CLASS] TypeUtils  [METHOD] getStackSize [RETURN_TYPE] int   Type[] types [VARIABLES] Type[]  types  boolean  Map  rtransforms  transforms  int  i  size  
[P8_Replace_Mix]^size +=  null[i].getSize (  ) ;^148^^^^^145^151^size += types[i].getSize (  ) ;^[CLASS] TypeUtils  [METHOD] getStackSize [RETURN_TYPE] int   Type[] types [VARIABLES] Type[]  types  boolean  Map  rtransforms  transforms  int  i  size  
[P11_Insert_Donor_Statement]^names[i] = types[i].getInternalName (  ) ;size += types[i].getSize (  ) ;^148^^^^^145^151^size += types[i].getSize (  ) ;^[CLASS] TypeUtils  [METHOD] getStackSize [RETURN_TYPE] int   Type[] types [VARIABLES] Type[]  types  boolean  Map  rtransforms  transforms  int  i  size  
[P14_Delete_Statement]^^148^^^^^145^151^size += types[i].getSize (  ) ;^[CLASS] TypeUtils  [METHOD] getStackSize [RETURN_TYPE] int   Type[] types [VARIABLES] Type[]  types  boolean  Map  rtransforms  transforms  int  i  size  
[P11_Insert_Donor_Statement]^sb.append ( types[i].getDescriptor (  )  ) ;size += types[i].getSize (  ) ;^148^^^^^145^151^size += types[i].getSize (  ) ;^[CLASS] TypeUtils  [METHOD] getStackSize [RETURN_TYPE] int   Type[] types [VARIABLES] Type[]  types  boolean  Map  rtransforms  transforms  int  i  size  
[P3_Replace_Literal]^for  ( int i = -5; i < types.length; i++ )  {^147^^^^^145^151^for  ( int i = 0; i < types.length; i++ )  {^[CLASS] TypeUtils  [METHOD] getStackSize [RETURN_TYPE] int   Type[] types [VARIABLES] Type[]  types  boolean  Map  rtransforms  transforms  int  i  size  
[P8_Replace_Mix]^size += types[i] .getName (  )  ;^148^^^^^145^151^size += types[i].getSize (  ) ;^[CLASS] TypeUtils  [METHOD] getStackSize [RETURN_TYPE] int   Type[] types [VARIABLES] Type[]  types  boolean  Map  rtransforms  transforms  int  i  size  
[P5_Replace_Variable]^return i;^150^^^^^145^151^return size;^[CLASS] TypeUtils  [METHOD] getStackSize [RETURN_TYPE] int   Type[] types [VARIABLES] Type[]  types  boolean  Map  rtransforms  transforms  int  i  size  
[P2_Replace_Operator]^if  ( types != null )  {^154^^^^^153^162^if  ( types == null )  {^[CLASS] TypeUtils  [METHOD] toInternalNames [RETURN_TYPE] String[]   Type[] types [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P8_Replace_Mix]^if  ( types == false )  {^154^^^^^153^162^if  ( types == null )  {^[CLASS] TypeUtils  [METHOD] toInternalNames [RETURN_TYPE] String[]   Type[] types [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P9_Replace_Statement]^if  ( t != null )  {^154^^^^^153^162^if  ( types == null )  {^[CLASS] TypeUtils  [METHOD] toInternalNames [RETURN_TYPE] String[]   Type[] types [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P9_Replace_Statement]^if  ( value == 0L )  {^154^^^^^153^162^if  ( types == null )  {^[CLASS] TypeUtils  [METHOD] toInternalNames [RETURN_TYPE] String[]   Type[] types [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P9_Replace_Statement]^if  ( names == null )  {^154^^^^^153^162^if  ( types == null )  {^[CLASS] TypeUtils  [METHOD] toInternalNames [RETURN_TYPE] String[]   Type[] types [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P9_Replace_Statement]^if  ( classes == null )  {^154^^^^^153^162^if  ( types == null )  {^[CLASS] TypeUtils  [METHOD] toInternalNames [RETURN_TYPE] String[]   Type[] types [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P15_Unwrap_Block]^return null;^154^155^156^^^153^162^if  ( types == null )  { return null; }^[CLASS] TypeUtils  [METHOD] toInternalNames [RETURN_TYPE] String[]   Type[] types [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P16_Remove_Block]^^154^155^156^^^153^162^if  ( types == null )  { return null; }^[CLASS] TypeUtils  [METHOD] toInternalNames [RETURN_TYPE] String[]   Type[] types [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P13_Insert_Block]^if  ( names == null )  {     return null; }^154^^^^^153^162^[Delete]^[CLASS] TypeUtils  [METHOD] toInternalNames [RETURN_TYPE] String[]   Type[] types [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P13_Insert_Block]^if  ( classes == null )  {     return null; }^154^^^^^153^162^[Delete]^[CLASS] TypeUtils  [METHOD] toInternalNames [RETURN_TYPE] String[]   Type[] types [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P13_Insert_Block]^if  ( type.equals ( "" )  )  {     return type; }^154^^^^^153^162^[Delete]^[CLASS] TypeUtils  [METHOD] toInternalNames [RETURN_TYPE] String[]   Type[] types [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P8_Replace_Mix]^return true;^155^^^^^153^162^return null;^[CLASS] TypeUtils  [METHOD] toInternalNames [RETURN_TYPE] String[]   Type[] types [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P8_Replace_Mix]^return this;^155^^^^^153^162^return null;^[CLASS] TypeUtils  [METHOD] toInternalNames [RETURN_TYPE] String[]   Type[] types [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^Type[] copy = new Type[types.length + 1];String[] names = new String[types.length];^157^^^^^153^162^String[] names = new String[types.length];^[CLASS] TypeUtils  [METHOD] toInternalNames [RETURN_TYPE] String[]   Type[] types [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^Type[] types = new Type[names.length];String[] names = new String[types.length];^157^^^^^153^162^String[] names = new String[types.length];^[CLASS] TypeUtils  [METHOD] toInternalNames [RETURN_TYPE] String[]   Type[] types [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^Type[] types = new Type[classes.length];String[] names = new String[types.length];^157^^^^^153^162^String[] names = new String[types.length];^[CLASS] TypeUtils  [METHOD] toInternalNames [RETURN_TYPE] String[]   Type[] types [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P1_Replace_Type]^for  (  long  i = 0; i < types.length; i++ )  {^158^^^^^153^162^for  ( int i = 0; i < types.length; i++ )  {^[CLASS] TypeUtils  [METHOD] toInternalNames [RETURN_TYPE] String[]   Type[] types [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i > types.length; i++ )  {^158^^^^^153^162^for  ( int i = 0; i < types.length; i++ )  {^[CLASS] TypeUtils  [METHOD] toInternalNames [RETURN_TYPE] String[]   Type[] types [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P3_Replace_Literal]^for  ( int i = i; i < types.length; i++ )  {^158^^^^^153^162^for  ( int i = 0; i < types.length; i++ )  {^[CLASS] TypeUtils  [METHOD] toInternalNames [RETURN_TYPE] String[]   Type[] types [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P7_Replace_Invocation]^names[i] = types[i].replace (  ) ;^159^^^^^153^162^names[i] = types[i].getInternalName (  ) ;^[CLASS] TypeUtils  [METHOD] toInternalNames [RETURN_TYPE] String[]   Type[] types [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P7_Replace_Invocation]^names[i] = types[i] .getName (  )  ;^159^^^^^153^162^names[i] = types[i].getInternalName (  ) ;^[CLASS] TypeUtils  [METHOD] toInternalNames [RETURN_TYPE] String[]   Type[] types [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P8_Replace_Mix]^names[i] ;^159^^^^^153^162^names[i] = types[i].getInternalName (  ) ;^[CLASS] TypeUtils  [METHOD] toInternalNames [RETURN_TYPE] String[]   Type[] types [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^size += types[i].getSize (  ) ;names[i] = types[i].getInternalName (  ) ;^159^^^^^153^162^names[i] = types[i].getInternalName (  ) ;^[CLASS] TypeUtils  [METHOD] toInternalNames [RETURN_TYPE] String[]   Type[] types [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P14_Delete_Statement]^^159^^^^^153^162^names[i] = types[i].getInternalName (  ) ;^[CLASS] TypeUtils  [METHOD] toInternalNames [RETURN_TYPE] String[]   Type[] types [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P8_Replace_Mix]^names[i]  =  names[i] ;^159^^^^^153^162^names[i] = types[i].getInternalName (  ) ;^[CLASS] TypeUtils  [METHOD] toInternalNames [RETURN_TYPE] String[]   Type[] types [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P1_Replace_Type]^for  (  short  i = 0; i < types.length; i++ )  {^158^^^^^153^162^for  ( int i = 0; i < types.length; i++ )  {^[CLASS] TypeUtils  [METHOD] toInternalNames [RETURN_TYPE] String[]   Type[] types [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[P1_Replace_Type]^long  space = s.indexOf ( ' ' ) ;^165^^^^^164^178^int space = s.indexOf ( ' ' ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P8_Replace_Mix]^int returnTypepace = s.indexOf ( ' ' ) ;^165^^^^^164^178^int space = s.indexOf ( ' ' ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^int next = s.indexOf ( ',', mark ) ;int space = s.indexOf ( ' ' ) ;^165^^^^^164^178^int space = s.indexOf ( ' ' ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^int rparen = s.indexOf ( ' ) ', lparen ) ;int space = s.indexOf ( ' ' ) ;^165^^^^^164^178^int space = s.indexOf ( ' ' ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^int lparen = s.indexOf ( ' ( ', space ) ;int space = s.indexOf ( ' ' ) ;^165^^^^^164^178^int space = s.indexOf ( ' ' ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^int idx = className.lastIndexOf ( '.' ) ;int space = s.indexOf ( ' ' ) ;^165^^^^^164^178^int space = s.indexOf ( ' ' ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P14_Delete_Statement]^^165^^^^^164^178^int space = s.indexOf ( ' ' ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P1_Replace_Type]^short  lparen = s.indexOf ( ' ( ', space ) ;^166^^^^^164^178^int lparen = s.indexOf ( ' ( ', space ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^int lparen = returnType.indexOf ( ' ( ', space ) ;^166^^^^^164^178^int lparen = s.indexOf ( ' ( ', space ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^int lparen = s.indexOf ( ' ( 'pace ) ;^166^^^^^164^178^int lparen = s.indexOf ( ' ( ', space ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^int lparen = s.indexOf ( ' ( ' ) ;^166^^^^^164^178^int lparen = s.indexOf ( ' ( ', space ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^int lparen = space.indexOf ( ' ( ', s ) ;^166^^^^^164^178^int lparen = s.indexOf ( ' ( ', space ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^int next = s.indexOf ( ',', mark ) ;int lparen = s.indexOf ( ' ( ', space ) ;^166^^^^^164^178^int lparen = s.indexOf ( ' ( ', space ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^int rparen = s.indexOf ( ' ) ', lparen ) ;int lparen = s.indexOf ( ' ( ', space ) ;^166^^^^^164^178^int lparen = s.indexOf ( ' ( ', space ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^int space = s.indexOf ( ' ' ) ;int lparen = s.indexOf ( ' ( ', space ) ;^166^^^^^164^178^int lparen = s.indexOf ( ' ( ', space ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^int lparen = s.indexOf ( ' ( ', rparen ) ;^166^^^^^164^178^int lparen = s.indexOf ( ' ( ', space ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P14_Delete_Statement]^^166^167^^^^164^178^int lparen = s.indexOf ( ' ( ', space ) ; int rparen = s.indexOf ( ' ) ', lparen ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P1_Replace_Type]^long  rparen = s.indexOf ( ' ) ', lparen ) ;^167^^^^^164^178^int rparen = s.indexOf ( ' ) ', lparen ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^int rparen = returnType.indexOf ( ' ) ', lparen ) ;^167^^^^^164^178^int rparen = s.indexOf ( ' ) ', lparen ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^int rparen = s.indexOf ( ' ) ', space ) ;^167^^^^^164^178^int rparen = s.indexOf ( ' ) ', lparen ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^int rparen = s.indexOf ( ' ) ' ) ;^167^^^^^164^178^int rparen = s.indexOf ( ' ) ', lparen ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^int rparen = lparen.indexOf ( ' ) ', s ) ;^167^^^^^164^178^int rparen = s.indexOf ( ' ) ', lparen ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P7_Replace_Invocation]^int rparen = s .indexOf ( rparen )  ', lparen ) ;^167^^^^^164^178^int rparen = s.indexOf ( ' ) ', lparen ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^int next = s.indexOf ( ',', mark ) ;int rparen = s.indexOf ( ' ) ', lparen ) ;^167^^^^^164^178^int rparen = s.indexOf ( ' ) ', lparen ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^int space = s.indexOf ( ' ' ) ;int rparen = s.indexOf ( ' ) ', lparen ) ;^167^^^^^164^178^int rparen = s.indexOf ( ' ) ', lparen ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^int lparen = s.indexOf ( ' ( ', space ) ;int rparen = s.indexOf ( ' ) ', lparen ) ;^167^^^^^164^178^int rparen = s.indexOf ( ' ) ', lparen ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P14_Delete_Statement]^^167^^^^^164^178^int rparen = s.indexOf ( ' ) ', lparen ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P1_Replace_Type]^char returnType = s.substring ( 0, space ) ;^168^^^^^164^178^String returnType = s.substring ( 0, space ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P3_Replace_Literal]^String returnType = s.substring ( space, space ) ;^168^^^^^164^178^String returnType = s.substring ( 0, space ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^String returnType = methodName.substring ( 0, space ) ;^168^^^^^164^178^String returnType = s.substring ( 0, space ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^String returnType = s.substring ( 0, rparen ) ;^168^^^^^164^178^String returnType = s.substring ( 0, space ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^String returnType = s.substring ( 0pace ) ;^168^^^^^164^178^String returnType = s.substring ( 0, space ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^String returnType = s.substring ( 0 ) ;^168^^^^^164^178^String returnType = s.substring ( 0, space ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^String returnType = space.substring ( 0, s ) ;^168^^^^^164^178^String returnType = s.substring ( 0, space ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^String methodName = s.substring ( space + 1, lparen ) ;String returnType = s.substring ( 0, space ) ;^168^^^^^164^178^String returnType = s.substring ( 0, space ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P3_Replace_Literal]^String returnType = s.substring ( -8, space ) ;^168^^^^^164^178^String returnType = s.substring ( 0, space ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^String returnType = returnType.substring ( 0, space ) ;^168^^^^^164^178^String returnType = s.substring ( 0, space ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P7_Replace_Invocation]^String returnType = s .substring ( lparen , space )  ;^168^^^^^164^178^String returnType = s.substring ( 0, space ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P14_Delete_Statement]^^168^169^^^^164^178^String returnType = s.substring ( 0, space ) ; String methodName = s.substring ( space + 1, lparen ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P1_Replace_Type]^char methodName = s.substring ( space + 1, lparen ) ;^169^^^^^164^178^String methodName = s.substring ( space + 1, lparen ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P3_Replace_Literal]^String methodName = s.substring ( space , lparen ) ;^169^^^^^164^178^String methodName = s.substring ( space + 1, lparen ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^String methodName = returnType.substring ( space + 1, lparen ) ;^169^^^^^164^178^String methodName = s.substring ( space + 1, lparen ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^String methodName = s.substring ( rparen + 1, lparen ) ;^169^^^^^164^178^String methodName = s.substring ( space + 1, lparen ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^String methodName = s.substring ( space + 1, space ) ;^169^^^^^164^178^String methodName = s.substring ( space + 1, lparen ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^String methodName = s.substring ( space + 1 ) ;^169^^^^^164^178^String methodName = s.substring ( space + 1, lparen ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^String methodName = space.substring ( s + 1, lparen ) ;^169^^^^^164^178^String methodName = s.substring ( space + 1, lparen ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^String methodName = s.substring ( lparen + 1, space ) ;^169^^^^^164^178^String methodName = s.substring ( space + 1, lparen ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^String methodName = lparen.substring ( space + 1, s ) ;^169^^^^^164^178^String methodName = s.substring ( space + 1, lparen ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^String returnType = s.substring ( 0, space ) ;String methodName = s.substring ( space + 1, lparen ) ;^169^^^^^164^178^String methodName = s.substring ( space + 1, lparen ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P3_Replace_Literal]^String methodName = s.substring ( space + space, lparen ) ;^169^^^^^164^178^String methodName = s.substring ( space + 1, lparen ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P8_Replace_Mix]^String methodName = s.substring ( space + 1, rparen ) ;^169^^^^^164^178^String methodName = s.substring ( space + 1, lparen ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P14_Delete_Statement]^^169^^^^^164^178^String methodName = s.substring ( space + 1, lparen ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P14_Delete_Statement]^^171^^^^^164^178^sb.append ( ' ( ' ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^sb.append ( c ) ;sb.append ( ' ( ' ) ;^171^^^^^164^178^sb.append ( ' ( ' ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^sb.append ( ' ) ' ) ;sb.append ( ' ( ' ) ;^171^^^^^164^178^sb.append ( ' ( ' ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^sb.append ( it.next (  )  ) ;sb.append ( ' ( ' ) ;^171^^^^^164^178^sb.append ( ' ( ' ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^sb.append ( " ) " ) ;sb.append ( ' ( ' ) ;^171^^^^^164^178^sb.append ( ' ( ' ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^sb.append ( " ( " ) ;sb.append ( ' ( ' ) ;^171^^^^^164^178^sb.append ( ' ( ' ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^sb.append ( "V" ) ;sb.append ( ' ( ' ) ;^171^^^^^164^178^sb.append ( ' ( ' ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^sb.append ( map ( returnType )  ) ;sb.append ( ' ( ' ) ;^171^^^^^164^178^sb.append ( ' ( ' ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^sb.append ( '[' ) ;sb.append ( ' ( ' ) ;^171^^^^^164^178^sb.append ( ' ( ' ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P2_Replace_Operator]^for  !=  ( Iterator it = parseTypes ( s, lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^172^^^^^164^178^for  ( Iterator it = parseTypes ( s, lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P3_Replace_Literal]^for  ( Iterator it = parseTypes ( s, lparen , rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^172^^^^^164^178^for  ( Iterator it = parseTypes ( s, lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^for  ( Iterator it = parseTypes ( returnType, lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^172^^^^^164^178^for  ( Iterator it = parseTypes ( s, lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^for  ( Iterator it = parseTypes ( s, space + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^172^^^^^164^178^for  ( Iterator it = parseTypes ( s, lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^for  ( Iterator it = parseTypes ( s, lparen + 1, space ) .iterator (  ) ; it.hasNext (  ) ; )  {^172^^^^^164^178^for  ( Iterator it = parseTypes ( s, lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^for  ( Iterator it = parseTypes (  lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^172^^^^^164^178^for  ( Iterator it = parseTypes ( s, lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^for  ( Iterator it = parseTypes ( s + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^172^^^^^164^178^for  ( Iterator it = parseTypes ( s, lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^for  ( Iterator it = parseTypes ( s, lparen + 1 ) .iterator (  ) ; it.hasNext (  ) ; )  {^172^^^^^164^178^for  ( Iterator it = parseTypes ( s, lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^for  ( Iterator it = parseTypes ( rparen, lparen + 1, s ) .iterator (  ) ; it.hasNext (  ) ; )  {^172^^^^^164^178^for  ( Iterator it = parseTypes ( s, lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^for  ( Iterator it = parseTypes ( s, rparen + 1, lparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^172^^^^^164^178^for  ( Iterator it = parseTypes ( s, lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^for  ( Iterator s = parseTypes ( it, lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^172^^^^^164^178^for  ( Iterator it = parseTypes ( s, lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P7_Replace_Invocation]^for  ( Iterator it = parseTypes ( s, lparen + 1, rparen ) .iterator (  ) ; it .next (  )  ; )  {^172^^^^^164^178^for  ( Iterator it = parseTypes ( s, lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P8_Replace_Mix]^for  ( Iterator it = parseTypes ( s, lparen + 1, space ) .iterator (  ) ; it .next (  )  ; )  {^172^^^^^164^178^for  ( Iterator it = parseTypes ( s, lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P14_Delete_Statement]^^173^^^^^164^178^sb.append ( it.next (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^sb.append ( c ) ;sb.append ( it.next (  )  ) ;^173^^^^^164^178^sb.append ( it.next (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^sb.append ( ' ) ' ) ;sb.append ( it.next (  )  ) ;^173^^^^^164^178^sb.append ( it.next (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^sb.append ( " ) " ) ;sb.append ( it.next (  )  ) ;^173^^^^^164^178^sb.append ( it.next (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^sb.append ( types[i].getDescriptor (  )  ) ;sb.append ( it.next (  )  ) ;^173^^^^^164^178^sb.append ( it.next (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^sb.append ( " ( " ) ;sb.append ( it.next (  )  ) ;^173^^^^^164^178^sb.append ( it.next (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^sb.append ( "V" ) ;sb.append ( it.next (  )  ) ;^173^^^^^164^178^sb.append ( it.next (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^sb.append ( ' ( ' ) ;sb.append ( it.next (  )  ) ;^173^^^^^164^178^sb.append ( it.next (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^sb.append ( map ( returnType )  ) ;sb.append ( it.next (  )  ) ;^173^^^^^164^178^sb.append ( it.next (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^sb.append ( '[' ) ;sb.append ( it.next (  )  ) ;^173^^^^^164^178^sb.append ( it.next (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P7_Replace_Invocation]^sb.append ( it .hasNext (  )   ) ;^173^^^^^164^178^sb.append ( it.next (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P2_Replace_Operator]^for  ^  ( Iterator it = parseTypes ( s, lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^172^^^^^164^178^for  ( Iterator it = parseTypes ( s, lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^for  ( Iterator it = parseTypes ( lparen, s + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^172^^^^^164^178^for  ( Iterator it = parseTypes ( s, lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P2_Replace_Operator]^for  |  ( Iterator it = parseTypes ( s, lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^172^^^^^164^178^for  ( Iterator it = parseTypes ( s, lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P14_Delete_Statement]^^172^173^174^^^164^178^for  ( Iterator it = parseTypes ( s, lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  { sb.append ( it.next (  )  ) ; }^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P2_Replace_Operator]^for   instanceof   ( Iterator it = parseTypes ( s, lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^172^^^^^164^178^for  ( Iterator it = parseTypes ( s, lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P7_Replace_Invocation]^sb .append ( 2 )  ;^173^^^^^164^178^sb.append ( it.next (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P8_Replace_Mix]^sb .append ( null )  ' ) ;^175^^^^^164^178^sb.append ( ' ) ' ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P14_Delete_Statement]^^175^176^^^^164^178^sb.append ( ' ) ' ) ; sb.append ( map ( returnType )  ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^sb.append ( c ) ;sb.append ( ' ) ' ) ;^175^^^^^164^178^sb.append ( ' ) ' ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^sb.append ( it.next (  )  ) ;sb.append ( ' ) ' ) ;^175^^^^^164^178^sb.append ( ' ) ' ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^sb.append ( " ) " ) ;sb.append ( ' ) ' ) ;^175^^^^^164^178^sb.append ( ' ) ' ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^sb.append ( " ( " ) ;sb.append ( ' ) ' ) ;^175^^^^^164^178^sb.append ( ' ) ' ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^sb.append ( "V" ) ;sb.append ( ' ) ' ) ;^175^^^^^164^178^sb.append ( ' ) ' ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^sb.append ( ' ( ' ) ;sb.append ( ' ) ' ) ;^175^^^^^164^178^sb.append ( ' ) ' ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^sb.append ( map ( returnType )  ) ;sb.append ( ' ) ' ) ;^175^^^^^164^178^sb.append ( ' ) ' ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P11_Insert_Donor_Statement]^sb.append ( '[' ) ;sb.append ( ' ) ' ) ;^175^^^^^164^178^sb.append ( ' ) ' ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^sb.append ( map ( s )  ) ;^176^^^^^164^178^sb.append ( map ( returnType )  ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P7_Replace_Invocation]^sb.append ( getType ( returnType )  ) ;^176^^^^^164^178^sb.append ( map ( returnType )  ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P14_Delete_Statement]^^176^^^^^164^178^sb.append ( map ( returnType )  ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P14_Delete_Statement]^^176^177^^^^164^178^sb.append ( map ( returnType )  ) ; return new Signature ( methodName, sb.toString (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P4_Replace_Constructor]^return return  new Signature ( Constants.CONSTRUCTOR_NAME, sb.toString (  )  )   ) ;^177^^^^^164^178^return new Signature ( methodName, sb.toString (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P4_Replace_Constructor]^return new Signature (  sb.toString (  )  ) ;^177^^^^^164^178^return new Signature ( methodName, sb.toString (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P4_Replace_Constructor]^return new Signature ( methodName.toString (  )  ) ;^177^^^^^164^178^return new Signature ( methodName, sb.toString (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^return new Signature ( s, sb.toString (  )  ) ;^177^^^^^164^178^return new Signature ( methodName, sb.toString (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P5_Replace_Variable]^return new Signature ( sb, methodName.toString (  )  ) ;^177^^^^^164^178^return new Signature ( methodName, sb.toString (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P7_Replace_Invocation]^return new Signature ( methodName, sb.append (  )  ) ;^177^^^^^164^178^return new Signature ( methodName, sb.toString (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P8_Replace_Mix]^return new Signature ( methodName, sb .StringBuffer (  )   ) ;^177^^^^^164^178^return new Signature ( methodName, sb.toString (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P14_Delete_Statement]^^177^^^^^164^178^return new Signature ( methodName, sb.toString (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[P7_Replace_Invocation]^return Type .getSort (  )  ;^181^^^^^180^182^return Type.getType ( map ( s )  ) ;^[CLASS] TypeUtils  [METHOD] parseType [RETURN_TYPE] Type   String s [VARIABLES] Map  rtransforms  transforms  String  s  boolean  
[P7_Replace_Invocation]^return Type.getType ( getType ( s )  ) ;^181^^^^^180^182^return Type.getType ( map ( s )  ) ;^[CLASS] TypeUtils  [METHOD] parseType [RETURN_TYPE] Type   String s [VARIABLES] Map  rtransforms  transforms  String  s  boolean  
[P14_Delete_Statement]^^181^^^^^180^182^return Type.getType ( map ( s )  ) ;^[CLASS] TypeUtils  [METHOD] parseType [RETURN_TYPE] Type   String s [VARIABLES] Map  rtransforms  transforms  String  s  boolean  
[P1_Replace_Type]^Set  names = parseTypes ( s, 0, s.length (  )  ) ;^185^^^^^184^191^List names = parseTypes ( s, 0, s.length (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] Type[]   String s [VARIABLES] Type[]  types  List  names  String  s  boolean  Map  rtransforms  transforms  int  i  
[P3_Replace_Literal]^List names = parseTypes ( s, i, s.length (  )  ) ;^185^^^^^184^191^List names = parseTypes ( s, 0, s.length (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] Type[]   String s [VARIABLES] Type[]  types  List  names  String  s  boolean  Map  rtransforms  transforms  int  i  
[P3_Replace_Literal]^List names = parseTypes ( s, 0, s.length() - 3  ) ;^185^^^^^184^191^List names = parseTypes ( s, 0, s.length (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] Type[]   String s [VARIABLES] Type[]  types  List  names  String  s  boolean  Map  rtransforms  transforms  int  i  
[P7_Replace_Invocation]^List names = parseTypes ( s, 0, s.charAt (  )  ) ;^185^^^^^184^191^List names = parseTypes ( s, 0, s.length (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] Type[]   String s [VARIABLES] Type[]  types  List  names  String  s  boolean  Map  rtransforms  transforms  int  i  
[P7_Replace_Invocation]^List names = parseTypes ( s, 0, s .lastIndexOf ( i )   ) ;^185^^^^^184^191^List names = parseTypes ( s, 0, s.length (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] Type[]   String s [VARIABLES] Type[]  types  List  names  String  s  boolean  Map  rtransforms  transforms  int  i  
[P3_Replace_Literal]^List names = parseTypes ( s, 0, s.length() + 0  ) ;^185^^^^^184^191^List names = parseTypes ( s, 0, s.length (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] Type[]   String s [VARIABLES] Type[]  types  List  names  String  s  boolean  Map  rtransforms  transforms  int  i  
[P14_Delete_Statement]^^185^^^^^184^191^List names = parseTypes ( s, 0, s.length (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] Type[]   String s [VARIABLES] Type[]  types  List  names  String  s  boolean  Map  rtransforms  transforms  int  i  
[P3_Replace_Literal]^List names = parseTypes ( s, 0, s.length() + 2  ) ;^185^^^^^184^191^List names = parseTypes ( s, 0, s.length (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] Type[]   String s [VARIABLES] Type[]  types  List  names  String  s  boolean  Map  rtransforms  transforms  int  i  
[P14_Delete_Statement]^^185^186^^^^184^191^List names = parseTypes ( s, 0, s.length (  )  ) ; Type[] types = new Type[names.size (  ) ];^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] Type[]   String s [VARIABLES] Type[]  types  List  names  String  s  boolean  Map  rtransforms  transforms  int  i  
[P3_Replace_Literal]^Type[] types = new Type[names.size() + 2 ];^186^^^^^184^191^Type[] types = new Type[names.size (  ) ];^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] Type[]   String s [VARIABLES] Type[]  types  List  names  String  s  boolean  Map  rtransforms  transforms  int  i  
[P7_Replace_Invocation]^Type[] types = new Type[names.add (  ) ];^186^^^^^184^191^Type[] types = new Type[names.size (  ) ];^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] Type[]   String s [VARIABLES] Type[]  types  List  names  String  s  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^Type[] copy = new Type[types.length + 1];Type[] types = new Type[names.size (  ) ];^186^^^^^184^191^Type[] types = new Type[names.size (  ) ];^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] Type[]   String s [VARIABLES] Type[]  types  List  names  String  s  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^Type[] types = new Type[names.length];Type[] types = new Type[names.size (  ) ];^186^^^^^184^191^Type[] types = new Type[names.size (  ) ];^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] Type[]   String s [VARIABLES] Type[]  types  List  names  String  s  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^Type[] types = new Type[classes.length];Type[] types = new Type[names.size (  ) ];^186^^^^^184^191^Type[] types = new Type[names.size (  ) ];^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] Type[]   String s [VARIABLES] Type[]  types  List  names  String  s  boolean  Map  rtransforms  transforms  int  i  
[P14_Delete_Statement]^^186^^^^^184^191^Type[] types = new Type[names.size (  ) ];^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] Type[]   String s [VARIABLES] Type[]  types  List  names  String  s  boolean  Map  rtransforms  transforms  int  i  
[P1_Replace_Type]^for  (  short  i = 0; i < types.length; i++ )  {^187^^^^^184^191^for  ( int i = 0; i < types.length; i++ )  {^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] Type[]   String s [VARIABLES] Type[]  types  List  names  String  s  boolean  Map  rtransforms  transforms  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i <= types.length; i++ )  {^187^^^^^184^191^for  ( int i = 0; i < types.length; i++ )  {^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] Type[]   String s [VARIABLES] Type[]  types  List  names  String  s  boolean  Map  rtransforms  transforms  int  i  
[P3_Replace_Literal]^for  ( int i = 8; i < types.length; i++ )  {^187^^^^^184^191^for  ( int i = 0; i < types.length; i++ )  {^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] Type[]   String s [VARIABLES] Type[]  types  List  names  String  s  boolean  Map  rtransforms  transforms  int  i  
[P5_Replace_Variable]^types[i] = Type.getType (  ( String ) i.get ( names )  ) ;^188^^^^^184^191^types[i] = Type.getType (  ( String ) names.get ( i )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] Type[]   String s [VARIABLES] Type[]  types  List  names  String  s  boolean  Map  rtransforms  transforms  int  i  
[P8_Replace_Mix]^types[i] ;^188^^^^^184^191^types[i] = Type.getType (  ( String ) names.get ( i )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] Type[]   String s [VARIABLES] Type[]  types  List  names  String  s  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^types[i] = Type.getType ( classes[i] ) ;types[i] = Type.getType (  ( String ) names.get ( i )  ) ;^188^^^^^184^191^types[i] = Type.getType (  ( String ) names.get ( i )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] Type[]   String s [VARIABLES] Type[]  types  List  names  String  s  boolean  Map  rtransforms  transforms  int  i  
[P8_Replace_Mix]^types[i] = Type .getType ( s )   ) ;^188^^^^^184^191^types[i] = Type.getType (  ( String ) names.get ( i )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] Type[]   String s [VARIABLES] Type[]  types  List  names  String  s  boolean  Map  rtransforms  transforms  int  i  
[P14_Delete_Statement]^^188^^^^^184^191^types[i] = Type.getType (  ( String ) names.get ( i )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] Type[]   String s [VARIABLES] Type[]  types  List  names  String  s  boolean  Map  rtransforms  transforms  int  i  
[P1_Replace_Type]^types[i] = Type.getType (  ( char ) names.get ( i )  ) ;^188^^^^^184^191^types[i] = Type.getType (  ( String ) names.get ( i )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] Type[]   String s [VARIABLES] Type[]  types  List  names  String  s  boolean  Map  rtransforms  transforms  int  i  
[P8_Replace_Mix]^types[i]  = null ;^188^^^^^184^191^types[i] = Type.getType (  ( String ) names.get ( i )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] Type[]   String s [VARIABLES] Type[]  types  List  names  String  s  boolean  Map  rtransforms  transforms  int  i  
[P1_Replace_Type]^for  (  long  i = 0; i < types.length; i++ )  {^187^^^^^184^191^for  ( int i = 0; i < types.length; i++ )  {^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] Type[]   String s [VARIABLES] Type[]  types  List  names  String  s  boolean  Map  rtransforms  transforms  int  i  
[P3_Replace_Literal]^for  ( int i = i; i < types.length; i++ )  {^187^^^^^184^191^for  ( int i = 0; i < types.length; i++ )  {^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] Type[]   String s [VARIABLES] Type[]  types  List  names  String  s  boolean  Map  rtransforms  transforms  int  i  
[P14_Delete_Statement]^^195^^^^^193^202^sb.append ( " ( " ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^sb.append ( c ) ;sb.append ( " ( " ) ;^195^^^^^193^202^sb.append ( " ( " ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^sb.append ( ' ) ' ) ;sb.append ( " ( " ) ;^195^^^^^193^202^sb.append ( " ( " ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^sb.append ( it.next (  )  ) ;sb.append ( " ( " ) ;^195^^^^^193^202^sb.append ( " ( " ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^sb.append ( " ) " ) ;sb.append ( " ( " ) ;^195^^^^^193^202^sb.append ( " ( " ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^sb.append ( "V" ) ;sb.append ( " ( " ) ;^195^^^^^193^202^sb.append ( " ( " ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^sb.append ( ' ( ' ) ;sb.append ( " ( " ) ;^195^^^^^193^202^sb.append ( " ( " ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^sb.append ( map ( returnType )  ) ;sb.append ( " ( " ) ;^195^^^^^193^202^sb.append ( " ( " ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^sb.append ( '[' ) ;sb.append ( " ( " ) ;^195^^^^^193^202^sb.append ( " ( " ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P1_Replace_Type]^for  (  short  i = 0; i < types.length; i++ )  {^196^^^^^193^202^for  ( int i = 0; i < types.length; i++ )  {^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i <= types.length; i++ )  {^196^^^^^193^202^for  ( int i = 0; i < types.length; i++ )  {^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P3_Replace_Literal]^for  ( int i = i; i < types.length; i++ )  {^196^^^^^193^202^for  ( int i = 0; i < types.length; i++ )  {^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P7_Replace_Invocation]^sb.append ( types[i].replace (  )  ) ;^197^^^^^193^202^sb.append ( types[i].getDescriptor (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P8_Replace_Mix]^sb.append ( types[i] .getSort (  )   ) ;^197^^^^^193^202^sb.append ( types[i].getDescriptor (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P14_Delete_Statement]^^197^^^^^193^202^sb.append ( types[i].getDescriptor (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^sb.append ( it.next (  )  ) ;sb.append ( types[i].getDescriptor (  )  ) ;^197^^^^^193^202^sb.append ( types[i].getDescriptor (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^size += types[i].getSize (  ) ;sb.append ( types[i].getDescriptor (  )  ) ;^197^^^^^193^202^sb.append ( types[i].getDescriptor (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^sb.append ( map ( returnType )  ) ;sb.append ( types[i].getDescriptor (  )  ) ;^197^^^^^193^202^sb.append ( types[i].getDescriptor (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P3_Replace_Literal]^for  ( int i = 2; i < types.length; i++ )  {^196^^^^^193^202^for  ( int i = 0; i < types.length; i++ )  {^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P14_Delete_Statement]^^199^^^^^193^202^sb.append ( " ) " ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^sb.append ( c ) ;sb.append ( " ) " ) ;^199^^^^^193^202^sb.append ( " ) " ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^sb.append ( ' ) ' ) ;sb.append ( " ) " ) ;^199^^^^^193^202^sb.append ( " ) " ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^sb.append ( it.next (  )  ) ;sb.append ( " ) " ) ;^199^^^^^193^202^sb.append ( " ) " ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^sb.append ( " ( " ) ;sb.append ( " ) " ) ;^199^^^^^193^202^sb.append ( " ) " ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^sb.append ( "V" ) ;sb.append ( " ) " ) ;^199^^^^^193^202^sb.append ( " ) " ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^sb.append ( ' ( ' ) ;sb.append ( " ) " ) ;^199^^^^^193^202^sb.append ( " ) " ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^sb.append ( map ( returnType )  ) ;sb.append ( " ) " ) ;^199^^^^^193^202^sb.append ( " ) " ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^sb.append ( '[' ) ;sb.append ( " ) " ) ;^199^^^^^193^202^sb.append ( " ) " ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P3_Replace_Literal]^sb.append ( "" ) ;^200^^^^^193^202^sb.append ( "V" ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P14_Delete_Statement]^^200^^^^^193^202^sb.append ( "V" ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^sb.append ( c ) ;sb.append ( "V" ) ;^200^^^^^193^202^sb.append ( "V" ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^sb.append ( ' ) ' ) ;sb.append ( "V" ) ;^200^^^^^193^202^sb.append ( "V" ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^sb.append ( it.next (  )  ) ;sb.append ( "V" ) ;^200^^^^^193^202^sb.append ( "V" ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^sb.append ( " ) " ) ;sb.append ( "V" ) ;^200^^^^^193^202^sb.append ( "V" ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^sb.append ( " ( " ) ;sb.append ( "V" ) ;^200^^^^^193^202^sb.append ( "V" ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^sb.append ( ' ( ' ) ;sb.append ( "V" ) ;^200^^^^^193^202^sb.append ( "V" ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^sb.append ( '[' ) ;sb.append ( "V" ) ;^200^^^^^193^202^sb.append ( "V" ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P5_Replace_Variable]^return new Signature ( Constants.CONSTRUCTOR_NAME.toString (  )  ) ;^201^^^^^193^202^return new Signature ( Constants.CONSTRUCTOR_NAME, sb.toString (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P5_Replace_Variable]^return new Signature (  sb.toString (  )  ) ;^201^^^^^193^202^return new Signature ( Constants.CONSTRUCTOR_NAME, sb.toString (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P5_Replace_Variable]^return new Signature ( sb, Constants.CONSTRUCTOR_NAME.toString (  )  ) ;^201^^^^^193^202^return new Signature ( Constants.CONSTRUCTOR_NAME, sb.toString (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P7_Replace_Invocation]^return new Signature ( Constants.CONSTRUCTOR_NAME, sb.append (  )  ) ;^201^^^^^193^202^return new Signature ( Constants.CONSTRUCTOR_NAME, sb.toString (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P7_Replace_Invocation]^return new Signature ( Constants.CONSTRUCTOR_NAME, sb .StringBuffer (  )   ) ;^201^^^^^193^202^return new Signature ( Constants.CONSTRUCTOR_NAME, sb.toString (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P14_Delete_Statement]^^201^^^^^193^202^return new Signature ( Constants.CONSTRUCTOR_NAME, sb.toString (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[P2_Replace_Operator]^return parseSignature ( "void <init> ( "  >>  sig  >>  " ) " ) ;^205^^^^^204^206^return parseSignature ( "void <init> ( " + sig + " ) " ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   String sig [VARIABLES] Map  rtransforms  transforms  String  sig  boolean  
[P2_Replace_Operator]^return parseSignature ( "void <init> ( "  >>  sig + " ) " ) ;^205^^^^^204^206^return parseSignature ( "void <init> ( " + sig + " ) " ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   String sig [VARIABLES] Map  rtransforms  transforms  String  sig  boolean  
[P7_Replace_Invocation]^return parseTypes ( "void <init> ( " + sig + " ) " ) ;^205^^^^^204^206^return parseSignature ( "void <init> ( " + sig + " ) " ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   String sig [VARIABLES] Map  rtransforms  transforms  String  sig  boolean  
[P2_Replace_Operator]^return parseSignature ( "void <init> ( "  ^  sig  ^  " ) " ) ;^205^^^^^204^206^return parseSignature ( "void <init> ( " + sig + " ) " ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   String sig [VARIABLES] Map  rtransforms  transforms  String  sig  boolean  
[P2_Replace_Operator]^return parseSignature ( "void <init> ( "  !=  sig + " ) " ) ;^205^^^^^204^206^return parseSignature ( "void <init> ( " + sig + " ) " ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   String sig [VARIABLES] Map  rtransforms  transforms  String  sig  boolean  
[P14_Delete_Statement]^^205^^^^^204^206^return parseSignature ( "void <init> ( " + sig + " ) " ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   String sig [VARIABLES] Map  rtransforms  transforms  String  sig  boolean  
[P1_Replace_Type]^List types = new  LinkedHashSet  ( 5 ) ;^209^^^^^208^220^List types = new ArrayList ( 5 ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P3_Replace_Literal]^List types = new ArrayList ( 7 ) ;^209^^^^^208^220^List types = new ArrayList ( 5 ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P1_Replace_Type]^LinkedHashSet  types = new Array LinkedHashSet  ( 5 ) ;^209^^^^^208^220^List types = new ArrayList ( 5 ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P3_Replace_Literal]^List types = new ArrayList (  ) ;^209^^^^^208^220^List types = new ArrayList ( 5 ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P11_Insert_Donor_Statement]^List list = Arrays.asList ( types ) ;List types = new ArrayList ( 5 ) ;^209^^^^^208^220^List types = new ArrayList ( 5 ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P2_Replace_Operator]^if  ( next > 0 )  {^212^^^^^208^220^if  ( next < 0 )  {^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P3_Replace_Literal]^if  ( next < -4 )  {^212^^^^^208^220^if  ( next < 0 )  {^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P5_Replace_Variable]^if  ( mark < 0 )  {^212^^^^^208^220^if  ( next < 0 )  {^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P8_Replace_Mix]^if  ( next < 3 )  {^212^^^^^208^220^if  ( next < 0 )  {^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P15_Unwrap_Block]^break;^212^213^214^^^208^220^if  ( next < 0 )  { break; }^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P16_Remove_Block]^^212^213^214^^^208^220^if  ( next < 0 )  { break; }^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P2_Replace_Operator]^if  ( next <= 0 )  {^212^^^^^208^220^if  ( next < 0 )  {^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P3_Replace_Literal]^if  ( next < next )  {^212^^^^^208^220^if  ( next < 0 )  {^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P8_Replace_Mix]^if  ( mark < 2 )  {^212^^^^^208^220^if  ( next < 0 )  {^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P3_Replace_Literal]^mark = next + mark;^216^^^^^208^220^mark = next + 1;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P5_Replace_Variable]^mark = mark + 1;^216^^^^^208^220^mark = next + 1;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P8_Replace_Mix]^mark = next + 1 % 0;^216^^^^^208^220^mark = next + 1;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P1_Replace_Type]^long  next = s.indexOf ( ',', mark ) ;^211^^^^^208^220^int next = s.indexOf ( ',', mark ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P5_Replace_Variable]^int next = s.indexOf ( ',', end ) ;^211^^^^^208^220^int next = s.indexOf ( ',', mark ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P5_Replace_Variable]^int next = s.indexOf ( ',' ) ;^211^^^^^208^220^int next = s.indexOf ( ',', mark ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P5_Replace_Variable]^int next = mark.indexOf ( ',', s ) ;^211^^^^^208^220^int next = s.indexOf ( ',', mark ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P7_Replace_Invocation]^int next = s .indexOf ( end )  ;^211^^^^^208^220^int next = s.indexOf ( ',', mark ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P11_Insert_Donor_Statement]^int rparen = s.indexOf ( ' ) ', lparen ) ;int next = s.indexOf ( ',', mark ) ;^211^^^^^208^220^int next = s.indexOf ( ',', mark ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P11_Insert_Donor_Statement]^int space = s.indexOf ( ' ' ) ;int next = s.indexOf ( ',', mark ) ;^211^^^^^208^220^int next = s.indexOf ( ',', mark ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P11_Insert_Donor_Statement]^int lparen = s.indexOf ( ' ( ', space ) ;int next = s.indexOf ( ',', mark ) ;^211^^^^^208^220^int next = s.indexOf ( ',', mark ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P5_Replace_Variable]^int next = s.indexOf ( ',', next ) ;^211^^^^^208^220^int next = s.indexOf ( ',', mark ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P14_Delete_Statement]^^211^^^^^208^220^int next = s.indexOf ( ',', mark ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P5_Replace_Variable]^types.add ( map ( s.substring ( end, next ) .trim (  )  )  ) ;^215^^^^^208^220^types.add ( map ( s.substring ( mark, next ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P5_Replace_Variable]^types.add ( map ( s.substring ( mark, mark ) .trim (  )  )  ) ;^215^^^^^208^220^types.add ( map ( s.substring ( mark, next ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P5_Replace_Variable]^types.add ( map ( s.substring (  next ) .trim (  )  )  ) ;^215^^^^^208^220^types.add ( map ( s.substring ( mark, next ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P5_Replace_Variable]^types.add ( map ( s.substring ( mark ) .trim (  )  )  ) ;^215^^^^^208^220^types.add ( map ( s.substring ( mark, next ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P5_Replace_Variable]^types.add ( map ( mark.substring ( s, next ) .trim (  )  )  ) ;^215^^^^^208^220^types.add ( map ( s.substring ( mark, next ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P5_Replace_Variable]^types.add ( map ( s.substring ( next, mark ) .trim (  )  )  ) ;^215^^^^^208^220^types.add ( map ( s.substring ( mark, next ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P7_Replace_Invocation]^types.add ( parseTypes ( s.substring ( mark, next ) .trim (  )  )  ) ;^215^^^^^208^220^types.add ( map ( s.substring ( mark, next ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P7_Replace_Invocation]^types.add ( map ( s.substring ( mark, next )  .substring ( next , mark )   )  ) ;^215^^^^^208^220^types.add ( map ( s.substring ( mark, next ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P7_Replace_Invocation]^types.add ( map ( s .substring ( next , end )  .trim (  )  )  ) ;^215^^^^^208^220^types.add ( map ( s.substring ( mark, next ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P8_Replace_Mix]^types.add ( map ( s.substring ( mark, end ) .trim (  )  )  ) ;^215^^^^^208^220^types.add ( map ( s.substring ( mark, next ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P14_Delete_Statement]^^215^216^^^^208^220^types.add ( map ( s.substring ( mark, next ) .trim (  )  )  ) ; mark = next + 1;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P11_Insert_Donor_Statement]^types.add ( map ( s.substring ( mark, end ) .trim (  )  )  ) ;types.add ( map ( s.substring ( mark, next ) .trim (  )  )  ) ;^215^^^^^208^220^types.add ( map ( s.substring ( mark, next ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P5_Replace_Variable]^types.add ( map ( s.substring ( next, next ) .trim (  )  )  ) ;^215^^^^^208^220^types.add ( map ( s.substring ( mark, next ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P5_Replace_Variable]^types.add ( map ( next.substring ( mark, s ) .trim (  )  )  ) ;^215^^^^^208^220^types.add ( map ( s.substring ( mark, next ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P14_Delete_Statement]^^215^^^^^208^220^types.add ( map ( s.substring ( mark, next ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P3_Replace_Literal]^mark = next + end;^216^^^^^208^220^mark = next + 1;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P8_Replace_Mix]^mark = next + 0;^216^^^^^208^220^mark = next + 1;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P1_Replace_Type]^short  next = s.indexOf ( ',', mark ) ;^211^^^^^208^220^int next = s.indexOf ( ',', mark ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P7_Replace_Invocation]^int next = s .indexOf ( next )  ;^211^^^^^208^220^int next = s.indexOf ( ',', mark ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P7_Replace_Invocation]^types.add ( map ( s.substring ( mark, next )  .substring ( mark , mark )   )  ) ;^215^^^^^208^220^types.add ( map ( s.substring ( mark, next ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P8_Replace_Mix]^types.add ( parseTypes ( s.substring ( mark, end ) .trim (  )  )  ) ;^215^^^^^208^220^types.add ( map ( s.substring ( mark, next ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P5_Replace_Variable]^types.add ( map ( s.substring ( next, end ) .trim (  )  )  ) ;^218^^^^^208^220^types.add ( map ( s.substring ( mark, end ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P5_Replace_Variable]^types.add ( map ( s.substring ( mark, next ) .trim (  )  )  ) ;^218^^^^^208^220^types.add ( map ( s.substring ( mark, end ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P5_Replace_Variable]^types.add ( map ( s.substring (  end ) .trim (  )  )  ) ;^218^^^^^208^220^types.add ( map ( s.substring ( mark, end ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P5_Replace_Variable]^types.add ( map ( s.substring ( mark ) .trim (  )  )  ) ;^218^^^^^208^220^types.add ( map ( s.substring ( mark, end ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P5_Replace_Variable]^types.add ( map ( s.substring ( end, mark ) .trim (  )  )  ) ;^218^^^^^208^220^types.add ( map ( s.substring ( mark, end ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P7_Replace_Invocation]^types.add ( parseTypes ( s.substring ( mark, end ) .trim (  )  )  ) ;^218^^^^^208^220^types.add ( map ( s.substring ( mark, end ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P7_Replace_Invocation]^types.add ( map ( s.substring ( mark, end )  .substring ( next , end )   )  ) ;^218^^^^^208^220^types.add ( map ( s.substring ( mark, end ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P7_Replace_Invocation]^types.add ( map ( s .substring ( next , mark )  .trim (  )  )  ) ;^218^^^^^208^220^types.add ( map ( s.substring ( mark, end ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P14_Delete_Statement]^^218^219^^^^208^220^types.add ( map ( s.substring ( mark, end ) .trim (  )  )  ) ; return types;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P11_Insert_Donor_Statement]^types.add ( map ( s.substring ( mark, next ) .trim (  )  )  ) ;types.add ( map ( s.substring ( mark, end ) .trim (  )  )  ) ;^218^^^^^208^220^types.add ( map ( s.substring ( mark, end ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P5_Replace_Variable]^types.add ( map ( mark.substring ( s, end ) .trim (  )  )  ) ;^218^^^^^208^220^types.add ( map ( s.substring ( mark, end ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P5_Replace_Variable]^types.add ( map ( end.substring ( mark, s ) .trim (  )  )  ) ;^218^^^^^208^220^types.add ( map ( s.substring ( mark, end ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P7_Replace_Invocation]^types.add ( map ( s .substring ( end , next )  .trim (  )  )  ) ;^218^^^^^208^220^types.add ( map ( s.substring ( mark, end ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P7_Replace_Invocation]^types.add ( map ( s .substring ( mark , end )  .trim (  )  )  ) ;^218^^^^^208^220^types.add ( map ( s.substring ( mark, end ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P14_Delete_Statement]^^218^^^^^208^220^types.add ( map ( s.substring ( mark, end ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[P5_Replace_Variable]^if  ( t.equals ( "" )  )  {^223^^^^^222^241^if  ( type.equals ( "" )  )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P7_Replace_Invocation]^if  ( type.indexOf ( "" )  )  {^223^^^^^222^241^if  ( type.equals ( "" )  )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P15_Unwrap_Block]^return type;^223^224^225^^^222^241^if  ( type.equals ( "" )  )  { return type; }^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P16_Remove_Block]^^223^224^225^^^222^241^if  ( type.equals ( "" )  )  { return type; }^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P13_Insert_Block]^if  ( names == null )  {     return null; }^223^^^^^222^241^[Delete]^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P13_Insert_Block]^if  ( classes == null )  {     return null; }^223^^^^^222^241^[Delete]^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P13_Insert_Block]^if  ( list.contains ( extra )  )  {     return types; }^223^^^^^222^241^[Delete]^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P13_Insert_Block]^if  ( types == null )  {     return null; }^223^^^^^222^241^[Delete]^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P5_Replace_Variable]^return t;^224^^^^^222^241^return type;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P8_Replace_Mix]^if  ( t.indexOf ( "" )  )  {^223^^^^^222^241^if  ( type.equals ( "" )  )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P1_Replace_Type]^char t =  ( char ) transforms.get ( type ) ;^226^^^^^222^241^String t =  ( String ) transforms.get ( type ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P5_Replace_Variable]^String t =  ( String ) rtransforms.get ( type ) ;^226^^^^^222^241^String t =  ( String ) transforms.get ( type ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P5_Replace_Variable]^String t =  ( String ) type.get ( transforms ) ;^226^^^^^222^241^String t =  ( String ) transforms.get ( type ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P5_Replace_Variable]^String t =  ( String ) transforms.get ( t ) ;^226^^^^^222^241^String t =  ( String ) transforms.get ( type ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P11_Insert_Donor_Statement]^return  ( String ) rtransforms.get ( type.getDescriptor (  )  ) ;String t =  ( String ) transforms.get ( type ) ;^226^^^^^222^241^String t =  ( String ) transforms.get ( type ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P2_Replace_Operator]^while  (  ( index = type.indexOf ( "[]", index )  + 1 )  >= 0 )  {^234^^^^^222^241^while  (  ( index = type.indexOf ( "[]", index )  + 1 )  > 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P2_Replace_Operator]^while  <  (  ( index = type.indexOf ( "[]", index )  + 1 )  > 0 )  {^234^^^^^222^241^while  (  ( index = type.indexOf ( "[]", index )  + 1 )  > 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^while  (  ( index = type.indexOf ( "[]", index )  + index )  > 0 )  {^234^^^^^222^241^while  (  ( index = type.indexOf ( "[]", index )  + 1 )  > 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^while  (  ( index = type.indexOf ( "[]", index )  + 1 )  > index )  {^234^^^^^222^241^while  (  ( index = type.indexOf ( "[]", index )  + 1 )  > 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P5_Replace_Variable]^while  (  ( index = t.indexOf ( "[]", index )  + 1 )  > 0 )  {^234^^^^^222^241^while  (  ( index = type.indexOf ( "[]", index )  + 1 )  > 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P5_Replace_Variable]^while  (  ( index = type.indexOf ( "[]" )  + 1 )  > 0 )  {^234^^^^^222^241^while  (  ( index = type.indexOf ( "[]", index )  + 1 )  > 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P5_Replace_Variable]^while  (  ( type = index.indexOf ( "[]", index )  + 1 )  > 0 )  {^234^^^^^222^241^while  (  ( index = type.indexOf ( "[]", index )  + 1 )  > 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P14_Delete_Statement]^^235^^^^^222^241^sb.append ( '[' ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P11_Insert_Donor_Statement]^sb.append ( c ) ;sb.append ( '[' ) ;^235^^^^^222^241^sb.append ( '[' ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P11_Insert_Donor_Statement]^sb.append ( ' ) ' ) ;sb.append ( '[' ) ;^235^^^^^222^241^sb.append ( '[' ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P11_Insert_Donor_Statement]^sb.append ( it.next (  )  ) ;sb.append ( '[' ) ;^235^^^^^222^241^sb.append ( '[' ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P11_Insert_Donor_Statement]^sb.append ( " ) " ) ;sb.append ( '[' ) ;^235^^^^^222^241^sb.append ( '[' ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P11_Insert_Donor_Statement]^sb.append ( " ( " ) ;sb.append ( '[' ) ;^235^^^^^222^241^sb.append ( '[' ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P11_Insert_Donor_Statement]^sb.append ( "V" ) ;sb.append ( '[' ) ;^235^^^^^222^241^sb.append ( '[' ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P11_Insert_Donor_Statement]^sb.append ( ' ( ' ) ;sb.append ( '[' ) ;^235^^^^^222^241^sb.append ( '[' ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P2_Replace_Operator]^if  ( t == null )  {^227^^^^^222^241^if  ( t != null )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P5_Replace_Variable]^if  ( type != null )  {^227^^^^^222^241^if  ( t != null )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P6_Replace_Expression]^if  ( ') < 0 )  {^227^^^^^222^241^if  ( t != null )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P6_Replace_Expression]^if  ( " + type )  {^227^^^^^222^241^if  ( t != null )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P6_Replace_Expression]^if  ( index = (type.indexOf("[]", index)) + 1 > 0 )  {^227^^^^^222^241^if  ( t != null )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P6_Replace_Expression]^if  ( type.indexOf("[]", index) + 1 )  {^227^^^^^222^241^if  ( t != null )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P6_Replace_Expression]^if  ( type.length (  )  -  ( sb.length (  )  )  * 2 )  {^227^^^^^222^241^if  ( t != null )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P6_Replace_Expression]^if  ( sb.length (  )  * 2 )  {^227^^^^^222^241^if  ( t != null )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P8_Replace_Mix]^if  ( t != false )  {^227^^^^^222^241^if  ( t != null )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P9_Replace_Statement]^if  ( types == null )  {^227^^^^^222^241^if  ( t != null )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P9_Replace_Statement]^if  ( names == null )  {^227^^^^^222^241^if  ( t != null )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P9_Replace_Statement]^if  ( classes == null )  {^227^^^^^222^241^if  ( t != null )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P2_Replace_Operator]^while  (  ( index = type.indexOf ( "[]", index )  + 1 )  == 0 )  {^234^^^^^222^241^while  (  ( index = type.indexOf ( "[]", index )  + 1 )  > 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P2_Replace_Operator]^while  <<  (  ( index = type.indexOf ( "[]", index )  + 1 )  > 0 )  {^234^^^^^222^241^while  (  ( index = type.indexOf ( "[]", index )  + 1 )  > 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^while  (  ( index = type.indexOf ( "", index )  + 1 )  > 0 )  {^234^^^^^222^241^while  (  ( index = type.indexOf ( "[]", index )  + 1 )  > 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^while  (  ( index = type.indexOf ( "[]", index )   )  > 0 )  {^234^^^^^222^241^while  (  ( index = type.indexOf ( "[]", index )  + 1 )  > 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P7_Replace_Invocation]^while  (  ( index = type .indexOf ( index )   + 1 )  > 0 )  {^234^^^^^222^241^while  (  ( index = type.indexOf ( "[]", index )  + 1 )  > 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P2_Replace_Operator]^} else if  ( type.indexOf ( '.' )  == 0 )  {^229^^^^^222^241^} else if  ( type.indexOf ( '.' )  < 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^} else if  ( type.indexOf ( '.' )  < index )  {^229^^^^^222^241^} else if  ( type.indexOf ( '.' )  < 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^} else if  ( type.indexOf ( '.' )  < 1 )  {^229^^^^^222^241^} else if  ( type.indexOf ( '.' )  < 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P5_Replace_Variable]^} else if  ( t.indexOf ( '.' )  < 0 )  {^229^^^^^222^241^} else if  ( type.indexOf ( '.' )  < 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P6_Replace_Expression]^} else if  ( " + type )  {^229^^^^^222^241^} else if  ( type.indexOf ( '.' )  < 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P6_Replace_Expression]^} else if  ( index = (type.indexOf("[]", index)) + 1 > 0 )  {^229^^^^^222^241^} else if  ( type.indexOf ( '.' )  < 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P6_Replace_Expression]^} else if  ( type.indexOf("[]", index) + 1 )  {^229^^^^^222^241^} else if  ( type.indexOf ( '.' )  < 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P6_Replace_Expression]^} else if  ( type.length (  )  -  ( sb.length (  )  )  * 2 )  {^229^^^^^222^241^} else if  ( type.indexOf ( '.' )  < 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P6_Replace_Expression]^} else if  ( sb.length (  )  * 2 )  {^229^^^^^222^241^} else if  ( type.indexOf ( '.' )  < 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P6_Replace_Expression]^} else {^229^^^^^222^241^} else if  ( type.indexOf ( '.' )  < 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P7_Replace_Invocation]^} else if  ( type .indexOf ( index )   < 0 )  {^229^^^^^222^241^} else if  ( type.indexOf ( '.' )  < 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P8_Replace_Mix]^}  if  ( t.indexOf ( '.' )  < 0 )  {^229^^^^^222^241^} else if  ( type.indexOf ( '.' )  < 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P2_Replace_Operator]^while  ==  (  ( index = type.indexOf ( "[]", index )  + 1 )  > 0 )  {^234^^^^^222^241^while  (  ( index = type.indexOf ( "[]", index )  + 1 )  > 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^while  (  ( index = type.indexOf ( "[][", index )  + 1 )  > 0 )  {^234^^^^^222^241^while  (  ( index = type.indexOf ( "[]", index )  + 1 )  > 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P2_Replace_Operator]^type = type.substring ( 0, type.length (  )   ||  sb.length (  )  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P2_Replace_Operator]^type = type.substring ( 0, type.length (  )  - sb.length (  )  + 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^type = type.substring ( index, type.length (  )  - sb.length (  )  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^type = type.substring ( 0, type.length (  )  - sb.length (  )  * index ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^type = type.substring ( 0, type.length() - 9  - sb.length() - 9  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P5_Replace_Variable]^type = t.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P5_Replace_Variable]^type = type.substring ( 0.length (  )  - sb.length (  )  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P5_Replace_Variable]^type = sb.substring ( 0, type.length (  )  - type.length (  )  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P7_Replace_Invocation]^type = type.substring ( 0, type.charAt (  )  - sb.length (  )  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P7_Replace_Invocation]^type = type.substring ( 0, type.append (  )  - sb.length (  )  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P8_Replace_Mix]^type = type.substring ( 0 , type.length (  )  - sb.length (  )  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P7_Replace_Invocation]^return sb.append (  ) ;^239^^^^^222^241^return sb.toString (  ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P7_Replace_Invocation]^return sb .StringBuffer (  )  ;^239^^^^^222^241^return sb.toString (  ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P1_Replace_Type]^long  index = 0;^233^^^^^222^241^int index = 0;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^int index = 2;^233^^^^^222^241^int index = 0;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P11_Insert_Donor_Statement]^int size = 0;int index = 0;^233^^^^^222^241^int index = 0;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P8_Replace_Mix]^while  (  ( index = t .indexOf ( index )   + 1 )  > 0 )  {^234^^^^^222^241^while  (  ( index = type.indexOf ( "[]", index )  + 1 )  > 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P14_Delete_Statement]^^234^235^^^^222^241^while  (  ( index = type.indexOf ( "[]", index )  + 1 )  > 0 )  { sb.append ( '[' ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P2_Replace_Operator]^type = type.substring ( 0, type.length (  )   ^  sb.length (  )  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^type = type.substring ( 0, type.length() - 0  - sb.length() - 0  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P8_Replace_Mix]^type = t.substring ( 0, type.append (  )  - sb.length (  )  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P14_Delete_Statement]^^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^type = type.substring ( 0, type.length() + 7  - sb.length() + 7  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P7_Replace_Invocation]^type = type.substring ( 0, type .lastIndexOf ( index )   - sb^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P8_Replace_Mix]^type = t.substring ( 0, type.charAt (  )  - sb.length (  )  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^type = type.substring ( 0, type.length() - 1  - sb.length() - 1  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P5_Replace_Variable]^sb.append ( 'L' ) .append ( t.replace ( '.', '/' )  ) .append ( ';' ) ;^238^^^^^222^241^sb.append ( 'L' ) .append ( type.replace ( '.', '/' )  ) .append ( ';' ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P14_Delete_Statement]^^238^^^^^222^241^sb.append ( 'L' ) .append ( type.replace ( '.', '/' )  ) .append ( ';' ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P8_Replace_Mix]^sb .append ( 0 )^238^^^^^222^241^sb.append ( 'L' ) .append ( type.replace ( '.', '/' )  ) .append ( ';' ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P14_Delete_Statement]^^238^239^^^^222^241^sb.append ( 'L' ) .append ( type.replace ( '.', '/' )  ) .append ( ';' ) ; return sb.toString (  ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P14_Delete_Statement]^^239^^^^^222^241^return sb.toString (  ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P2_Replace_Operator]^return map ( "java.lang."  &  type ) ;^230^^^^^222^241^return map ( "java.lang." + type ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^return map ( "java.lava.lang." + type ) ;^230^^^^^222^241^return map ( "java.lang." + type ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P5_Replace_Variable]^return map ( "java.lang." + t ) ;^230^^^^^222^241^return map ( "java.lang." + type ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P7_Replace_Invocation]^return add ( "java.lang." + type ) ;^230^^^^^222^241^return map ( "java.lang." + type ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P2_Replace_Operator]^return map ( "java.lang."  &&  type ) ;^230^^^^^222^241^return map ( "java.lang." + type ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^return map ( "ava.lang." + type ) ;^230^^^^^222^241^return map ( "java.lang." + type ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P14_Delete_Statement]^^230^^^^^222^241^return map ( "java.lang." + type ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P2_Replace_Operator]^while  >=  (  ( index = type.indexOf ( "[]", index )  + 1 )  > 0 )  {^234^^^^^222^241^while  (  ( index = type.indexOf ( "[]", index )  + 1 )  > 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P2_Replace_Operator]^type = type.substring ( 0, type.length (  )   |  sb.length (  )  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P2_Replace_Operator]^type = type.substring ( 0, type.length (  )  - sb.length (  )  - 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^type = type.substring ( 0, type.length (  )  - sb.length (  )  * -3 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^type = type.substring ( 0, type.length() + 9  - sb.length() + 9  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P7_Replace_Invocation]^type = type .substring ( index , index )   * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P2_Replace_Operator]^return map ( "java.lang."  ||  type ) ;^230^^^^^222^241^return map ( "java.lang." + type ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^return map ( "va.lava.lang." + type ) ;^230^^^^^222^241^return map ( "java.lang." + type ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^int index = 7;^233^^^^^222^241^int index = 0;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P2_Replace_Operator]^return map ( "java.lang."  >=  type ) ;^230^^^^^222^241^return map ( "java.lang." + type ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^return map ( "jaava.lang." + type ) ;^230^^^^^222^241^return map ( "java.lang." + type ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P8_Replace_Mix]^return add ( "java.lang." + t ) ;^230^^^^^222^241^return map ( "java.lang." + type ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P8_Replace_Mix]^sb .append ( 2 )  ;^235^^^^^222^241^sb.append ( '[' ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P2_Replace_Operator]^type = type.substring ( 0, type.length (  )   >>  sb.length (  )  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^type = type.substring ( 0, type.length() + 3  - sb.length() + 3  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^type = type.substring ( 0, type.length() + 1  - sb.length() + 1  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P14_Delete_Statement]^^237^238^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ; sb.append ( 'L' ) .append ( type.replace ( '.', '/' )  ) .append ( ';' ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^type = type.substring ( 0, type.length() - 5  - sb.length() - 5  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P8_Replace_Mix]^sb.append ( 'L' ) .append ( t .equals ( 2 )   ) .append ( ';' ) ;^238^^^^^222^241^sb.append ( 'L' ) .append ( type.replace ( '.', '/' )  ) .append ( ';' ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P5_Replace_Variable]^return type;^228^^^^^222^241^return t;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P2_Replace_Operator]^} else if  ( type.indexOf ( '.' )  <= 0 )  {^229^^^^^222^241^} else if  ( type.indexOf ( '.' )  < 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^} else if  ( type.indexOf ( '.' )  < 4 )  {^229^^^^^222^241^} else if  ( type.indexOf ( '.' )  < 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^} else if  ( type.indexOf ( '.' )  < -4 )  {^229^^^^^222^241^} else if  ( type.indexOf ( '.' )  < 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^} else if  ( type.indexOf ( '.' )  < 8 )  {^229^^^^^222^241^} else if  ( type.indexOf ( '.' )  < 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P2_Replace_Operator]^while  &&  (  ( index = type.indexOf ( "[]", index )  + 1 )  > 0 )  {^234^^^^^222^241^while  (  ( index = type.indexOf ( "[]", index )  + 1 )  > 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^while  (  ( index = type.indexOf ( "[", index )  + 1 )  > 0 )  {^234^^^^^222^241^while  (  ( index = type.indexOf ( "[]", index )  + 1 )  > 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^while  (  ( index = type.indexOf ( "[]", index )  + 1 )  > -4 )  {^234^^^^^222^241^while  (  ( index = type.indexOf ( "[]", index )  + 1 )  > 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P2_Replace_Operator]^while  ^  (  ( index = type.indexOf ( "[]", index )  + 1 )  > 0 )  {^234^^^^^222^241^while  (  ( index = type.indexOf ( "[]", index )  + 1 )  > 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^while  (  ( index = type.indexOf ( "]", index )  + 1 )  > 0 )  {^234^^^^^222^241^while  (  ( index = type.indexOf ( "[]", index )  + 1 )  > 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P2_Replace_Operator]^type = type.substring ( 0, type.length (  )   <<  sb.length (  )  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^type = type.substring ( -4, type.length (  )  - sb.length (  )  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^type = type.substring ( 0, type.length (  )  - sb.length (  )  * -7 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^type = type.substring ( 0, type.length() - 7  - sb.length() - 7  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P1_Replace_Type]^short  index = 0;^233^^^^^222^241^int index = 0;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^int index = -4;^233^^^^^222^241^int index = 0;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P2_Replace_Operator]^type = type.substring ( 0, type.length (  )   &&  sb.length (  )  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P2_Replace_Operator]^type = type.substring ( 0, type.length (  )  - sb.length (  )  / 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 9 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^type = type.substring ( 0, type.length() - 6  - sb.length() - 6  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P7_Replace_Invocation]^sb .append ( 4 )^238^^^^^222^241^sb.append ( 'L' ) .append ( type.replace ( '.', '/' )  ) .append ( ';' ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P2_Replace_Operator]^return map ( "java.lang."   instanceof   type ) ;^230^^^^^222^241^return map ( "java.lang." + type ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^return map ( "a.lan" + type ) ;^230^^^^^222^241^return map ( "java.lang." + type ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P2_Replace_Operator]^return map ( "java.lang."  !=  type ) ;^230^^^^^222^241^return map ( "java.lang." + type ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^return map ( "v" + type ) ;^230^^^^^222^241^return map ( "java.lang." + type ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P2_Replace_Operator]^type = type.substring ( 0, type.length (  )    instanceof   sb.length (  )  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^type = type.substring ( 0, type.length() + 0  - sb.length() + 0  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P2_Replace_Operator]^return map ( "java.lang."  |  type ) ;^230^^^^^222^241^return map ( "java.lang." + type ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^return map ( "jav" + type ) ;^230^^^^^222^241^return map ( "java.lang." + type ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^int index = -1;^233^^^^^222^241^int index = 0;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P2_Replace_Operator]^return map ( "java.lang."  ==  type ) ;^230^^^^^222^241^return map ( "java.lang." + type ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^return map ( "java.lang.v" + type ) ;^230^^^^^222^241^return map ( "java.lang." + type ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^type = type.substring ( -8, type.length (  )  - sb.length (  )  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^type = type.substring ( 0, type.length (  )  - sb.length (  )  *  ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P3_Replace_Literal]^type = type.substring ( 0, type.length() - 4  - sb.length() - 4  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[P5_Replace_Variable]^return null;^254^^^^^243^264^return Constants.TYPE_LONG;^[CLASS] TypeUtils  [METHOD] getBoxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P8_Replace_Mix]^return 2;^260^^^^^243^264^return Constants.TYPE_BYTE;^[CLASS] TypeUtils  [METHOD] getBoxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P7_Replace_Invocation]^switch  ( type.getType (  )  )  {^244^^^^^243^264^switch  ( type.getSort (  )  )  {^[CLASS] TypeUtils  [METHOD] getBoxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P14_Delete_Statement]^^244^245^246^^^243^264^switch  ( type.getSort (  )  )  { case Type.CHAR: return Constants.TYPE_CHARACTER;^[CLASS] TypeUtils  [METHOD] getBoxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P8_Replace_Mix]^if  ( Constants.TYPE_INTEGER .replace ( this , 4 )   )  {^267^^^^^266^286^if  ( Constants.TYPE_INTEGER.equals ( type )  )  {^[CLASS] TypeUtils  [METHOD] getUnboxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P6_Replace_Expression]^} else {^269^^^^^266^286^} else if  ( Constants.TYPE_BOOLEAN.equals ( type )  )  {^[CLASS] TypeUtils  [METHOD] getUnboxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P8_Replace_Mix]^}  if  ( Constants.TYPE_BOOLEAN.equals ( type )  )  {^269^^^^^266^286^} else if  ( Constants.TYPE_BOOLEAN.equals ( type )  )  {^[CLASS] TypeUtils  [METHOD] getUnboxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P9_Replace_Statement]^} else if  ( Constants.TYPE_DOUBLE.equals ( type )  )  {^269^^^^^266^286^} else if  ( Constants.TYPE_BOOLEAN.equals ( type )  )  {^[CLASS] TypeUtils  [METHOD] getUnboxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P6_Replace_Expression]^} else {^271^^^^^266^286^} else if  ( Constants.TYPE_DOUBLE.equals ( type )  )  {^[CLASS] TypeUtils  [METHOD] getUnboxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P6_Replace_Expression]^} else {^273^^^^^266^286^} else if  ( Constants.TYPE_LONG.equals ( type )  )  {^[CLASS] TypeUtils  [METHOD] getUnboxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P8_Replace_Mix]^}  if  ( Constants.TYPE_LONG.equals ( type )  )  {^273^^^^^266^286^} else if  ( Constants.TYPE_LONG.equals ( type )  )  {^[CLASS] TypeUtils  [METHOD] getUnboxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P9_Replace_Statement]^} else if  ( Constants.TYPE_DOUBLE.equals ( type )  )  {^273^^^^^266^286^} else if  ( Constants.TYPE_LONG.equals ( type )  )  {^[CLASS] TypeUtils  [METHOD] getUnboxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P6_Replace_Expression]^} else {^275^^^^^266^286^} else if  ( Constants.TYPE_CHARACTER.equals ( type )  )  {^[CLASS] TypeUtils  [METHOD] getUnboxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P8_Replace_Mix]^}  if  ( Constants.TYPE_CHARACTER.equals ( type )  )  {^275^^^^^266^286^} else if  ( Constants.TYPE_CHARACTER.equals ( type )  )  {^[CLASS] TypeUtils  [METHOD] getUnboxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P9_Replace_Statement]^} else if  ( Constants.TYPE_DOUBLE.equals ( type )  )  {^275^^^^^266^286^} else if  ( Constants.TYPE_CHARACTER.equals ( type )  )  {^[CLASS] TypeUtils  [METHOD] getUnboxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P6_Replace_Expression]^} else {^277^^^^^266^286^} else if  ( Constants.TYPE_BYTE.equals ( type )  )  {^[CLASS] TypeUtils  [METHOD] getUnboxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P8_Replace_Mix]^}  if  ( Constants.TYPE_BYTE.equals ( type )  )  {^277^^^^^266^286^} else if  ( Constants.TYPE_BYTE.equals ( type )  )  {^[CLASS] TypeUtils  [METHOD] getUnboxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P9_Replace_Statement]^} else if  ( Constants.TYPE_DOUBLE.equals ( type )  )  {^277^^^^^266^286^} else if  ( Constants.TYPE_BYTE.equals ( type )  )  {^[CLASS] TypeUtils  [METHOD] getUnboxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P6_Replace_Expression]^} else {^279^^^^^266^286^} else if  ( Constants.TYPE_FLOAT.equals ( type )  )  {^[CLASS] TypeUtils  [METHOD] getUnboxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P9_Replace_Statement]^} else if  ( Constants.TYPE_DOUBLE.equals ( type )  )  {^279^^^^^266^286^} else if  ( Constants.TYPE_FLOAT.equals ( type )  )  {^[CLASS] TypeUtils  [METHOD] getUnboxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P13_Insert_Block]^if  ( value == 1.0F )  {     return Constants.FCONST_1; }else     if  ( value == 2.0F )  {         return Constants.FCONST_2;     }else {         return -1;     }^279^^^^^266^286^[Delete]^[CLASS] TypeUtils  [METHOD] getUnboxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P13_Insert_Block]^if  ( equals ( type )  )  {     return BYTE_TYPE; }else     if  ( equals ( type )  )  {         return FLOAT_TYPE;     }else         if  ( equals ( type )  )  {             return SHORT_TYPE;         }else {             return type;         }^279^^^^^266^286^[Delete]^[CLASS] TypeUtils  [METHOD] getUnboxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P6_Replace_Expression]^} else {^281^^^^^266^286^} else if  ( Constants.TYPE_SHORT.equals ( type )  )  {^[CLASS] TypeUtils  [METHOD] getUnboxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P9_Replace_Statement]^} else if  ( Constants.TYPE_DOUBLE.equals ( type )  )  {^281^^^^^266^286^} else if  ( Constants.TYPE_SHORT.equals ( type )  )  {^[CLASS] TypeUtils  [METHOD] getUnboxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P15_Unwrap_Block]^return org.mockito.asm.Type.SHORT_TYPE;^281^282^283^284^285^266^286^} else if  ( Constants.TYPE_SHORT.equals ( type )  )  { return Type.SHORT_TYPE; } else { return type; }^[CLASS] TypeUtils  [METHOD] getUnboxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P16_Remove_Block]^^281^282^283^284^285^266^286^} else if  ( Constants.TYPE_SHORT.equals ( type )  )  { return Type.SHORT_TYPE; } else { return type; }^[CLASS] TypeUtils  [METHOD] getUnboxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P8_Replace_Mix]^}  if  ( Constants.TYPE_SHORT.equals ( type )  )  {^281^^^^^266^286^} else if  ( Constants.TYPE_SHORT.equals ( type )  )  {^[CLASS] TypeUtils  [METHOD] getUnboxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P8_Replace_Mix]^}  if  ( Constants.TYPE_FLOAT.equals ( type )  )  {^279^^^^^266^286^} else if  ( Constants.TYPE_FLOAT.equals ( type )  )  {^[CLASS] TypeUtils  [METHOD] getUnboxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P7_Replace_Invocation]^} else if  ( Constants.TYPE_BYTE .replace ( null , 4 )   )  {^277^^^^^266^286^} else if  ( Constants.TYPE_BYTE.equals ( type )  )  {^[CLASS] TypeUtils  [METHOD] getUnboxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P8_Replace_Mix]^}  if  ( Constants.TYPE_DOUBLE.equals ( type )  )  {^271^^^^^266^286^} else if  ( Constants.TYPE_DOUBLE.equals ( type )  )  {^[CLASS] TypeUtils  [METHOD] getUnboxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P8_Replace_Mix]^} else if  ( Constants.TYPE_FLOAT .replace ( 2 , 4 )   )  {^279^^^^^266^286^} else if  ( Constants.TYPE_FLOAT.equals ( type )  )  {^[CLASS] TypeUtils  [METHOD] getUnboxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P8_Replace_Mix]^}  if  ( Constants.TYPE_SHORT .replace ( null , 0 )   )  {^281^^^^^266^286^} else if  ( Constants.TYPE_SHORT.equals ( type )  )  {^[CLASS] TypeUtils  [METHOD] getUnboxedType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P2_Replace_Operator]^return type.getSort (  )  != Type.ARRAY;^289^^^^^288^290^return type.getSort (  )  == Type.ARRAY;^[CLASS] TypeUtils  [METHOD] isArray [RETURN_TYPE] boolean   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P7_Replace_Invocation]^return type.getType (  )  == Type.ARRAY;^289^^^^^288^290^return type.getSort (  )  == Type.ARRAY;^[CLASS] TypeUtils  [METHOD] isArray [RETURN_TYPE] boolean   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P14_Delete_Statement]^^289^^^^^288^290^return type.getSort (  )  == Type.ARRAY;^[CLASS] TypeUtils  [METHOD] isArray [RETURN_TYPE] boolean   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P6_Replace_Expression]^if  ( "Type " + type )  {^293^^^^^292^297^if  ( !isArray ( type )  )  {^[CLASS] TypeUtils  [METHOD] getComponentType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P7_Replace_Invocation]^if  ( !NEWARRAY ( type )  )  {^293^^^^^292^297^if  ( !isArray ( type )  )  {^[CLASS] TypeUtils  [METHOD] getComponentType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException((("Type " + type) + " is not an array"));^293^294^295^^^292^297^if  ( !isArray ( type )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] TypeUtils  [METHOD] getComponentType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P16_Remove_Block]^^293^294^295^^^292^297^if  ( !isArray ( type )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] TypeUtils  [METHOD] getComponentType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P13_Insert_Block]^if  ( ! ( isArray ( type )  )  )  {     throw new IllegalArgumentException (  (  ( "Type " + type )  + " is not an array" )  ) ; }^294^^^^^292^297^[Delete]^[CLASS] TypeUtils  [METHOD] getComponentType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P3_Replace_Literal]^return Type.getType ( type.getDescriptor (  ) .substring ( -8 )  ) ;^296^^^^^292^297^return Type.getType ( type.getDescriptor (  ) .substring ( 1 )  ) ;^[CLASS] TypeUtils  [METHOD] getComponentType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P7_Replace_Invocation]^return Type.getType ( type.getDescriptor (  ) .replace ( 1 )  ) ;^296^^^^^292^297^return Type.getType ( type.getDescriptor (  ) .substring ( 1 )  ) ;^[CLASS] TypeUtils  [METHOD] getComponentType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P7_Replace_Invocation]^return Type.getType ( type.getType (  ) .substring ( 1 )  ) ;^296^^^^^292^297^return Type.getType ( type.getDescriptor (  ) .substring ( 1 )  ) ;^[CLASS] TypeUtils  [METHOD] getComponentType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P7_Replace_Invocation]^return Type.getType ( type .getSort (  )  .substring ( 1 )  ) ;^296^^^^^292^297^return Type.getType ( type.getDescriptor (  ) .substring ( 1 )  ) ;^[CLASS] TypeUtils  [METHOD] getComponentType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P3_Replace_Literal]^return Type.getType ( type.getDescriptor (  ) .substring ( 10 )  ) ;^296^^^^^292^297^return Type.getType ( type.getDescriptor (  ) .substring ( 1 )  ) ;^[CLASS] TypeUtils  [METHOD] getComponentType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P14_Delete_Statement]^^296^^^^^292^297^return Type.getType ( type.getDescriptor (  ) .substring ( 1 )  ) ;^[CLASS] TypeUtils  [METHOD] getComponentType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P3_Replace_Literal]^return Type.getType ( type.getDescriptor (  ) .substring ( 9 )  ) ;^296^^^^^292^297^return Type.getType ( type.getDescriptor (  ) .substring ( 1 )  ) ;^[CLASS] TypeUtils  [METHOD] getComponentType [RETURN_TYPE] Type   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P3_Replace_Literal]^return true;^303^^^^^299^307^return false;^[CLASS] TypeUtils  [METHOD] isPrimitive [RETURN_TYPE] boolean   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P3_Replace_Literal]^return false;^305^^^^^299^307^return true;^[CLASS] TypeUtils  [METHOD] isPrimitive [RETURN_TYPE] boolean   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P7_Replace_Invocation]^switch  ( type.getType (  )  )  {^300^^^^^299^307^switch  ( type.getSort (  )  )  {^[CLASS] TypeUtils  [METHOD] isPrimitive [RETURN_TYPE] boolean   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P7_Replace_Invocation]^if  ( NEWARRAY ( type )  )  {^310^^^^^309^315^if  ( isArray ( type )  )  {^[CLASS] TypeUtils  [METHOD] emulateClassGetName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P15_Unwrap_Block]^return type.getDescriptor().replace('/', '.');^310^311^312^313^314^309^315^if  ( isArray ( type )  )  { return type.getDescriptor (  ) .replace ( '/', '.' ) ; } else { return getClassName ( type ) ; }^[CLASS] TypeUtils  [METHOD] emulateClassGetName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P16_Remove_Block]^^310^311^312^313^314^309^315^if  ( isArray ( type )  )  { return type.getDescriptor (  ) .replace ( '/', '.' ) ; } else { return getClassName ( type ) ; }^[CLASS] TypeUtils  [METHOD] emulateClassGetName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P13_Insert_Block]^if  ( isArray ( type )  )  {     return  ( getClassName ( getComponentType ( type )  )  )  + "[]"; }else {     return type.getClassName (  ) ; }^310^^^^^309^315^[Delete]^[CLASS] TypeUtils  [METHOD] emulateClassGetName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P7_Replace_Invocation]^return getPackageName ( type ) ;^313^^^^^309^315^return getClassName ( type ) ;^[CLASS] TypeUtils  [METHOD] emulateClassGetName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P14_Delete_Statement]^^313^^^^^309^315^return getClassName ( type ) ;^[CLASS] TypeUtils  [METHOD] emulateClassGetName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P7_Replace_Invocation]^return type.getType (  ) .replace ( '/', '.' ) ;^311^^^^^309^315^return type.getDescriptor (  ) .replace ( '/', '.' ) ;^[CLASS] TypeUtils  [METHOD] emulateClassGetName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P7_Replace_Invocation]^return type .getSort (  )  .replace ( '/', '.' ) ;^311^^^^^309^315^return type.getDescriptor (  ) .replace ( '/', '.' ) ;^[CLASS] TypeUtils  [METHOD] emulateClassGetName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P14_Delete_Statement]^^311^^^^^309^315^return type.getDescriptor (  ) .replace ( '/', '.' ) ;^[CLASS] TypeUtils  [METHOD] emulateClassGetName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P7_Replace_Invocation]^return method.getSignature (  ) .getName (  ) .substring ( Constants.CONSTRUCTOR_NAME ) ;^318^^^^^317^319^return method.getSignature (  ) .getName (  ) .equals ( Constants.CONSTRUCTOR_NAME ) ;^[CLASS] TypeUtils  [METHOD] isConstructor [RETURN_TYPE] boolean   MethodInfo method [VARIABLES] Map  rtransforms  transforms  MethodInfo  method  boolean  
[P7_Replace_Invocation]^return method.getSignature (  ) .substring (  ) .equals ( Constants.CONSTRUCTOR_NAME ) ;^318^^^^^317^319^return method.getSignature (  ) .getName (  ) .equals ( Constants.CONSTRUCTOR_NAME ) ;^[CLASS] TypeUtils  [METHOD] isConstructor [RETURN_TYPE] boolean   MethodInfo method [VARIABLES] Map  rtransforms  transforms  MethodInfo  method  boolean  
[P7_Replace_Invocation]^return method.getSignature (  )  .getSize (  )  .equals ( Constants.CONSTRUCTOR_NAME ) ;^318^^^^^317^319^return method.getSignature (  ) .getName (  ) .equals ( Constants.CONSTRUCTOR_NAME ) ;^[CLASS] TypeUtils  [METHOD] isConstructor [RETURN_TYPE] boolean   MethodInfo method [VARIABLES] Map  rtransforms  transforms  MethodInfo  method  boolean  
[P14_Delete_Statement]^^318^^^^^317^319^return method.getSignature (  ) .getName (  ) .equals ( Constants.CONSTRUCTOR_NAME ) ;^[CLASS] TypeUtils  [METHOD] isConstructor [RETURN_TYPE] boolean   MethodInfo method [VARIABLES] Map  rtransforms  transforms  MethodInfo  method  boolean  
[P2_Replace_Operator]^if  ( classes != null )  {^322^^^^^321^330^if  ( classes == null )  {^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P8_Replace_Mix]^if  ( classes == true )  {^322^^^^^321^330^if  ( classes == null )  {^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P9_Replace_Statement]^if  ( value == 0d )  {^322^^^^^321^330^if  ( classes == null )  {^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P9_Replace_Statement]^if  ( t != null )  {^322^^^^^321^330^if  ( classes == null )  {^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P9_Replace_Statement]^if  ( value == 0L )  {^322^^^^^321^330^if  ( classes == null )  {^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P9_Replace_Statement]^if  ( types == null )  {^322^^^^^321^330^if  ( classes == null )  {^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P9_Replace_Statement]^if  ( names == null )  {^322^^^^^321^330^if  ( classes == null )  {^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P9_Replace_Statement]^if  ( value == 0f )  {^322^^^^^321^330^if  ( classes == null )  {^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P15_Unwrap_Block]^return null;^322^323^324^^^321^330^if  ( classes == null )  { return null; }^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P16_Remove_Block]^^322^323^324^^^321^330^if  ( classes == null )  { return null; }^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P13_Insert_Block]^if  ( names == null )  {     return null; }^322^^^^^321^330^[Delete]^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P13_Insert_Block]^if  ( list.contains ( extra )  )  {     return types; }^322^^^^^321^330^[Delete]^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P13_Insert_Block]^if  ( types == null )  {     return null; }^322^^^^^321^330^[Delete]^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P13_Insert_Block]^if  ( type.equals ( "" )  )  {     return type; }^322^^^^^321^330^[Delete]^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P8_Replace_Mix]^return false;^323^^^^^321^330^return null;^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P8_Replace_Mix]^return this;^323^^^^^321^330^return null;^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^Type[] copy = new Type[types.length + 1];Type[] types = new Type[classes.length];^325^^^^^321^330^Type[] types = new Type[classes.length];^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^Type[] types = new Type[names.length];Type[] types = new Type[classes.length];^325^^^^^321^330^Type[] types = new Type[classes.length];^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^Type[] types = new Type[names.size (  ) ];Type[] types = new Type[classes.length];^325^^^^^321^330^Type[] types = new Type[classes.length];^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^Type[] all = new Type[t1.length + t2.length];Type[] types = new Type[classes.length];^325^^^^^321^330^Type[] types = new Type[classes.length];^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^String[] names = new String[types.length];Type[] types = new Type[classes.length];^325^^^^^321^330^Type[] types = new Type[classes.length];^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P1_Replace_Type]^for  (  long  i = 0; i < classes.length; i++ )  {^326^^^^^321^330^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i <= classes.length; i++ )  {^326^^^^^321^330^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P3_Replace_Literal]^for  ( int i = 6; i < classes.length; i++ )  {^326^^^^^321^330^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P5_Replace_Variable]^for  ( int i = 0; i < classes.length.length; i++ )  {^326^^^^^321^330^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P5_Replace_Variable]^for  ( classes.lengthnt i = 0; i < i; i++ )  {^326^^^^^321^330^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P8_Replace_Mix]^types[i]  = null ;^327^^^^^321^330^types[i] = Type.getType ( classes[i] ) ;^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^types[i] = fromInternalName ( names[i] ) ;types[i] = Type.getType ( classes[i] ) ;^327^^^^^321^330^types[i] = Type.getType ( classes[i] ) ;^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^types[i] = Type.getType (  ( String ) names.get ( i )  ) ;types[i] = Type.getType ( classes[i] ) ;^327^^^^^321^330^types[i] = Type.getType ( classes[i] ) ;^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P14_Delete_Statement]^^327^^^^^321^330^types[i] = Type.getType ( classes[i] ) ;^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P11_Insert_Donor_Statement]^return Type.getType ( map ( s )  ) ;types[i] = Type.getType ( classes[i] ) ;^327^^^^^321^330^types[i] = Type.getType ( classes[i] ) ;^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P8_Replace_Mix]^types[i]  =  types[i] ;^327^^^^^321^330^types[i] = Type.getType ( classes[i] ) ;^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P1_Replace_Type]^for  (  short  i = 0; i < classes.length; i++ )  {^326^^^^^321^330^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P3_Replace_Literal]^for  ( int i = 3; i < classes.length; i++ )  {^326^^^^^321^330^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[P5_Replace_Variable]^case 3: return 2;^338^^^^^332^343^case 3: return Constants.ICONST_3;^[CLASS] TypeUtils  [METHOD] ICONST [RETURN_TYPE] int   int value [VARIABLES] Map  rtransforms  transforms  int  value  boolean  
[P3_Replace_Literal]^return --5;^342^^^^^332^343^return -1;^[CLASS] TypeUtils  [METHOD] ICONST [RETURN_TYPE] int   int value [VARIABLES] Map  rtransforms  transforms  int  value  boolean  
[P8_Replace_Mix]^return -4;^342^^^^^332^343^return -1;^[CLASS] TypeUtils  [METHOD] ICONST [RETURN_TYPE] int   int value [VARIABLES] Map  rtransforms  transforms  int  value  boolean  
[P2_Replace_Operator]^if  ( value != 0L )  {^346^^^^^345^353^if  ( value == 0L )  {^[CLASS] TypeUtils  [METHOD] LCONST [RETURN_TYPE] int   long value [VARIABLES] Map  rtransforms  transforms  long  value  boolean  
[P2_Replace_Operator]^if  ( value <= 0L )  {^346^^^^^345^353^if  ( value == 0L )  {^[CLASS] TypeUtils  [METHOD] LCONST [RETURN_TYPE] int   long value [VARIABLES] Map  rtransforms  transforms  long  value  boolean  
[P6_Replace_Expression]^if  ( value == 1L )  {^346^^^^^345^353^if  ( value == 0L )  {^[CLASS] TypeUtils  [METHOD] LCONST [RETURN_TYPE] int   long value [VARIABLES] Map  rtransforms  transforms  long  value  boolean  
[P8_Replace_Mix]^if  ( value == 0 )  {^346^^^^^345^353^if  ( value == 0L )  {^[CLASS] TypeUtils  [METHOD] LCONST [RETURN_TYPE] int   long value [VARIABLES] Map  rtransforms  transforms  long  value  boolean  
[P9_Replace_Statement]^if  ( value == 0d )  {^346^^^^^345^353^if  ( value == 0L )  {^[CLASS] TypeUtils  [METHOD] LCONST [RETURN_TYPE] int   long value [VARIABLES] Map  rtransforms  transforms  long  value  boolean  
[P13_Insert_Block]^if  ( value == 0.0 )  {     return Constants.DCONST_0; }else     if  ( value == 1.0 )  {         return Constants.DCONST_1;     }else {         return -1;     }^346^^^^^345^353^[Delete]^[CLASS] TypeUtils  [METHOD] LCONST [RETURN_TYPE] int   long value [VARIABLES] Map  rtransforms  transforms  long  value  boolean  
[P13_Insert_Block]^if  ( value == 1.0F )  {     return Constants.FCONST_1; }else     if  ( value == 2.0F )  {         return Constants.FCONST_2;     }else {         return -1;     }^346^^^^^345^353^[Delete]^[CLASS] TypeUtils  [METHOD] LCONST [RETURN_TYPE] int   long value [VARIABLES] Map  rtransforms  transforms  long  value  boolean  
[P13_Insert_Block]^if  ( value == 0.0F )  {     return Constants.FCONST_0; }else     if  ( value == 1.0F )  {         return Constants.FCONST_1;     }else         if  ( value == 2.0F )  {             return Constants.FCONST_2;         }else {             return -1;         }^346^^^^^345^353^[Delete]^[CLASS] TypeUtils  [METHOD] LCONST [RETURN_TYPE] int   long value [VARIABLES] Map  rtransforms  transforms  long  value  boolean  
[P2_Replace_Operator]^} else if  ( value != 1L )  {^348^^^^^345^353^} else if  ( value == 1L )  {^[CLASS] TypeUtils  [METHOD] LCONST [RETURN_TYPE] int   long value [VARIABLES] Map  rtransforms  transforms  long  value  boolean  
[P3_Replace_Literal]^} else if  ( value == 3L )  {^348^^^^^345^353^} else if  ( value == 1L )  {^[CLASS] TypeUtils  [METHOD] LCONST [RETURN_TYPE] int   long value [VARIABLES] Map  rtransforms  transforms  long  value  boolean  
[P6_Replace_Expression]^} else {^348^^^^^345^353^} else if  ( value == 1L )  {^[CLASS] TypeUtils  [METHOD] LCONST [RETURN_TYPE] int   long value [VARIABLES] Map  rtransforms  transforms  long  value  boolean  
[P15_Unwrap_Block]^return Constants.LCONST_1;^348^349^350^351^352^345^353^} else if  ( value == 1L )  { return Constants.LCONST_1; } else { return -1; }^[CLASS] TypeUtils  [METHOD] LCONST [RETURN_TYPE] int   long value [VARIABLES] Map  rtransforms  transforms  long  value  boolean  
[P16_Remove_Block]^^348^349^350^351^352^345^353^} else if  ( value == 1L )  { return Constants.LCONST_1; } else { return -1; }^[CLASS] TypeUtils  [METHOD] LCONST [RETURN_TYPE] int   long value [VARIABLES] Map  rtransforms  transforms  long  value  boolean  
[P13_Insert_Block]^if  ( value == 2.0F )  {     return Constants.FCONST_2; }else {     return -1; }^348^^^^^345^353^[Delete]^[CLASS] TypeUtils  [METHOD] LCONST [RETURN_TYPE] int   long value [VARIABLES] Map  rtransforms  transforms  long  value  boolean  
[P13_Insert_Block]^if  ( value == 1.0 )  {     return Constants.DCONST_1; }else {     return -1; }^348^^^^^345^353^[Delete]^[CLASS] TypeUtils  [METHOD] LCONST [RETURN_TYPE] int   long value [VARIABLES] Map  rtransforms  transforms  long  value  boolean  
[P3_Replace_Literal]^return -8;^351^^^^^345^353^return -1;^[CLASS] TypeUtils  [METHOD] LCONST [RETURN_TYPE] int   long value [VARIABLES] Map  rtransforms  transforms  long  value  boolean  
[P8_Replace_Mix]^return -4;^351^^^^^345^353^return -1;^[CLASS] TypeUtils  [METHOD] LCONST [RETURN_TYPE] int   long value [VARIABLES] Map  rtransforms  transforms  long  value  boolean  
[P3_Replace_Literal]^return -3;^351^^^^^345^353^return -1;^[CLASS] TypeUtils  [METHOD] LCONST [RETURN_TYPE] int   long value [VARIABLES] Map  rtransforms  transforms  long  value  boolean  
[P3_Replace_Literal]^} else if  ( value == -3L )  {^348^^^^^345^353^} else if  ( value == 1L )  {^[CLASS] TypeUtils  [METHOD] LCONST [RETURN_TYPE] int   long value [VARIABLES] Map  rtransforms  transforms  long  value  boolean  
[P3_Replace_Literal]^return -;^351^^^^^345^353^return -1;^[CLASS] TypeUtils  [METHOD] LCONST [RETURN_TYPE] int   long value [VARIABLES] Map  rtransforms  transforms  long  value  boolean  
[P8_Replace_Mix]^return 4;^349^^^^^345^353^return Constants.LCONST_1;^[CLASS] TypeUtils  [METHOD] LCONST [RETURN_TYPE] int   long value [VARIABLES] Map  rtransforms  transforms  long  value  boolean  
[P3_Replace_Literal]^return -7;^351^^^^^345^353^return -1;^[CLASS] TypeUtils  [METHOD] LCONST [RETURN_TYPE] int   long value [VARIABLES] Map  rtransforms  transforms  long  value  boolean  
[P8_Replace_Mix]^return -2;^351^^^^^345^353^return -1;^[CLASS] TypeUtils  [METHOD] LCONST [RETURN_TYPE] int   long value [VARIABLES] Map  rtransforms  transforms  long  value  boolean  
[P2_Replace_Operator]^if  ( value != 0f )  {^356^^^^^355^365^if  ( value == 0f )  {^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P2_Replace_Operator]^if  ( value > 0f )  {^356^^^^^355^365^if  ( value == 0f )  {^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P6_Replace_Expression]^if  ( value == 1.0F )  {^356^^^^^355^365^if  ( value == 0f )  {^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P6_Replace_Expression]^if  ( value == 2.0F )  {^356^^^^^355^365^if  ( value == 0f )  {^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P9_Replace_Statement]^if  ( value == 0d )  {^356^^^^^355^365^if  ( value == 0f )  {^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P9_Replace_Statement]^if  ( value == 0L )  {^356^^^^^355^365^if  ( value == 0f )  {^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P13_Insert_Block]^if  ( value == 0.0 )  {     return Constants.DCONST_0; }else     if  ( value == 1.0 )  {         return Constants.DCONST_1;     }else {         return -1;     }^356^^^^^355^365^[Delete]^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P13_Insert_Block]^if  ( value == 1.0F )  {     return Constants.FCONST_1; }else     if  ( value == 2.0F )  {         return Constants.FCONST_2;     }else {         return -1;     }^356^^^^^355^365^[Delete]^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P13_Insert_Block]^if  ( value == 0L )  {     return Constants.LCONST_0; }else     if  ( value == 1L )  {         return Constants.LCONST_1;     }else {         return -1;     }^356^^^^^355^365^[Delete]^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P13_Insert_Block]^if  ( equals ( type )  )  {     return BYTE_TYPE; }else     if  ( equals ( type )  )  {         return FLOAT_TYPE;     }else         if  ( equals ( type )  )  {             return SHORT_TYPE;         }else {             return type;         }^356^^^^^355^365^[Delete]^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P2_Replace_Operator]^} else if  ( value < 1f )  {^358^^^^^355^365^} else if  ( value == 1f )  {^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P2_Replace_Operator]^} else if  ( value >= 1f )  {^358^^^^^355^365^} else if  ( value == 1f )  {^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P3_Replace_Literal]^} else if  ( value == -6f )  {^358^^^^^355^365^} else if  ( value == 1f )  {^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P6_Replace_Expression]^} else if  ( value == 2.0F )  {^358^^^^^355^365^} else if  ( value == 1f )  {^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P6_Replace_Expression]^} else {^358^^^^^355^365^} else if  ( value == 1f )  {^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P13_Insert_Block]^if  ( value == 0.0 )  {     return Constants.DCONST_0; }else     if  ( value == 1.0 )  {         return Constants.DCONST_1;     }else {         return -1;     }^358^^^^^355^365^[Delete]^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P13_Insert_Block]^if  ( value == 0L )  {     return Constants.LCONST_0; }else     if  ( value == 1L )  {         return Constants.LCONST_1;     }else {         return -1;     }^358^^^^^355^365^[Delete]^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P13_Insert_Block]^if  ( equals ( type )  )  {     return FLOAT_TYPE; }else     if  ( equals ( type )  )  {         return SHORT_TYPE;     }else {         return type;     }^358^^^^^355^365^[Delete]^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P13_Insert_Block]^if  ( value == 0.0F )  {     return Constants.FCONST_0; }else     if  ( value == 1.0F )  {         return Constants.FCONST_1;     }else         if  ( value == 2.0F )  {             return Constants.FCONST_2;         }else {             return -1;         }^358^^^^^355^365^[Delete]^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P2_Replace_Operator]^} else if  ( value != 2f )  {^360^^^^^355^365^} else if  ( value == 2f )  {^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P6_Replace_Expression]^} else {^360^^^^^355^365^} else if  ( value == 2f )  {^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P15_Unwrap_Block]^return Constants.FCONST_2;^360^361^362^363^364^355^365^} else if  ( value == 2f )  { return Constants.FCONST_2; } else { return -1; }^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P16_Remove_Block]^^360^361^362^363^364^355^365^} else if  ( value == 2f )  { return Constants.FCONST_2; } else { return -1; }^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P13_Insert_Block]^if  ( value == 1.0 )  {     return Constants.DCONST_1; }else {     return -1; }^360^^^^^355^365^[Delete]^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P13_Insert_Block]^if  ( value == 1L )  {     return Constants.LCONST_1; }else {     return -1; }^360^^^^^355^365^[Delete]^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P3_Replace_Literal]^return -9;^363^^^^^355^365^return -1;^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P8_Replace_Mix]^return -0;^363^^^^^355^365^return -1;^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P3_Replace_Literal]^return -6;^363^^^^^355^365^return -1;^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P2_Replace_Operator]^} else if  ( value >= 2f )  {^360^^^^^355^365^} else if  ( value == 2f )  {^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P3_Replace_Literal]^return -5;^363^^^^^355^365^return -1;^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P8_Replace_Mix]^return 0;^361^^^^^355^365^return Constants.FCONST_2;^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P8_Replace_Mix]^return -4;^363^^^^^355^365^return -1;^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P5_Replace_Variable]^return 3;^357^^^^^355^365^return Constants.FCONST_0;^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P2_Replace_Operator]^} else if  ( value <= 1f )  {^358^^^^^355^365^} else if  ( value == 1f )  {^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P3_Replace_Literal]^} else if  ( value == -5f )  {^358^^^^^355^365^} else if  ( value == 1f )  {^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P8_Replace_Mix]^}  if  ( value == 1f )  {^358^^^^^355^365^} else if  ( value == 1f )  {^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P2_Replace_Operator]^} else if  ( value <= 2f )  {^360^^^^^355^365^} else if  ( value == 2f )  {^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P3_Replace_Literal]^return -3;^363^^^^^355^365^return -1;^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P2_Replace_Operator]^} else if  ( value > 2f )  {^360^^^^^355^365^} else if  ( value == 2f )  {^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P5_Replace_Variable]^return null;^359^^^^^355^365^return Constants.FCONST_1;^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P3_Replace_Literal]^return --5;^363^^^^^355^365^return -1;^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P8_Replace_Mix]^return -1 >> 1;^363^^^^^355^365^return -1;^[CLASS] TypeUtils  [METHOD] FCONST [RETURN_TYPE] int   float value [VARIABLES] float  value  Map  rtransforms  transforms  boolean  
[P2_Replace_Operator]^if  ( value != 0d )  {^368^^^^^367^375^if  ( value == 0d )  {^[CLASS] TypeUtils  [METHOD] DCONST [RETURN_TYPE] int   double value [VARIABLES] Map  rtransforms  transforms  double  value  boolean  
[P2_Replace_Operator]^if  ( value >= 0d )  {^368^^^^^367^375^if  ( value == 0d )  {^[CLASS] TypeUtils  [METHOD] DCONST [RETURN_TYPE] int   double value [VARIABLES] Map  rtransforms  transforms  double  value  boolean  
[P6_Replace_Expression]^if  ( value == 1.0 )  {^368^^^^^367^375^if  ( value == 0d )  {^[CLASS] TypeUtils  [METHOD] DCONST [RETURN_TYPE] int   double value [VARIABLES] Map  rtransforms  transforms  double  value  boolean  
[P9_Replace_Statement]^if  ( value == 0L )  {^368^^^^^367^375^if  ( value == 0d )  {^[CLASS] TypeUtils  [METHOD] DCONST [RETURN_TYPE] int   double value [VARIABLES] Map  rtransforms  transforms  double  value  boolean  
[P13_Insert_Block]^if  ( value == 1.0F )  {     return Constants.FCONST_1; }else     if  ( value == 2.0F )  {         return Constants.FCONST_2;     }else {         return -1;     }^368^^^^^367^375^[Delete]^[CLASS] TypeUtils  [METHOD] DCONST [RETURN_TYPE] int   double value [VARIABLES] Map  rtransforms  transforms  double  value  boolean  
[P13_Insert_Block]^if  ( value == 0L )  {     return Constants.LCONST_0; }else     if  ( value == 1L )  {         return Constants.LCONST_1;     }else {         return -1;     }^368^^^^^367^375^[Delete]^[CLASS] TypeUtils  [METHOD] DCONST [RETURN_TYPE] int   double value [VARIABLES] Map  rtransforms  transforms  double  value  boolean  
[P13_Insert_Block]^if  ( value == 0.0F )  {     return Constants.FCONST_0; }else     if  ( value == 1.0F )  {         return Constants.FCONST_1;     }else         if  ( value == 2.0F )  {             return Constants.FCONST_2;         }else {             return -1;         }^368^^^^^367^375^[Delete]^[CLASS] TypeUtils  [METHOD] DCONST [RETURN_TYPE] int   double value [VARIABLES] Map  rtransforms  transforms  double  value  boolean  
[P2_Replace_Operator]^} else if  ( value < 1d )  {^370^^^^^367^375^} else if  ( value == 1d )  {^[CLASS] TypeUtils  [METHOD] DCONST [RETURN_TYPE] int   double value [VARIABLES] Map  rtransforms  transforms  double  value  boolean  
[P3_Replace_Literal]^} else if  ( value == 6d )  {^370^^^^^367^375^} else if  ( value == 1d )  {^[CLASS] TypeUtils  [METHOD] DCONST [RETURN_TYPE] int   double value [VARIABLES] Map  rtransforms  transforms  double  value  boolean  
[P6_Replace_Expression]^} else {^370^^^^^367^375^} else if  ( value == 1d )  {^[CLASS] TypeUtils  [METHOD] DCONST [RETURN_TYPE] int   double value [VARIABLES] Map  rtransforms  transforms  double  value  boolean  
[P15_Unwrap_Block]^return Constants.DCONST_1;^370^371^372^373^374^367^375^} else if  ( value == 1d )  { return Constants.DCONST_1; } else { return -1; }^[CLASS] TypeUtils  [METHOD] DCONST [RETURN_TYPE] int   double value [VARIABLES] Map  rtransforms  transforms  double  value  boolean  
[P16_Remove_Block]^^370^371^372^373^374^367^375^} else if  ( value == 1d )  { return Constants.DCONST_1; } else { return -1; }^[CLASS] TypeUtils  [METHOD] DCONST [RETURN_TYPE] int   double value [VARIABLES] Map  rtransforms  transforms  double  value  boolean  
[P13_Insert_Block]^if  ( value == 2.0F )  {     return Constants.FCONST_2; }else {     return -1; }^370^^^^^367^375^[Delete]^[CLASS] TypeUtils  [METHOD] DCONST [RETURN_TYPE] int   double value [VARIABLES] Map  rtransforms  transforms  double  value  boolean  
[P13_Insert_Block]^if  ( value == 1L )  {     return Constants.LCONST_1; }else {     return -1; }^370^^^^^367^375^[Delete]^[CLASS] TypeUtils  [METHOD] DCONST [RETURN_TYPE] int   double value [VARIABLES] Map  rtransforms  transforms  double  value  boolean  
[P3_Replace_Literal]^return --5;^373^^^^^367^375^return -1;^[CLASS] TypeUtils  [METHOD] DCONST [RETURN_TYPE] int   double value [VARIABLES] Map  rtransforms  transforms  double  value  boolean  
[P8_Replace_Mix]^return -1 + 1;^373^^^^^367^375^return -1;^[CLASS] TypeUtils  [METHOD] DCONST [RETURN_TYPE] int   double value [VARIABLES] Map  rtransforms  transforms  double  value  boolean  
[P3_Replace_Literal]^return -;^373^^^^^367^375^return -1;^[CLASS] TypeUtils  [METHOD] DCONST [RETURN_TYPE] int   double value [VARIABLES] Map  rtransforms  transforms  double  value  boolean  
[P8_Replace_Mix]^return -0;^373^^^^^367^375^return -1;^[CLASS] TypeUtils  [METHOD] DCONST [RETURN_TYPE] int   double value [VARIABLES] Map  rtransforms  transforms  double  value  boolean  
[P2_Replace_Operator]^} else if  ( value != 1d )  {^370^^^^^367^375^} else if  ( value == 1d )  {^[CLASS] TypeUtils  [METHOD] DCONST [RETURN_TYPE] int   double value [VARIABLES] Map  rtransforms  transforms  double  value  boolean  
[P3_Replace_Literal]^} else if  ( value == -7d )  {^370^^^^^367^375^} else if  ( value == 1d )  {^[CLASS] TypeUtils  [METHOD] DCONST [RETURN_TYPE] int   double value [VARIABLES] Map  rtransforms  transforms  double  value  boolean  
[P3_Replace_Literal]^return -9;^373^^^^^367^375^return -1;^[CLASS] TypeUtils  [METHOD] DCONST [RETURN_TYPE] int   double value [VARIABLES] Map  rtransforms  transforms  double  value  boolean  
[P8_Replace_Mix]^return -2;^373^^^^^367^375^return -1;^[CLASS] TypeUtils  [METHOD] DCONST [RETURN_TYPE] int   double value [VARIABLES] Map  rtransforms  transforms  double  value  boolean  
[P8_Replace_Mix]^return null;^369^^^^^367^375^return Constants.DCONST_0;^[CLASS] TypeUtils  [METHOD] DCONST [RETURN_TYPE] int   double value [VARIABLES] Map  rtransforms  transforms  double  value  boolean  
[P3_Replace_Literal]^return -8;^373^^^^^367^375^return -1;^[CLASS] TypeUtils  [METHOD] DCONST [RETURN_TYPE] int   double value [VARIABLES] Map  rtransforms  transforms  double  value  boolean  
[P8_Replace_Mix]^return 3;^384^^^^^377^398^return Constants.T_DOUBLE;^[CLASS] TypeUtils  [METHOD] NEWARRAY [RETURN_TYPE] int   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P8_Replace_Mix]^return 1;^388^^^^^377^398^return Constants.T_INT;^[CLASS] TypeUtils  [METHOD] NEWARRAY [RETURN_TYPE] int   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P8_Replace_Mix]^return -0;^396^^^^^377^398^return -1;^[CLASS] TypeUtils  [METHOD] NEWARRAY [RETURN_TYPE] int   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P7_Replace_Invocation]^switch  ( type.getType (  )  )  {^378^^^^^377^398^switch  ( type.getSort (  )  )  {^[CLASS] TypeUtils  [METHOD] NEWARRAY [RETURN_TYPE] int   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P7_Replace_Invocation]^switch  ( type .getDescriptor (  )   )  {^378^^^^^377^398^switch  ( type.getSort (  )  )  {^[CLASS] TypeUtils  [METHOD] NEWARRAY [RETURN_TYPE] int   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P14_Delete_Statement]^^378^379^380^^^377^398^switch  ( type.getSort (  )  )  { case Type.BYTE: return Constants.T_BYTE;^[CLASS] TypeUtils  [METHOD] NEWARRAY [RETURN_TYPE] int   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[P1_Replace_Type]^for  (  short  i = 0, len = s.length (  ) ; i < len; i++ )  {^402^^^^^400^417^for  ( int i = 0, len = s.length (  ) ; i < len; i++ )  {^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P2_Replace_Operator]^for  ( int i = 0, len = s.length (  ) ; i <= len; i++ )  {^402^^^^^400^417^for  ( int i = 0, len = s.length (  ) ; i < len; i++ )  {^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P3_Replace_Literal]^for  ( int i = -8, len = s.length (  ) ; i < len; i++ )  {^402^^^^^400^417^for  ( int i = 0, len = s.length (  ) ; i < len; i++ )  {^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P3_Replace_Literal]^for  ( int i = 0, len = s.length() + 0 ; i < len; i++ )  {^402^^^^^400^417^for  ( int i = 0, len = s.length (  ) ; i < len; i++ )  {^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P5_Replace_Variable]^for  ( lennt i = 0, len = s.length (  ) ; i < len; i++ )  {^402^^^^^400^417^for  ( int i = 0, len = s.length (  ) ; i < len; i++ )  {^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P5_Replace_Variable]^for  ( int i = 0 = s.length (  ) ; i < len; i++ )  {^402^^^^^400^417^for  ( int i = 0, len = s.length (  ) ; i < len; i++ )  {^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P5_Replace_Variable]^for  ( lennt i = 0, i = s.length (  ) ; i < len; i++ )  {^402^^^^^400^417^for  ( int i = 0, len = s.length (  ) ; i < len; i++ )  {^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P7_Replace_Invocation]^for  ( int i = 0, len = s.charAt (  ) ; i < len; i++ )  {^402^^^^^400^417^for  ( int i = 0, len = s.length (  ) ; i < len; i++ )  {^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P1_Replace_Type]^String c = s.charAt ( i ) ;^403^^^^^400^417^char c = s.charAt ( i ) ;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P5_Replace_Variable]^char c = s.charAt ( len ) ;^403^^^^^400^417^char c = s.charAt ( i ) ;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P5_Replace_Variable]^char c = i.charAt ( s ) ;^403^^^^^400^417^char c = s.charAt ( i ) ;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P7_Replace_Invocation]^char c = s.indexOf ( i ) ;^403^^^^^400^417^char c = s.charAt ( i ) ;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P14_Delete_Statement]^^403^^^^^400^417^char c = s.charAt ( i ) ;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P3_Replace_Literal]^case '$': sb.append ( "224" ) ; break;^405^^^^^400^417^case '$': sb.append ( "$24" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P8_Replace_Mix]^case '$': sb .append ( c )  ; break;^405^^^^^400^417^case '$': sb.append ( "$24" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P14_Delete_Statement]^^405^406^^^^400^417^case '$': sb.append ( "$24" ) ; break; case '.': sb.append ( "$2E" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case '[': sb.append ( "$5B" ) ; break;case '$': sb.append ( "$24" ) ; break;^405^^^^^400^417^case '$': sb.append ( "$24" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case '.': sb.append ( "$2E" ) ; break;case '$': sb.append ( "$24" ) ; break;^405^^^^^400^417^case '$': sb.append ( "$24" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case '/': sb.append ( "$2F" ) ; break;case '$': sb.append ( "$24" ) ; break;^405^^^^^400^417^case '$': sb.append ( "$24" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case ';': sb.append ( "$3B" ) ; break;case '$': sb.append ( "$24" ) ; break;^405^^^^^400^417^case '$': sb.append ( "$24" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case ' ( ': sb.append ( "$28" ) ; break;case '$': sb.append ( "$24" ) ; break;^405^^^^^400^417^case '$': sb.append ( "$24" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case ' ) ': sb.append ( "$29" ) ; break;case '$': sb.append ( "$24" ) ; break;^405^^^^^400^417^case '$': sb.append ( "$24" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P3_Replace_Literal]^case '.': sb.append ( "$2E2" ) ; break;^406^^^^^400^417^case '.': sb.append ( "$2E" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P7_Replace_Invocation]^case '.': sb .append ( c )  ; break;^406^^^^^400^417^case '.': sb.append ( "$2E" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P14_Delete_Statement]^^406^407^^^^400^417^case '.': sb.append ( "$2E" ) ; break; case '[': sb.append ( "$5B" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case '[': sb.append ( "$5B" ) ; break;case '.': sb.append ( "$2E" ) ; break;^406^^^^^400^417^case '.': sb.append ( "$2E" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case '/': sb.append ( "$2F" ) ; break;case '.': sb.append ( "$2E" ) ; break;^406^^^^^400^417^case '.': sb.append ( "$2E" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case ';': sb.append ( "$3B" ) ; break;case '.': sb.append ( "$2E" ) ; break;^406^^^^^400^417^case '.': sb.append ( "$2E" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case '$': sb.append ( "$24" ) ; break;case '.': sb.append ( "$2E" ) ; break;^406^^^^^400^417^case '.': sb.append ( "$2E" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case ' ( ': sb.append ( "$28" ) ; break;case '.': sb.append ( "$2E" ) ; break;^406^^^^^400^417^case '.': sb.append ( "$2E" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case ' ) ': sb.append ( "$29" ) ; break;case '.': sb.append ( "$2E" ) ; break;^406^^^^^400^417^case '.': sb.append ( "$2E" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P3_Replace_Literal]^case '[': sb.append ( "$5B5" ) ; break;^407^^^^^400^417^case '[': sb.append ( "$5B" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P7_Replace_Invocation]^case '[': sb .append ( c )  ; break;^407^^^^^400^417^case '[': sb.append ( "$5B" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P14_Delete_Statement]^^407^^^^^400^417^case '[': sb.append ( "$5B" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case '.': sb.append ( "$2E" ) ; break;case '[': sb.append ( "$5B" ) ; break;^407^^^^^400^417^case '[': sb.append ( "$5B" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case '/': sb.append ( "$2F" ) ; break;case '[': sb.append ( "$5B" ) ; break;^407^^^^^400^417^case '[': sb.append ( "$5B" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case ';': sb.append ( "$3B" ) ; break;case '[': sb.append ( "$5B" ) ; break;^407^^^^^400^417^case '[': sb.append ( "$5B" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case '$': sb.append ( "$24" ) ; break;case '[': sb.append ( "$5B" ) ; break;^407^^^^^400^417^case '[': sb.append ( "$5B" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case ' ( ': sb.append ( "$28" ) ; break;case '[': sb.append ( "$5B" ) ; break;^407^^^^^400^417^case '[': sb.append ( "$5B" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case ' ) ': sb.append ( "$29" ) ; break;case '[': sb.append ( "$5B" ) ; break;^407^^^^^400^417^case '[': sb.append ( "$5B" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P3_Replace_Literal]^case ';': sb.append ( "" ) ; break;^408^^^^^400^417^case ';': sb.append ( "$3B" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P14_Delete_Statement]^^408^^^^^400^417^case ';': sb.append ( "$3B" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case '[': sb.append ( "$5B" ) ; break;case ';': sb.append ( "$3B" ) ; break;^408^^^^^400^417^case ';': sb.append ( "$3B" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case '.': sb.append ( "$2E" ) ; break;case ';': sb.append ( "$3B" ) ; break;^408^^^^^400^417^case ';': sb.append ( "$3B" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case '/': sb.append ( "$2F" ) ; break;case ';': sb.append ( "$3B" ) ; break;^408^^^^^400^417^case ';': sb.append ( "$3B" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case '$': sb.append ( "$24" ) ; break;case ';': sb.append ( "$3B" ) ; break;^408^^^^^400^417^case ';': sb.append ( "$3B" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case ' ( ': sb.append ( "$28" ) ; break;case ';': sb.append ( "$3B" ) ; break;^408^^^^^400^417^case ';': sb.append ( "$3B" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case ' ) ': sb.append ( "$29" ) ; break;case ';': sb.append ( "$3B" ) ; break;^408^^^^^400^417^case ';': sb.append ( "$3B" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P3_Replace_Literal]^case ' ( ': sb.append ( "$" ) ; break;^409^^^^^400^417^case ' ( ': sb.append ( "$28" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P8_Replace_Mix]^case ' ( ': sb .append ( c )  ; break;^409^^^^^400^417^case ' ( ': sb.append ( "$28" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P14_Delete_Statement]^^409^410^^^^400^417^case ' ( ': sb.append ( "$28" ) ; break; case ' ) ': sb.append ( "$29" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case '[': sb.append ( "$5B" ) ; break;case ' ( ': sb.append ( "$28" ) ; break;^409^^^^^400^417^case ' ( ': sb.append ( "$28" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case '.': sb.append ( "$2E" ) ; break;case ' ( ': sb.append ( "$28" ) ; break;^409^^^^^400^417^case ' ( ': sb.append ( "$28" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case '/': sb.append ( "$2F" ) ; break;case ' ( ': sb.append ( "$28" ) ; break;^409^^^^^400^417^case ' ( ': sb.append ( "$28" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case ';': sb.append ( "$3B" ) ; break;case ' ( ': sb.append ( "$28" ) ; break;^409^^^^^400^417^case ' ( ': sb.append ( "$28" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case '$': sb.append ( "$24" ) ; break;case ' ( ': sb.append ( "$28" ) ; break;^409^^^^^400^417^case ' ( ': sb.append ( "$28" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case ' ) ': sb.append ( "$29" ) ; break;case ' ( ': sb.append ( "$28" ) ; break;^409^^^^^400^417^case ' ( ': sb.append ( "$28" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P3_Replace_Literal]^case ' ) ': sb.append ( "$" ) ; break;^410^^^^^400^417^case ' ) ': sb.append ( "$29" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P14_Delete_Statement]^^410^411^^^^400^417^case ' ) ': sb.append ( "$29" ) ; break; case '/': sb.append ( "$2F" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case '[': sb.append ( "$5B" ) ; break;case ' ) ': sb.append ( "$29" ) ; break;^410^^^^^400^417^case ' ) ': sb.append ( "$29" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case '.': sb.append ( "$2E" ) ; break;case ' ) ': sb.append ( "$29" ) ; break;^410^^^^^400^417^case ' ) ': sb.append ( "$29" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case '/': sb.append ( "$2F" ) ; break;case ' ) ': sb.append ( "$29" ) ; break;^410^^^^^400^417^case ' ) ': sb.append ( "$29" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case ';': sb.append ( "$3B" ) ; break;case ' ) ': sb.append ( "$29" ) ; break;^410^^^^^400^417^case ' ) ': sb.append ( "$29" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case '$': sb.append ( "$24" ) ; break;case ' ) ': sb.append ( "$29" ) ; break;^410^^^^^400^417^case ' ) ': sb.append ( "$29" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case ' ( ': sb.append ( "$28" ) ; break;case ' ) ': sb.append ( "$29" ) ; break;^410^^^^^400^417^case ' ) ': sb.append ( "$29" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P3_Replace_Literal]^case '/': sb.append ( "22F" ) ; break;^411^^^^^400^417^case '/': sb.append ( "$2F" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P14_Delete_Statement]^^411^^^^^400^417^case '/': sb.append ( "$2F" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case '[': sb.append ( "$5B" ) ; break;case '/': sb.append ( "$2F" ) ; break;^411^^^^^400^417^case '/': sb.append ( "$2F" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case '.': sb.append ( "$2E" ) ; break;case '/': sb.append ( "$2F" ) ; break;^411^^^^^400^417^case '/': sb.append ( "$2F" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case ';': sb.append ( "$3B" ) ; break;case '/': sb.append ( "$2F" ) ; break;^411^^^^^400^417^case '/': sb.append ( "$2F" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case '$': sb.append ( "$24" ) ; break;case '/': sb.append ( "$2F" ) ; break;^411^^^^^400^417^case '/': sb.append ( "$2F" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case ' ( ': sb.append ( "$28" ) ; break;case '/': sb.append ( "$2F" ) ; break;^411^^^^^400^417^case '/': sb.append ( "$2F" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^case ' ) ': sb.append ( "$29" ) ; break;case '/': sb.append ( "$2F" ) ; break;^411^^^^^400^417^case '/': sb.append ( "$2F" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P14_Delete_Statement]^^413^^^^^400^417^sb.append ( c ) ;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^sb.append ( ' ) ' ) ;sb.append ( c ) ;^413^^^^^400^417^sb.append ( c ) ;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^sb.append ( it.next (  )  ) ;sb.append ( c ) ;^413^^^^^400^417^sb.append ( c ) ;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^sb.append ( " ) " ) ;sb.append ( c ) ;^413^^^^^400^417^sb.append ( c ) ;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^sb.append ( " ( " ) ;sb.append ( c ) ;^413^^^^^400^417^sb.append ( c ) ;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^sb.append ( "V" ) ;sb.append ( c ) ;^413^^^^^400^417^sb.append ( c ) ;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^sb.append ( ' ( ' ) ;sb.append ( c ) ;^413^^^^^400^417^sb.append ( c ) ;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P11_Insert_Donor_Statement]^sb.append ( '[' ) ;sb.append ( c ) ;^413^^^^^400^417^sb.append ( c ) ;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P1_Replace_Type]^for  (  long  i = 0, len = s.length (  ) ; i < len; i++ )  {^402^^^^^400^417^for  ( int i = 0, len = s.length (  ) ; i < len; i++ )  {^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P3_Replace_Literal]^for  ( int i = len, len = s.length (  ) ; i < len; i++ )  {^402^^^^^400^417^for  ( int i = 0, len = s.length (  ) ; i < len; i++ )  {^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P3_Replace_Literal]^for  ( int i = 0, len = s.length() + 3 ; i < len; i++ )  {^402^^^^^400^417^for  ( int i = 0, len = s.length (  ) ; i < len; i++ )  {^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P3_Replace_Literal]^for  ( int i = 0, len = s.length() - 4 ; i < len; i++ )  {^402^^^^^400^417^for  ( int i = 0, len = s.length (  ) ; i < len; i++ )  {^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P7_Replace_Invocation]^for  ( int i = 0, len = s .lastIndexOf ( i )  ; i < len; i++ )  {^402^^^^^400^417^for  ( int i = 0, len = s.length (  ) ; i < len; i++ )  {^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P1_Replace_Type]^int c = s.charAt ( i ) ;^403^^^^^400^417^char c = s.charAt ( i ) ;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P7_Replace_Invocation]^char c = s .trim (  )  ;^403^^^^^400^417^char c = s.charAt ( i ) ;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P3_Replace_Literal]^for  ( int i = 0, len = s.length() + 5 ; i < len; i++ )  {^402^^^^^400^417^for  ( int i = 0, len = s.length (  ) ; i < len; i++ )  {^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P3_Replace_Literal]^case '$': sb.append ( "24" ) ; break;^405^^^^^400^417^case '$': sb.append ( "$24" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P14_Delete_Statement]^^406^^^^^400^417^case '.': sb.append ( "$2E" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P3_Replace_Literal]^case '[': sb.append ( "5B" ) ; break;^407^^^^^400^417^case '[': sb.append ( "$5B" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P3_Replace_Literal]^case ' ( ': sb.append ( "$28$2" ) ; break;^409^^^^^400^417^case ' ( ': sb.append ( "$28" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P3_Replace_Literal]^case ' ) ': sb.append ( "$229" ) ; break;^410^^^^^400^417^case ' ) ': sb.append ( "$29" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P7_Replace_Invocation]^case ' ) ': sb .append ( c )  ; break;^410^^^^^400^417^case ' ) ': sb.append ( "$29" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P3_Replace_Literal]^case '/': sb.append ( "$" ) ; break;^411^^^^^400^417^case '/': sb.append ( "$2F" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P7_Replace_Invocation]^case '/': sb .append ( c )  ; break;^411^^^^^400^417^case '/': sb.append ( "$2F" ) ; break;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P7_Replace_Invocation]^sb .append ( c )  ;^413^^^^^400^417^sb.append ( c ) ;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P7_Replace_Invocation]^return sb.append (  ) ;^416^^^^^400^417^return sb.toString (  ) ;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P7_Replace_Invocation]^return sb .StringBuffer (  )  ;^416^^^^^400^417^return sb.toString (  ) ;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[P14_Delete_Statement]^^416^^^^^400^417^return sb.toString (  ) ;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
