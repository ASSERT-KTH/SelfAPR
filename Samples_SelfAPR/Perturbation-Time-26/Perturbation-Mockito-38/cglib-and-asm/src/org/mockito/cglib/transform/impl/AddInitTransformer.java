[P8_Replace_Mix]^info =  ReflectUtils.getMethodInfo ( null ) ;^37^^^^^36^45^info = ReflectUtils.getMethodInfo ( method ) ;^[CLASS] AddInitTransformer 1  [METHOD] <init> [RETURN_TYPE] Method)   Method method [VARIABLES] Type[]  types  MethodInfo  info  Method  method  boolean  
[P14_Delete_Statement]^^37^^^^^36^45^info = ReflectUtils.getMethodInfo ( method ) ;^[CLASS] AddInitTransformer 1  [METHOD] <init> [RETURN_TYPE] Method)   Method method [VARIABLES] Type[]  types  MethodInfo  info  Method  method  boolean  
[P7_Replace_Invocation]^Type[] types = info.getSignature (  ) .getReturnType (  ) ;^39^^^^^36^45^Type[] types = info.getSignature (  ) .getArgumentTypes (  ) ;^[CLASS] AddInitTransformer 1  [METHOD] <init> [RETURN_TYPE] Method)   Method method [VARIABLES] Type[]  types  MethodInfo  info  Method  method  boolean  
[P14_Delete_Statement]^^39^^^^^36^45^Type[] types = info.getSignature (  ) .getArgumentTypes (  ) ;^[CLASS] AddInitTransformer 1  [METHOD] <init> [RETURN_TYPE] Method)   Method method [VARIABLES] Type[]  types  MethodInfo  info  Method  method  boolean  
[P2_Replace_Operator]^if  ( types.length != 1 && !types[0].equals ( Constants.TYPE_OBJECT )  || !info.getSignature (  ) .getReturnType (  ) .equals ( Type.VOID_TYPE )  )  {^40^41^42^^^36^45^if  ( types.length != 1 || !types[0].equals ( Constants.TYPE_OBJECT )  || !info.getSignature (  ) .getReturnType (  ) .equals ( Type.VOID_TYPE )  )  {^[CLASS] AddInitTransformer 1  [METHOD] <init> [RETURN_TYPE] Method)   Method method [VARIABLES] Type[]  types  MethodInfo  info  Method  method  boolean  
[P2_Replace_Operator]^if  ( types.length == 1 || !types[0].equals ( Constants.TYPE_OBJECT )  || !info.getSignature (  ) .getReturnType (  ) .equals ( Type.VOID_TYPE )  )  {^40^41^42^^^36^45^if  ( types.length != 1 || !types[0].equals ( Constants.TYPE_OBJECT )  || !info.getSignature (  ) .getReturnType (  ) .equals ( Type.VOID_TYPE )  )  {^[CLASS] AddInitTransformer 1  [METHOD] <init> [RETURN_TYPE] Method)   Method method [VARIABLES] Type[]  types  MethodInfo  info  Method  method  boolean  
[P3_Replace_Literal]^if  ( types.length != 8 || !types[0].equals ( Constants.TYPE_OBJECT )  || !info.getSignature (  ) .getReturnType (  ) .equals ( Type.VOID_TYPE )  )  {^40^41^42^^^36^45^if  ( types.length != 1 || !types[0].equals ( Constants.TYPE_OBJECT )  || !info.getSignature (  ) .getReturnType (  ) .equals ( Type.VOID_TYPE )  )  {^[CLASS] AddInitTransformer 1  [METHOD] <init> [RETURN_TYPE] Method)   Method method [VARIABLES] Type[]  types  MethodInfo  info  Method  method  boolean  
[P3_Replace_Literal]^if  ( types.length != 1 || !types[-9].equals ( Constants.TYPE_OBJECT )  || !info.getSignature (  ) .getReturnType (  ) .equals ( Type.VOID_TYPE )  )  {^40^41^42^^^36^45^if  ( types.length != 1 || !types[0].equals ( Constants.TYPE_OBJECT )  || !info.getSignature (  ) .getReturnType (  ) .equals ( Type.VOID_TYPE )  )  {^[CLASS] AddInitTransformer 1  [METHOD] <init> [RETURN_TYPE] Method)   Method method [VARIABLES] Type[]  types  MethodInfo  info  Method  method  boolean  
[P6_Replace_Expression]^if  ( types.length != 1 ) {^40^41^42^^^36^45^if  ( types.length != 1 || !types[0].equals ( Constants.TYPE_OBJECT )  || !info.getSignature (  ) .getReturnType (  ) .equals ( Type.VOID_TYPE )  )  {^[CLASS] AddInitTransformer 1  [METHOD] <init> [RETURN_TYPE] Method)   Method method [VARIABLES] Type[]  types  MethodInfo  info  Method  method  boolean  
[P6_Replace_Expression]^if  (  !types[0].equals ( Constants.TYPE_OBJECT )  || !info.getSignature (  ) .getReturnType (  ) .equals ( Type.VOID_TYPE )  )  {^40^41^42^^^36^45^if  ( types.length != 1 || !types[0].equals ( Constants.TYPE_OBJECT )  || !info.getSignature (  ) .getReturnType (  ) .equals ( Type.VOID_TYPE )  )  {^[CLASS] AddInitTransformer 1  [METHOD] <init> [RETURN_TYPE] Method)   Method method [VARIABLES] Type[]  types  MethodInfo  info  Method  method  boolean  
[P6_Replace_Expression]^if  ( (types.length != 1 || TYPE_OBJECT))) )  {^40^41^42^^^36^45^if  ( types.length != 1 || !types[0].equals ( Constants.TYPE_OBJECT )  || !info.getSignature (  ) .getReturnType (  ) .equals ( Type.VOID_TYPE )  )  {^[CLASS] AddInitTransformer 1  [METHOD] <init> [RETURN_TYPE] Method)   Method method [VARIABLES] Type[]  types  MethodInfo  info  Method  method  boolean  
[P6_Replace_Expression]^if  ( method + " illegal signature" )  {^40^41^42^^^36^45^if  ( types.length != 1 || !types[0].equals ( Constants.TYPE_OBJECT )  || !info.getSignature (  ) .getReturnType (  ) .equals ( Type.VOID_TYPE )  )  {^[CLASS] AddInitTransformer 1  [METHOD] <init> [RETURN_TYPE] Method)   Method method [VARIABLES] Type[]  types  MethodInfo  info  Method  method  boolean  
[P7_Replace_Invocation]^if  ( types.length != 1 || !types[0].load_this ( Constants.TYPE_OBJECT )  || !info.getSignature (  ) .getReturnType (  ) .equals ( Type.VOID_TYPE )  )  {^40^41^42^^^36^45^if  ( types.length != 1 || !types[0].equals ( Constants.TYPE_OBJECT )  || !info.getSignature (  ) .getReturnType (  ) .equals ( Type.VOID_TYPE )  )  {^[CLASS] AddInitTransformer 1  [METHOD] <init> [RETURN_TYPE] Method)   Method method [VARIABLES] Type[]  types  MethodInfo  info  Method  method  boolean  
[P7_Replace_Invocation]^if  ( types.length != 1 || !types[0] .getArgumentTypes (  )   || !info.getSignature (  ) .getReturnType (  )^40^41^42^^^36^45^if  ( types.length != 1 || !types[0].equals ( Constants.TYPE_OBJECT )  || !info.getSignature (  ) .getReturnType (  ) .equals ( Type.VOID_TYPE )  )  {^[CLASS] AddInitTransformer 1  [METHOD] <init> [RETURN_TYPE] Method)   Method method [VARIABLES] Type[]  types  MethodInfo  info  Method  method  boolean  
[P7_Replace_Invocation]^if  ( types.length != 1 || !types[0].equals ( Constants.TYPE_OBJECT )  || !info.getSignature (  ) .getArgumentTypes (  ) .equals ( Type.VOID_TYPE )  )  {^40^41^42^^^36^45^if  ( types.length != 1 || !types[0].equals ( Constants.TYPE_OBJECT )  || !info.getSignature (  ) .getReturnType (  ) .equals ( Type.VOID_TYPE )  )  {^[CLASS] AddInitTransformer 1  [METHOD] <init> [RETURN_TYPE] Method)   Method method [VARIABLES] Type[]  types  MethodInfo  info  Method  method  boolean  
[P8_Replace_Mix]^if  (  !types[0].load_this ( Constants.TYPE_OBJECT )  || !info.getSignature (  ) .getReturnType (  ) .equals ( Type.VOID_TYPE )  )  {^40^41^42^^^36^45^if  ( types.length != 1 || !types[0].equals ( Constants.TYPE_OBJECT )  || !info.getSignature (  ) .getReturnType (  ) .equals ( Type.VOID_TYPE )  )  {^[CLASS] AddInitTransformer 1  [METHOD] <init> [RETURN_TYPE] Method)   Method method [VARIABLES] Type[]  types  MethodInfo  info  Method  method  boolean  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException((method + " illegal signature"));^40^41^42^43^44^36^45^if  ( types.length != 1 || !types[0].equals ( Constants.TYPE_OBJECT )  || !info.getSignature (  ) .getReturnType (  ) .equals ( Type.VOID_TYPE )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] AddInitTransformer 1  [METHOD] <init> [RETURN_TYPE] Method)   Method method [VARIABLES] Type[]  types  MethodInfo  info  Method  method  boolean  
[P16_Remove_Block]^^40^41^42^43^44^36^45^if  ( types.length != 1 || !types[0].equals ( Constants.TYPE_OBJECT )  || !info.getSignature (  ) .getReturnType (  ) .equals ( Type.VOID_TYPE )  )  { throw new IllegalArgumentException  (" ")  ; }^[CLASS] AddInitTransformer 1  [METHOD] <init> [RETURN_TYPE] Method)   Method method [VARIABLES] Type[]  types  MethodInfo  info  Method  method  boolean  
[P8_Replace_Mix]^return ;^43^^^^^36^45^throw new IllegalArgumentException  (" ")  ;^[CLASS] AddInitTransformer 1  [METHOD] <init> [RETURN_TYPE] Method)   Method method [VARIABLES] Type[]  types  MethodInfo  info  Method  method  boolean  
[P3_Replace_Literal]^!types[1].equals ( Constants.TYPE_OBJECT )  || !info.getSignature (  ) .getReturnType (  ) .equals ( Type.VOID_TYPE )  )  {^41^42^^^^36^45^!types[0].equals ( Constants.TYPE_OBJECT )  || !info.getSignature (  ) .getReturnType (  ) .equals ( Type.VOID_TYPE )  )  {^[CLASS] AddInitTransformer 1  [METHOD] <init> [RETURN_TYPE] Method)   Method method [VARIABLES] Type[]  types  MethodInfo  info  Method  method  boolean  
[P8_Replace_Mix]^!types[0] .getArgumentTypes (  )   || !info.getSignature (  ) .getReturnType (  )^41^42^^^^36^45^!types[0].equals ( Constants.TYPE_OBJECT )  || !info.getSignature (  ) .getReturnType (  ) .equals ( Type.VOID_TYPE )  )  {^[CLASS] AddInitTransformer 1  [METHOD] <init> [RETURN_TYPE] Method)   Method method [VARIABLES] Type[]  types  MethodInfo  info  Method  method  boolean  
[P14_Delete_Statement]^^41^42^43^^^36^45^!types[0].equals ( Constants.TYPE_OBJECT )  || !info.getSignature (  ) .getReturnType (  ) .equals ( Type.VOID_TYPE )  )  { throw new IllegalArgumentException  (" ")  ;^[CLASS] AddInitTransformer 1  [METHOD] <init> [RETURN_TYPE] Method)   Method method [VARIABLES] Type[]  types  MethodInfo  info  Method  method  boolean  
[P7_Replace_Invocation]^!info.getSignature (  ) .getReturnType (  ) .load_this ( Type.VOID_TYPE )  )  {^42^^^^^36^45^!info.getSignature (  ) .getReturnType (  ) .equals ( Type.VOID_TYPE )  )  {^[CLASS] AddInitTransformer 1  [METHOD] <init> [RETURN_TYPE] Method)   Method method [VARIABLES] Type[]  types  MethodInfo  info  Method  method  boolean  
[P7_Replace_Invocation]^!info.getSignature (  ) .getArgumentTypes (  ) .equals ( Type.VOID_TYPE )  )  {^42^^^^^36^45^!info.getSignature (  ) .getReturnType (  ) .equals ( Type.VOID_TYPE )  )  {^[CLASS] AddInitTransformer 1  [METHOD] <init> [RETURN_TYPE] Method)   Method method [VARIABLES] Type[]  types  MethodInfo  info  Method  method  boolean  
[P14_Delete_Statement]^^42^43^^^^36^45^!info.getSignature (  ) .getReturnType (  ) .equals ( Type.VOID_TYPE )  )  { throw new IllegalArgumentException  (" ")  ;^[CLASS] AddInitTransformer 1  [METHOD] <init> [RETURN_TYPE] Method)   Method method [VARIABLES] Type[]  types  MethodInfo  info  Method  method  boolean  
[P5_Replace_Variable]^final CodeEmitter emitter = super.begin_method (  sig, exceptions ) ;^48^^^^^47^61^final CodeEmitter emitter = super.begin_method ( access, sig, exceptions ) ;^[CLASS] AddInitTransformer 1  [METHOD] begin_method [RETURN_TYPE] CodeEmitter   int access Signature sig Type[] exceptions [VARIABLES] Type[]  exceptions  CodeEmitter  emitter  MethodInfo  info  boolean  int  access  opcode  Signature  sig  
[P5_Replace_Variable]^final CodeEmitter emitter = super.begin_method ( access,  exceptions ) ;^48^^^^^47^61^final CodeEmitter emitter = super.begin_method ( access, sig, exceptions ) ;^[CLASS] AddInitTransformer 1  [METHOD] begin_method [RETURN_TYPE] CodeEmitter   int access Signature sig Type[] exceptions [VARIABLES] Type[]  exceptions  CodeEmitter  emitter  MethodInfo  info  boolean  int  access  opcode  Signature  sig  
[P5_Replace_Variable]^final CodeEmitter emitter = super.begin_method ( access, sig ) ;^48^^^^^47^61^final CodeEmitter emitter = super.begin_method ( access, sig, exceptions ) ;^[CLASS] AddInitTransformer 1  [METHOD] begin_method [RETURN_TYPE] CodeEmitter   int access Signature sig Type[] exceptions [VARIABLES] Type[]  exceptions  CodeEmitter  emitter  MethodInfo  info  boolean  int  access  opcode  Signature  sig  
[P7_Replace_Invocation]^final CodeEmitter emitter = super .ClassEmitterTransformer (  )  ;^48^^^^^47^61^final CodeEmitter emitter = super.begin_method ( access, sig, exceptions ) ;^[CLASS] AddInitTransformer 1  [METHOD] begin_method [RETURN_TYPE] CodeEmitter   int access Signature sig Type[] exceptions [VARIABLES] Type[]  exceptions  CodeEmitter  emitter  MethodInfo  info  boolean  int  access  opcode  Signature  sig  
[P14_Delete_Statement]^^48^^^^^47^61^final CodeEmitter emitter = super.begin_method ( access, sig, exceptions ) ;^[CLASS] AddInitTransformer 1  [METHOD] begin_method [RETURN_TYPE] CodeEmitter   int access Signature sig Type[] exceptions [VARIABLES] Type[]  exceptions  CodeEmitter  emitter  MethodInfo  info  boolean  int  access  opcode  Signature  sig  
[P7_Replace_Invocation]^if  ( sig.getName (  ) .visitInsn ( Constants.CONSTRUCTOR_NAME )  )  {^49^^^^^47^61^if  ( sig.getName (  ) .equals ( Constants.CONSTRUCTOR_NAME )  )  {^[CLASS] AddInitTransformer 1  [METHOD] begin_method [RETURN_TYPE] CodeEmitter   int access Signature sig Type[] exceptions [VARIABLES] Type[]  exceptions  CodeEmitter  emitter  MethodInfo  info  boolean  int  access  opcode  Signature  sig  
[P8_Replace_Mix]^if  ( sig.getName (  )  .getArgumentTypes (  )   )  {^49^^^^^47^61^if  ( sig.getName (  ) .equals ( Constants.CONSTRUCTOR_NAME )  )  {^[CLASS] AddInitTransformer 1  [METHOD] begin_method [RETURN_TYPE] CodeEmitter   int access Signature sig Type[] exceptions [VARIABLES] Type[]  exceptions  CodeEmitter  emitter  MethodInfo  info  boolean  int  access  opcode  Signature  sig  
[P2_Replace_Operator]^if  ( opcode != Constants.RETURN )  {^52^^^^^47^61^if  ( opcode == Constants.RETURN )  {^[CLASS] AddInitTransformer 1  [METHOD] begin_method [RETURN_TYPE] CodeEmitter   int access Signature sig Type[] exceptions [VARIABLES] Type[]  exceptions  CodeEmitter  emitter  MethodInfo  info  boolean  int  access  opcode  Signature  sig  
[P5_Replace_Variable]^if  ( access == Constants.RETURN )  {^52^^^^^47^61^if  ( opcode == Constants.RETURN )  {^[CLASS] AddInitTransformer 1  [METHOD] begin_method [RETURN_TYPE] CodeEmitter   int access Signature sig Type[] exceptions [VARIABLES] Type[]  exceptions  CodeEmitter  emitter  MethodInfo  info  boolean  int  access  opcode  Signature  sig  
[P15_Unwrap_Block]^load_this(); invoke(info);^52^53^54^55^^47^61^if  ( opcode == Constants.RETURN )  { load_this (  ) ; invoke ( info ) ; }^[CLASS] AddInitTransformer 1  [METHOD] begin_method [RETURN_TYPE] CodeEmitter   int access Signature sig Type[] exceptions [VARIABLES] Type[]  exceptions  CodeEmitter  emitter  MethodInfo  info  boolean  int  access  opcode  Signature  sig  
[P16_Remove_Block]^^52^53^54^55^^47^61^if  ( opcode == Constants.RETURN )  { load_this (  ) ; invoke ( info ) ; }^[CLASS] AddInitTransformer 1  [METHOD] begin_method [RETURN_TYPE] CodeEmitter   int access Signature sig Type[] exceptions [VARIABLES] Type[]  exceptions  CodeEmitter  emitter  MethodInfo  info  boolean  int  access  opcode  Signature  sig  
[P7_Replace_Invocation]^equals (  ) ;^53^^^^^47^61^load_this (  ) ;^[CLASS] AddInitTransformer 1  [METHOD] begin_method [RETURN_TYPE] CodeEmitter   int access Signature sig Type[] exceptions [VARIABLES] Type[]  exceptions  CodeEmitter  emitter  MethodInfo  info  boolean  int  access  opcode  Signature  sig  
[P14_Delete_Statement]^^53^54^^^^47^61^load_this (  ) ; invoke ( info ) ;^[CLASS] AddInitTransformer 1  [METHOD] begin_method [RETURN_TYPE] CodeEmitter   int access Signature sig Type[] exceptions [VARIABLES] Type[]  exceptions  CodeEmitter  emitter  MethodInfo  info  boolean  int  access  opcode  Signature  sig  
[P7_Replace_Invocation]^equals ( info ) ;^54^^^^^47^61^invoke ( info ) ;^[CLASS] AddInitTransformer 1  [METHOD] begin_method [RETURN_TYPE] CodeEmitter   int access Signature sig Type[] exceptions [VARIABLES] Type[]  exceptions  CodeEmitter  emitter  MethodInfo  info  boolean  int  access  opcode  Signature  sig  
[P14_Delete_Statement]^^54^^^^^47^61^invoke ( info ) ;^[CLASS] AddInitTransformer 1  [METHOD] begin_method [RETURN_TYPE] CodeEmitter   int access Signature sig Type[] exceptions [VARIABLES] Type[]  exceptions  CodeEmitter  emitter  MethodInfo  info  boolean  int  access  opcode  Signature  sig  
[P13_Insert_Block]^if  ( sig.getName (  ) .equals ( Constants.CONSTRUCTOR_NAME )  )  {     return new CodeEmitter ( emitter )  {         public void visitInsn ( int opcode )  {             if  ( opcode ==  ( RETURN )  )  {                 load_this (  ) ;                 invoke ( info ) ;             }             super.visitInsn ( opcode ) ;         }     }; }^50^^^^^47^61^[Delete]^[CLASS] AddInitTransformer 1  [METHOD] begin_method [RETURN_TYPE] CodeEmitter   int access Signature sig Type[] exceptions [VARIABLES] Type[]  exceptions  CodeEmitter  emitter  MethodInfo  info  boolean  int  access  opcode  Signature  sig  
[P14_Delete_Statement]^^53^^^^^47^61^load_this (  ) ;^[CLASS] AddInitTransformer 1  [METHOD] begin_method [RETURN_TYPE] CodeEmitter   int access Signature sig Type[] exceptions [VARIABLES] Type[]  exceptions  CodeEmitter  emitter  MethodInfo  info  boolean  int  access  opcode  Signature  sig  
[P14_Delete_Statement]^^56^^^^^47^61^super.visitInsn ( opcode ) ;^[CLASS] AddInitTransformer 1  [METHOD] begin_method [RETURN_TYPE] CodeEmitter   int access Signature sig Type[] exceptions [VARIABLES] Type[]  exceptions  CodeEmitter  emitter  MethodInfo  info  boolean  int  access  opcode  Signature  sig  
[P2_Replace_Operator]^if  ( opcode >= Constants.RETURN )  {^52^^^^^47^61^if  ( opcode == Constants.RETURN )  {^[CLASS] AddInitTransformer 1  [METHOD] begin_method [RETURN_TYPE] CodeEmitter   int access Signature sig Type[] exceptions [VARIABLES] Type[]  exceptions  CodeEmitter  emitter  MethodInfo  info  boolean  int  access  opcode  Signature  sig  
[P7_Replace_Invocation]^super .visitInsn ( opcode )  ;^56^^^^^47^61^super.visitInsn ( opcode ) ;^[CLASS] AddInitTransformer 1  [METHOD] begin_method [RETURN_TYPE] CodeEmitter   int access Signature sig Type[] exceptions [VARIABLES] Type[]  exceptions  CodeEmitter  emitter  MethodInfo  info  boolean  int  access  opcode  Signature  sig  
[P2_Replace_Operator]^if  ( opcode <= Constants.RETURN )  {^52^^^^^51^57^if  ( opcode == Constants.RETURN )  {^[CLASS] AddInitTransformer 1  [METHOD] visitInsn [RETURN_TYPE] void   int opcode [VARIABLES] MethodInfo  info  int  opcode  boolean  
[P5_Replace_Variable]^if  ( opcode == Constants.0 )  {^52^^^^^51^57^if  ( opcode == Constants.RETURN )  {^[CLASS] AddInitTransformer 1  [METHOD] visitInsn [RETURN_TYPE] void   int opcode [VARIABLES] MethodInfo  info  int  opcode  boolean  
[P8_Replace_Mix]^if  ( opcode == Constants.null )  {^52^^^^^51^57^if  ( opcode == Constants.RETURN )  {^[CLASS] AddInitTransformer 1  [METHOD] visitInsn [RETURN_TYPE] void   int opcode [VARIABLES] MethodInfo  info  int  opcode  boolean  
[P15_Unwrap_Block]^load_this(); invoke(info);^52^53^54^55^^51^57^if  ( opcode == Constants.RETURN )  { load_this (  ) ; invoke ( info ) ; }^[CLASS] AddInitTransformer 1  [METHOD] visitInsn [RETURN_TYPE] void   int opcode [VARIABLES] MethodInfo  info  int  opcode  boolean  
[P16_Remove_Block]^^52^53^54^55^^51^57^if  ( opcode == Constants.RETURN )  { load_this (  ) ; invoke ( info ) ; }^[CLASS] AddInitTransformer 1  [METHOD] visitInsn [RETURN_TYPE] void   int opcode [VARIABLES] MethodInfo  info  int  opcode  boolean  
[P7_Replace_Invocation]^equals (  ) ;^53^^^^^51^57^load_this (  ) ;^[CLASS] AddInitTransformer 1  [METHOD] visitInsn [RETURN_TYPE] void   int opcode [VARIABLES] MethodInfo  info  int  opcode  boolean  
[P14_Delete_Statement]^^53^^^^^51^57^load_this (  ) ;^[CLASS] AddInitTransformer 1  [METHOD] visitInsn [RETURN_TYPE] void   int opcode [VARIABLES] MethodInfo  info  int  opcode  boolean  
[P7_Replace_Invocation]^equals ( info ) ;^54^^^^^51^57^invoke ( info ) ;^[CLASS] AddInitTransformer 1  [METHOD] visitInsn [RETURN_TYPE] void   int opcode [VARIABLES] MethodInfo  info  int  opcode  boolean  
[P14_Delete_Statement]^^54^^^^^51^57^invoke ( info ) ;^[CLASS] AddInitTransformer 1  [METHOD] visitInsn [RETURN_TYPE] void   int opcode [VARIABLES] MethodInfo  info  int  opcode  boolean  
[P14_Delete_Statement]^^53^54^^^^51^57^load_this (  ) ; invoke ( info ) ;^[CLASS] AddInitTransformer 1  [METHOD] visitInsn [RETURN_TYPE] void   int opcode [VARIABLES] MethodInfo  info  int  opcode  boolean  
[P7_Replace_Invocation]^super .visitInsn ( opcode )  ;^56^^^^^51^57^super.visitInsn ( opcode ) ;^[CLASS] AddInitTransformer 1  [METHOD] visitInsn [RETURN_TYPE] void   int opcode [VARIABLES] MethodInfo  info  int  opcode  boolean  
[P14_Delete_Statement]^^56^^^^^51^57^super.visitInsn ( opcode ) ;^[CLASS] AddInitTransformer 1  [METHOD] visitInsn [RETURN_TYPE] void   int opcode [VARIABLES] MethodInfo  info  int  opcode  boolean  
[P2_Replace_Operator]^if  ( opcode <= Constants.RETURN )  {^52^^^^^51^57^if  ( opcode == Constants.RETURN )  {^[CLASS] 1  [METHOD] visitInsn [RETURN_TYPE] void   int opcode [VARIABLES] boolean  int  opcode  
[P15_Unwrap_Block]^load_this(); invoke(info);^52^53^54^55^^51^57^if  ( opcode == Constants.RETURN )  { load_this (  ) ; invoke ( info ) ; }^[CLASS] 1  [METHOD] visitInsn [RETURN_TYPE] void   int opcode [VARIABLES] boolean  int  opcode  
[P16_Remove_Block]^^52^53^54^55^^51^57^if  ( opcode == Constants.RETURN )  { load_this (  ) ; invoke ( info ) ; }^[CLASS] 1  [METHOD] visitInsn [RETURN_TYPE] void   int opcode [VARIABLES] boolean  int  opcode  
[P14_Delete_Statement]^^53^^^^^51^57^load_this (  ) ;^[CLASS] 1  [METHOD] visitInsn [RETURN_TYPE] void   int opcode [VARIABLES] boolean  int  opcode  
[P14_Delete_Statement]^^54^^^^^51^57^invoke ( info ) ;^[CLASS] 1  [METHOD] visitInsn [RETURN_TYPE] void   int opcode [VARIABLES] boolean  int  opcode  
[P7_Replace_Invocation]^super .visitInsn ( opcode )  ;^56^^^^^51^57^super.visitInsn ( opcode ) ;^[CLASS] 1  [METHOD] visitInsn [RETURN_TYPE] void   int opcode [VARIABLES] boolean  int  opcode  
[P14_Delete_Statement]^^56^^^^^51^57^super.visitInsn ( opcode ) ;^[CLASS] 1  [METHOD] visitInsn [RETURN_TYPE] void   int opcode [VARIABLES] boolean  int  opcode  
