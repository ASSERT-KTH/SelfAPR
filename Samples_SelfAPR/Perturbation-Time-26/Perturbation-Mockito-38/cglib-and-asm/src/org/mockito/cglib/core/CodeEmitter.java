[P7_Replace_Invocation]^private static final Signature BOOLEAN_VALUE = TypeUtils.parseConstructor ( "boolean booleanValue (  ) " ) ;^27^28^^^^27^28^private static final Signature BOOLEAN_VALUE = TypeUtils.parseSignature ( "boolean booleanValue (  ) " ) ;^[CLASS] CodeEmitter State   [VARIABLES] 
[P8_Replace_Mix]^private static  Signature BOOLEAN_VALUE = TypeUtils.parseSignature ( "boolean booleanValue (  ) " ) ;^27^28^^^^27^28^private static final Signature BOOLEAN_VALUE = TypeUtils.parseSignature ( "boolean booleanValue (  ) " ) ;^[CLASS] CodeEmitter State   [VARIABLES] 
[P7_Replace_Invocation]^private static final Signature CHAR_VALUE = TypeUtils.parseConstructor ( "char charValue (  ) " ) ;^29^30^^^^29^30^private static final Signature CHAR_VALUE = TypeUtils.parseSignature ( "char charValue (  ) " ) ;^[CLASS] CodeEmitter State   [VARIABLES] 
[P8_Replace_Mix]^private static final Signature CHAR_VALUE  = null ;^29^30^^^^29^30^private static final Signature CHAR_VALUE = TypeUtils.parseSignature ( "char charValue (  ) " ) ;^[CLASS] CodeEmitter State   [VARIABLES] 
[P7_Replace_Invocation]^private static final Signature LONG_VALUE = TypeUtils.parseConstructor ( "long longValue (  ) " ) ;^31^32^^^^31^32^private static final Signature LONG_VALUE = TypeUtils.parseSignature ( "long longValue (  ) " ) ;^[CLASS] CodeEmitter State   [VARIABLES] 
[P8_Replace_Mix]^private static  Signature LONG_VALUE = TypeUtils.parseSignature ( "long longValue (  ) " ) ;^31^32^^^^31^32^private static final Signature LONG_VALUE = TypeUtils.parseSignature ( "long longValue (  ) " ) ;^[CLASS] CodeEmitter State   [VARIABLES] 
[P7_Replace_Invocation]^private static final Signature DOUBLE_VALUE = TypeUtils.parseConstructor ( "double doubleValue (  ) " ) ;^33^34^^^^33^34^private static final Signature DOUBLE_VALUE = TypeUtils.parseSignature ( "double doubleValue (  ) " ) ;^[CLASS] CodeEmitter State   [VARIABLES] 
[P8_Replace_Mix]^private static  Signature DOUBLE_VALUE = TypeUtils.parseSignature ( "double doubleValue (  ) " ) ;^33^34^^^^33^34^private static final Signature DOUBLE_VALUE = TypeUtils.parseSignature ( "double doubleValue (  ) " ) ;^[CLASS] CodeEmitter State   [VARIABLES] 
[P7_Replace_Invocation]^private static final Signature FLOAT_VALUE = TypeUtils.parseConstructor ( "float floatValue (  ) " ) ;^35^36^^^^35^36^private static final Signature FLOAT_VALUE = TypeUtils.parseSignature ( "float floatValue (  ) " ) ;^[CLASS] CodeEmitter State   [VARIABLES] 
[P8_Replace_Mix]^private static  Signature FLOAT_VALUE = TypeUtils.parseSignature ( "float floatValue (  ) " ) ;^35^36^^^^35^36^private static final Signature FLOAT_VALUE = TypeUtils.parseSignature ( "float floatValue (  ) " ) ;^[CLASS] CodeEmitter State   [VARIABLES] 
[P7_Replace_Invocation]^private static final Signature INT_VALUE = TypeUtils.parseConstructor ( "int intValue (  ) " ) ;^37^38^^^^37^38^private static final Signature INT_VALUE = TypeUtils.parseSignature ( "int intValue (  ) " ) ;^[CLASS] CodeEmitter State   [VARIABLES] 
[P8_Replace_Mix]^private static final Signature INT_VALUE ;^37^38^^^^37^38^private static final Signature INT_VALUE = TypeUtils.parseSignature ( "int intValue (  ) " ) ;^[CLASS] CodeEmitter State   [VARIABLES] 
[P7_Replace_Invocation]^private static final Signature CSTRUCT_NULL = TypeUtils.parseSignature ( "" ) ;^39^40^^^^39^40^private static final Signature CSTRUCT_NULL = TypeUtils.parseConstructor ( "" ) ;^[CLASS] CodeEmitter State   [VARIABLES] 
[P8_Replace_Mix]^private static final Signature CSTRUCT_NULL  = null ;^39^40^^^^39^40^private static final Signature CSTRUCT_NULL = TypeUtils.parseConstructor ( "" ) ;^[CLASS] CodeEmitter State   [VARIABLES] 
[P3_Replace_Literal]^private static final Signature CSTRUCT_STRING = TypeUtils.parseConstructor ( "Stritring" ) ;^41^42^^^^41^42^private static final Signature CSTRUCT_STRING = TypeUtils.parseConstructor ( "String" ) ;^[CLASS] CodeEmitter State   [VARIABLES] 
[P7_Replace_Invocation]^private static final Signature CSTRUCT_STRING = TypeUtils.parseSignature ( "String" ) ;^41^42^^^^41^42^private static final Signature CSTRUCT_STRING = TypeUtils.parseConstructor ( "String" ) ;^[CLASS] CodeEmitter State   [VARIABLES] 
[P8_Replace_Mix]^private static  Signature CSTRUCT_STRING = TypeUtils.parseConstructor ( "String" ) ;^41^42^^^^41^42^private static final Signature CSTRUCT_STRING = TypeUtils.parseConstructor ( "String" ) ;^[CLASS] CodeEmitter State   [VARIABLES] 
[P1_Replace_Type]^public static final  long  ADD = Constants.IADD;^44^^^^^39^49^public static final int ADD = Constants.IADD;^[CLASS] CodeEmitter State   [VARIABLES] 
[P8_Replace_Mix]^public static final int ADD ;^44^^^^^39^49^public static final int ADD = Constants.IADD;^[CLASS] CodeEmitter State   [VARIABLES] 
[P1_Replace_Type]^public static final  short  MUL = Constants.IMUL;^45^^^^^40^50^public static final int MUL = Constants.IMUL;^[CLASS] CodeEmitter State   [VARIABLES] 
[P5_Replace_Variable]^public static final int MUL = 4;^45^^^^^40^50^public static final int MUL = Constants.IMUL;^[CLASS] CodeEmitter State   [VARIABLES] 
[P8_Replace_Mix]^public static final  long  MUL = Constants.IMUL;^45^^^^^40^50^public static final int MUL = Constants.IMUL;^[CLASS] CodeEmitter State   [VARIABLES] 
[P1_Replace_Type]^public static final  short  XOR = Constants.IXOR;^46^^^^^41^51^public static final int XOR = Constants.IXOR;^[CLASS] CodeEmitter State   [VARIABLES] 
[P8_Replace_Mix]^public static final  long  XOR = Constants.IXOR;^46^^^^^41^51^public static final int XOR = Constants.IXOR;^[CLASS] CodeEmitter State   [VARIABLES] 
[P1_Replace_Type]^public static final  short  USHR = Constants.IUSHR;^47^^^^^42^52^public static final int USHR = Constants.IUSHR;^[CLASS] CodeEmitter State   [VARIABLES] 
[P8_Replace_Mix]^public static final int USHR ;^47^^^^^42^52^public static final int USHR = Constants.IUSHR;^[CLASS] CodeEmitter State   [VARIABLES] 
[P1_Replace_Type]^public static final  long  SUB = Constants.ISUB;^48^^^^^43^53^public static final int SUB = Constants.ISUB;^[CLASS] CodeEmitter State   [VARIABLES] 
[P1_Replace_Type]^public static final  long  DIV = Constants.IDIV;^49^^^^^44^54^public static final int DIV = Constants.IDIV;^[CLASS] CodeEmitter State   [VARIABLES] 
[P8_Replace_Mix]^public static final int DIV  = null ;^49^^^^^44^54^public static final int DIV = Constants.IDIV;^[CLASS] CodeEmitter State   [VARIABLES] 
[P1_Replace_Type]^public static final  long  NEG = Constants.INEG;^50^^^^^45^55^public static final int NEG = Constants.INEG;^[CLASS] CodeEmitter State   [VARIABLES] 
[P8_Replace_Mix]^public static final int NEG  = null ;^50^^^^^45^55^public static final int NEG = Constants.INEG;^[CLASS] CodeEmitter State   [VARIABLES] 
[P1_Replace_Type]^public static final  short  REM = Constants.IREM;^51^^^^^46^56^public static final int REM = Constants.IREM;^[CLASS] CodeEmitter State   [VARIABLES] 
[P5_Replace_Variable]^public static final int REM = 0;^51^^^^^46^56^public static final int REM = Constants.IREM;^[CLASS] CodeEmitter State   [VARIABLES] 
[P8_Replace_Mix]^public static final int REM ;^51^^^^^46^56^public static final int REM = Constants.IREM;^[CLASS] CodeEmitter State   [VARIABLES] 
[P1_Replace_Type]^public static final  long  AND = Constants.IAND;^52^^^^^47^57^public static final int AND = Constants.IAND;^[CLASS] CodeEmitter State   [VARIABLES] 
[P8_Replace_Mix]^public static final  short  AND = Constants.IAND;^52^^^^^47^57^public static final int AND = Constants.IAND;^[CLASS] CodeEmitter State   [VARIABLES] 
[P1_Replace_Type]^public static final  short  OR = Constants.IOR;^53^^^^^48^58^public static final int OR = Constants.IOR;^[CLASS] CodeEmitter State   [VARIABLES] 
[P1_Replace_Type]^public static final  short  GT = Constants.IFGT;^55^^^^^50^60^public static final int GT = Constants.IFGT;^[CLASS] CodeEmitter State   [VARIABLES] 
[P8_Replace_Mix]^public static final int GT ;^55^^^^^50^60^public static final int GT = Constants.IFGT;^[CLASS] CodeEmitter State   [VARIABLES] 
[P1_Replace_Type]^public static final  short  LT = Constants.IFLT;^56^^^^^51^61^public static final int LT = Constants.IFLT;^[CLASS] CodeEmitter State   [VARIABLES] 
[P1_Replace_Type]^public static final  long  GE = Constants.IFGE;^57^^^^^52^62^public static final int GE = Constants.IFGE;^[CLASS] CodeEmitter State   [VARIABLES] 
[P5_Replace_Variable]^public static final int GE = this;^57^^^^^52^62^public static final int GE = Constants.IFGE;^[CLASS] CodeEmitter State   [VARIABLES] 
[P8_Replace_Mix]^public static final int GE ;^57^^^^^52^62^public static final int GE = Constants.IFGE;^[CLASS] CodeEmitter State   [VARIABLES] 
[P1_Replace_Type]^public static final  long  LE = Constants.IFLE;^58^^^^^53^63^public static final int LE = Constants.IFLE;^[CLASS] CodeEmitter State   [VARIABLES] 
[P8_Replace_Mix]^public static final  short  LE = Constants.IFLE;^58^^^^^53^63^public static final int LE = Constants.IFLE;^[CLASS] CodeEmitter State   [VARIABLES] 
[P1_Replace_Type]^public static final  short  NE = Constants.IFNE;^59^^^^^54^64^public static final int NE = Constants.IFNE;^[CLASS] CodeEmitter State   [VARIABLES] 
[P8_Replace_Mix]^public static final  long  NE = Constants.IFNE;^59^^^^^54^64^public static final int NE = Constants.IFNE;^[CLASS] CodeEmitter State   [VARIABLES] 
[P1_Replace_Type]^public static final  short  EQ = Constants.IFEQ;^60^^^^^55^65^public static final int EQ = Constants.IFEQ;^[CLASS] CodeEmitter State   [VARIABLES] 
[P8_Replace_Mix]^public static   short  EQ = Constants.IFEQ;^60^^^^^55^65^public static final int EQ = Constants.IFEQ;^[CLASS] CodeEmitter State   [VARIABLES] 
[P1_Replace_Type]^long  access;^69^^^^^64^74^int access;^[CLASS] CodeEmitter State   [VARIABLES] 
[P8_Replace_Mix]^short  access;^69^^^^^64^74^int access;^[CLASS] CodeEmitter State   [VARIABLES] 
[P1_Replace_Type]^short  localOffset;^72^^^^^67^77^int localOffset;^[CLASS] CodeEmitter State   [VARIABLES] 
[P8_Replace_Mix]^this.classInfo =  null;^76^^^^^75^82^this.classInfo = classInfo;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassInfo classInfo int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^this.access = OR;^77^^^^^75^82^this.access = access;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassInfo classInfo int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P8_Replace_Mix]^this.access =  null;^77^^^^^75^82^this.access = access;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassInfo classInfo int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^this.ce = ce;this.access = access;^77^^^^^75^82^this.access = access;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassInfo classInfo int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^this.ce = wrap.ce;this.access = access;^77^^^^^75^82^this.access = access;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassInfo classInfo int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^this.sig = DOUBLE_VALUE;^78^^^^^75^82^this.sig = sig;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassInfo classInfo int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P8_Replace_Mix]^this.sig =  INT_VALUE;^78^^^^^75^82^this.sig = sig;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassInfo classInfo int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^this.ce = ce;this.sig = sig;^78^^^^^75^82^this.sig = sig;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassInfo classInfo int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^this.exceptionTypes = argumentTypes;^79^^^^^75^82^this.exceptionTypes = exceptionTypes;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassInfo classInfo int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P3_Replace_Literal]^localOffset = TypeUtils.isStatic ( access )  ? -2 : 1;^80^^^^^75^82^localOffset = TypeUtils.isStatic ( access )  ? 0 : 1;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassInfo classInfo int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P3_Replace_Literal]^localOffset = TypeUtils.isStatic ( access )  ? 0 : SUB;^80^^^^^75^82^localOffset = TypeUtils.isStatic ( access )  ? 0 : 1;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassInfo classInfo int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^localOffset = TypeUtils.isStatic ( NEG )  ? 0 : 1;^80^^^^^75^82^localOffset = TypeUtils.isStatic ( access )  ? 0 : 1;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassInfo classInfo int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P6_Replace_Expression]^localOffset  =  1;^80^^^^^75^82^localOffset = TypeUtils.isStatic ( access )  ? 0 : 1;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassInfo classInfo int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P6_Replace_Expression]^localOffset  =  0 ;^80^^^^^75^82^localOffset = TypeUtils.isStatic ( access )  ? 0 : 1;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassInfo classInfo int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P7_Replace_Invocation]^localOffset = TypeUtils.isAbstract ( access )  ? 0 : 1;^80^^^^^75^82^localOffset = TypeUtils.isStatic ( access )  ? 0 : 1;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassInfo classInfo int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P8_Replace_Mix]^localOffset = TypeUtils.isStatic ( access )  ? 2 : 1;^80^^^^^75^82^localOffset = TypeUtils.isStatic ( access )  ? 0 : 1;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassInfo classInfo int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P12_Insert_Condition]^if  ( TypeUtils.isStatic ( state.access )  )  { localOffset = TypeUtils.isStatic ( access )  ? 0 : 1; }^80^^^^^75^82^localOffset = TypeUtils.isStatic ( access )  ? 0 : 1;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassInfo classInfo int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^localOffset = TypeUtils.isStatic ( NE )  ? 0 : 1;^80^^^^^75^82^localOffset = TypeUtils.isStatic ( access )  ? 0 : 1;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassInfo classInfo int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P7_Replace_Invocation]^localOffset = TypeUtils .isAbstract ( OR )   ? 0 : 1;^80^^^^^75^82^localOffset = TypeUtils.isStatic ( access )  ? 0 : 1;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassInfo classInfo int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P14_Delete_Statement]^^80^81^^^^75^82^localOffset = TypeUtils.isStatic ( access )  ? 0 : 1; argumentTypes = sig.getArgumentTypes (  ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassInfo classInfo int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^argumentTypes = FLOAT_VALUE.getArgumentTypes (  ) ;^81^^^^^75^82^argumentTypes = sig.getArgumentTypes (  ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassInfo classInfo int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P8_Replace_Mix]^argumentTypes =  null.getArgumentTypes (  ) ;^81^^^^^75^82^argumentTypes = sig.getArgumentTypes (  ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassInfo classInfo int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^argumentTypes = LONG_VALUE.getArgumentTypes (  ) ;^81^^^^^75^82^argumentTypes = sig.getArgumentTypes (  ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassInfo classInfo int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P7_Replace_Invocation]^argumentTypes = sig .getReturnType (  )  ;^81^^^^^75^82^argumentTypes = sig.getArgumentTypes (  ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassInfo classInfo int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P14_Delete_Statement]^^81^^^^^75^82^argumentTypes = sig.getArgumentTypes (  ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassInfo classInfo int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^return state.sig.getReturnType (  ) ;argumentTypes = sig.getArgumentTypes (  ) ;^81^^^^^75^82^argumentTypes = sig.getArgumentTypes (  ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassInfo classInfo int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^super ( NEG, sig.getDescriptor (  ) , mv ) ;^107^^^^^106^110^super ( access, sig.getDescriptor (  ) , mv ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P5_Replace_Variable]^super ( access, FLOAT_VALUE.getDescriptor (  ) , mv ) ;^107^^^^^106^110^super ( access, sig.getDescriptor (  ) , mv ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P5_Replace_Variable]^super (  sig.getDescriptor (  ) , mv ) ;^107^^^^^106^110^super ( access, sig.getDescriptor (  ) , mv ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P5_Replace_Variable]^super ( access.getDescriptor (  ) , mv ) ;^107^^^^^106^110^super ( access, sig.getDescriptor (  ) , mv ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P5_Replace_Variable]^super ( access, sig.getDescriptor (  )  ) ;^107^^^^^106^110^super ( access, sig.getDescriptor (  ) , mv ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P5_Replace_Variable]^super ( mv, sig.getDescriptor (  ) , access ) ;^107^^^^^106^110^super ( access, sig.getDescriptor (  ) , mv ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P5_Replace_Variable]^super ( sig, access.getDescriptor (  ) , mv ) ;^107^^^^^106^110^super ( access, sig.getDescriptor (  ) , mv ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P7_Replace_Invocation]^super ( access, sig .getReturnType (  )  , mv ) ;^107^^^^^106^110^super ( access, sig.getDescriptor (  ) , mv ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P8_Replace_Mix]^super ( access, LONG_VALUE.getDescriptor (  ) , mv ) ;^107^^^^^106^110^super ( access, sig.getDescriptor (  ) , mv ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P14_Delete_Statement]^^107^108^^^^106^110^super ( access, sig.getDescriptor (  ) , mv ) ; this.ce = ce;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^ftype.getDescriptor (  )  ) ;super ( access, sig.getDescriptor (  ) , mv ) ;^107^^^^^106^110^super ( access, sig.getDescriptor (  ) , mv ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^desc = type.getDescriptor (  ) ;super ( access, sig.getDescriptor (  ) , mv ) ;^107^^^^^106^110^super ( access, sig.getDescriptor (  ) , mv ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^sig.getName (  ) , sig.getDescriptor (  )  ) ;super ( access, sig.getDescriptor (  ) , mv ) ;^107^^^^^106^110^super ( access, sig.getDescriptor (  ) , mv ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^sig.getDescriptor (  )  ) ;super ( access, sig.getDescriptor (  ) , mv ) ;^107^^^^^106^110^super ( access, sig.getDescriptor (  ) , mv ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P8_Replace_Mix]^this.ce =  null;^108^^^^^106^110^this.ce = ce;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^this.sig = sig;this.ce = ce;^108^^^^^106^110^this.ce = ce;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^this.access = access;this.ce = ce;^108^^^^^106^110^this.ce = ce;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^this.ce = wrap.ce;this.ce = ce;^108^^^^^106^110^this.ce = ce;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P4_Replace_Constructor]^state = new State ( ce.getClassInfo (  ) ,  sig, exceptionTypes ) ;^109^^^^^106^110^state = new State ( ce.getClassInfo (  ) , access, sig, exceptionTypes ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P4_Replace_Constructor]^state = new State ( ce.getClassInfo (  ) , access,  exceptionTypes ) ;^109^^^^^106^110^state = new State ( ce.getClassInfo (  ) , access, sig, exceptionTypes ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P4_Replace_Constructor]^state = new State ( ce.getClassInfo (  ) , access, sig ) ;^109^^^^^106^110^state = new State ( ce.getClassInfo (  ) , access, sig, exceptionTypes ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P5_Replace_Variable]^state = new State ( ce.getClassInfo (  ) , access, DOUBLE_VALUE, exceptionTypes ) ;^109^^^^^106^110^state = new State ( ce.getClassInfo (  ) , access, sig, exceptionTypes ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P5_Replace_Variable]^state = new State ( ce.getClassInfo (  ) , access, sig, argumentTypes ) ;^109^^^^^106^110^state = new State ( ce.getClassInfo (  ) , access, sig, exceptionTypes ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P5_Replace_Variable]^state = new State ( sig.getClassInfo (  ) , access, ce, exceptionTypes ) ;^109^^^^^106^110^state = new State ( ce.getClassInfo (  ) , access, sig, exceptionTypes ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P5_Replace_Variable]^state = new State ( ce.getClassInfo (  ) , sig, access, exceptionTypes ) ;^109^^^^^106^110^state = new State ( ce.getClassInfo (  ) , access, sig, exceptionTypes ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P5_Replace_Variable]^state = new State ( exceptionTypes.getClassInfo (  ) , access, sig, ce ) ;^109^^^^^106^110^state = new State ( ce.getClassInfo (  ) , access, sig, exceptionTypes ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P7_Replace_Invocation]^state = new State ( ce.getFieldInfo (  ) , access, sig, exceptionTypes ) ;^109^^^^^106^110^state = new State ( ce.getClassInfo (  ) , access, sig, exceptionTypes ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P7_Replace_Invocation]^state = new State ( ce .getClassType (  )  , access, sig, exceptionTypes ) ;^109^^^^^106^110^state = new State ( ce.getClassInfo (  ) , access, sig, exceptionTypes ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P8_Replace_Mix]^state =  new State ( null.getClassInfo (  ) , acnullss, sig, exnullptionTypes ) ;^109^^^^^106^110^state = new State ( ce.getClassInfo (  ) , access, sig, exceptionTypes ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P5_Replace_Variable]^state = new State ( ce.getClassInfo (  ) , exceptionTypes, sig, access ) ;^109^^^^^106^110^state = new State ( ce.getClassInfo (  ) , access, sig, exceptionTypes ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P5_Replace_Variable]^state = new State ( ce.getClassInfo (  ) , access, exceptionTypes, sig ) ;^109^^^^^106^110^state = new State ( ce.getClassInfo (  ) , access, sig, exceptionTypes ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P8_Replace_Mix]^state = new State ( ce.getFieldInfo (  ) , NE, sig, exceptionTypes ) ;^109^^^^^106^110^state = new State ( ce.getClassInfo (  ) , access, sig, exceptionTypes ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P14_Delete_Statement]^^109^^^^^106^110^state = new State ( ce.getClassInfo (  ) , access, sig, exceptionTypes ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[P14_Delete_Statement]^^113^114^^^^112^116^super ( wrap ) ; this.ce = wrap.ce;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] CodeEmitter)   CodeEmitter wrap [VARIABLES] CodeEmitter  wrap  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^dup (  ) ;super ( wrap ) ;^113^^^^^112^116^super ( wrap ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] CodeEmitter)   CodeEmitter wrap [VARIABLES] CodeEmitter  wrap  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^this.ce = ce;^114^^^^^112^116^this.ce = wrap.ce;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] CodeEmitter)   CodeEmitter wrap [VARIABLES] CodeEmitter  wrap  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^this.ce = wrap.ce.ce;^114^^^^^112^116^this.ce = wrap.ce;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] CodeEmitter)   CodeEmitter wrap [VARIABLES] CodeEmitter  wrap  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^this.ce = wrap;^114^^^^^112^116^this.ce = wrap.ce;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] CodeEmitter)   CodeEmitter wrap [VARIABLES] CodeEmitter  wrap  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P8_Replace_Mix]^this.ce =  null.ce;^114^^^^^112^116^this.ce = wrap.ce;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] CodeEmitter)   CodeEmitter wrap [VARIABLES] CodeEmitter  wrap  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^this.access = access;this.ce = wrap.ce;^114^^^^^112^116^this.ce = wrap.ce;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] CodeEmitter)   CodeEmitter wrap [VARIABLES] CodeEmitter  wrap  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^this.ce = ce;this.ce = wrap.ce;^114^^^^^112^116^this.ce = wrap.ce;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] CodeEmitter)   CodeEmitter wrap [VARIABLES] CodeEmitter  wrap  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^this.state = wrap.state;this.ce = wrap.ce;^114^^^^^112^116^this.ce = wrap.ce;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] CodeEmitter)   CodeEmitter wrap [VARIABLES] CodeEmitter  wrap  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^this.state = state;^115^^^^^112^116^this.state = wrap.state;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] CodeEmitter)   CodeEmitter wrap [VARIABLES] CodeEmitter  wrap  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^this.state = wrap.state.state;^115^^^^^112^116^this.state = wrap.state;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] CodeEmitter)   CodeEmitter wrap [VARIABLES] CodeEmitter  wrap  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^this.state = wrap;^115^^^^^112^116^this.state = wrap.state;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] CodeEmitter)   CodeEmitter wrap [VARIABLES] CodeEmitter  wrap  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P8_Replace_Mix]^this.state =  null.state;^115^^^^^112^116^this.state = wrap.state;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] CodeEmitter)   CodeEmitter wrap [VARIABLES] CodeEmitter  wrap  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^this.ce = wrap.ce;this.state = wrap.state;^115^^^^^112^116^this.state = wrap.state;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] CodeEmitter)   CodeEmitter wrap [VARIABLES] CodeEmitter  wrap  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^return SUB;^89^^^^^88^90^return access;^[CLASS] CodeEmitter State  [METHOD] getModifiers [RETURN_TYPE] int   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P8_Replace_Mix]^return NE;^89^^^^^88^90^return access;^[CLASS] CodeEmitter State  [METHOD] getModifiers [RETURN_TYPE] int   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^return INT_VALUE;^93^^^^^92^94^return sig;^[CLASS] CodeEmitter State  [METHOD] getSignature [RETURN_TYPE] Signature   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^return argumentTypes;^97^^^^^96^98^return exceptionTypes;^[CLASS] CodeEmitter State  [METHOD] getExceptionTypes [RETURN_TYPE] Type[]   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P8_Replace_Mix]^return false;^102^^^^^100^103^return null;^[CLASS] CodeEmitter State  [METHOD] getAttribute [RETURN_TYPE] Attribute   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P3_Replace_Literal]^return true;^119^^^^^118^120^return false;^[CLASS] CodeEmitter State  [METHOD] isStaticHook [RETURN_TYPE] boolean   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^return sig;^123^^^^^122^124^return state.sig;^[CLASS] CodeEmitter State  [METHOD] getSignature [RETURN_TYPE] Signature   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^return state;^123^^^^^122^124^return state.sig;^[CLASS] CodeEmitter State  [METHOD] getSignature [RETURN_TYPE] Signature   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^return state.sig.sig;^123^^^^^122^124^return state.sig;^[CLASS] CodeEmitter State  [METHOD] getSignature [RETURN_TYPE] Signature   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P8_Replace_Mix]^return FLOAT_VALUE;^123^^^^^122^124^return state.sig;^[CLASS] CodeEmitter State  [METHOD] getSignature [RETURN_TYPE] Signature   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^return FLOAT_VALUE.getReturnType (  ) ;^127^^^^^126^128^return state.sig.getReturnType (  ) ;^[CLASS] CodeEmitter State  [METHOD] getReturnType [RETURN_TYPE] Type   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^return state.getReturnType (  ) ;^127^^^^^126^128^return state.sig.getReturnType (  ) ;^[CLASS] CodeEmitter State  [METHOD] getReturnType [RETURN_TYPE] Type   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^return state.sig.sig.getReturnType (  ) ;^127^^^^^126^128^return state.sig.getReturnType (  ) ;^[CLASS] CodeEmitter State  [METHOD] getReturnType [RETURN_TYPE] Type   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P7_Replace_Invocation]^return state.sig.getArgumentTypes (  ) ;^127^^^^^126^128^return state.sig.getReturnType (  ) ;^[CLASS] CodeEmitter State  [METHOD] getReturnType [RETURN_TYPE] Type   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P8_Replace_Mix]^return sig.getArgumentTypes (  ) ;^127^^^^^126^128^return state.sig.getReturnType (  ) ;^[CLASS] CodeEmitter State  [METHOD] getReturnType [RETURN_TYPE] Type   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^return sig.getReturnType (  ) ;^127^^^^^126^128^return state.sig.getReturnType (  ) ;^[CLASS] CodeEmitter State  [METHOD] getReturnType [RETURN_TYPE] Type   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P14_Delete_Statement]^^127^^^^^126^128^return state.sig.getReturnType (  ) ;^[CLASS] CodeEmitter State  [METHOD] getReturnType [RETURN_TYPE] Type   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P3_Replace_Literal]^visitMaxs ( ADD, ADD ) ;^139^^^^^138^140^visitMaxs ( 0, 0 ) ;^[CLASS] CodeEmitter State  [METHOD] end_method [RETURN_TYPE] void   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P3_Replace_Literal]^visitMaxs ( OR, OR ) ;^139^^^^^138^140^visitMaxs ( 0, 0 ) ;^[CLASS] CodeEmitter State  [METHOD] end_method [RETURN_TYPE] void   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P7_Replace_Invocation]^load_args ( 0, 0 ) ;^139^^^^^138^140^visitMaxs ( 0, 0 ) ;^[CLASS] CodeEmitter State  [METHOD] end_method [RETURN_TYPE] void   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P14_Delete_Statement]^^139^^^^^138^140^visitMaxs ( 0, 0 ) ;^[CLASS] CodeEmitter State  [METHOD] end_method [RETURN_TYPE] void   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitLabel ( label ) ;visitMaxs ( 0, 0 ) ;^139^^^^^138^140^visitMaxs ( 0, 0 ) ;^[CLASS] CodeEmitter State  [METHOD] end_method [RETURN_TYPE] void   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitMaxs ( 0, 0 ) ;visitMaxs ( 0, 0 ) ;^139^^^^^138^140^visitMaxs ( 0, 0 ) ;^[CLASS] CodeEmitter State  [METHOD] end_method [RETURN_TYPE] void   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P4_Replace_Constructor]^return return  new Label (  )  ;^143^^^^^142^144^return new Block ( this ) ;^[CLASS] CodeEmitter State  [METHOD] begin_block [RETURN_TYPE] Block   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P8_Replace_Mix]^return  new Label (  )  ;^143^^^^^142^144^return new Block ( this ) ;^[CLASS] CodeEmitter State  [METHOD] begin_block [RETURN_TYPE] Block   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( block.getEnd (  )  != null )  {^147^^^^^146^154^if  ( block.getEnd (  )  == null )  {^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P7_Replace_Invocation]^if  ( block.Block (  )  == null )  {^147^^^^^146^154^if  ( block.getEnd (  )  == null )  {^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P7_Replace_Invocation]^if  ( block .getStart (  )   == null )  {^147^^^^^146^154^if  ( block.getEnd (  )  == null )  {^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P8_Replace_Mix]^if  ( block.getEnd (  )  == this )  {^147^^^^^146^154^if  ( block.getEnd (  )  == null )  {^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P15_Unwrap_Block]^throw new java.lang.IllegalStateException("end of block is unset");^147^148^149^^^146^154^if  ( block.getEnd (  )  == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P16_Remove_Block]^^147^148^149^^^146^154^if  ( block.getEnd (  )  == null )  { throw new IllegalStateException  (" ")  ; }^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( isStatic ( state.access )  )  {     throw new IllegalStateException ( "no 'this' pointer within static method" ) ; }^147^^^^^146^154^[Delete]^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P13_Insert_Block]^if  (  ( block.getEnd (  )  )  == null )  {     throw new IllegalStateException ( "end of block is unset" ) ; }^148^^^^^146^154^[Delete]^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P8_Replace_Mix]^throw new IllegalArgumentException  (" ")  ; ;^148^^^^^146^154^throw new IllegalStateException  (" ")  ;^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^throw new IllegalArgumentException  (" ")  ;throw new IllegalStateException  (" ")  ;^148^^^^^146^154^throw new IllegalStateException  (" ")  ;^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^throw new CodeGenerationException  (" ")  ;throw new IllegalStateException  (" ")  ;^148^^^^^146^154^throw new IllegalStateException  (" ")  ;^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^mv.visitTryCatchBlock ( block.getStart (  ) .getEnd (  ) , mark (  ) , exception.getInternalName (  )  ) ;^150^151^152^153^^146^154^mv.visitTryCatchBlock ( block.getStart (  ) , block.getEnd (  ) , mark (  ) , exception.getInternalName (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^mv.visitTryCatchBlock ( block.getStart (  ) , block.getEnd (  ) , mark (  ) .getInternalName (  )  ) ;^150^151^152^153^^146^154^mv.visitTryCatchBlock ( block.getStart (  ) , block.getEnd (  ) , mark (  ) , exception.getInternalName (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^mv.visitTryCatchBlock ( exception.getStart (  ) , block.getEnd (  ) , mark (  ) , block.getInternalName (  )  ) ;^150^151^152^153^^146^154^mv.visitTryCatchBlock ( block.getStart (  ) , block.getEnd (  ) , mark (  ) , exception.getInternalName (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitLookupSwitchInsn ( block.getStart (  ) , block.getEnd (  ) , mark (  ) , exception.getInternalName (  )  ) ;^150^151^152^153^^146^154^mv.visitTryCatchBlock ( block.getStart (  ) , block.getEnd (  ) , mark (  ) , exception.getInternalName (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitTryCatchBlock ( block.Block (  ) , block.getEnd (  ) , mark (  ) , exception.getInternalName (  )  ) ;^150^151^152^153^^146^154^mv.visitTryCatchBlock ( block.getStart (  ) , block.getEnd (  ) , mark (  ) , exception.getInternalName (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitTryCatchBlock ( block .getEnd (  )  , block.getEnd (  ) , mark (  ) , exception.getInternalName (  )  ) ;^150^151^152^153^^146^154^mv.visitTryCatchBlock ( block.getStart (  ) , block.getEnd (  ) , mark (  ) , exception.getInternalName (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitTryCatchBlock ( block.getStart (  ) , block.Block (  ) , mark (  ) , exception.getInternalName (  )  ) ;^150^151^152^153^^146^154^mv.visitTryCatchBlock ( block.getStart (  ) , block.getEnd (  ) , mark (  ) , exception.getInternalName (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitTryCatchBlock ( block.getStart (  ) , block.getEnd (  ) , swap (  ) , exception.getInternalName (  )  ) ;^150^151^152^153^^146^154^mv.visitTryCatchBlock ( block.getStart (  ) , block.getEnd (  ) , mark (  ) , exception.getInternalName (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitTryCatchBlock ( block.getStart (  ) , block.getEnd (  ) , mark (  ) , exception.getOpcode (  )  ) ;^150^151^152^153^^146^154^mv.visitTryCatchBlock ( block.getStart (  ) , block.getEnd (  ) , mark (  ) , exception.getInternalName (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitTryCatchBlock ( block.getStart (  ) , block.getEnd (  ) , mark (  ) , exception .getSort (  )   ) ;^150^151^152^153^^146^154^mv.visitTryCatchBlock ( block.getStart (  ) , block.getEnd (  ) , mark (  ) , exception.getInternalName (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P7_Replace_Invocation]^block.Block (  ) , mark (  ) , exception.getInternalName (  )  ) ;^151^152^153^^^146^154^block.getEnd (  ) , mark (  ) , exception.getInternalName (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P7_Replace_Invocation]^block .getStart (  )  , mark (  ) , exception.getInternalName (  )  ) ;^151^152^153^^^146^154^block.getEnd (  ) , mark (  ) , exception.getInternalName (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P14_Delete_Statement]^^151^152^153^^^146^154^block.getEnd (  ) , mark (  ) , exception.getInternalName (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P7_Replace_Invocation]^swap (  ) , exception.getInternalName (  )  ) ;^152^153^^^^146^154^mark (  ) , exception.getInternalName (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P14_Delete_Statement]^^152^153^^^^146^154^mark (  ) , exception.getInternalName (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^exception.getInternalName (  )  ) ;mark (  ) , exception.getInternalName (  )  ) ;^152^153^^^^146^154^mark (  ) , exception.getInternalName (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^desc = type.getInternalName (  ) ;mark (  ) , exception.getInternalName (  )  ) ;^152^153^^^^146^154^mark (  ) , exception.getInternalName (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P7_Replace_Invocation]^exception.getOpcode (  )  ) ;^153^^^^^146^154^exception.getInternalName (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P7_Replace_Invocation]^exception .getSort (  )   ) ;^153^^^^^146^154^exception.getInternalName (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P14_Delete_Statement]^^153^^^^^146^154^exception.getInternalName (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^public void goTo ( Label label )  { mv.visitJumpInsn ( Constants.GOTO ) ; }^156^^^^^151^161^public void goTo ( Label label )  { mv.visitJumpInsn ( Constants.GOTO, label ) ; }^[CLASS] CodeEmitter State  [METHOD] goTo [RETURN_TYPE] void   Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^public void goTo ( Label mv )  { label.visitJumpInsn ( Constants.GOTO, label ) ; }^156^^^^^151^161^public void goTo ( Label label )  { mv.visitJumpInsn ( Constants.GOTO, label ) ; }^[CLASS] CodeEmitter State  [METHOD] goTo [RETURN_TYPE] void   Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P7_Replace_Invocation]^public void goTo ( Label label )  { mv.visitLabel ( Constants.GOTO, label ) ; }^156^^^^^151^161^public void goTo ( Label label )  { mv.visitJumpInsn ( Constants.GOTO, label ) ; }^[CLASS] CodeEmitter State  [METHOD] goTo [RETURN_TYPE] void   Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P7_Replace_Invocation]^public void goTo ( Label label )  { mv .visitJumpInsn ( ADD , label )  ; }^156^^^^^151^161^public void goTo ( Label label )  { mv.visitJumpInsn ( Constants.GOTO, label ) ; }^[CLASS] CodeEmitter State  [METHOD] goTo [RETURN_TYPE] void   Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^public void ifnull ( Label label )  { mv.visitJumpInsn ( Constants.IFNULL ) ; }^157^^^^^152^162^public void ifnull ( Label label )  { mv.visitJumpInsn ( Constants.IFNULL, label ) ; }^[CLASS] CodeEmitter State  [METHOD] ifnull [RETURN_TYPE] void   Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^public void ifnull ( Label mv )  { label.visitJumpInsn ( Constants.IFNULL, label ) ; }^157^^^^^152^162^public void ifnull ( Label label )  { mv.visitJumpInsn ( Constants.IFNULL, label ) ; }^[CLASS] CodeEmitter State  [METHOD] ifnull [RETURN_TYPE] void   Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P7_Replace_Invocation]^public void ifnull ( Label label )  { mv.visitLabel ( Constants.IFNULL, label ) ; }^157^^^^^152^162^public void ifnull ( Label label )  { mv.visitJumpInsn ( Constants.IFNULL, label ) ; }^[CLASS] CodeEmitter State  [METHOD] ifnull [RETURN_TYPE] void   Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P14_Delete_Statement]^^157^158^^^^152^162^public void ifnull ( Label label )  { mv.visitJumpInsn ( Constants.IFNULL, label ) ; } public void ifnonnull ( Label label )  { mv.visitJumpInsn ( Constants.IFNONNULL, label ) ; }^[CLASS] CodeEmitter State  [METHOD] ifnull [RETURN_TYPE] void   Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^public void ifnonnull ( Label label )  { mv.visitJumpInsn ( Constants.IFNONNULL ) ; }^158^^^^^153^163^public void ifnonnull ( Label label )  { mv.visitJumpInsn ( Constants.IFNONNULL, label ) ; }^[CLASS] CodeEmitter State  [METHOD] ifnonnull [RETURN_TYPE] void   Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^public void ifnonnull ( Label mv )  { label.visitJumpInsn ( Constants.IFNONNULL, label ) ; }^158^^^^^153^163^public void ifnonnull ( Label label )  { mv.visitJumpInsn ( Constants.IFNONNULL, label ) ; }^[CLASS] CodeEmitter State  [METHOD] ifnonnull [RETURN_TYPE] void   Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P7_Replace_Invocation]^public void ifnonnull ( Label label )  { mv.visitLabel ( Constants.IFNONNULL, label ) ; }^158^^^^^153^163^public void ifnonnull ( Label label )  { mv.visitJumpInsn ( Constants.IFNONNULL, label ) ; }^[CLASS] CodeEmitter State  [METHOD] ifnonnull [RETURN_TYPE] void   Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P7_Replace_Invocation]^public void ifnonnull ( Label label )  { mv .visitJumpInsn ( EQ , label )  ; }^158^^^^^153^163^public void ifnonnull ( Label label )  { mv.visitJumpInsn ( Constants.IFNONNULL, label ) ; }^[CLASS] CodeEmitter State  [METHOD] ifnonnull [RETURN_TYPE] void   Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P14_Delete_Statement]^^158^159^160^161^162^153^163^public void ifnonnull ( Label label )  { mv.visitJumpInsn ( Constants.IFNONNULL, label ) ; }  public void if_jump ( int mode, Label label )  { mv.visitJumpInsn ( mode, label ) ; }^[CLASS] CodeEmitter State  [METHOD] ifnonnull [RETURN_TYPE] void   Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[P5_Replace_Variable]^mv.visitJumpInsn ( OR, label ) ;^161^^^^^160^162^mv.visitJumpInsn ( mode, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_jump [RETURN_TYPE] void   int mode Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  mode  ClassInfo  classInfo  
[P5_Replace_Variable]^mv.visitJumpInsn (  label ) ;^161^^^^^160^162^mv.visitJumpInsn ( mode, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_jump [RETURN_TYPE] void   int mode Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  mode  ClassInfo  classInfo  
[P5_Replace_Variable]^mv.visitJumpInsn ( mode ) ;^161^^^^^160^162^mv.visitJumpInsn ( mode, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_jump [RETURN_TYPE] void   int mode Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  mode  ClassInfo  classInfo  
[P5_Replace_Variable]^mv.visitJumpInsn ( label, mode ) ;^161^^^^^160^162^mv.visitJumpInsn ( mode, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_jump [RETURN_TYPE] void   int mode Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitTypeInsn ( mode, label ) ;^161^^^^^160^162^mv.visitJumpInsn ( mode, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_jump [RETURN_TYPE] void   int mode Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  mode  ClassInfo  classInfo  
[P8_Replace_Mix]^mv.visitJumpInsn ( NE, label ) ;^161^^^^^160^162^mv.visitJumpInsn ( mode, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_jump [RETURN_TYPE] void   int mode Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  mode  ClassInfo  classInfo  
[P14_Delete_Statement]^^161^^^^^160^162^mv.visitJumpInsn ( mode, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_jump [RETURN_TYPE] void   int mode Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  mode  ClassInfo  classInfo  
[P5_Replace_Variable]^if_cmp ( Type.INT_TYPE, NEG, label ) ;^165^^^^^164^166^if_cmp ( Type.INT_TYPE, mode, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_icmp [RETURN_TYPE] void   int mode Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  mode  ClassInfo  classInfo  
[P5_Replace_Variable]^if_cmp ( Type.INT_TYPE,  label ) ;^165^^^^^164^166^if_cmp ( Type.INT_TYPE, mode, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_icmp [RETURN_TYPE] void   int mode Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  mode  ClassInfo  classInfo  
[P5_Replace_Variable]^if_cmp ( Type.INT_TYPE, mode ) ;^165^^^^^164^166^if_cmp ( Type.INT_TYPE, mode, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_icmp [RETURN_TYPE] void   int mode Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  mode  ClassInfo  classInfo  
[P5_Replace_Variable]^if_cmp ( Type.INT_TYPE, label, mode ) ;^165^^^^^164^166^if_cmp ( Type.INT_TYPE, mode, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_icmp [RETURN_TYPE] void   int mode Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^swap ( Type.INT_TYPE, mode, label ) ;^165^^^^^164^166^if_cmp ( Type.INT_TYPE, mode, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_icmp [RETURN_TYPE] void   int mode Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  mode  ClassInfo  classInfo  
[P8_Replace_Mix]^swap ( Type.INT_TYPE, NEG, label ) ;^165^^^^^164^166^if_cmp ( Type.INT_TYPE, mode, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_icmp [RETURN_TYPE] void   int mode Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  mode  ClassInfo  classInfo  
[P14_Delete_Statement]^^165^166^^^^164^166^if_cmp ( Type.INT_TYPE, mode, label ) ; }^[CLASS] CodeEmitter State  [METHOD] if_icmp [RETURN_TYPE] void   int mode Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  mode  ClassInfo  classInfo  
[P1_Replace_Type]^short  intOp = -1;^169^^^^^154^184^int intOp = -1;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P3_Replace_Literal]^int intOp = -MUL;^169^^^^^154^184^int intOp = -1;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P1_Replace_Type]^short  jumpmode = mode;^170^^^^^155^185^int jumpmode = mode;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P5_Replace_Variable]^int jumpmode = SUB;^170^^^^^155^185^int jumpmode = mode;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P8_Replace_Mix]^int jumpmode = access;^170^^^^^155^185^int jumpmode = mode;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P5_Replace_Variable]^case GE: jumpmode = REM; break;^172^^^^^157^187^case GE: jumpmode = LT; break;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P8_Replace_Mix]^case GE: jumpmode  =  case GE: jumpmode ;^172^^^^^157^187^case GE: jumpmode = LT; break;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^case LE: jumpmode = GT; break;case GE: jumpmode = LT; break;^172^^^^^157^187^case GE: jumpmode = LT; break;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P5_Replace_Variable]^case LE: jumpmode = OR; break;^173^^^^^158^188^case LE: jumpmode = GT; break;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P8_Replace_Mix]^case LE: jumpmode ;^173^^^^^158^188^case LE: jumpmode = GT; break;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^case GE: jumpmode = LT; break;case LE: jumpmode = GT; break;^173^^^^^158^188^case LE: jumpmode = GT; break;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^case NE: intOp = Constants.IF_ICMPNE; break;case EQ: intOp = Constants.IF_ICMPEQ; break;^198^^^^^183^213^case EQ: intOp = Constants.IF_ICMPEQ; break;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^case GT: intOp = Constants.IF_ICMPGT; break;case EQ: intOp = Constants.IF_ICMPEQ; break;^198^^^^^183^213^case EQ: intOp = Constants.IF_ICMPEQ; break;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^case LT: intOp = Constants.IF_ICMPLT; break;case EQ: intOp = Constants.IF_ICMPEQ; break;^198^^^^^183^213^case EQ: intOp = Constants.IF_ICMPEQ; break;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^case GT: intOp = Constants.IF_ICMPGT; break;case NE: intOp = Constants.IF_ICMPNE; break;^199^^^^^184^214^case NE: intOp = Constants.IF_ICMPNE; break;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^case LT: intOp = Constants.IF_ICMPLT; break;case NE: intOp = Constants.IF_ICMPNE; break;^199^^^^^184^214^case NE: intOp = Constants.IF_ICMPNE; break;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^case EQ: intOp = Constants.IF_ICMPEQ; break;case NE: intOp = Constants.IF_ICMPNE; break;^199^^^^^184^214^case NE: intOp = Constants.IF_ICMPNE; break;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^case NE: intOp = Constants.IF_ICMPNE; break;case LT: intOp = Constants.IF_ICMPLT; break;^201^^^^^186^216^case LT: intOp = Constants.IF_ICMPLT; break;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^case GT: intOp = Constants.IF_ICMPGT; break;case LT: intOp = Constants.IF_ICMPLT; break;^201^^^^^186^216^case LT: intOp = Constants.IF_ICMPLT; break;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^case EQ: intOp = Constants.IF_ICMPEQ; break;case LT: intOp = Constants.IF_ICMPLT; break;^201^^^^^186^216^case LT: intOp = Constants.IF_ICMPLT; break;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^case NE: intOp = Constants.IF_ICMPNE; break;case GT: intOp = Constants.IF_ICMPGT; break;^203^^^^^188^218^case GT: intOp = Constants.IF_ICMPGT; break;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^case LT: intOp = Constants.IF_ICMPLT; break;case GT: intOp = Constants.IF_ICMPGT; break;^203^^^^^188^218^case GT: intOp = Constants.IF_ICMPGT; break;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^case EQ: intOp = Constants.IF_ICMPEQ; break;case GT: intOp = Constants.IF_ICMPGT; break;^203^^^^^188^218^case GT: intOp = Constants.IF_ICMPGT; break;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P8_Replace_Mix]^throw new IllegalStateException  (" ")  ; ;^195^^^^^180^210^throw new IllegalArgumentException  (" ")  ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^195^^^^^180^210^throw new IllegalArgumentException  (" ")  ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^throw new CodeGenerationException  (" ")  ;throw new IllegalArgumentException  (" ")  ;^195^^^^^180^210^throw new IllegalArgumentException  (" ")  ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^switch  ( type.getOpcode (  )  )  {^175^^^^^160^190^switch  ( type.getSort (  )  )  {^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P8_Replace_Mix]^switch  ( type .getSize (  )   )  {^175^^^^^160^190^switch  ( type.getSort (  )  )  {^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P14_Delete_Statement]^^175^176^177^^^160^190^switch  ( type.getSort (  )  )  { case Type.LONG: mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitIntInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P14_Delete_Statement]^^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2L ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.BIPUSH, i ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.FCMPG ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( Constants.ALOAD, 0 ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2C ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( intOp, label ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.ICONST ( i )  ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.DCMPG ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitTypeInsn ( opcode, desc ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( mode, label ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2I ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2L ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.LCONST ( value )  ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2D ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2L ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2I ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2D ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2F ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.ARRAYLENGTH ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.SIPUSH, i ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitLdcInsn ( value ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2D ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( t.getOpcode ( Constants.ILOAD ) , pos ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2B ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2S ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.DCONST ( value )  ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2F ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2I ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2F ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.FCONST ( value )  ) ;mv.visitInsn ( Constants.LCMP ) ;^177^^^^^162^192^mv.visitInsn ( Constants.LCMP ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitIntInsn ( Constants.DCMPG ) ;^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P14_Delete_Statement]^^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2L ) ;mv.visitInsn ( Constants.DCMPG ) ;^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.BIPUSH, i ) ;mv.visitInsn ( Constants.DCMPG ) ;^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.FCMPG ) ;mv.visitInsn ( Constants.DCMPG ) ;^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;mv.visitInsn ( Constants.DCMPG ) ;^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( Constants.ALOAD, 0 ) ;mv.visitInsn ( Constants.DCMPG ) ;^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2C ) ;mv.visitInsn ( Constants.DCMPG ) ;^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( intOp, label ) ;mv.visitInsn ( Constants.DCMPG ) ;^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.ICONST ( i )  ) ;mv.visitInsn ( Constants.DCMPG ) ;^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitTypeInsn ( opcode, desc ) ;mv.visitInsn ( Constants.DCMPG ) ;^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2I ) ;mv.visitInsn ( Constants.DCMPG ) ;^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2L ) ;mv.visitInsn ( Constants.DCMPG ) ;^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.LCONST ( value )  ) ;mv.visitInsn ( Constants.DCMPG ) ;^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2D ) ;mv.visitInsn ( Constants.DCMPG ) ;^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2L ) ;mv.visitInsn ( Constants.DCMPG ) ;^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2I ) ;mv.visitInsn ( Constants.DCMPG ) ;^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2D ) ;mv.visitInsn ( Constants.DCMPG ) ;^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2F ) ;mv.visitInsn ( Constants.DCMPG ) ;^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.ARRAYLENGTH ) ;mv.visitInsn ( Constants.DCMPG ) ;^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.SIPUSH, i ) ;mv.visitInsn ( Constants.DCMPG ) ;^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2D ) ;mv.visitInsn ( Constants.DCMPG ) ;^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( t.getOpcode ( Constants.ILOAD ) , pos ) ;mv.visitInsn ( Constants.DCMPG ) ;^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;mv.visitInsn ( Constants.DCMPG ) ;^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2B ) ;mv.visitInsn ( Constants.DCMPG ) ;^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2S ) ;mv.visitInsn ( Constants.DCMPG ) ;^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.LCMP ) ;mv.visitInsn ( Constants.DCMPG ) ;^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.DCONST ( value )  ) ;mv.visitInsn ( Constants.DCMPG ) ;^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2F ) ;mv.visitInsn ( Constants.DCMPG ) ;^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2I ) ;mv.visitInsn ( Constants.DCMPG ) ;^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2F ) ;mv.visitInsn ( Constants.DCMPG ) ;^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.FCONST ( value )  ) ;mv.visitInsn ( Constants.DCMPG ) ;^180^^^^^165^195^mv.visitInsn ( Constants.DCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitIntInsn ( Constants.FCMPG ) ;^183^^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P14_Delete_Statement]^^183^184^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ; break;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2L ) ;mv.visitInsn ( Constants.FCMPG ) ;^183^^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.BIPUSH, i ) ;mv.visitInsn ( Constants.FCMPG ) ;^183^^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;mv.visitInsn ( Constants.FCMPG ) ;^183^^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( Constants.ALOAD, 0 ) ;mv.visitInsn ( Constants.FCMPG ) ;^183^^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2C ) ;mv.visitInsn ( Constants.FCMPG ) ;^183^^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( intOp, label ) ;mv.visitInsn ( Constants.FCMPG ) ;^183^^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.ICONST ( i )  ) ;mv.visitInsn ( Constants.FCMPG ) ;^183^^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.DCMPG ) ;mv.visitInsn ( Constants.FCMPG ) ;^183^^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitTypeInsn ( opcode, desc ) ;mv.visitInsn ( Constants.FCMPG ) ;^183^^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2I ) ;mv.visitInsn ( Constants.FCMPG ) ;^183^^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2L ) ;mv.visitInsn ( Constants.FCMPG ) ;^183^^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.LCONST ( value )  ) ;mv.visitInsn ( Constants.FCMPG ) ;^183^^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2D ) ;mv.visitInsn ( Constants.FCMPG ) ;^183^^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2L ) ;mv.visitInsn ( Constants.FCMPG ) ;^183^^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2I ) ;mv.visitInsn ( Constants.FCMPG ) ;^183^^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2D ) ;mv.visitInsn ( Constants.FCMPG ) ;^183^^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2F ) ;mv.visitInsn ( Constants.FCMPG ) ;^183^^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.ARRAYLENGTH ) ;mv.visitInsn ( Constants.FCMPG ) ;^183^^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.SIPUSH, i ) ;mv.visitInsn ( Constants.FCMPG ) ;^183^^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2D ) ;mv.visitInsn ( Constants.FCMPG ) ;^183^^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( t.getOpcode ( Constants.ILOAD ) , pos ) ;mv.visitInsn ( Constants.FCMPG ) ;^183^^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;mv.visitInsn ( Constants.FCMPG ) ;^183^^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2B ) ;mv.visitInsn ( Constants.FCMPG ) ;^183^^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2S ) ;mv.visitInsn ( Constants.FCMPG ) ;^183^^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.LCMP ) ;mv.visitInsn ( Constants.FCMPG ) ;^183^^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.DCONST ( value )  ) ;mv.visitInsn ( Constants.FCMPG ) ;^183^^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2F ) ;mv.visitInsn ( Constants.FCMPG ) ;^183^^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2I ) ;mv.visitInsn ( Constants.FCMPG ) ;^183^^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2F ) ;mv.visitInsn ( Constants.FCMPG ) ;^183^^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.FCONST ( value )  ) ;mv.visitInsn ( Constants.FCMPG ) ;^183^^^^^168^198^mv.visitInsn ( Constants.FCMPG ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P5_Replace_Variable]^mv.visitJumpInsn ( Constants.IF_ACMPEQ ) ;^189^^^^^174^204^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitLabel ( Constants.IF_ACMPEQ, label ) ;^189^^^^^174^204^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P14_Delete_Statement]^^189^^^^^174^204^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2L ) ;mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^189^^^^^174^204^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.BIPUSH, i ) ;mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^189^^^^^174^204^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.FCMPG ) ;mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^189^^^^^174^204^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^189^^^^^174^204^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( Constants.ALOAD, 0 ) ;mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^189^^^^^174^204^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2C ) ;mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^189^^^^^174^204^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( intOp, label ) ;mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^189^^^^^174^204^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.DCMPG ) ;mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^189^^^^^174^204^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( mode, label ) ;mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^189^^^^^174^204^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2I ) ;mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^189^^^^^174^204^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2L ) ;mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^189^^^^^174^204^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2D ) ;mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^189^^^^^174^204^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2L ) ;mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^189^^^^^174^204^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2I ) ;mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^189^^^^^174^204^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2D ) ;mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^189^^^^^174^204^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2F ) ;mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^189^^^^^174^204^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.ARRAYLENGTH ) ;mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^189^^^^^174^204^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.SIPUSH, i ) ;mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^189^^^^^174^204^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2D ) ;mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^189^^^^^174^204^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2B ) ;mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^189^^^^^174^204^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2S ) ;mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^189^^^^^174^204^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.LCMP ) ;mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^189^^^^^174^204^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2F ) ;mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^189^^^^^174^204^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2I ) ;mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^189^^^^^174^204^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2F ) ;mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^189^^^^^174^204^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P5_Replace_Variable]^mv.visitJumpInsn ( Constants.IF_ACMPNE ) ;^192^^^^^177^207^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitLabel ( Constants.IF_ACMPNE, label ) ;^192^^^^^177^207^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P8_Replace_Mix]^mv .visitJumpInsn ( AND , label )  ;^192^^^^^177^207^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P14_Delete_Statement]^^192^193^^^^177^207^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ; return;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2L ) ;mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^192^^^^^177^207^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.BIPUSH, i ) ;mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^192^^^^^177^207^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.FCMPG ) ;mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^192^^^^^177^207^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( Constants.ALOAD, 0 ) ;mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^192^^^^^177^207^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2C ) ;mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^192^^^^^177^207^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( intOp, label ) ;mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^192^^^^^177^207^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.DCMPG ) ;mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^192^^^^^177^207^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( mode, label ) ;mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^192^^^^^177^207^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2I ) ;mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^192^^^^^177^207^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2L ) ;mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^192^^^^^177^207^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2D ) ;mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^192^^^^^177^207^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2L ) ;mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^192^^^^^177^207^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2I ) ;mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^192^^^^^177^207^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2D ) ;mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^192^^^^^177^207^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2F ) ;mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^192^^^^^177^207^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.ARRAYLENGTH ) ;mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^192^^^^^177^207^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.SIPUSH, i ) ;mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^192^^^^^177^207^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2D ) ;mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^192^^^^^177^207^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^192^^^^^177^207^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2B ) ;mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^192^^^^^177^207^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2S ) ;mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^192^^^^^177^207^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.LCMP ) ;mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^192^^^^^177^207^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2F ) ;mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^192^^^^^177^207^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2I ) ;mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^192^^^^^177^207^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2F ) ;mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^192^^^^^177^207^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P14_Delete_Statement]^^200^201^^^^185^215^c case LT: intOp = Constants.IF_ICMPLT; break;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^c case GT: intOp = Constants.IF_ICMPGT; break;c case LT: intOp = Constants.IF_ICMPLT; break;^200^201^^^^185^215^c case LT: intOp = Constants.IF_ICMPLT; break;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P14_Delete_Statement]^^202^203^^^^187^217^c case GT: intOp = Constants.IF_ICMPGT; break;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^c case LT: intOp = Constants.IF_ICMPLT; break;c case GT: intOp = Constants.IF_ICMPGT; break;^202^203^^^^187^217^c case GT: intOp = Constants.IF_ICMPGT; break;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P5_Replace_Variable]^mv.visitJumpInsn ( OR, label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P5_Replace_Variable]^mv.visitJumpInsn (  label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P5_Replace_Variable]^mv.visitJumpInsn ( intOp ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P5_Replace_Variable]^mv.visitJumpInsn ( label, intOp ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitTypeInsn ( intOp, label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P8_Replace_Mix]^mv.visitTypeInsn ( NEG, label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P14_Delete_Statement]^^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2L ) ;mv.visitJumpInsn ( intOp, label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.FCMPG ) ;mv.visitJumpInsn ( intOp, label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitLabel ( label ) ;mv.visitJumpInsn ( intOp, label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;mv.visitJumpInsn ( intOp, label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( Constants.ALOAD, 0 ) ;mv.visitJumpInsn ( intOp, label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2C ) ;mv.visitJumpInsn ( intOp, label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.DCMPG ) ;mv.visitJumpInsn ( intOp, label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitMaxs ( 0, 0 ) ;mv.visitJumpInsn ( intOp, label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitTypeInsn ( opcode, desc ) ;mv.visitJumpInsn ( intOp, label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( mode, label ) ;mv.visitJumpInsn ( intOp, label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2I ) ;mv.visitJumpInsn ( intOp, label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2L ) ;mv.visitJumpInsn ( intOp, label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2D ) ;mv.visitJumpInsn ( intOp, label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2L ) ;mv.visitJumpInsn ( intOp, label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2I ) ;mv.visitJumpInsn ( intOp, label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2D ) ;mv.visitJumpInsn ( intOp, label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2F ) ;mv.visitJumpInsn ( intOp, label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitLdcInsn ( value ) ;mv.visitJumpInsn ( intOp, label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2D ) ;mv.visitJumpInsn ( intOp, label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitTableSwitchInsn ( min, max, def, labels ) ;mv.visitJumpInsn ( intOp, label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitLookupSwitchInsn ( def, keys, labels ) ;mv.visitJumpInsn ( intOp, label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;mv.visitJumpInsn ( intOp, label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2B ) ;mv.visitJumpInsn ( intOp, label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2S ) ;mv.visitJumpInsn ( intOp, label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.LCMP ) ;mv.visitJumpInsn ( intOp, label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2F ) ;mv.visitJumpInsn ( intOp, label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2I ) ;mv.visitJumpInsn ( intOp, label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2F ) ;mv.visitJumpInsn ( intOp, label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P5_Replace_Variable]^if_jump ( REM, label ) ;^208^^^^^193^223^if_jump ( jumpmode, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P5_Replace_Variable]^if_jump (  label ) ;^208^^^^^193^223^if_jump ( jumpmode, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P5_Replace_Variable]^if_jump ( jumpmode ) ;^208^^^^^193^223^if_jump ( jumpmode, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P5_Replace_Variable]^if_jump ( label, jumpmode ) ;^208^^^^^193^223^if_jump ( jumpmode, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^if_icmp ( jumpmode, label ) ;^208^^^^^193^223^if_jump ( jumpmode, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P8_Replace_Mix]^if_jump ( NEG, label ) ;^208^^^^^193^223^if_jump ( jumpmode, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P14_Delete_Statement]^^208^209^^^^193^223^if_jump ( jumpmode, label ) ; }^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^public void pop (  )  { mv.visitIntInsn ( Constants.POP ) ; }^211^^^^^206^216^public void pop (  )  { mv.visitInsn ( Constants.POP ) ; }^[CLASS] CodeEmitter State  [METHOD] pop [RETURN_TYPE] void   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^public void pop2 (  )  { mv.visitIntInsn ( Constants.POP2 ) ; }^212^^^^^207^217^public void pop2 (  )  { mv.visitInsn ( Constants.POP2 ) ; }^[CLASS] CodeEmitter State  [METHOD] pop2 [RETURN_TYPE] void   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^public void dup (  )  { mv.visitIntInsn ( Constants.DUP ) ; }^213^^^^^208^218^public void dup (  )  { mv.visitInsn ( Constants.DUP ) ; }^[CLASS] CodeEmitter State  [METHOD] dup [RETURN_TYPE] void   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P8_Replace_Mix]^public void dup (  )  { 3.visitIntInsn ( Constants.DUP ) ; }^213^^^^^208^218^public void dup (  )  { mv.visitInsn ( Constants.DUP ) ; }^[CLASS] CodeEmitter State  [METHOD] dup [RETURN_TYPE] void   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^public void dup2 (  )  { mv.visitIntInsn ( Constants.DUP2 ) ; }^214^^^^^209^219^public void dup2 (  )  { mv.visitInsn ( Constants.DUP2 ) ; }^[CLASS] CodeEmitter State  [METHOD] dup2 [RETURN_TYPE] void   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^public void dup_x1 (  )  { mv.visitIntInsn ( Constants.DUP_X1 ) ; }^215^^^^^210^220^public void dup_x1 (  )  { mv.visitInsn ( Constants.DUP_X1 ) ; }^[CLASS] CodeEmitter State  [METHOD] dup_x1 [RETURN_TYPE] void   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^public void dup_x2 (  )  { mv.visitIntInsn ( Constants.DUP_X2 ) ; }^216^^^^^211^221^public void dup_x2 (  )  { mv.visitInsn ( Constants.DUP_X2 ) ; }^[CLASS] CodeEmitter State  [METHOD] dup_x2 [RETURN_TYPE] void   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^public void dup2_x1 (  )  { mv.visitIntInsn ( Constants.DUP2_X1 ) ; }^217^^^^^212^222^public void dup2_x1 (  )  { mv.visitInsn ( Constants.DUP2_X1 ) ; }^[CLASS] CodeEmitter State  [METHOD] dup2_x1 [RETURN_TYPE] void   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^public void dup2_x2 (  )  { mv.visitIntInsn ( Constants.DUP2_X2 ) ; }^218^^^^^213^223^public void dup2_x2 (  )  { mv.visitInsn ( Constants.DUP2_X2 ) ; }^[CLASS] CodeEmitter State  [METHOD] dup2_x2 [RETURN_TYPE] void   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^public void swap (  )  { mv.visitIntInsn ( Constants.SWAP ) ; }^219^^^^^214^224^public void swap (  )  { mv.visitInsn ( Constants.SWAP ) ; }^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P5_Replace_Variable]^public void aconst_null (  )  { this.visitInsn ( Constants.ACONST_NULL ) ; }^220^^^^^215^225^public void aconst_null (  )  { mv.visitInsn ( Constants.ACONST_NULL ) ; }^[CLASS] CodeEmitter State  [METHOD] aconst_null [RETURN_TYPE] void   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^public void aconst_null (  )  { mv.visitIntInsn ( Constants.ACONST_NULL ) ; }^220^^^^^215^225^public void aconst_null (  )  { mv.visitInsn ( Constants.ACONST_NULL ) ; }^[CLASS] CodeEmitter State  [METHOD] aconst_null [RETURN_TYPE] void   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( type.getSize (  )  < 1 )  {^223^^^^^222^239^if  ( type.getSize (  )  == 1 )  {^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( type.getSize (  )  >= 1 )  {^223^^^^^222^239^if  ( type.getSize (  )  == 1 )  {^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( type.getSize (  )  != 1 )  {^223^^^^^222^239^if  ( type.getSize (  )  == 1 )  {^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P3_Replace_Literal]^if  ( type.getSize (  )  == 4 )  {^223^^^^^222^239^if  ( type.getSize (  )  == 1 )  {^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P3_Replace_Literal]^if  ( type.getSize (  )  == GT )  {^223^^^^^222^239^if  ( type.getSize (  )  == 1 )  {^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P3_Replace_Literal]^if  ( type.getSize (  )  == -2 )  {^223^^^^^222^239^if  ( type.getSize (  )  == 1 )  {^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P6_Replace_Expression]^if  ( prev.getSize() == 1 )  {^223^^^^^222^239^if  ( type.getSize (  )  == 1 )  {^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^if  ( type.getOpcode (  )  == 1 )  {^223^^^^^222^239^if  ( type.getSize (  )  == 1 )  {^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^if  ( type .getSort (  )   == 1 )  {^223^^^^^222^239^if  ( type.getSize (  )  == 1 )  {^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P8_Replace_Mix]^if  ( type.getSize (  )  == 1 + 2 )  {^223^^^^^222^239^if  ( type.getSize (  )  == 1 )  {^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P9_Replace_Statement]^if  ( type.getSize (  )  == 2 )  {^223^^^^^222^239^if  ( type.getSize (  )  == 1 )  {^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( prev.getSize (  )  > 1 )  {^231^^^^^222^239^if  ( prev.getSize (  )  == 1 )  {^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P3_Replace_Literal]^if  ( prev.getSize (  )  == REM )  {^231^^^^^222^239^if  ( prev.getSize (  )  == 1 )  {^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P5_Replace_Variable]^if  ( type.getSize (  )  == 1 )  {^231^^^^^222^239^if  ( prev.getSize (  )  == 1 )  {^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^if  ( prev.getOpcode (  )  == 1 )  {^231^^^^^222^239^if  ( prev.getSize (  )  == 1 )  {^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P8_Replace_Mix]^if  ( prev.getSize (  )  == 2 )  {^231^^^^^222^239^if  ( prev.getSize (  )  == 1 )  {^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P9_Replace_Statement]^if  ( type.getSize (  )  == 2 )  {^231^^^^^222^239^if  ( prev.getSize (  )  == 1 )  {^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P13_Insert_Block]^if  (  ( type.getSize (  )  )  == 2 )  {     dup_x2 (  ) ;     dup_x2 (  ) ;     pop (  ) ; }else {     dup_x1 (  ) ;     swap (  ) ; }^231^^^^^222^239^[Delete]^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P13_Insert_Block]^if  (  ( prev.getSize (  )  )  == 1 )  {     swap (  ) ; }else {     dup_x2 (  ) ;     pop (  ) ; }^231^^^^^222^239^[Delete]^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^dup_x2 (  ) ;^235^^^^^222^239^dup2_x2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P14_Delete_Statement]^^235^^^^^222^239^dup2_x2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^dup_x1 (  ) ;dup2_x2 (  ) ;^235^^^^^222^239^dup2_x2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^dup2_x1 (  ) ;dup2_x2 (  ) ;^235^^^^^222^239^dup2_x2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^pop (  ) ;dup2_x2 (  ) ;^235^^^^^222^239^dup2_x2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^pop2 (  ) ;dup2_x2 (  ) ;^235^^^^^222^239^dup2_x2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^dup (  ) ;dup2_x2 (  ) ;^235^^^^^222^239^dup2_x2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^dup_x2 (  ) ;dup2_x2 (  ) ;^235^^^^^222^239^dup2_x2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^pop (  ) ;^236^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P14_Delete_Statement]^^236^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^push ( 0 ) ;pop2 (  ) ;^236^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^push ( msg ) ;pop2 (  ) ;^236^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^athrow (  ) ;pop2 (  ) ;^236^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^push ( 0d ) ;pop2 (  ) ;^236^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^swap (  ) ;pop2 (  ) ;^236^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^dup2_x2 (  ) ;pop2 (  ) ;^236^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^dup2_x1 (  ) ;pop2 (  ) ;^236^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^pop (  ) ;pop2 (  ) ;^236^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^dup (  ) ;pop2 (  ) ;^236^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^aaload (  ) ;pop2 (  ) ;^236^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^push ( 1 ) ;pop2 (  ) ;^236^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^dup_x1 (  ) ;pop2 (  ) ;^236^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^goTo ( end ) ;pop2 (  ) ;^236^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^push ( i ) ;pop2 (  ) ;^236^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^push ( 0f ) ;pop2 (  ) ;^236^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^dup_x2 (  ) ;pop2 (  ) ;^236^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^aastore (  ) ;pop2 (  ) ;^236^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^push ( 0L ) ;pop2 (  ) ;^236^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^dup2_x2 (  ) ;^232^^^^^222^239^dup2_x1 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P14_Delete_Statement]^^232^^^^^222^239^dup2_x1 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^dup_x1 (  ) ;dup2_x1 (  ) ;^232^^^^^222^239^dup2_x1 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^dup2_x2 (  ) ;dup2_x1 (  ) ;^232^^^^^222^239^dup2_x1 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^pop (  ) ;dup2_x1 (  ) ;^232^^^^^222^239^dup2_x1 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^pop2 (  ) ;dup2_x1 (  ) ;^232^^^^^222^239^dup2_x1 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^dup (  ) ;dup2_x1 (  ) ;^232^^^^^222^239^dup2_x1 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^dup_x2 (  ) ;dup2_x1 (  ) ;^232^^^^^222^239^dup2_x1 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^pop (  ) ;^233^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P14_Delete_Statement]^^233^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^push ( 0 ) ;pop2 (  ) ;^233^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^push ( msg ) ;pop2 (  ) ;^233^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^athrow (  ) ;pop2 (  ) ;^233^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^push ( 0d ) ;pop2 (  ) ;^233^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^swap (  ) ;pop2 (  ) ;^233^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^dup2_x2 (  ) ;pop2 (  ) ;^233^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^dup2_x1 (  ) ;pop2 (  ) ;^233^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^pop (  ) ;pop2 (  ) ;^233^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^dup (  ) ;pop2 (  ) ;^233^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^aaload (  ) ;pop2 (  ) ;^233^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^push ( 1 ) ;pop2 (  ) ;^233^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^dup_x1 (  ) ;pop2 (  ) ;^233^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^goTo ( end ) ;pop2 (  ) ;^233^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^push ( i ) ;pop2 (  ) ;^233^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^push ( 0f ) ;pop2 (  ) ;^233^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^dup_x2 (  ) ;pop2 (  ) ;^233^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^aastore (  ) ;pop2 (  ) ;^233^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^push ( 0L ) ;pop2 (  ) ;^233^^^^^222^239^pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^if  ( prev .getSort (  )   == 1 )  {^231^^^^^222^239^if  ( prev.getSize (  )  == 1 )  {^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P8_Replace_Mix]^if  ( type.getOpcode (  )  == 1 )  {^231^^^^^222^239^if  ( prev.getSize (  )  == 1 )  {^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( prev.getSize (  )  <= 1 )  {^224^^^^^222^239^if  ( prev.getSize (  )  == 1 )  {^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P3_Replace_Literal]^if  ( prev.getSize (  )  == 9 )  {^224^^^^^222^239^if  ( prev.getSize (  )  == 1 )  {^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P5_Replace_Variable]^if  ( type.getSize (  )  == 1 )  {^224^^^^^222^239^if  ( prev.getSize (  )  == 1 )  {^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^if  ( prev.getOpcode (  )  == 1 )  {^224^^^^^222^239^if  ( prev.getSize (  )  == 1 )  {^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P8_Replace_Mix]^if  ( prev.getOpcode (  )  == 2 )  {^224^^^^^222^239^if  ( prev.getSize (  )  == 1 )  {^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P9_Replace_Statement]^if  ( type.getSize (  )  == 2 )  {^224^^^^^222^239^if  ( prev.getSize (  )  == 1 )  {^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P15_Unwrap_Block]^swap();^224^225^226^227^228^222^239^if  ( prev.getSize (  )  == 1 )  { swap (  ) ; } else { dup_x2 (  ) ; pop (  ) ; }^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P16_Remove_Block]^^224^225^226^227^228^222^239^if  ( prev.getSize (  )  == 1 )  { swap (  ) ; } else { dup_x2 (  ) ; pop (  ) ; }^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P13_Insert_Block]^if  (  ( prev.getSize (  )  )  == 1 )  {     dup2_x1 (  ) ;     pop2 (  ) ; }else {     dup2_x2 (  ) ;     pop2 (  ) ; }^224^^^^^222^239^[Delete]^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P13_Insert_Block]^if  (  ( type.getSize (  )  )  == 2 )  {     dup_x2 (  ) ;     dup_x2 (  ) ;     pop (  ) ; }else {     dup_x1 (  ) ;     swap (  ) ; }^224^^^^^222^239^[Delete]^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^dup2_x2 (  ) ;^227^^^^^222^239^dup_x2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P14_Delete_Statement]^^227^^^^^222^239^dup_x2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^push ( 0 ) ;dup_x2 (  ) ;^227^^^^^222^239^dup_x2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^aaload (  ) ;dup_x2 (  ) ;^227^^^^^222^239^dup_x2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^push ( 1 ) ;dup_x2 (  ) ;^227^^^^^222^239^dup_x2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^athrow (  ) ;dup_x2 (  ) ;^227^^^^^222^239^dup_x2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^dup_x1 (  ) ;dup_x2 (  ) ;^227^^^^^222^239^dup_x2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^swap (  ) ;dup_x2 (  ) ;^227^^^^^222^239^dup_x2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^dup2_x2 (  ) ;dup_x2 (  ) ;^227^^^^^222^239^dup_x2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^push ( i ) ;dup_x2 (  ) ;^227^^^^^222^239^dup_x2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^dup2_x1 (  ) ;dup_x2 (  ) ;^227^^^^^222^239^dup_x2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^pop (  ) ;dup_x2 (  ) ;^227^^^^^222^239^dup_x2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^pop2 (  ) ;dup_x2 (  ) ;^227^^^^^222^239^dup_x2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^dup (  ) ;dup_x2 (  ) ;^227^^^^^222^239^dup_x2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^pop2 (  ) ;^228^^^^^222^239^pop (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P14_Delete_Statement]^^228^^^^^222^239^pop (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^push ( 0 ) ;pop (  ) ;^228^^^^^222^239^pop (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^push ( msg ) ;pop (  ) ;^228^^^^^222^239^pop (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^athrow (  ) ;pop (  ) ;^228^^^^^222^239^pop (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^push ( 0d ) ;pop (  ) ;^228^^^^^222^239^pop (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^swap (  ) ;pop (  ) ;^228^^^^^222^239^pop (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^dup2_x2 (  ) ;pop (  ) ;^228^^^^^222^239^pop (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^dup2_x1 (  ) ;pop (  ) ;^228^^^^^222^239^pop (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^dup (  ) ;pop (  ) ;^228^^^^^222^239^pop (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^aaload (  ) ;pop (  ) ;^228^^^^^222^239^pop (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^push ( 1 ) ;pop (  ) ;^228^^^^^222^239^pop (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^dup_x1 (  ) ;pop (  ) ;^228^^^^^222^239^pop (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^goTo ( end ) ;pop (  ) ;^228^^^^^222^239^pop (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^push ( i ) ;pop (  ) ;^228^^^^^222^239^pop (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^push ( 0f ) ;pop (  ) ;^228^^^^^222^239^pop (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^pop2 (  ) ;pop (  ) ;^228^^^^^222^239^pop (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^dup_x2 (  ) ;pop (  ) ;^228^^^^^222^239^pop (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^aastore (  ) ;pop (  ) ;^228^^^^^222^239^pop (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^push ( 0L ) ;pop (  ) ;^228^^^^^222^239^pop (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^pop (  ) ;^225^^^^^222^239^swap (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P14_Delete_Statement]^^225^^^^^222^239^swap (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^newarray (  ) ;swap (  ) ;^225^^^^^222^239^swap (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^push ( 0 ) ;swap (  ) ;^225^^^^^222^239^swap (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^athrow (  ) ;swap (  ) ;^225^^^^^222^239^swap (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^push ( 0d ) ;swap (  ) ;^225^^^^^222^239^swap (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^pop (  ) ;swap (  ) ;^225^^^^^222^239^swap (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^dup (  ) ;swap (  ) ;^225^^^^^222^239^swap (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^aaload (  ) ;swap (  ) ;^225^^^^^222^239^swap (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^push ( 1 ) ;swap (  ) ;^225^^^^^222^239^swap (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^dup_x1 (  ) ;swap (  ) ;^225^^^^^222^239^swap (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^push ( i ) ;swap (  ) ;^225^^^^^222^239^swap (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^push ( 0f ) ;swap (  ) ;^225^^^^^222^239^swap (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^pop2 (  ) ;swap (  ) ;^225^^^^^222^239^swap (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^dup_x2 (  ) ;swap (  ) ;^225^^^^^222^239^swap (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^aastore (  ) ;swap (  ) ;^225^^^^^222^239^swap (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^push ( 0L ) ;swap (  ) ;^225^^^^^222^239^swap (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P14_Delete_Statement]^^227^228^^^^222^239^dup_x2 (  ) ; pop (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P3_Replace_Literal]^if  ( prev.getSize (  )  == -2 )  {^224^^^^^222^239^if  ( prev.getSize (  )  == 1 )  {^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P8_Replace_Mix]^if  ( prev.getSize (  )  == 3 )  {^224^^^^^222^239^if  ( prev.getSize (  )  == 1 )  {^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( prev.getSize (  )  != 1 )  {^231^^^^^222^239^if  ( prev.getSize (  )  == 1 )  {^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P3_Replace_Literal]^if  ( prev.getSize (  )  == ADD )  {^231^^^^^222^239^if  ( prev.getSize (  )  == 1 )  {^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P8_Replace_Mix]^if  ( prev.getSize (  )  == 1L )  {^231^^^^^222^239^if  ( prev.getSize (  )  == 1 )  {^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P14_Delete_Statement]^^232^233^^^^222^239^dup2_x1 (  ) ; pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P14_Delete_Statement]^^235^236^^^^222^239^dup2_x2 (  ) ; pop2 (  ) ;^[CLASS] CodeEmitter State  [METHOD] swap [RETURN_TYPE] void   Type prev Type type [VARIABLES] Type  prev  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^public void monitorenter (  )  { mv.visitIntInsn ( Constants.MONITORENTER ) ; }^241^^^^^236^246^public void monitorenter (  )  { mv.visitInsn ( Constants.MONITORENTER ) ; }^[CLASS] CodeEmitter State  [METHOD] monitorenter [RETURN_TYPE] void   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P8_Replace_Mix]^public void monitorenter (  )  { null.visitInsn ( Constants.MONITORENTER ) ; }^241^^^^^236^246^public void monitorenter (  )  { mv.visitInsn ( Constants.MONITORENTER ) ; }^[CLASS] CodeEmitter State  [METHOD] monitorenter [RETURN_TYPE] void   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P7_Replace_Invocation]^public void monitorexit (  )  { mv.visitIntInsn ( Constants.MONITOREXIT ) ; }^242^^^^^237^247^public void monitorexit (  )  { mv.visitInsn ( Constants.MONITOREXIT ) ; }^[CLASS] CodeEmitter State  [METHOD] monitorexit [RETURN_TYPE] void   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[P5_Replace_Variable]^public void math ( int OR, Type type )  { mv.visitInsn ( type.getOpcode ( op )  ) ; }^244^^^^^239^249^public void math ( int op, Type type )  { mv.visitInsn ( type.getOpcode ( op )  ) ; }^[CLASS] CodeEmitter State  [METHOD] math [RETURN_TYPE] void   int op Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^public void math ( int  Type type )  { mv.visitInsn ( type.getOpcode ( op )  ) ; }^244^^^^^239^249^public void math ( int op, Type type )  { mv.visitInsn ( type.getOpcode ( op )  ) ; }^[CLASS] CodeEmitter State  [METHOD] math [RETURN_TYPE] void   int op Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^public void math ( int op, Type mv )  { type.visitInsn ( type.getOpcode ( op )  ) ; }^244^^^^^239^249^public void math ( int op, Type type )  { mv.visitInsn ( type.getOpcode ( op )  ) ; }^[CLASS] CodeEmitter State  [METHOD] math [RETURN_TYPE] void   int op Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^public void math ( int type, Type op )  { mv.visitInsn ( type.getOpcode ( op )  ) ; }^244^^^^^239^249^public void math ( int op, Type type )  { mv.visitInsn ( type.getOpcode ( op )  ) ; }^[CLASS] CodeEmitter State  [METHOD] math [RETURN_TYPE] void   int op Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^public void math ( int mv, Type type )  { op.visitInsn ( type.getOpcode ( op )  ) ; }^244^^^^^239^249^public void math ( int op, Type type )  { mv.visitInsn ( type.getOpcode ( op )  ) ; }^[CLASS] CodeEmitter State  [METHOD] math [RETURN_TYPE] void   int op Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^public void math ( int op, Type type )  { mv.visitMaxs ( type.getOpcode ( op )  ) ; }^244^^^^^239^249^public void math ( int op, Type type )  { mv.visitInsn ( type.getOpcode ( op )  ) ; }^[CLASS] CodeEmitter State  [METHOD] math [RETURN_TYPE] void   int op Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^public void math ( int SUB, Type type )  { mv.visitInsn ( type.getOpcode ( op )  ) ; }^244^^^^^239^249^public void math ( int op, Type type )  { mv.visitInsn ( type.getOpcode ( op )  ) ; }^[CLASS] CodeEmitter State  [METHOD] math [RETURN_TYPE] void   int op Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^public void math ( int REM, Type type )  { mv.visitInsn ( type.getOpcode ( op )  ) ; }^244^^^^^239^249^public void math ( int op, Type type )  { mv.visitInsn ( type.getOpcode ( op )  ) ; }^[CLASS] CodeEmitter State  [METHOD] math [RETURN_TYPE] void   int op Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^public void math ( int op, Type type )  { mv.visitInsn ( type .getOpcode ( GT )   ) ; }^244^^^^^239^249^public void math ( int op, Type type )  { mv.visitInsn ( type.getOpcode ( op )  ) ; }^[CLASS] CodeEmitter State  [METHOD] math [RETURN_TYPE] void   int op Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^public void math ( int access, Type type )  { mv.visitInsn ( type.getOpcode ( op )  ) ; }^244^^^^^239^249^public void math ( int op, Type type )  { mv.visitInsn ( type.getOpcode ( op )  ) ; }^[CLASS] CodeEmitter State  [METHOD] math [RETURN_TYPE] void   int op Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^public void array_load ( Type mv )  { type.visitInsn ( type.getOpcode ( Constants.IALOAD )  ) ; }^246^^^^^241^251^public void array_load ( Type type )  { mv.visitInsn ( type.getOpcode ( Constants.IALOAD )  ) ; }^[CLASS] CodeEmitter State  [METHOD] array_load [RETURN_TYPE] void   Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^public void array_load ( Type type )  { mv.visitIntInsn ( type.getOpcode ( Constants.IALOAD )  ) ; }^246^^^^^241^251^public void array_load ( Type type )  { mv.visitInsn ( type.getOpcode ( Constants.IALOAD )  ) ; }^[CLASS] CodeEmitter State  [METHOD] array_load [RETURN_TYPE] void   Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^public void array_load ( Type type )  { mv.visitInsn ( type .getSort (  )   ) ; }^246^^^^^241^251^public void array_load ( Type type )  { mv.visitInsn ( type.getOpcode ( Constants.IALOAD )  ) ; }^[CLASS] CodeEmitter State  [METHOD] array_load [RETURN_TYPE] void   Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^public void array_store ( Type mv )  { type.visitInsn ( type.getOpcode ( Constants.IASTORE )  ) ; }^247^^^^^242^252^public void array_store ( Type type )  { mv.visitInsn ( type.getOpcode ( Constants.IASTORE )  ) ; }^[CLASS] CodeEmitter State  [METHOD] array_store [RETURN_TYPE] void   Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^public void array_store ( Type type )  { mv.visitIntInsn ( type.getOpcode ( Constants.IASTORE )  ) ; }^247^^^^^242^252^public void array_store ( Type type )  { mv.visitInsn ( type.getOpcode ( Constants.IASTORE )  ) ; }^[CLASS] CodeEmitter State  [METHOD] array_store [RETURN_TYPE] void   Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^public void array_store ( Type type )  { mv.visitInsn ( type .getSort (  )   ) ; }^247^^^^^242^252^public void array_store ( Type type )  { mv.visitInsn ( type.getOpcode ( Constants.IASTORE )  ) ; }^[CLASS] CodeEmitter State  [METHOD] array_store [RETURN_TYPE] void   Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( from == to )  {^253^^^^^238^268^if  ( from != to )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^if  ( to != to )  {^253^^^^^238^268^if  ( from != to )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^if  ( from != from )  {^253^^^^^238^268^if  ( from != to )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^if  ( to != from )  {^253^^^^^238^268^if  ( from != to )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^if  ( from == Type.DOUBLE_TYPE )  {^253^^^^^238^268^if  ( from != to )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^if  ( to == Type.FLOAT_TYPE )  {^253^^^^^238^268^if  ( from != to )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^if  ( to == Type.LONG_TYPE )  {^253^^^^^238^268^if  ( from != to )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^if  ( from == Type.FLOAT_TYPE )  {^253^^^^^238^268^if  ( from != to )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^if  ( to == Type.DOUBLE_TYPE )  {^253^^^^^238^268^if  ( from != to )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^if  ( from == Type.LONG_TYPE )  {^253^^^^^238^268^if  ( from != to )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^if  ( to == Type.BYTE_TYPE )  {^253^^^^^238^268^if  ( from != to )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^if  ( to == Type.CHAR_TYPE )  {^253^^^^^238^268^if  ( from != to )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^if  ( to == Type.SHORT_TYPE )  {^253^^^^^238^268^if  ( from != to )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P9_Replace_Statement]^if  ( label != def )  {^253^^^^^238^268^if  ( from != to )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( from != Type.DOUBLE_TYPE )  {^254^^^^^239^269^if  ( from == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( from > Type.DOUBLE_TYPE )  {^254^^^^^239^269^if  ( from == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( from >= Type.DOUBLE_TYPE )  {^254^^^^^239^269^if  ( from == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( from <= Type.DOUBLE_TYPE )  {^254^^^^^239^269^if  ( from == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^if  ( to == Type.DOUBLE_TYPE )  {^254^^^^^239^269^if  ( from == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^if  ( to == Type.FLOAT_TYPE )  {^254^^^^^239^269^if  ( from == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^if  ( to == Type.LONG_TYPE )  {^254^^^^^239^269^if  ( from == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^if  ( from == Type.FLOAT_TYPE )  {^254^^^^^239^269^if  ( from == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^if  ( from == Type.LONG_TYPE )  {^254^^^^^239^269^if  ( from == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^if  ( to == Type.BYTE_TYPE )  {^254^^^^^239^269^if  ( from == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^if  ( to == Type.CHAR_TYPE )  {^254^^^^^239^269^if  ( from == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^if  ( to == Type.SHORT_TYPE )  {^254^^^^^239^269^if  ( from == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( from >= Type.FLOAT_TYPE )  {^263^^^^^248^278^} else if  ( from == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( from != Type.FLOAT_TYPE )  {^263^^^^^248^278^} else if  ( from == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( from <= Type.FLOAT_TYPE )  {^263^^^^^248^278^} else if  ( from == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( to == Type.FLOAT_TYPE )  {^263^^^^^248^278^} else if  ( from == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( to == Type.DOUBLE_TYPE )  {^263^^^^^248^278^} else if  ( from == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( to == Type.LONG_TYPE )  {^263^^^^^248^278^} else if  ( from == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( from == Type.LONG_TYPE )  {^263^^^^^248^278^} else if  ( from == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( to == Type.BYTE_TYPE )  {^263^^^^^248^278^} else if  ( from == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( to == Type.CHAR_TYPE )  {^263^^^^^248^278^} else if  ( from == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( to == Type.SHORT_TYPE )  {^263^^^^^248^278^} else if  ( from == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else {^263^^^^^248^278^} else if  ( from == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( from != Type.LONG_TYPE )  {^272^^^^^257^287^} else if  ( from == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( from < Type.LONG_TYPE )  {^272^^^^^257^287^} else if  ( from == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( from >= Type.LONG_TYPE )  {^272^^^^^257^287^} else if  ( from == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( from <= Type.LONG_TYPE )  {^272^^^^^257^287^} else if  ( from == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( from == this )  {^272^^^^^257^287^} else if  ( from == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( to == Type.DOUBLE_TYPE )  {^272^^^^^257^287^} else if  ( from == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( to == Type.FLOAT_TYPE )  {^272^^^^^257^287^} else if  ( from == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( to == Type.BYTE_TYPE )  {^272^^^^^257^287^} else if  ( from == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( to == Type.CHAR_TYPE )  {^272^^^^^257^287^} else if  ( from == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( to == Type.LONG_TYPE )  {^272^^^^^257^287^} else if  ( from == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( to == Type.SHORT_TYPE )  {^272^^^^^257^287^} else if  ( from == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else {^272^^^^^257^287^} else if  ( from == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( to <= Type.BYTE_TYPE )  {^282^^^^^272^295^if  ( to == Type.BYTE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( to >= Type.BYTE_TYPE )  {^282^^^^^272^295^if  ( to == Type.BYTE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( to != Type.BYTE_TYPE )  {^282^^^^^272^295^if  ( to == Type.BYTE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^if  ( from == Type.BYTE_TYPE )  {^282^^^^^272^295^if  ( to == Type.BYTE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^if  ( to == Type.CHAR_TYPE )  {^282^^^^^272^295^if  ( to == Type.BYTE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^if  ( to == Type.DOUBLE_TYPE )  {^282^^^^^272^295^if  ( to == Type.BYTE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^if  ( to == Type.FLOAT_TYPE )  {^282^^^^^272^295^if  ( to == Type.BYTE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^if  ( to == Type.LONG_TYPE )  {^282^^^^^272^295^if  ( to == Type.BYTE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^if  ( to == Type.SHORT_TYPE )  {^282^^^^^272^295^if  ( to == Type.BYTE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to >= Type.CHAR_TYPE )  {^284^^^^^272^295^} else if  ( to == Type.CHAR_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to <= Type.CHAR_TYPE )  {^284^^^^^272^295^} else if  ( to == Type.CHAR_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( from == Type.CHAR_TYPE )  {^284^^^^^272^295^} else if  ( to == Type.CHAR_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( to == Type.DOUBLE_TYPE )  {^284^^^^^272^295^} else if  ( to == Type.CHAR_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( to == Type.FLOAT_TYPE )  {^284^^^^^272^295^} else if  ( to == Type.CHAR_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( to == Type.LONG_TYPE )  {^284^^^^^272^295^} else if  ( to == Type.CHAR_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( to == Type.SHORT_TYPE )  {^284^^^^^272^295^} else if  ( to == Type.CHAR_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else {^284^^^^^272^295^} else if  ( to == Type.CHAR_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to >= Type.DOUBLE_TYPE )  {^286^^^^^272^295^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to != Type.DOUBLE_TYPE )  {^286^^^^^272^295^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( from == Type.DOUBLE_TYPE )  {^286^^^^^272^295^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( to == Type.FLOAT_TYPE )  {^286^^^^^272^295^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( to == Type.LONG_TYPE )  {^286^^^^^272^295^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( to == Type.SHORT_TYPE )  {^286^^^^^272^295^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else {^286^^^^^272^295^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( from == Type.DOUBLE_TYPE )  {^286^^^^^272^295^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to >= Type.FLOAT_TYPE )  {^288^^^^^272^295^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to != Type.FLOAT_TYPE )  {^288^^^^^272^295^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to <= Type.FLOAT_TYPE )  {^288^^^^^272^295^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( from == Type.FLOAT_TYPE )  {^288^^^^^272^295^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( to == Type.LONG_TYPE )  {^288^^^^^272^295^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( to == Type.SHORT_TYPE )  {^288^^^^^272^295^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else {^288^^^^^272^295^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to != Type.LONG_TYPE )  {^290^^^^^272^295^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( from == Type.LONG_TYPE )  {^290^^^^^272^295^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( to == Type.SHORT_TYPE )  {^290^^^^^272^295^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else {^290^^^^^272^295^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P15_Unwrap_Block]^mv.visitInsn(Constants.I2L);^290^291^292^293^294^272^295^} else if  ( to == Type.LONG_TYPE )  { mv.visitInsn ( Constants.I2L ) ; } else if  ( to == Type.SHORT_TYPE )  { mv.visitInsn ( Constants.I2S ) ; }^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P16_Remove_Block]^^290^291^292^293^294^272^295^} else if  ( to == Type.LONG_TYPE )  { mv.visitInsn ( Constants.I2L ) ; } else if  ( to == Type.SHORT_TYPE )  { mv.visitInsn ( Constants.I2S ) ; }^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.DOUBLE_TYPE )  )  {     mv.visitInsn ( Constants.F2D ) ; }else     if  ( to ==  ( Type.LONG_TYPE )  )  {         mv.visitInsn ( Constants.F2L ) ;     }else {         mv.visitInsn ( Constants.F2I ) ;         cast_numeric ( Type.INT_TYPE, to ) ;     }^290^^^^^272^295^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.FLOAT_TYPE )  )  {     mv.visitInsn ( Constants.I2F ) ; }else     if  ( to ==  ( Type.LONG_TYPE )  )  {         mv.visitInsn ( Constants.I2L ) ;     }else         if  ( to ==  ( Type.SHORT_TYPE )  )  {             mv.visitInsn ( Constants.I2S ) ;         }^290^^^^^272^295^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.LONG_TYPE )  )  {     mv.visitInsn ( Constants.D2L ) ; }else {     mv.visitInsn ( Constants.D2I ) ;     cast_numeric ( Type.INT_TYPE, to ) ; }^290^^^^^272^295^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.FLOAT_TYPE )  )  {     mv.visitInsn ( Constants.D2F ) ; }else     if  ( to ==  ( Type.LONG_TYPE )  )  {         mv.visitInsn ( Constants.D2L ) ;     }else {         mv.visitInsn ( Constants.D2I ) ;         cast_numeric ( Type.INT_TYPE, to ) ;     }^290^^^^^272^295^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.LONG_TYPE )  )  {     mv.visitInsn ( Constants.F2L ) ; }else {     mv.visitInsn ( Constants.F2I ) ;     cast_numeric ( Type.INT_TYPE, to ) ; }^290^^^^^272^295^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.DOUBLE_TYPE )  )  {     mv.visitInsn ( Constants.L2D ) ; }else     if  ( to ==  ( Type.FLOAT_TYPE )  )  {         mv.visitInsn ( Constants.L2F ) ;     }else {         mv.visitInsn ( Constants.L2I ) ;         cast_numeric ( Type.INT_TYPE, to ) ;     }^290^^^^^272^295^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.FLOAT_TYPE )  )  {     mv.visitInsn ( Constants.L2F ) ; }else {     mv.visitInsn ( Constants.L2I ) ;     cast_numeric ( Type.INT_TYPE, to ) ; }^290^^^^^272^295^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to != Type.SHORT_TYPE )  {^292^^^^^272^295^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( from == Type.SHORT_TYPE )  {^292^^^^^272^295^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( Type.SHORT_TYPE == to )  {^292^^^^^272^295^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else {^292^^^^^272^295^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P9_Replace_Statement]^} else if  ( to == Type.LONG_TYPE )  {^292^^^^^272^295^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P15_Unwrap_Block]^mv.visitInsn(Constants.I2S);^292^293^294^^^272^295^} else if  ( to == Type.SHORT_TYPE )  { mv.visitInsn ( Constants.I2S ) ; }^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P16_Remove_Block]^^292^293^294^^^272^295^} else if  ( to == Type.SHORT_TYPE )  { mv.visitInsn ( Constants.I2S ) ; }^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitIntInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2L ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.BIPUSH, i ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.FCMPG ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( Constants.ALOAD, 0 ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2C ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( intOp, label ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.ICONST ( i )  ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.DCMPG ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitTypeInsn ( opcode, desc ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( mode, label ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2I ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2L ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.LCONST ( value )  ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2D ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2L ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2I ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( t.getOpcode ( Constants.ISTORE ) , pos ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2D ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2F ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.ARRAYLENGTH ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.SIPUSH, i ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitLdcInsn ( value ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2D ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( t.getOpcode ( Constants.ILOAD ) , pos ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2B ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.LCMP ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.DCONST ( value )  ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2F ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2I ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2F ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.FCONST ( value )  ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitIntInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2L ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.BIPUSH, i ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.FCMPG ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( Constants.ALOAD, 0 ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2C ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( intOp, label ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.ICONST ( i )  ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.DCMPG ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitTypeInsn ( opcode, desc ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( mode, label ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2I ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.LCONST ( value )  ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2D ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2L ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2I ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2D ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2F ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.ARRAYLENGTH ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.SIPUSH, i ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitLdcInsn ( value ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2D ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( t.getOpcode ( Constants.ILOAD ) , pos ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2B ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2S ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.LCMP ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.DCONST ( value )  ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2F ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2I ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2F ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.FCONST ( value )  ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitIntInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2L ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.BIPUSH, i ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.FCMPG ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( Constants.ALOAD, 0 ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2C ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( intOp, label ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.ICONST ( i )  ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.DCMPG ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitTypeInsn ( opcode, desc ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( mode, label ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2I ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2L ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.LCONST ( value )  ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2D ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2L ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2I ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2D ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.ARRAYLENGTH ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.SIPUSH, i ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitLdcInsn ( value ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2D ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( t.getOpcode ( Constants.ILOAD ) , pos ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2B ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2S ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.LCMP ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.DCONST ( value )  ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2F ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2I ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2F ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.FCONST ( value )  ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( Type.LONG_TYPE == to )  {^290^^^^^272^295^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to >= Type.SHORT_TYPE )  {^292^^^^^272^295^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( to == 4 )  {^292^^^^^272^295^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( from == Type.SHORT_TYPE )  {^292^^^^^272^295^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitIntInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2L ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.BIPUSH, i ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.FCMPG ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( Constants.ALOAD, 0 ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2C ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( intOp, label ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.ICONST ( i )  ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.DCMPG ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitTypeInsn ( opcode, desc ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( mode, label ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2I ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2L ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.LCONST ( value )  ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2D ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2L ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2I ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2F ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.ARRAYLENGTH ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.SIPUSH, i ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitLdcInsn ( value ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2D ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( t.getOpcode ( Constants.ILOAD ) , pos ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2B ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2S ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.LCMP ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.DCONST ( value )  ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2F ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2I ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2F ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.FCONST ( value )  ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to > Type.FLOAT_TYPE )  {^288^^^^^272^295^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to < Type.LONG_TYPE )  {^290^^^^^272^295^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( from == Type.LONG_TYPE )  {^290^^^^^272^295^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to <= Type.SHORT_TYPE )  {^292^^^^^272^295^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to >= Type.LONG_TYPE )  {^290^^^^^272^295^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to > Type.LONG_TYPE )  {^290^^^^^272^295^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( to == 1 )  {^290^^^^^272^295^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv .visitLdcInsn ( this )  ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitIntInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2L ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.BIPUSH, i ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.FCMPG ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( Constants.ALOAD, 0 ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( intOp, label ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.ICONST ( i )  ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.DCMPG ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitTypeInsn ( opcode, desc ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( mode, label ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2I ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2L ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.LCONST ( value )  ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2D ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2L ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2I ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2D ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2F ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.ARRAYLENGTH ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.SIPUSH, i ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitLdcInsn ( value ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2D ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( t.getOpcode ( Constants.ILOAD ) , pos ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2B ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2S ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.LCMP ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.DCONST ( value )  ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2F ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2I ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2F ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.FCONST ( value )  ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^272^295^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to <= Type.DOUBLE_TYPE )  {^286^^^^^272^295^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( Type.DOUBLE_TYPE == to )  {^286^^^^^272^295^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to > Type.SHORT_TYPE )  {^292^^^^^272^295^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( to == null )  {^292^^^^^272^295^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to <= Type.LONG_TYPE )  {^290^^^^^272^295^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to < Type.SHORT_TYPE )  {^292^^^^^272^295^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitIntInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2L ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.BIPUSH, i ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.FCMPG ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( Constants.ALOAD, 0 ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2C ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( intOp, label ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.ICONST ( i )  ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.DCMPG ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitTypeInsn ( opcode, desc ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( mode, label ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2I ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2L ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.LCONST ( value )  ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2D ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2L ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2I ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2D ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2F ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.ARRAYLENGTH ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.SIPUSH, i ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitLdcInsn ( value ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2D ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( t.getOpcode ( Constants.ILOAD ) , pos ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2S ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.LCMP ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.DCONST ( value )  ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2F ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2I ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2F ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.FCONST ( value )  ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to != Type.CHAR_TYPE )  {^284^^^^^272^295^} else if  ( to == Type.CHAR_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( Type.FLOAT_TYPE == to )  {^288^^^^^272^295^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^} else if  ( to == this )  {^288^^^^^272^295^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( to == null )  {^290^^^^^272^295^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^mv .visitLdcInsn ( 3 )  ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv .visitLdcInsn ( this )  ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( to == Type.SHORT_TYPE )  {^292^^^^^272^295^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to < Type.DOUBLE_TYPE )  {^286^^^^^272^295^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( from == Type.FLOAT_TYPE )  {^288^^^^^272^295^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( to == this )  {^290^^^^^272^295^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( to == 2 )  {^288^^^^^272^295^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^} else if  ( to == 3 )  {^290^^^^^272^295^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( to < Type.DOUBLE_TYPE )  {^273^^^^^258^288^if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( to != Type.DOUBLE_TYPE )  {^273^^^^^258^288^if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^if  ( from == Type.DOUBLE_TYPE )  {^273^^^^^258^288^if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^if  ( Type.DOUBLE_TYPE == to )  {^273^^^^^258^288^if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^if  ( to == Type.FLOAT_TYPE )  {^273^^^^^258^288^if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to != Type.FLOAT_TYPE )  {^275^^^^^260^290^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( from == Type.FLOAT_TYPE )  {^275^^^^^260^290^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else {^275^^^^^260^290^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P9_Replace_Statement]^} else if  ( to == Type.LONG_TYPE )  {^275^^^^^260^290^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P15_Unwrap_Block]^mv.visitInsn(Constants.L2F);^275^276^277^278^279^260^290^} else if  ( to == Type.FLOAT_TYPE )  { mv.visitInsn ( Constants.L2F ) ; } else { mv.visitInsn ( Constants.L2I ) ; cast_numeric ( Type.INT_TYPE, to ) ; }^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P16_Remove_Block]^^275^276^277^278^279^260^290^} else if  ( to == Type.FLOAT_TYPE )  { mv.visitInsn ( Constants.L2F ) ; } else { mv.visitInsn ( Constants.L2I ) ; cast_numeric ( Type.INT_TYPE, to ) ; }^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.DOUBLE_TYPE )  )  {     mv.visitInsn ( Constants.F2D ) ; }else     if  ( to ==  ( Type.LONG_TYPE )  )  {         mv.visitInsn ( Constants.F2L ) ;     }else {         mv.visitInsn ( Constants.F2I ) ;         cast_numeric ( Type.INT_TYPE, to ) ;     }^275^^^^^260^290^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.FLOAT_TYPE )  )  {     mv.visitInsn ( Constants.I2F ) ; }else     if  ( to ==  ( Type.LONG_TYPE )  )  {         mv.visitInsn ( Constants.I2L ) ;     }else         if  ( to ==  ( Type.SHORT_TYPE )  )  {             mv.visitInsn ( Constants.I2S ) ;         }^275^^^^^260^290^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.LONG_TYPE )  )  {     mv.visitInsn ( Constants.D2L ) ; }else {     mv.visitInsn ( Constants.D2I ) ;     cast_numeric ( Type.INT_TYPE, to ) ; }^275^^^^^260^290^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.FLOAT_TYPE )  )  {     mv.visitInsn ( Constants.D2F ) ; }else     if  ( to ==  ( Type.LONG_TYPE )  )  {         mv.visitInsn ( Constants.D2L ) ;     }else {         mv.visitInsn ( Constants.D2I ) ;         cast_numeric ( Type.INT_TYPE, to ) ;     }^275^^^^^260^290^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.LONG_TYPE )  )  {     mv.visitInsn ( Constants.I2L ) ; }else     if  ( to ==  ( Type.SHORT_TYPE )  )  {         mv.visitInsn ( Constants.I2S ) ;     }^275^^^^^260^290^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.LONG_TYPE )  )  {     mv.visitInsn ( Constants.F2L ) ; }else {     mv.visitInsn ( Constants.F2I ) ;     cast_numeric ( Type.INT_TYPE, to ) ; }^275^^^^^260^290^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.DOUBLE_TYPE )  )  {     mv.visitInsn ( Constants.L2D ) ; }else     if  ( to ==  ( Type.FLOAT_TYPE )  )  {         mv.visitInsn ( Constants.L2F ) ;     }else {         mv.visitInsn ( Constants.L2I ) ;         cast_numeric ( Type.INT_TYPE, to ) ;     }^275^^^^^260^290^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitIntInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2L ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.BIPUSH, i ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.FCMPG ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( Constants.ALOAD, 0 ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2C ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( intOp, label ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.ICONST ( i )  ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.DCMPG ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitTypeInsn ( opcode, desc ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( mode, label ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2I ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2L ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.LCONST ( value )  ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2D ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2L ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2D ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2F ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.ARRAYLENGTH ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.SIPUSH, i ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitLdcInsn ( value ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2D ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( t.getOpcode ( Constants.ILOAD ) , pos ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2B ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2S ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.LCMP ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.DCONST ( value )  ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2F ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2I ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2F ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.FCONST ( value )  ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^cast_numeric ( Type.INT_TYPE, from ) ;^279^^^^^275^280^cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^array_store ( Type.INT_TYPE, to ) ;^279^^^^^275^280^cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^array_store ( Type.INT_TYPE, from ) ;^279^^^^^275^280^cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^279^^^^^275^280^cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^math ( XOR, Type.INT_TYPE ) ;cast_numeric ( Type.INT_TYPE, to ) ;^279^^^^^275^280^cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitIntInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2L ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.BIPUSH, i ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.FCMPG ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( Constants.ALOAD, 0 ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2C ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( intOp, label ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.ICONST ( i )  ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.DCMPG ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitTypeInsn ( opcode, desc ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( mode, label ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2I ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2L ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.LCONST ( value )  ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2D ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2L ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2I ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2D ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2F ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.ARRAYLENGTH ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.SIPUSH, i ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitLdcInsn ( value ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2D ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( t.getOpcode ( Constants.ILOAD ) , pos ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2B ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2S ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.LCMP ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.DCONST ( value )  ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2I ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2F ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.FCONST ( value )  ) ;mv.visitInsn ( Constants.L2F ) ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitIntInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2L ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.BIPUSH, i ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.FCMPG ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( Constants.ALOAD, 0 ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2C ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( intOp, label ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.ICONST ( i )  ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.DCMPG ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitTypeInsn ( opcode, desc ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( mode, label ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2I ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2L ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.LCONST ( value )  ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2D ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2L ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2D ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2F ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.ARRAYLENGTH ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.SIPUSH, i ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitLdcInsn ( value ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2D ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( t.getOpcode ( Constants.ILOAD ) , pos ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2B ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2S ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.LCMP ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.DCONST ( value )  ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2F ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2I ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2F ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.FCONST ( value )  ) ;mv.visitInsn ( Constants.L2I ) ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^cast_numeric ( Type.INT_TYPE, from ) ;^279^^^^^264^294^cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^array_store ( Type.INT_TYPE, to ) ;^279^^^^^264^294^cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^279^^^^^264^294^cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^math ( XOR, Type.INT_TYPE ) ;cast_numeric ( Type.INT_TYPE, to ) ;^279^^^^^264^294^cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitIntInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2L ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.BIPUSH, i ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.FCMPG ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( Constants.ALOAD, 0 ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2C ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( intOp, label ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.ICONST ( i )  ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.DCMPG ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitTypeInsn ( opcode, desc ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( mode, label ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2I ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2L ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.LCONST ( value )  ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2L ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2I ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2D ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2F ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.ARRAYLENGTH ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.SIPUSH, i ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitLdcInsn ( value ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2D ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( t.getOpcode ( Constants.ILOAD ) , pos ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2B ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2S ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.LCMP ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.DCONST ( value )  ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2F ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2I ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2F ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.FCONST ( value )  ) ;mv.visitInsn ( Constants.L2D ) ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( Type.FLOAT_TYPE == to )  {^275^^^^^260^290^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^278^279^^^^275^280^mv.visitInsn ( Constants.L2I ) ; cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^278^279^^^^263^293^mv.visitInsn ( Constants.L2I ) ; cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( to <= Type.DOUBLE_TYPE )  {^273^^^^^258^288^if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( to == 3 )  {^275^^^^^260^290^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( to > Type.BYTE_TYPE )  {^282^^^^^267^297^if  ( to == Type.BYTE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( to != Type.BYTE_TYPE )  {^282^^^^^267^297^if  ( to == Type.BYTE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( to >= Type.BYTE_TYPE )  {^282^^^^^267^297^if  ( to == Type.BYTE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( to <= Type.BYTE_TYPE )  {^282^^^^^267^297^if  ( to == Type.BYTE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^if  ( from == Type.BYTE_TYPE )  {^282^^^^^267^297^if  ( to == Type.BYTE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^if  ( to == Type.CHAR_TYPE )  {^282^^^^^267^297^if  ( to == Type.BYTE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^if  ( to == Type.DOUBLE_TYPE )  {^282^^^^^267^297^if  ( to == Type.BYTE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^if  ( to == Type.FLOAT_TYPE )  {^282^^^^^267^297^if  ( to == Type.BYTE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^if  ( to == Type.LONG_TYPE )  {^282^^^^^267^297^if  ( to == Type.BYTE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^if  ( to == Type.SHORT_TYPE )  {^282^^^^^267^297^if  ( to == Type.BYTE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^if  ( to == null )  {^282^^^^^267^297^if  ( to == Type.BYTE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to <= Type.CHAR_TYPE )  {^284^^^^^269^299^} else if  ( to == Type.CHAR_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to != Type.CHAR_TYPE )  {^284^^^^^269^299^} else if  ( to == Type.CHAR_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to >= Type.CHAR_TYPE )  {^284^^^^^269^299^} else if  ( to == Type.CHAR_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( from == Type.CHAR_TYPE )  {^284^^^^^269^299^} else if  ( to == Type.CHAR_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( to == Type.DOUBLE_TYPE )  {^284^^^^^269^299^} else if  ( to == Type.CHAR_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( to == Type.FLOAT_TYPE )  {^284^^^^^269^299^} else if  ( to == Type.CHAR_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( to == Type.LONG_TYPE )  {^284^^^^^269^299^} else if  ( to == Type.CHAR_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( to == Type.SHORT_TYPE )  {^284^^^^^269^299^} else if  ( to == Type.CHAR_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else {^284^^^^^269^299^} else if  ( to == Type.CHAR_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to <= Type.DOUBLE_TYPE )  {^286^^^^^271^301^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to >= Type.DOUBLE_TYPE )  {^286^^^^^271^301^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( Type.DOUBLE_TYPE == to )  {^286^^^^^271^301^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( to == Type.FLOAT_TYPE )  {^286^^^^^271^301^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( to == Type.LONG_TYPE )  {^286^^^^^271^301^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( to == Type.SHORT_TYPE )  {^286^^^^^271^301^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else {^286^^^^^271^301^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( to == Type.DOUBLE_TYPE )  {^286^^^^^271^301^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to >= Type.FLOAT_TYPE )  {^288^^^^^273^303^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to != Type.FLOAT_TYPE )  {^288^^^^^273^303^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to <= Type.FLOAT_TYPE )  {^288^^^^^273^303^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( from == Type.FLOAT_TYPE )  {^288^^^^^273^303^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( to == Type.LONG_TYPE )  {^288^^^^^273^303^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( to == Type.SHORT_TYPE )  {^288^^^^^273^303^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else {^288^^^^^273^303^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to < Type.LONG_TYPE )  {^290^^^^^275^305^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( from == Type.LONG_TYPE )  {^290^^^^^275^305^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( Type.LONG_TYPE == to )  {^290^^^^^275^305^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else if  ( to == Type.SHORT_TYPE )  {^290^^^^^275^305^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else {^290^^^^^275^305^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P15_Unwrap_Block]^mv.visitInsn(Constants.I2L);^290^291^292^293^294^275^305^} else if  ( to == Type.LONG_TYPE )  { mv.visitInsn ( Constants.I2L ) ; } else if  ( to == Type.SHORT_TYPE )  { mv.visitInsn ( Constants.I2S ) ; }^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P16_Remove_Block]^^290^291^292^293^294^275^305^} else if  ( to == Type.LONG_TYPE )  { mv.visitInsn ( Constants.I2L ) ; } else if  ( to == Type.SHORT_TYPE )  { mv.visitInsn ( Constants.I2S ) ; }^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.DOUBLE_TYPE )  )  {     mv.visitInsn ( Constants.F2D ) ; }else     if  ( to ==  ( Type.LONG_TYPE )  )  {         mv.visitInsn ( Constants.F2L ) ;     }else {         mv.visitInsn ( Constants.F2I ) ;         cast_numeric ( Type.INT_TYPE, to ) ;     }^290^^^^^275^305^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.FLOAT_TYPE )  )  {     mv.visitInsn ( Constants.I2F ) ; }else     if  ( to ==  ( Type.LONG_TYPE )  )  {         mv.visitInsn ( Constants.I2L ) ;     }else         if  ( to ==  ( Type.SHORT_TYPE )  )  {             mv.visitInsn ( Constants.I2S ) ;         }^290^^^^^275^305^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.LONG_TYPE )  )  {     mv.visitInsn ( Constants.D2L ) ; }else {     mv.visitInsn ( Constants.D2I ) ;     cast_numeric ( Type.INT_TYPE, to ) ; }^290^^^^^275^305^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.FLOAT_TYPE )  )  {     mv.visitInsn ( Constants.D2F ) ; }else     if  ( to ==  ( Type.LONG_TYPE )  )  {         mv.visitInsn ( Constants.D2L ) ;     }else {         mv.visitInsn ( Constants.D2I ) ;         cast_numeric ( Type.INT_TYPE, to ) ;     }^290^^^^^275^305^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.LONG_TYPE )  )  {     mv.visitInsn ( Constants.F2L ) ; }else {     mv.visitInsn ( Constants.F2I ) ;     cast_numeric ( Type.INT_TYPE, to ) ; }^290^^^^^275^305^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.DOUBLE_TYPE )  )  {     mv.visitInsn ( Constants.L2D ) ; }else     if  ( to ==  ( Type.FLOAT_TYPE )  )  {         mv.visitInsn ( Constants.L2F ) ;     }else {         mv.visitInsn ( Constants.L2I ) ;         cast_numeric ( Type.INT_TYPE, to ) ;     }^290^^^^^275^305^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.FLOAT_TYPE )  )  {     mv.visitInsn ( Constants.L2F ) ; }else {     mv.visitInsn ( Constants.L2I ) ;     cast_numeric ( Type.INT_TYPE, to ) ; }^290^^^^^275^305^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to != Type.SHORT_TYPE )  {^292^^^^^277^307^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( from == Type.SHORT_TYPE )  {^292^^^^^277^307^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( Type.SHORT_TYPE == to )  {^292^^^^^277^307^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else {^292^^^^^277^307^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P9_Replace_Statement]^} else if  ( to == Type.LONG_TYPE )  {^292^^^^^277^307^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P15_Unwrap_Block]^mv.visitInsn(Constants.I2S);^292^293^294^^^277^307^} else if  ( to == Type.SHORT_TYPE )  { mv.visitInsn ( Constants.I2S ) ; }^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P16_Remove_Block]^^292^293^294^^^277^307^} else if  ( to == Type.SHORT_TYPE )  { mv.visitInsn ( Constants.I2S ) ; }^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitIntInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2L ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.BIPUSH, i ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.FCMPG ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( Constants.ALOAD, 0 ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2C ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( intOp, label ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.ICONST ( i )  ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.DCMPG ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitTypeInsn ( opcode, desc ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( mode, label ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2I ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2L ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.LCONST ( value )  ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2D ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2L ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2I ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( t.getOpcode ( Constants.ISTORE ) , pos ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2D ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2F ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.ARRAYLENGTH ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.SIPUSH, i ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitLdcInsn ( value ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2D ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( t.getOpcode ( Constants.ILOAD ) , pos ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2B ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.LCMP ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.DCONST ( value )  ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2F ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2I ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2F ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.FCONST ( value )  ) ;mv.visitInsn ( Constants.I2S ) ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitIntInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2L ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.BIPUSH, i ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.FCMPG ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( Constants.ALOAD, 0 ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2C ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( intOp, label ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.ICONST ( i )  ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.DCMPG ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitTypeInsn ( opcode, desc ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( mode, label ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2I ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.LCONST ( value )  ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2D ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2L ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2I ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2D ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2F ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.ARRAYLENGTH ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.SIPUSH, i ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitLdcInsn ( value ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2D ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( t.getOpcode ( Constants.ILOAD ) , pos ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2B ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2S ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.LCMP ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.DCONST ( value )  ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2F ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2I ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2F ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.FCONST ( value )  ) ;mv.visitInsn ( Constants.I2L ) ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitIntInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2L ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.BIPUSH, i ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.FCMPG ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( Constants.ALOAD, 0 ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2C ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( intOp, label ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.ICONST ( i )  ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.DCMPG ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitTypeInsn ( opcode, desc ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( mode, label ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2I ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2L ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.LCONST ( value )  ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2D ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2L ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2I ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2D ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.ARRAYLENGTH ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.SIPUSH, i ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitLdcInsn ( value ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2D ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( t.getOpcode ( Constants.ILOAD ) , pos ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2B ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2S ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.LCMP ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.DCONST ( value )  ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2F ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2I ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2F ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.FCONST ( value )  ) ;mv.visitInsn ( Constants.I2F ) ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to >= Type.LONG_TYPE )  {^290^^^^^275^305^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to != Type.LONG_TYPE )  {^290^^^^^275^305^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to <= Type.SHORT_TYPE )  {^292^^^^^277^307^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( from == Type.SHORT_TYPE )  {^292^^^^^277^307^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitIntInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2L ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.BIPUSH, i ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.FCMPG ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( Constants.ALOAD, 0 ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2C ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( intOp, label ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.ICONST ( i )  ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.DCMPG ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitTypeInsn ( opcode, desc ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( mode, label ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2I ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2L ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.LCONST ( value )  ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2D ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2L ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2I ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2F ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.ARRAYLENGTH ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.SIPUSH, i ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitLdcInsn ( value ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2D ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( t.getOpcode ( Constants.ILOAD ) , pos ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2B ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2S ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.LCMP ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.DCONST ( value )  ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2F ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2I ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2F ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.FCONST ( value )  ) ;mv.visitInsn ( Constants.I2D ) ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( from == Type.FLOAT_TYPE )  {^288^^^^^273^303^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to > Type.LONG_TYPE )  {^290^^^^^275^305^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to < Type.SHORT_TYPE )  {^292^^^^^277^307^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to <= Type.LONG_TYPE )  {^290^^^^^275^305^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( from == Type.LONG_TYPE )  {^290^^^^^275^305^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitIntInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2L ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.BIPUSH, i ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.FCMPG ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( Constants.ALOAD, 0 ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( intOp, label ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.ICONST ( i )  ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.DCMPG ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitTypeInsn ( opcode, desc ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( mode, label ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2I ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2L ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.LCONST ( value )  ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2D ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2L ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2I ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2D ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2F ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.ARRAYLENGTH ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.SIPUSH, i ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitLdcInsn ( value ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2D ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( t.getOpcode ( Constants.ILOAD ) , pos ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2B ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2S ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.LCMP ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.DCONST ( value )  ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2F ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2I ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2F ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.FCONST ( value )  ) ;mv.visitInsn ( Constants.I2C ) ;^285^^^^^270^300^mv.visitInsn ( Constants.I2C ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to != Type.DOUBLE_TYPE )  {^286^^^^^271^301^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( from == Type.DOUBLE_TYPE )  {^286^^^^^271^301^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( to == 3 )  {^286^^^^^271^301^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( from == Type.DOUBLE_TYPE )  {^286^^^^^271^301^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^mv .visitLdcInsn ( this )  ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( to == null )  {^292^^^^^277^307^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitIntInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2L ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.BIPUSH, i ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.FCMPG ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( Constants.ALOAD, 0 ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2C ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( intOp, label ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.ICONST ( i )  ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.DCMPG ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitTypeInsn ( opcode, desc ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( mode, label ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2I ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2L ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.LCONST ( value )  ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2D ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2L ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2I ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2D ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2F ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.ARRAYLENGTH ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.SIPUSH, i ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitLdcInsn ( value ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2D ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( t.getOpcode ( Constants.ILOAD ) , pos ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2S ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.LCMP ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.DCONST ( value )  ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2F ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2I ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2F ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.FCONST ( value )  ) ;mv.visitInsn ( Constants.I2B ) ;^283^^^^^268^298^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to > Type.FLOAT_TYPE )  {^288^^^^^273^303^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to > Type.SHORT_TYPE )  {^292^^^^^277^307^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to >= Type.SHORT_TYPE )  {^292^^^^^277^307^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv .visitLdcInsn ( this )  ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^mv .visitLdcInsn ( null )  ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to < Type.DOUBLE_TYPE )  {^286^^^^^271^301^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( to == 4 )  {^292^^^^^277^307^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to < Type.FLOAT_TYPE )  {^288^^^^^273^303^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( Type.FLOAT_TYPE == to )  {^288^^^^^273^303^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( to == Type.SHORT_TYPE )  {^292^^^^^277^307^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv .visitLdcInsn ( 1 )  ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( to != Type.DOUBLE_TYPE )  {^264^^^^^249^279^if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^if  ( from == Type.DOUBLE_TYPE )  {^264^^^^^249^279^if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^if  ( Type.DOUBLE_TYPE == to )  {^264^^^^^249^279^if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^if  ( to == Type.LONG_TYPE )  {^264^^^^^249^279^if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to != Type.LONG_TYPE )  {^266^^^^^251^281^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( Type.LONG_TYPE == to )  {^266^^^^^251^281^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else {^266^^^^^251^281^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P15_Unwrap_Block]^mv.visitInsn(Constants.F2L);^266^267^268^269^270^251^281^} else if  ( to == Type.LONG_TYPE )  { mv.visitInsn ( Constants.F2L ) ; } else { mv.visitInsn ( Constants.F2I ) ; cast_numeric ( Type.INT_TYPE, to ) ; }^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P16_Remove_Block]^^266^267^268^269^270^251^281^} else if  ( to == Type.LONG_TYPE )  { mv.visitInsn ( Constants.F2L ) ; } else { mv.visitInsn ( Constants.F2I ) ; cast_numeric ( Type.INT_TYPE, to ) ; }^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.DOUBLE_TYPE )  )  {     mv.visitInsn ( Constants.F2D ) ; }else     if  ( to ==  ( Type.LONG_TYPE )  )  {         mv.visitInsn ( Constants.F2L ) ;     }else {         mv.visitInsn ( Constants.F2I ) ;         cast_numeric ( Type.INT_TYPE, to ) ;     }^266^^^^^251^281^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.LONG_TYPE )  )  {     mv.visitInsn ( Constants.D2L ) ; }else {     mv.visitInsn ( Constants.D2I ) ;     cast_numeric ( Type.INT_TYPE, to ) ; }^266^^^^^251^281^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.FLOAT_TYPE )  )  {     mv.visitInsn ( Constants.D2F ) ; }else     if  ( to ==  ( Type.LONG_TYPE )  )  {         mv.visitInsn ( Constants.D2L ) ;     }else {         mv.visitInsn ( Constants.D2I ) ;         cast_numeric ( Type.INT_TYPE, to ) ;     }^266^^^^^251^281^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.LONG_TYPE )  )  {     mv.visitInsn ( Constants.I2L ) ; }else     if  ( to ==  ( Type.SHORT_TYPE )  )  {         mv.visitInsn ( Constants.I2S ) ;     }^266^^^^^251^281^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.DOUBLE_TYPE )  )  {     mv.visitInsn ( Constants.L2D ) ; }else     if  ( to ==  ( Type.FLOAT_TYPE )  )  {         mv.visitInsn ( Constants.L2F ) ;     }else {         mv.visitInsn ( Constants.L2I ) ;         cast_numeric ( Type.INT_TYPE, to ) ;     }^266^^^^^251^281^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.FLOAT_TYPE )  )  {     mv.visitInsn ( Constants.L2F ) ; }else {     mv.visitInsn ( Constants.L2I ) ;     cast_numeric ( Type.INT_TYPE, to ) ; }^266^^^^^251^281^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitIntInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^269^270^^^^266^271^mv.visitInsn ( Constants.F2I ) ; cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2L ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.BIPUSH, i ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.FCMPG ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( Constants.ALOAD, 0 ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2C ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( intOp, label ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.ICONST ( i )  ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.DCMPG ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitTypeInsn ( opcode, desc ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( mode, label ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2I ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2L ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.LCONST ( value )  ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2D ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2L ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2I ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2D ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2F ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.ARRAYLENGTH ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.SIPUSH, i ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitLdcInsn ( value ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2D ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2B ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2S ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.LCMP ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.DCONST ( value )  ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2F ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2F ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.FCONST ( value )  ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^cast_numeric ( Type.INT_TYPE, from ) ;^270^^^^^266^271^cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^array_store ( Type.INT_TYPE, to ) ;^270^^^^^266^271^cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^270^^^^^266^271^cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^math ( XOR, Type.INT_TYPE ) ;cast_numeric ( Type.INT_TYPE, to ) ;^270^^^^^266^271^cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitIntInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.BIPUSH, i ) ;mv.visitInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.FCMPG ) ;mv.visitInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;mv.visitInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( Constants.ALOAD, 0 ) ;mv.visitInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2C ) ;mv.visitInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( intOp, label ) ;mv.visitInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.ICONST ( i )  ) ;mv.visitInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.DCMPG ) ;mv.visitInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitTypeInsn ( opcode, desc ) ;mv.visitInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( mode, label ) ;mv.visitInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2I ) ;mv.visitInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2L ) ;mv.visitInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.LCONST ( value )  ) ;mv.visitInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2D ) ;mv.visitInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2L ) ;mv.visitInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2I ) ;mv.visitInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2D ) ;mv.visitInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2F ) ;mv.visitInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.ARRAYLENGTH ) ;mv.visitInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.SIPUSH, i ) ;mv.visitInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitLdcInsn ( value ) ;mv.visitInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2D ) ;mv.visitInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;mv.visitInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2B ) ;mv.visitInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2S ) ;mv.visitInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.LCMP ) ;mv.visitInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.DCONST ( value )  ) ;mv.visitInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2F ) ;mv.visitInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2I ) ;mv.visitInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2F ) ;mv.visitInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.FCONST ( value )  ) ;mv.visitInsn ( Constants.F2L ) ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitIntInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2L ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.BIPUSH, i ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.FCMPG ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( Constants.ALOAD, 0 ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2C ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( intOp, label ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.ICONST ( i )  ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.DCMPG ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitTypeInsn ( opcode, desc ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( mode, label ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2I ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2L ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.LCONST ( value )  ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2D ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2L ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2I ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2D ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2F ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.ARRAYLENGTH ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.SIPUSH, i ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitLdcInsn ( value ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2D ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2B ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2S ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.LCMP ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.DCONST ( value )  ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2F ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2F ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.FCONST ( value )  ) ;mv.visitInsn ( Constants.F2I ) ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^cast_numeric ( Type.INT_TYPE, from ) ;^270^^^^^255^285^cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^array_store ( Type.INT_TYPE, to ) ;^270^^^^^255^285^cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^array_store ( Type.INT_TYPE, from ) ;^270^^^^^255^285^cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^270^^^^^255^285^cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^math ( XOR, Type.INT_TYPE ) ;cast_numeric ( Type.INT_TYPE, to ) ;^270^^^^^255^285^cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitIntInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv .visitLdcInsn ( 3 )  ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2L ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.BIPUSH, i ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.FCMPG ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( Constants.ALOAD, 0 ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2C ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( intOp, label ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.ICONST ( i )  ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.DCMPG ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitTypeInsn ( opcode, desc ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( mode, label ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2I ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2L ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.LCONST ( value )  ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2D ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2L ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2I ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2D ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2F ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.ARRAYLENGTH ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.SIPUSH, i ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitLdcInsn ( value ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( t.getOpcode ( Constants.ILOAD ) , pos ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2B ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2S ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.LCMP ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.DCONST ( value )  ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2F ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2I ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2F ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.FCONST ( value )  ) ;mv.visitInsn ( Constants.F2D ) ;^265^^^^^250^280^mv.visitInsn ( Constants.F2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to < Type.LONG_TYPE )  {^266^^^^^251^281^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( from == Type.LONG_TYPE )  {^266^^^^^251^281^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^269^270^^^^254^284^mv.visitInsn ( Constants.F2I ) ; cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to >= Type.LONG_TYPE )  {^266^^^^^251^281^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^269^^^^^266^271^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( to == null )  {^266^^^^^251^281^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^array_store ( Type.INT_TYPE, from ) ;^270^^^^^266^271^cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^if  ( Type.BYTE_TYPE == to )  {^282^^^^^272^295^if  ( to == Type.BYTE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to > Type.CHAR_TYPE )  {^284^^^^^272^295^} else if  ( to == Type.CHAR_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( from == Type.CHAR_TYPE )  {^284^^^^^272^295^} else if  ( to == Type.CHAR_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to < Type.FLOAT_TYPE )  {^288^^^^^272^295^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv .visitLdcInsn ( 1 )  ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( to == 4 )  {^292^^^^^272^295^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^mv .visitLdcInsn ( 4 )  ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( to == 0 )  {^292^^^^^272^295^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^mv .visitLdcInsn ( null )  ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( to == this )  {^292^^^^^272^295^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^mv .visitLdcInsn ( 1 )  ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv .visitLdcInsn ( 3 )  ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^mv .visitLdcInsn ( 2 )  ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to > Type.DOUBLE_TYPE )  {^286^^^^^272^295^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( to == null )  {^286^^^^^272^295^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to <= Type.FLOAT_TYPE )  {^275^^^^^260^290^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to >= Type.FLOAT_TYPE )  {^275^^^^^260^290^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^mv .visitLdcInsn ( null )  ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( to >= Type.DOUBLE_TYPE )  {^273^^^^^258^288^if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( from == Type.CHAR_TYPE )  {^284^^^^^269^299^} else if  ( to == Type.CHAR_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to > Type.DOUBLE_TYPE )  {^286^^^^^271^301^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^} else if  ( to == this )  {^292^^^^^277^307^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( to == 3 )  {^292^^^^^277^307^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( to == Type.LONG_TYPE )  {^290^^^^^275^305^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( to == null )  {^286^^^^^271^301^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv .visitLdcInsn ( null )  ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( to == Type.FLOAT_TYPE )  {^288^^^^^273^303^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( to == 0 )  {^292^^^^^277^307^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv .visitLdcInsn ( 3 )  ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv .visitLdcInsn ( 2 )  ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv .visitLdcInsn ( 0 )  ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( to == 2 )  {^292^^^^^277^307^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( to != Type.FLOAT_TYPE )  {^255^^^^^240^270^if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( to > Type.FLOAT_TYPE )  {^255^^^^^240^270^if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^if  ( from == Type.FLOAT_TYPE )  {^255^^^^^240^270^if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^if  ( to == Type.LONG_TYPE )  {^255^^^^^240^270^if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to >= Type.LONG_TYPE )  {^257^^^^^242^272^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( from == Type.LONG_TYPE )  {^257^^^^^242^272^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( to == null )  {^257^^^^^242^272^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( Type.LONG_TYPE == to )  {^257^^^^^242^272^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P6_Replace_Expression]^} else {^257^^^^^242^272^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P15_Unwrap_Block]^mv.visitInsn(Constants.D2L);^257^258^259^260^261^242^272^} else if  ( to == Type.LONG_TYPE )  { mv.visitInsn ( Constants.D2L ) ; } else { mv.visitInsn ( Constants.D2I ) ; cast_numeric ( Type.INT_TYPE, to ) ; }^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P16_Remove_Block]^^257^258^259^260^261^242^272^} else if  ( to == Type.LONG_TYPE )  { mv.visitInsn ( Constants.D2L ) ; } else { mv.visitInsn ( Constants.D2I ) ; cast_numeric ( Type.INT_TYPE, to ) ; }^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.DOUBLE_TYPE )  )  {     mv.visitInsn ( Constants.F2D ) ; }else     if  ( to ==  ( Type.LONG_TYPE )  )  {         mv.visitInsn ( Constants.F2L ) ;     }else {         mv.visitInsn ( Constants.F2I ) ;         cast_numeric ( Type.INT_TYPE, to ) ;     }^257^^^^^242^272^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.FLOAT_TYPE )  )  {     mv.visitInsn ( Constants.D2F ) ; }else     if  ( to ==  ( Type.LONG_TYPE )  )  {         mv.visitInsn ( Constants.D2L ) ;     }else {         mv.visitInsn ( Constants.D2I ) ;         cast_numeric ( Type.INT_TYPE, to ) ;     }^257^^^^^242^272^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.LONG_TYPE )  )  {     mv.visitInsn ( Constants.I2L ) ; }else     if  ( to ==  ( Type.SHORT_TYPE )  )  {         mv.visitInsn ( Constants.I2S ) ;     }^257^^^^^242^272^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.LONG_TYPE )  )  {     mv.visitInsn ( Constants.F2L ) ; }else {     mv.visitInsn ( Constants.F2I ) ;     cast_numeric ( Type.INT_TYPE, to ) ; }^257^^^^^242^272^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.DOUBLE_TYPE )  )  {     mv.visitInsn ( Constants.L2D ) ; }else     if  ( to ==  ( Type.FLOAT_TYPE )  )  {         mv.visitInsn ( Constants.L2F ) ;     }else {         mv.visitInsn ( Constants.L2I ) ;         cast_numeric ( Type.INT_TYPE, to ) ;     }^257^^^^^242^272^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P13_Insert_Block]^if  ( to ==  ( Type.FLOAT_TYPE )  )  {     mv.visitInsn ( Constants.L2F ) ; }else {     mv.visitInsn ( Constants.L2I ) ;     cast_numeric ( Type.INT_TYPE, to ) ; }^257^^^^^242^272^[Delete]^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitIntInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2L ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.BIPUSH, i ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.FCMPG ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( Constants.ALOAD, 0 ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2C ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( intOp, label ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.ICONST ( i )  ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.DCMPG ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitTypeInsn ( opcode, desc ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( mode, label ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2L ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.LCONST ( value )  ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2D ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2L ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2I ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2D ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2F ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.ARRAYLENGTH ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.SIPUSH, i ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitLdcInsn ( value ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2D ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( t.getOpcode ( Constants.ILOAD ) , pos ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2B ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2S ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.LCMP ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.DCONST ( value )  ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2F ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2I ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2F ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.FCONST ( value )  ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^cast_numeric ( Type.INT_TYPE, from ) ;^261^^^^^257^262^cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^array_store ( Type.INT_TYPE, to ) ;^261^^^^^257^262^cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^261^^^^^257^262^cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^math ( XOR, Type.INT_TYPE ) ;cast_numeric ( Type.INT_TYPE, to ) ;^261^^^^^257^262^cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitIntInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2L ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.BIPUSH, i ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.FCMPG ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( Constants.ALOAD, 0 ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2C ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( intOp, label ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.ICONST ( i )  ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.DCMPG ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitTypeInsn ( opcode, desc ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( mode, label ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2I ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2L ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.LCONST ( value )  ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2D ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2I ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2D ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2F ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.ARRAYLENGTH ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.SIPUSH, i ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitLdcInsn ( value ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2D ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( t.getOpcode ( Constants.ILOAD ) , pos ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2B ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2S ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.LCMP ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.DCONST ( value )  ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2F ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2I ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2F ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.FCONST ( value )  ) ;mv.visitInsn ( Constants.D2L ) ;^258^^^^^243^273^mv.visitInsn ( Constants.D2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitIntInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2L ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.BIPUSH, i ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.FCMPG ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( Constants.ALOAD, 0 ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2C ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( intOp, label ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.ICONST ( i )  ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.DCMPG ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitTypeInsn ( opcode, desc ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( mode, label ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2L ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.LCONST ( value )  ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2D ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2L ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2I ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2D ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2F ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.ARRAYLENGTH ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.SIPUSH, i ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitLdcInsn ( value ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2D ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( t.getOpcode ( Constants.ILOAD ) , pos ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2B ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2S ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.LCMP ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.DCONST ( value )  ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2F ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2I ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2F ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.FCONST ( value )  ) ;mv.visitInsn ( Constants.D2I ) ;^260^^^^^245^275^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^cast_numeric ( Type.INT_TYPE, from ) ;^261^^^^^246^276^cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^array_store ( Type.INT_TYPE, to ) ;^261^^^^^246^276^cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^261^^^^^246^276^cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^math ( XOR, Type.INT_TYPE ) ;cast_numeric ( Type.INT_TYPE, to ) ;^261^^^^^246^276^cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv.visitIntInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2L ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.BIPUSH, i ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.FCMPG ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( Constants.ALOAD, 0 ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2C ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( intOp, label ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.ICONST ( i )  ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.DCMPG ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitTypeInsn ( opcode, desc ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( mode, label ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2I ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2L ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.LCONST ( value )  ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2D ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.D2L ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2I ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2D ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2F ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.ARRAYLENGTH ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitIntInsn ( Constants.SIPUSH, i ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitLdcInsn ( value ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2D ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitVarInsn ( t.getOpcode ( Constants.ILOAD ) , pos ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2B ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.I2S ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.LCMP ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.DCONST ( value )  ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.L2F ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( Constants.F2I ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P11_Insert_Donor_Statement]^mv.visitInsn ( TypeUtils.FCONST ( value )  ) ;mv.visitInsn ( Constants.D2F ) ;^256^^^^^241^271^mv.visitInsn ( Constants.D2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to != Type.LONG_TYPE )  {^257^^^^^242^272^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( from == Type.LONG_TYPE )  {^257^^^^^242^272^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P14_Delete_Statement]^^260^261^^^^245^275^mv.visitInsn ( Constants.D2I ) ; cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to < Type.LONG_TYPE )  {^257^^^^^242^272^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to > Type.LONG_TYPE )  {^257^^^^^242^272^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv .visitLdcInsn ( 3 )  ;^260^^^^^257^262^mv.visitInsn ( Constants.D2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^array_store ( Type.INT_TYPE, from ) ;^261^^^^^257^262^cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( from < Type.FLOAT_TYPE )  {^263^^^^^248^278^} else if  ( from == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( to == Type.FLOAT_TYPE )  {^263^^^^^248^278^} else if  ( from == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( to > Type.BYTE_TYPE )  {^282^^^^^272^295^if  ( to == Type.BYTE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^} else if  ( to == null )  {^290^^^^^272^295^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv .visitLdcInsn ( 0 )  ;^289^^^^^272^295^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv .visitLdcInsn ( null )  ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv .visitLdcInsn ( 0 )  ;^293^^^^^272^295^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( to == 3 )  {^292^^^^^272^295^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^if  ( to == 1 )  {^273^^^^^258^288^if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^if  ( to == this )  {^273^^^^^258^288^if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to < Type.FLOAT_TYPE )  {^275^^^^^260^290^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( to == 2 )  {^275^^^^^260^290^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv .visitLdcInsn ( null )  ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^array_store ( Type.INT_TYPE, from ) ;^279^^^^^264^294^cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to < Type.CHAR_TYPE )  {^284^^^^^269^299^} else if  ( to == Type.CHAR_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv .visitLdcInsn ( null )  ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( to == this )  {^290^^^^^275^305^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^mv .visitLdcInsn ( 1 )  ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv .visitLdcInsn ( 3 )  ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( to == 1 )  {^290^^^^^275^305^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( to == 1 )  {^292^^^^^277^307^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to > Type.CHAR_TYPE )  {^284^^^^^269^299^} else if  ( to == Type.CHAR_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( to == null )  {^290^^^^^275^305^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv .visitLdcInsn ( 4 )  ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^mv .visitLdcInsn ( 4 )  ;^291^^^^^276^306^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv .visitLdcInsn ( this )  ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( to < Type.DOUBLE_TYPE )  {^264^^^^^249^279^if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( to <= Type.DOUBLE_TYPE )  {^264^^^^^249^279^if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to <= Type.LONG_TYPE )  {^266^^^^^251^281^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv .visitLdcInsn ( 2 )  ;^269^^^^^254^284^mv.visitInsn ( Constants.F2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^if  ( to == 3 )  {^264^^^^^249^279^if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( from == Type.LONG_TYPE )  {^266^^^^^251^281^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( from == Type.LONG_TYPE )  {^272^^^^^257^287^} else if  ( from == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( to < Type.BYTE_TYPE )  {^282^^^^^272^295^if  ( to == Type.BYTE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( to < Type.CHAR_TYPE )  {^284^^^^^272^295^} else if  ( to == Type.CHAR_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( Type.CHAR_TYPE == to )  {^284^^^^^272^295^} else if  ( to == Type.CHAR_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( to == 1 )  {^286^^^^^272^295^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( to == 4 )  {^286^^^^^272^295^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( to == Type.DOUBLE_TYPE )  {^286^^^^^272^295^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( to == 4 )  {^290^^^^^272^295^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^mv .visitLdcInsn ( null )  ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( to == Type.LONG_TYPE )  {^290^^^^^272^295^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( to == 3 )  {^292^^^^^272^295^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( to == 1 )  {^288^^^^^272^295^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^mv .visitLdcInsn ( this )  ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( to == 1 )  {^275^^^^^260^290^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( from == Type.FLOAT_TYPE )  {^275^^^^^260^290^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( to < Type.BYTE_TYPE )  {^282^^^^^267^297^if  ( to == Type.BYTE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( to == 3 )  {^292^^^^^277^307^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^mv .visitLdcInsn ( 2 )  ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv .visitLdcInsn ( 0 )  ;^293^^^^^278^308^mv.visitInsn ( Constants.I2S ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^array_store ( Type.INT_TYPE, from ) ;^261^^^^^246^276^cast_numeric ( Type.INT_TYPE, to ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( from < Type.DOUBLE_TYPE )  {^254^^^^^239^269^if  ( from == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^} else if  ( from > Type.LONG_TYPE )  {^272^^^^^257^287^} else if  ( from == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv .visitLdcInsn ( this )  ;^291^^^^^272^295^mv.visitInsn ( Constants.I2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( to == 4 )  {^288^^^^^272^295^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( to == 0 )  {^290^^^^^272^295^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( to == null )  {^284^^^^^272^295^} else if  ( to == Type.CHAR_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( to == this )  {^292^^^^^272^295^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^mv .visitLdcInsn ( this )  ;^283^^^^^272^295^mv.visitInsn ( Constants.I2B ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv .visitLdcInsn ( 2 )  ;^278^^^^^263^293^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^mv .visitLdcInsn ( 4 )  ;^274^^^^^259^289^mv.visitInsn ( Constants.L2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv .visitLdcInsn ( 2 )  ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( to == this )  {^275^^^^^260^290^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^if  ( to == this )  {^282^^^^^267^297^if  ( to == Type.BYTE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv .visitLdcInsn ( 1 )  ;^287^^^^^272^302^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv .visitLdcInsn ( 1 )  ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^}  if  ( to == 2 )  {^266^^^^^251^281^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^mv .visitLdcInsn ( 2 )  ;^267^^^^^252^282^mv.visitInsn ( Constants.F2L ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P2_Replace_Operator]^if  ( to >= Type.DOUBLE_TYPE )  {^264^^^^^249^279^if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( Type.LONG_TYPE == from )  {^272^^^^^257^287^} else if  ( from == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( to == 1 )  {^288^^^^^272^295^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^mv .visitLdcInsn ( null )  ;^287^^^^^272^295^mv.visitInsn ( Constants.I2D ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv .visitLdcInsn ( 4 )  ;^276^^^^^261^291^mv.visitInsn ( Constants.L2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv .visitLdcInsn ( 0 )  ;^278^^^^^275^280^mv.visitInsn ( Constants.L2I ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( Type.CHAR_TYPE == to )  {^284^^^^^269^299^} else if  ( to == Type.CHAR_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P8_Replace_Mix]^} else if  ( to == 0 )  {^288^^^^^273^303^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P5_Replace_Variable]^} else if  ( to == 0 )  {^290^^^^^275^305^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[P7_Replace_Invocation]^mv .visitLdcInsn ( 1 )  ;^289^^^^^274^304^mv.visitInsn ( Constants.I2F ) ;^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
