[P8_Replace_Mix]^private LabelNode dflt;^51^^^^^46^56^public LabelNode dflt;^[CLASS] LookupSwitchInsnNode   [VARIABLES] 
[P1_Replace_Type]^public  Set  keys;^56^^^^^51^61^public List keys;^[CLASS] LookupSwitchInsnNode   [VARIABLES] 
[P1_Replace_Type]^public  ArrayList  labels;^62^^^^^57^67^public List labels;^[CLASS] LookupSwitchInsnNode   [VARIABLES] 
[P8_Replace_Mix]^public  Set  labels;^62^^^^^57^67^public List labels;^[CLASS] LookupSwitchInsnNode   [VARIABLES] 
[P14_Delete_Statement]^^77^^^^^72^89^super ( Opcodes.LOOKUPSWITCH ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P8_Replace_Mix]^this.dflt =  null;^78^^^^^72^89^this.dflt = dflt;^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P1_Replace_Type]^this.keys = new Array LinkedHashSet  ( keys == null ? 0 : keys.length ) ;^79^^^^^72^89^this.keys = new ArrayList ( keys == null ? 0 : keys.length ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P2_Replace_Operator]^this.keys = new ArrayList ( keys != null ? 0 : keys.length ) ;^79^^^^^72^89^this.keys = new ArrayList ( keys == null ? 0 : keys.length ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P3_Replace_Literal]^this.keys = new ArrayList ( keys == null ? -9 : keys.length ) ;^79^^^^^72^89^this.keys = new ArrayList ( keys == null ? 0 : keys.length ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P4_Replace_Constructor]^this.keys = this.keys =  new ArrayList (  ( labels == null ? 0 : labels.length )  )  ;^79^^^^^72^89^this.keys = new ArrayList ( keys == null ? 0 : keys.length ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P5_Replace_Variable]^this.keys = new ArrayList ( keys == null ? 0 : i ) ;^79^^^^^72^89^this.keys = new ArrayList ( keys == null ? 0 : keys.length ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P5_Replace_Variable]^this.keys = new ArrayList ( keys.length == null ? 0 : keys ) ;^79^^^^^72^89^this.keys = new ArrayList ( keys == null ? 0 : keys.length ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P6_Replace_Expression]^this.keys = new ArrayList ( keys.length ) ;^79^^^^^72^89^this.keys = new ArrayList ( keys == null ? 0 : keys.length ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P8_Replace_Mix]^this.keys = new ArrayList ( keys == false ? 0 : keys.length ) ;^79^^^^^72^89^this.keys = new ArrayList ( keys == null ? 0 : keys.length ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P11_Insert_Donor_Statement]^this.labels = new ArrayList ( labels == null ? 0 : labels.length ) ;this.keys = new ArrayList ( keys == null ? 0 : keys.length ) ;^79^^^^^72^89^this.keys = new ArrayList ( keys == null ? 0 : keys.length ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P1_Replace_Type]^this.keys = new  Set  ( keys == null ? 0 : keys.length ) ;^79^^^^^72^89^this.keys = new ArrayList ( keys == null ? 0 : keys.length ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P3_Replace_Literal]^this.keys = new ArrayList ( keys == null ? 9 : keys.length ) ;^79^^^^^72^89^this.keys = new ArrayList ( keys == null ? 0 : keys.length ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P1_Replace_Type]^this.labels = new Array Set  ( labels == null ? 0 : labels.length ) ;^80^^^^^72^89^this.labels = new ArrayList ( labels == null ? 0 : labels.length ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P2_Replace_Operator]^this.labels = new ArrayList ( labels != null ? 0 : labels.length ) ;^80^^^^^72^89^this.labels = new ArrayList ( labels == null ? 0 : labels.length ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P3_Replace_Literal]^this.labels = new ArrayList ( labels == null ? -9 : labels.length ) ;^80^^^^^72^89^this.labels = new ArrayList ( labels == null ? 0 : labels.length ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P4_Replace_Constructor]^this.labels = this.labels =  new ArrayList (  ( keys == null ? 0 : keys.length )  )  ;^80^^^^^72^89^this.labels = new ArrayList ( labels == null ? 0 : labels.length ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P6_Replace_Expression]^this.labels = new ArrayList ( labels.length ) ;^80^^^^^72^89^this.labels = new ArrayList ( labels == null ? 0 : labels.length ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P8_Replace_Mix]^this.labels = new ArrayList ( labels == false ? 0 : labels.length ) ;^80^^^^^72^89^this.labels = new ArrayList ( labels == null ? 0 : labels.length ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P11_Insert_Donor_Statement]^this.keys = new ArrayList ( keys == null ? 0 : keys.length ) ;this.labels = new ArrayList ( labels == null ? 0 : labels.length ) ;^80^^^^^72^89^this.labels = new ArrayList ( labels == null ? 0 : labels.length ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P1_Replace_Type]^this.labels = new  List  ( labels == null ? 0 : labels.length ) ;^80^^^^^72^89^this.labels = new ArrayList ( labels == null ? 0 : labels.length ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P3_Replace_Literal]^this.labels = new ArrayList ( labels == null ? -3 : labels.length ) ;^80^^^^^72^89^this.labels = new ArrayList ( labels == null ? 0 : labels.length ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P2_Replace_Operator]^if  ( keys == null )  {^81^^^^^72^89^if  ( keys != null )  {^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P6_Replace_Expression]^if  ( i < keys.length )  {^81^^^^^72^89^if  ( keys != null )  {^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P8_Replace_Mix]^if  ( keys != true )  {^81^^^^^72^89^if  ( keys != null )  {^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P9_Replace_Statement]^if  ( labels != null )  {^81^^^^^72^89^if  ( keys != null )  {^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P15_Unwrap_Block]^for (int i = 0; i < (keys.length); ++i) {    this.keys.add(new java.lang.Integer(keys[i]));};^81^82^83^84^^72^89^if  ( keys != null )  { for  ( int i = 0; i < keys.length; ++i )  { this.keys.add ( new Integer ( keys[i] )  ) ; }^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P16_Remove_Block]^^81^82^83^84^^72^89^if  ( keys != null )  { for  ( int i = 0; i < keys.length; ++i )  { this.keys.add ( new Integer ( keys[i] )  ) ; }^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P1_Replace_Type]^for  (  long  i = 0; i < keys.length; ++i )  {^82^^^^^72^89^for  ( int i = 0; i < keys.length; ++i )  {^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i <= keys.length; ++i )  {^82^^^^^72^89^for  ( int i = 0; i < keys.length; ++i )  {^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P3_Replace_Literal]^for  ( int i = i; i < keys.length; ++i )  {^82^^^^^72^89^for  ( int i = 0; i < keys.length; ++i )  {^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P5_Replace_Variable]^for  ( int i = 0; i < keys.length.length; ++i )  {^82^^^^^72^89^for  ( int i = 0; i < keys.length; ++i )  {^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P5_Replace_Variable]^for  ( keys.lengthnt i = 0; i < i; ++i )  {^82^^^^^72^89^for  ( int i = 0; i < keys.length; ++i )  {^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P13_Insert_Block]^if  ( keys != null )  {     for  ( int i = 0; i <  ( keys.length ) ; ++i )  {         add ( new Integer ( keys[i] )  ) ;     } }^82^^^^^72^89^[Delete]^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P14_Delete_Statement]^^83^^^^^72^89^this.keys.add ( new Integer ( keys[i] )  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P3_Replace_Literal]^for  ( int i = 2; i < keys.length; ++i )  {^82^^^^^72^89^for  ( int i = 0; i < keys.length; ++i )  {^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P1_Replace_Type]^for  (  short  i = 0; i < keys.length; ++i )  {^82^^^^^72^89^for  ( int i = 0; i < keys.length; ++i )  {^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i > keys.length; ++i )  {^82^^^^^72^89^for  ( int i = 0; i < keys.length; ++i )  {^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P5_Replace_Variable]^for  ( keysnt i = 0; i < i.length; ++i )  {^82^^^^^72^89^for  ( int i = 0; i < keys.length; ++i )  {^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P2_Replace_Operator]^if  ( labels == null )  {^86^^^^^72^89^if  ( labels != null )  {^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P8_Replace_Mix]^if  ( labels != true )  {^86^^^^^72^89^if  ( labels != null )  {^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P9_Replace_Statement]^if  ( keys != null )  {^86^^^^^72^89^if  ( labels != null )  {^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P15_Unwrap_Block]^this.labels.addAll(java.util.Arrays.asList(labels));^86^87^88^^^72^89^if  ( labels != null )  { this.labels.addAll ( Arrays.asList ( labels )  ) ; }^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P16_Remove_Block]^^86^87^88^^^72^89^if  ( labels != null )  { this.labels.addAll ( Arrays.asList ( labels )  ) ; }^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P7_Replace_Invocation]^this.labels.add ( Arrays.asList ( labels )  ) ;^87^^^^^72^89^this.labels.addAll ( Arrays.asList ( labels )  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P14_Delete_Statement]^^87^^^^^72^89^this.labels.addAll ( Arrays.asList ( labels )  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P13_Insert_Block]^if  ( labels != null )  {     addAll ( asList ( labels )  ) ; }^87^^^^^72^89^[Delete]^[CLASS] LookupSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   LabelNode dflt final int[] keys LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  keys  labels  int[]  keys  boolean  int  i  
[P3_Replace_Literal]^int[] keys = new int[this.keys.size() + 0 ];^96^^^^^95^105^int[] keys = new int[this.keys.size (  ) ];^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^Label[] labels = new Label[this.labels.size (  ) ];int[] keys = new int[this.keys.size (  ) ];^96^^^^^95^105^int[] keys = new int[this.keys.size (  ) ];^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P3_Replace_Literal]^int[] keys = new int[this.keys.size() + 2 ];^96^^^^^95^105^int[] keys = new int[this.keys.size (  ) ];^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P14_Delete_Statement]^^96^^^^^95^105^int[] keys = new int[this.keys.size (  ) ];^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P1_Replace_Type]^for  (  long  i = 0; i < keys.length; ++i )  {^97^^^^^95^105^for  ( int i = 0; i < keys.length; ++i )  {^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P2_Replace_Operator]^for  ( int i = 0; i <= keys.length; ++i )  {^97^^^^^95^105^for  ( int i = 0; i < keys.length; ++i )  {^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P3_Replace_Literal]^for  ( int i = i; i < keys.length; ++i )  {^97^^^^^95^105^for  ( int i = 0; i < keys.length; ++i )  {^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P5_Replace_Variable]^for  ( keys.lengthnt i = 0; i < i; ++i )  {^97^^^^^95^105^for  ( int i = 0; i < keys.length; ++i )  {^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P5_Replace_Variable]^for  ( int i = 0; i < keys.length.length; ++i )  {^97^^^^^95^105^for  ( int i = 0; i < keys.length; ++i )  {^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P5_Replace_Variable]^keys[i] =  (  ( Integer )  labels.get ( i )  ) .intValue (  ) ;^98^^^^^95^105^keys[i] =  (  ( Integer )  this.keys.get ( i )  ) .intValue (  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P5_Replace_Variable]^keys[i] =  (  ( Integer )  i.get ( this.keys )  ) .intValue (  ) ;^98^^^^^95^105^keys[i] =  (  ( Integer )  this.keys.get ( i )  ) .intValue (  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P7_Replace_Invocation]^keys[i] =  (  ( Integer )  this.keys.get ( i )  ) .Integer (  ) ;^98^^^^^95^105^keys[i] =  (  ( Integer )  this.keys.get ( i )  ) .intValue (  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P7_Replace_Invocation]^keys[i] =  (  ( Integer )  this.keys.add ( i )  ) .intValue (  ) ;^98^^^^^95^105^keys[i] =  (  ( Integer )  this.keys.get ( i )  ) .intValue (  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^labels[i] =  (  ( LabelNode )  this.labels.get ( i )  ) .getLabel (  ) ;keys[i] =  (  ( Integer )  this.keys.get ( i )  ) .intValue (  ) ;^98^^^^^95^105^keys[i] =  (  ( Integer )  this.keys.get ( i )  ) .intValue (  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P14_Delete_Statement]^^98^^^^^95^105^keys[i] =  (  ( Integer )  this.keys.get ( i )  ) .intValue (  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P7_Replace_Invocation]^keys[i] =  (  ( Integer )  this.keys.get ( i )  )  .Integer ( i )  ;^98^^^^^95^105^keys[i] =  (  ( Integer )  this.keys.get ( i )  ) .intValue (  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P8_Replace_Mix]^keys[i] =  (  ( Integer )  labels.get ( i )  ) .Integer (  ) ;^98^^^^^95^105^keys[i] =  (  ( Integer )  this.keys.get ( i )  ) .intValue (  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P8_Replace_Mix]^keys[i] =  (  ( Integer )  labels.add ( i )  ) .intValue (  ) ;^98^^^^^95^105^keys[i] =  (  ( Integer )  this.keys.get ( i )  ) .intValue (  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P3_Replace_Literal]^Label[] labels = new Label[this.labels.size() + 9 ];^100^^^^^95^105^Label[] labels = new Label[this.labels.size (  ) ];^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^int[] keys = new int[this.keys.size (  ) ];Label[] labels = new Label[this.labels.size (  ) ];^100^^^^^95^105^Label[] labels = new Label[this.labels.size (  ) ];^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P3_Replace_Literal]^Label[] labels = new Label[this.labels.size() - 0 ];^100^^^^^95^105^Label[] labels = new Label[this.labels.size (  ) ];^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P14_Delete_Statement]^^100^^^^^95^105^Label[] labels = new Label[this.labels.size (  ) ];^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P1_Replace_Type]^for  (  long  i = 0; i < labels.length; ++i )  {^101^^^^^95^105^for  ( int i = 0; i < labels.length; ++i )  {^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P2_Replace_Operator]^for  ( int i = 0; i <= labels.length; ++i )  {^101^^^^^95^105^for  ( int i = 0; i < labels.length; ++i )  {^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P3_Replace_Literal]^for  ( int i = i; i < labels.length; ++i )  {^101^^^^^95^105^for  ( int i = 0; i < labels.length; ++i )  {^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P5_Replace_Variable]^labels[i] =  (  ( LabelNode )  keys.get ( i )  ) .getLabel (  ) ;^102^^^^^95^105^labels[i] =  (  ( LabelNode )  this.labels.get ( i )  ) .getLabel (  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P5_Replace_Variable]^labels[i] =  (  ( LabelNode )  i.get ( this.labels )  ) .getLabel (  ) ;^102^^^^^95^105^labels[i] =  (  ( LabelNode )  this.labels.get ( i )  ) .getLabel (  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P7_Replace_Invocation]^labels[i] =  (  ( LabelNode )  this.labels.add ( i )  ) .getLabel (  ) ;^102^^^^^95^105^labels[i] =  (  ( LabelNode )  this.labels.get ( i )  ) .getLabel (  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P8_Replace_Mix]^labels[i]  = null ;^102^^^^^95^105^labels[i] =  (  ( LabelNode )  this.labels.get ( i )  ) .getLabel (  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^keys[i] =  (  ( Integer )  this.keys.get ( i )  ) .intValue (  ) ;labels[i] =  (  ( LabelNode )  this.labels.get ( i )  ) .getLabel (  ) ;^102^^^^^95^105^labels[i] =  (  ( LabelNode )  this.labels.get ( i )  ) .getLabel (  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P8_Replace_Mix]^labels[i] =  (  ( LabelNode )  labels.get ( i )  ) .getLabel (  ) ;^102^^^^^95^105^labels[i] =  (  ( LabelNode )  this.labels.get ( i )  ) .getLabel (  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P14_Delete_Statement]^^102^^^^^95^105^labels[i] =  (  ( LabelNode )  this.labels.get ( i )  ) .getLabel (  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P11_Insert_Donor_Statement]^labels ) , null, clone ( this.labels, labels )  ) ;labels[i] =  (  ( LabelNode )  this.labels.get ( i )  ) .getLabel (  ) ;^102^^^^^95^105^labels[i] =  (  ( LabelNode )  this.labels.get ( i )  ) .getLabel (  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P8_Replace_Mix]^labels[i]  =  labels[i] ;^102^^^^^95^105^labels[i] =  (  ( LabelNode )  this.labels.get ( i )  ) .getLabel (  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P3_Replace_Literal]^for  ( int i = -8; i < labels.length; ++i )  {^101^^^^^95^105^for  ( int i = 0; i < labels.length; ++i )  {^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P5_Replace_Variable]^mv.visitLookupSwitchInsn ( dflt.getLabel (  ) ,  labels ) ;^104^^^^^95^105^mv.visitLookupSwitchInsn ( dflt.getLabel (  ) , keys, labels ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P5_Replace_Variable]^mv.visitLookupSwitchInsn ( dflt.getLabel (  ) , keys ) ;^104^^^^^95^105^mv.visitLookupSwitchInsn ( dflt.getLabel (  ) , keys, labels ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P5_Replace_Variable]^mv.visitLookupSwitchInsn ( dflt.getLabel (  ) , labels, keys ) ;^104^^^^^95^105^mv.visitLookupSwitchInsn ( dflt.getLabel (  ) , keys, labels ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P5_Replace_Variable]^mv.visitLookupSwitchInsn ( labels.getLabel (  ) , keys, dflt ) ;^104^^^^^95^105^mv.visitLookupSwitchInsn ( dflt.getLabel (  ) , keys, labels ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P5_Replace_Variable]^mv.visitLookupSwitchInsn ( keys.getLabel (  ) , dflt, labels ) ;^104^^^^^95^105^mv.visitLookupSwitchInsn ( dflt.getLabel (  ) , keys, labels ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P14_Delete_Statement]^^104^^^^^95^105^mv.visitLookupSwitchInsn ( dflt.getLabel (  ) , keys, labels ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  Label[]  labels  boolean  List  keys  labels  int[]  keys  int  i  MethodVisitor  mv  
[P5_Replace_Variable]^LookupSwitchInsnNode clone = new LookupSwitchInsnNode ( clone ( dflt, labels ) , null, clone ( labels, labels )  ) ;^108^109^^^^107^112^LookupSwitchInsnNode clone = new LookupSwitchInsnNode ( clone ( dflt, labels ) , null, clone ( this.labels, labels )  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  keys  labels  LookupSwitchInsnNode  clone  boolean  Map  labels  
[P5_Replace_Variable]^LookupSwitchInsnNode clone = new LookupSwitchInsnNode ( clone ( dflt, labels ) , null, clone ( this. labels )  ) ;^108^109^^^^107^112^LookupSwitchInsnNode clone = new LookupSwitchInsnNode ( clone ( dflt, labels ) , null, clone ( this.labels, labels )  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  keys  labels  LookupSwitchInsnNode  clone  boolean  Map  labels  
[P5_Replace_Variable]^LookupSwitchInsnNode clone = new LookupSwitchInsnNode ( clone (  labels ) , null, clone ( this.labels, labels )  ) ;^108^109^^^^107^112^LookupSwitchInsnNode clone = new LookupSwitchInsnNode ( clone ( dflt, labels ) , null, clone ( this.labels, labels )  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  keys  labels  LookupSwitchInsnNode  clone  boolean  Map  labels  
[P5_Replace_Variable]^LookupSwitchInsnNode clone = new LookupSwitchInsnNode ( clone ( dflt, labels ) , null, clone (  labels )  ) ;^108^109^^^^107^112^LookupSwitchInsnNode clone = new LookupSwitchInsnNode ( clone ( dflt, labels ) , null, clone ( this.labels, labels )  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  keys  labels  LookupSwitchInsnNode  clone  boolean  Map  labels  
[P5_Replace_Variable]^LookupSwitchInsnNode clone = new LookupSwitchInsnNode ( clone ( dflt, this.labels ) , null, clone ( labels, labels )  ) ;^108^109^^^^107^112^LookupSwitchInsnNode clone = new LookupSwitchInsnNode ( clone ( dflt, labels ) , null, clone ( this.labels, labels )  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  keys  labels  LookupSwitchInsnNode  clone  boolean  Map  labels  
[P5_Replace_Variable]^LookupSwitchInsnNode clone = new LookupSwitchInsnNode ( clone ( labels, dflt ) , null, clone ( this.labels, labels )  ) ;^108^109^^^^107^112^LookupSwitchInsnNode clone = new LookupSwitchInsnNode ( clone ( dflt, labels ) , null, clone ( this.labels, labels )  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  keys  labels  LookupSwitchInsnNode  clone  boolean  Map  labels  
[P7_Replace_Invocation]^LookupSwitchInsnNode accept = new LookupSwitchInsnNode ( clone ( dflt, labels ) , null, clone ( this.labels, labels )  ) ;^108^109^^^^107^112^LookupSwitchInsnNode clone = new LookupSwitchInsnNode ( clone ( dflt, labels ) , null, clone ( this.labels, labels )  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  keys  labels  LookupSwitchInsnNode  clone  boolean  Map  labels  
[P5_Replace_Variable]^LookupSwitchInsnNode clone = new LookupSwitchInsnNode ( clone ( this.labels, labels ) , null, clone ( dflt, labels )  ) ;^108^109^^^^107^112^LookupSwitchInsnNode clone = new LookupSwitchInsnNode ( clone ( dflt, labels ) , null, clone ( this.labels, labels )  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  keys  labels  LookupSwitchInsnNode  clone  boolean  Map  labels  
[P14_Delete_Statement]^^108^109^^^^107^112^LookupSwitchInsnNode clone = new LookupSwitchInsnNode ( clone ( dflt, labels ) , null, clone ( this.labels, labels )  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  keys  labels  LookupSwitchInsnNode  clone  boolean  Map  labels  
[P5_Replace_Variable]^labels ) , null, clone ( keys, labels )  ) ;^109^^^^^107^112^labels ) , null, clone ( this.labels, labels )  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  keys  labels  LookupSwitchInsnNode  clone  boolean  Map  labels  
[P5_Replace_Variable]^labels ) , null, clone ( this. labels )  ) ;^109^^^^^107^112^labels ) , null, clone ( this.labels, labels )  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  keys  labels  LookupSwitchInsnNode  clone  boolean  Map  labels  
[P5_Replace_Variable]^labels ) , null, clone (  labels )  ) ;^109^^^^^107^112^labels ) , null, clone ( this.labels, labels )  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  keys  labels  LookupSwitchInsnNode  clone  boolean  Map  labels  
[P5_Replace_Variable]^labels ) , null, clone ( labels, this.labels )  ) ;^109^^^^^107^112^labels ) , null, clone ( this.labels, labels )  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  keys  labels  LookupSwitchInsnNode  clone  boolean  Map  labels  
[P7_Replace_Invocation]^labels ) , null, accept ( this.labels, labels )  ) ;^109^^^^^107^112^labels ) , null, clone ( this.labels, labels )  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  keys  labels  LookupSwitchInsnNode  clone  boolean  Map  labels  
[P8_Replace_Mix]^labels ) , null, accept ( keys, labels )  ) ;^109^^^^^107^112^labels ) , null, clone ( this.labels, labels )  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  keys  labels  LookupSwitchInsnNode  clone  boolean  Map  labels  
[P14_Delete_Statement]^^109^^^^^107^112^labels ) , null, clone ( this.labels, labels )  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  keys  labels  LookupSwitchInsnNode  clone  boolean  Map  labels  
[P11_Insert_Donor_Statement]^labels[i] =  (  ( LabelNode )  this.labels.get ( i )  ) .getLabel (  ) ;labels ) , null, clone ( this.labels, labels )  ) ;^109^^^^^107^112^labels ) , null, clone ( this.labels, labels )  ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  keys  labels  LookupSwitchInsnNode  clone  boolean  Map  labels  
[P5_Replace_Variable]^clone.keys.addAll ( labels ) ;^110^^^^^107^112^clone.keys.addAll ( keys ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  keys  labels  LookupSwitchInsnNode  clone  boolean  Map  labels  
[P7_Replace_Invocation]^clone.keys.add ( keys ) ;^110^^^^^107^112^clone.keys.addAll ( keys ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  keys  labels  LookupSwitchInsnNode  clone  boolean  Map  labels  
[P8_Replace_Mix]^clone.keys.add ( labels ) ;^110^^^^^107^112^clone.keys.addAll ( keys ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  keys  labels  LookupSwitchInsnNode  clone  boolean  Map  labels  
[P14_Delete_Statement]^^110^^^^^107^112^clone.keys.addAll ( keys ) ;^[CLASS] LookupSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  keys  labels  LookupSwitchInsnNode  clone  boolean  Map  labels  
