[P1_Replace_Type]^public static final  short  INSN = 0;^48^^^^^43^53^public static final int INSN = 0;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P3_Replace_Literal]^public static final int INSN = -2;^48^^^^^43^53^public static final int INSN = 0;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P8_Replace_Mix]^public static final  short  INSN = 4;^48^^^^^43^53^public static final int INSN = 0;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P1_Replace_Type]^public static final  long  INT_INSN = 1;^53^^^^^48^58^public static final int INT_INSN = 1;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P3_Replace_Literal]^public static final int INT_INSN = -3;^53^^^^^48^58^public static final int INT_INSN = 1;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P8_Replace_Mix]^public static final int INT_INSN = 0;^53^^^^^48^58^public static final int INT_INSN = 1;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P1_Replace_Type]^public static final  short  VAR_INSN = 2;^58^^^^^53^63^public static final int VAR_INSN = 2;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P3_Replace_Literal]^public static final int VAR_INSN = -4;^58^^^^^53^63^public static final int VAR_INSN = 2;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P8_Replace_Mix]^public static final int VAR_INSN = 2 - 1;^58^^^^^53^63^public static final int VAR_INSN = 2;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P1_Replace_Type]^public static final  long  TYPE_INSN = 3;^63^^^^^58^68^public static final int TYPE_INSN = 3;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P3_Replace_Literal]^public static final int TYPE_INSN = 8;^63^^^^^58^68^public static final int TYPE_INSN = 3;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P8_Replace_Mix]^public static final  short  TYPE_INSN = 2;^63^^^^^58^68^public static final int TYPE_INSN = 3;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P1_Replace_Type]^public static final  short  FIELD_INSN = 4;^68^^^^^63^73^public static final int FIELD_INSN = 4;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P3_Replace_Literal]^public static final int FIELD_INSN = 9;^68^^^^^63^73^public static final int FIELD_INSN = 4;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P8_Replace_Mix]^public static final int FIELD_INSN = 1;^68^^^^^63^73^public static final int FIELD_INSN = 4;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P1_Replace_Type]^public static final  short  METHOD_INSN = 5;^73^^^^^68^78^public static final int METHOD_INSN = 5;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P3_Replace_Literal]^public static final int METHOD_INSN = 2;^73^^^^^68^78^public static final int METHOD_INSN = 5;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P8_Replace_Mix]^public static final int METHOD_INSN = 3;^73^^^^^68^78^public static final int METHOD_INSN = 5;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P1_Replace_Type]^public static final  short  JUMP_INSN = 6;^78^^^^^73^83^public static final int JUMP_INSN = 6;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P3_Replace_Literal]^public static final int JUMP_INSN = 12;^78^^^^^73^83^public static final int JUMP_INSN = 6;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P8_Replace_Mix]^public static final int JUMP_INSN ;^78^^^^^73^83^public static final int JUMP_INSN = 6;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P1_Replace_Type]^public static final  short  LABEL = 7;^83^^^^^78^88^public static final int LABEL = 7;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P3_Replace_Literal]^public static final int LABEL = -2;^83^^^^^78^88^public static final int LABEL = 7;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P8_Replace_Mix]^public static final int LABEL = 7L;^83^^^^^78^88^public static final int LABEL = 7;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P1_Replace_Type]^public static final  long  LDC_INSN = 8;^88^^^^^83^93^public static final int LDC_INSN = 8;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P3_Replace_Literal]^public static final int LDC_INSN = 15;^88^^^^^83^93^public static final int LDC_INSN = 8;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P8_Replace_Mix]^public static final int LDC_INSN = 8 - 3;^88^^^^^83^93^public static final int LDC_INSN = 8;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P1_Replace_Type]^public static final  long  IINC_INSN = 9;^93^^^^^88^98^public static final int IINC_INSN = 9;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P3_Replace_Literal]^public static final int IINC_INSN = 0;^93^^^^^88^98^public static final int IINC_INSN = 9;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P8_Replace_Mix]^public static final int IINC_INSN ;^93^^^^^88^98^public static final int IINC_INSN = 9;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P1_Replace_Type]^public static final  short  TABLESWITCH_INSN = 10;^98^^^^^93^103^public static final int TABLESWITCH_INSN = 10;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P3_Replace_Literal]^public static final int TABLESWITCH_INSN = 11;^98^^^^^93^103^public static final int TABLESWITCH_INSN = 10;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P8_Replace_Mix]^public static final int TABLESWITCH_INSN = 2;^98^^^^^93^103^public static final int TABLESWITCH_INSN = 10;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P1_Replace_Type]^public static final  short  LOOKUPSWITCH_INSN = 11;^103^^^^^98^108^public static final int LOOKUPSWITCH_INSN = 11;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P3_Replace_Literal]^public static final int LOOKUPSWITCH_INSN = 17;^103^^^^^98^108^public static final int LOOKUPSWITCH_INSN = 11;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P8_Replace_Mix]^public static final int LOOKUPSWITCH_INSN = 8;^103^^^^^98^108^public static final int LOOKUPSWITCH_INSN = 11;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P1_Replace_Type]^public static final  short  MULTIANEWARRAY_INSN = 12;^108^^^^^103^113^public static final int MULTIANEWARRAY_INSN = 12;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P3_Replace_Literal]^public static final int MULTIANEWARRAY_INSN = 14;^108^^^^^103^113^public static final int MULTIANEWARRAY_INSN = 12;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P8_Replace_Mix]^public static final int MULTIANEWARRAY_INSN = 10;^108^^^^^103^113^public static final int MULTIANEWARRAY_INSN = 12;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P1_Replace_Type]^public static final  short  FRAME = 13;^113^^^^^108^118^public static final int FRAME = 13;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P3_Replace_Literal]^public static final int FRAME = ;^113^^^^^108^118^public static final int FRAME = 13;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P8_Replace_Mix]^public static final int FRAME = 12;^113^^^^^108^118^public static final int FRAME = 13;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P1_Replace_Type]^public static final  long  LINE = 14;^118^^^^^113^123^public static final int LINE = 14;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P3_Replace_Literal]^public static final int LINE = 18;^118^^^^^113^123^public static final int LINE = 14;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P8_Replace_Mix]^public static final  short  LINE = 14L;^118^^^^^113^123^public static final int LINE = 14;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P1_Replace_Type]^protected  long  opcode;^123^^^^^118^128^protected int opcode;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P8_Replace_Mix]^protected  short  opcode;^123^^^^^118^128^protected int opcode;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P1_Replace_Type]^short  index;^141^^^^^136^146^int index;^[CLASS] AbstractInsnNode   [VARIABLES] 
[P5_Replace_Variable]^this.opcode = LOOKUPSWITCH_INSN;^149^^^^^148^151^this.opcode = opcode;^[CLASS] AbstractInsnNode  [METHOD] <init> [RETURN_TYPE] AbstractInsnNode(int)   final int opcode [VARIABLES] AbstractInsnNode  next  prev  int  FIELD_INSN  FRAME  IINC_INSN  INSN  INT_INSN  JUMP_INSN  LABEL  LDC_INSN  LINE  LOOKUPSWITCH_INSN  METHOD_INSN  MULTIANEWARRAY_INSN  TABLESWITCH_INSN  TYPE_INSN  VAR_INSN  index  opcode  boolean  
[P8_Replace_Mix]^this.opcode =  TABLESWITCH_INSN;^149^^^^^148^151^this.opcode = opcode;^[CLASS] AbstractInsnNode  [METHOD] <init> [RETURN_TYPE] AbstractInsnNode(int)   final int opcode [VARIABLES] AbstractInsnNode  next  prev  int  FIELD_INSN  FRAME  IINC_INSN  INSN  INT_INSN  JUMP_INSN  LABEL  LDC_INSN  LINE  LOOKUPSWITCH_INSN  METHOD_INSN  MULTIANEWARRAY_INSN  TABLESWITCH_INSN  TYPE_INSN  VAR_INSN  index  opcode  boolean  
[P3_Replace_Literal]^this.index = -TYPE_INSN;^150^^^^^148^151^this.index = -1;^[CLASS] AbstractInsnNode  [METHOD] <init> [RETURN_TYPE] AbstractInsnNode(int)   final int opcode [VARIABLES] AbstractInsnNode  next  prev  int  FIELD_INSN  FRAME  IINC_INSN  INSN  INT_INSN  JUMP_INSN  LABEL  LDC_INSN  LINE  LOOKUPSWITCH_INSN  METHOD_INSN  MULTIANEWARRAY_INSN  TABLESWITCH_INSN  TYPE_INSN  VAR_INSN  index  opcode  boolean  
[P8_Replace_Mix]^this.index = -3;^150^^^^^148^151^this.index = -1;^[CLASS] AbstractInsnNode  [METHOD] <init> [RETURN_TYPE] AbstractInsnNode(int)   final int opcode [VARIABLES] AbstractInsnNode  next  prev  int  FIELD_INSN  FRAME  IINC_INSN  INSN  INT_INSN  JUMP_INSN  LABEL  LDC_INSN  LINE  LOOKUPSWITCH_INSN  METHOD_INSN  MULTIANEWARRAY_INSN  TABLESWITCH_INSN  TYPE_INSN  VAR_INSN  index  opcode  boolean  
[P8_Replace_Mix]^return MULTIANEWARRAY_INSN;^159^^^^^158^160^return opcode;^[CLASS] AbstractInsnNode  [METHOD] getOpcode [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  int  FIELD_INSN  FRAME  IINC_INSN  INSN  INT_INSN  JUMP_INSN  LABEL  LDC_INSN  LINE  LOOKUPSWITCH_INSN  METHOD_INSN  MULTIANEWARRAY_INSN  TABLESWITCH_INSN  TYPE_INSN  VAR_INSN  index  opcode  boolean  
[P5_Replace_Variable]^return next;^178^^^^^177^179^return prev;^[CLASS] AbstractInsnNode  [METHOD] getPrevious [RETURN_TYPE] AbstractInsnNode   [VARIABLES] AbstractInsnNode  next  prev  int  FIELD_INSN  FRAME  IINC_INSN  INSN  INT_INSN  JUMP_INSN  LABEL  LDC_INSN  LINE  LOOKUPSWITCH_INSN  METHOD_INSN  MULTIANEWARRAY_INSN  TABLESWITCH_INSN  TYPE_INSN  VAR_INSN  index  opcode  boolean  
[P5_Replace_Variable]^return prev;^189^^^^^188^190^return next;^[CLASS] AbstractInsnNode  [METHOD] getNext [RETURN_TYPE] AbstractInsnNode   [VARIABLES] AbstractInsnNode  next  prev  int  FIELD_INSN  FRAME  IINC_INSN  INSN  INT_INSN  JUMP_INSN  LABEL  LDC_INSN  LINE  LOOKUPSWITCH_INSN  METHOD_INSN  MULTIANEWARRAY_INSN  TABLESWITCH_INSN  TYPE_INSN  VAR_INSN  index  opcode  boolean  
[P5_Replace_Variable]^return  ( LabelNode )  label.get ( map ) ;^216^^^^^215^217^return  ( LabelNode )  map.get ( label ) ;^[CLASS] AbstractInsnNode  [METHOD] clone [RETURN_TYPE] LabelNode   LabelNode label Map map [VARIABLES] LabelNode  label  boolean  AbstractInsnNode  next  prev  Map  map  int  FIELD_INSN  FRAME  IINC_INSN  INSN  INT_INSN  JUMP_INSN  LABEL  LDC_INSN  LINE  LOOKUPSWITCH_INSN  METHOD_INSN  MULTIANEWARRAY_INSN  TABLESWITCH_INSN  TYPE_INSN  VAR_INSN  index  opcode  
[P14_Delete_Statement]^^216^^^^^215^217^return  ( LabelNode )  map.get ( label ) ;^[CLASS] AbstractInsnNode  [METHOD] clone [RETURN_TYPE] LabelNode   LabelNode label Map map [VARIABLES] LabelNode  label  boolean  AbstractInsnNode  next  prev  Map  map  int  FIELD_INSN  FRAME  IINC_INSN  INSN  INT_INSN  JUMP_INSN  LABEL  LDC_INSN  LINE  LOOKUPSWITCH_INSN  METHOD_INSN  MULTIANEWARRAY_INSN  TABLESWITCH_INSN  TYPE_INSN  VAR_INSN  index  opcode  
[P3_Replace_Literal]^LabelNode[] clones = new LabelNode[labels.size() - 0 ];^227^^^^^226^232^LabelNode[] clones = new LabelNode[labels.size (  ) ];^[CLASS] AbstractInsnNode  [METHOD] clone [RETURN_TYPE] LabelNode[]   List labels Map map [VARIABLES] LabelNode[]  clones  List  labels  boolean  AbstractInsnNode  next  prev  Map  map  int  FIELD_INSN  FRAME  IINC_INSN  INSN  INT_INSN  JUMP_INSN  LABEL  LDC_INSN  LINE  LOOKUPSWITCH_INSN  METHOD_INSN  MULTIANEWARRAY_INSN  TABLESWITCH_INSN  TYPE_INSN  VAR_INSN  i  index  opcode  
[P7_Replace_Invocation]^LabelNode[] clones = new LabelNode[labels.get (  ) ];^227^^^^^226^232^LabelNode[] clones = new LabelNode[labels.size (  ) ];^[CLASS] AbstractInsnNode  [METHOD] clone [RETURN_TYPE] LabelNode[]   List labels Map map [VARIABLES] LabelNode[]  clones  List  labels  boolean  AbstractInsnNode  next  prev  Map  map  int  FIELD_INSN  FRAME  IINC_INSN  INSN  INT_INSN  JUMP_INSN  LABEL  LDC_INSN  LINE  LOOKUPSWITCH_INSN  METHOD_INSN  MULTIANEWARRAY_INSN  TABLESWITCH_INSN  TYPE_INSN  VAR_INSN  i  index  opcode  
[P3_Replace_Literal]^LabelNode[] clones = new LabelNode[labels.size() + 3 ];^227^^^^^226^232^LabelNode[] clones = new LabelNode[labels.size (  ) ];^[CLASS] AbstractInsnNode  [METHOD] clone [RETURN_TYPE] LabelNode[]   List labels Map map [VARIABLES] LabelNode[]  clones  List  labels  boolean  AbstractInsnNode  next  prev  Map  map  int  FIELD_INSN  FRAME  IINC_INSN  INSN  INT_INSN  JUMP_INSN  LABEL  LDC_INSN  LINE  LOOKUPSWITCH_INSN  METHOD_INSN  MULTIANEWARRAY_INSN  TABLESWITCH_INSN  TYPE_INSN  VAR_INSN  i  index  opcode  
[P14_Delete_Statement]^^227^^^^^226^232^LabelNode[] clones = new LabelNode[labels.size (  ) ];^[CLASS] AbstractInsnNode  [METHOD] clone [RETURN_TYPE] LabelNode[]   List labels Map map [VARIABLES] LabelNode[]  clones  List  labels  boolean  AbstractInsnNode  next  prev  Map  map  int  FIELD_INSN  FRAME  IINC_INSN  INSN  INT_INSN  JUMP_INSN  LABEL  LDC_INSN  LINE  LOOKUPSWITCH_INSN  METHOD_INSN  MULTIANEWARRAY_INSN  TABLESWITCH_INSN  TYPE_INSN  VAR_INSN  i  index  opcode  
[P1_Replace_Type]^for  (  long  i = 0; i < clones.length; ++i )  {^228^^^^^226^232^for  ( int i = 0; i < clones.length; ++i )  {^[CLASS] AbstractInsnNode  [METHOD] clone [RETURN_TYPE] LabelNode[]   List labels Map map [VARIABLES] LabelNode[]  clones  List  labels  boolean  AbstractInsnNode  next  prev  Map  map  int  FIELD_INSN  FRAME  IINC_INSN  INSN  INT_INSN  JUMP_INSN  LABEL  LDC_INSN  LINE  LOOKUPSWITCH_INSN  METHOD_INSN  MULTIANEWARRAY_INSN  TABLESWITCH_INSN  TYPE_INSN  VAR_INSN  i  index  opcode  
[P2_Replace_Operator]^for  ( int i = 0; i > clones.length; ++i )  {^228^^^^^226^232^for  ( int i = 0; i < clones.length; ++i )  {^[CLASS] AbstractInsnNode  [METHOD] clone [RETURN_TYPE] LabelNode[]   List labels Map map [VARIABLES] LabelNode[]  clones  List  labels  boolean  AbstractInsnNode  next  prev  Map  map  int  FIELD_INSN  FRAME  IINC_INSN  INSN  INT_INSN  JUMP_INSN  LABEL  LDC_INSN  LINE  LOOKUPSWITCH_INSN  METHOD_INSN  MULTIANEWARRAY_INSN  TABLESWITCH_INSN  TYPE_INSN  VAR_INSN  i  index  opcode  
[P3_Replace_Literal]^for  ( int i = FRAME; i < clones.length; ++i )  {^228^^^^^226^232^for  ( int i = 0; i < clones.length; ++i )  {^[CLASS] AbstractInsnNode  [METHOD] clone [RETURN_TYPE] LabelNode[]   List labels Map map [VARIABLES] LabelNode[]  clones  List  labels  boolean  AbstractInsnNode  next  prev  Map  map  int  FIELD_INSN  FRAME  IINC_INSN  INSN  INT_INSN  JUMP_INSN  LABEL  LDC_INSN  LINE  LOOKUPSWITCH_INSN  METHOD_INSN  MULTIANEWARRAY_INSN  TABLESWITCH_INSN  TYPE_INSN  VAR_INSN  i  index  opcode  
[P5_Replace_Variable]^clones[i] =  ( LabelNode )  map.get ( labels.get ( TYPE_INSN )  ) ;^229^^^^^226^232^clones[i] =  ( LabelNode )  map.get ( labels.get ( i )  ) ;^[CLASS] AbstractInsnNode  [METHOD] clone [RETURN_TYPE] LabelNode[]   List labels Map map [VARIABLES] LabelNode[]  clones  List  labels  boolean  AbstractInsnNode  next  prev  Map  map  int  FIELD_INSN  FRAME  IINC_INSN  INSN  INT_INSN  JUMP_INSN  LABEL  LDC_INSN  LINE  LOOKUPSWITCH_INSN  METHOD_INSN  MULTIANEWARRAY_INSN  TABLESWITCH_INSN  TYPE_INSN  VAR_INSN  i  index  opcode  
[P5_Replace_Variable]^clones[i] =  ( LabelNode )  map.get ( i.get ( labels )  ) ;^229^^^^^226^232^clones[i] =  ( LabelNode )  map.get ( labels.get ( i )  ) ;^[CLASS] AbstractInsnNode  [METHOD] clone [RETURN_TYPE] LabelNode[]   List labels Map map [VARIABLES] LabelNode[]  clones  List  labels  boolean  AbstractInsnNode  next  prev  Map  map  int  FIELD_INSN  FRAME  IINC_INSN  INSN  INT_INSN  JUMP_INSN  LABEL  LDC_INSN  LINE  LOOKUPSWITCH_INSN  METHOD_INSN  MULTIANEWARRAY_INSN  TABLESWITCH_INSN  TYPE_INSN  VAR_INSN  i  index  opcode  
[P8_Replace_Mix]^clones[i] ;^229^^^^^226^232^clones[i] =  ( LabelNode )  map.get ( labels.get ( i )  ) ;^[CLASS] AbstractInsnNode  [METHOD] clone [RETURN_TYPE] LabelNode[]   List labels Map map [VARIABLES] LabelNode[]  clones  List  labels  boolean  AbstractInsnNode  next  prev  Map  map  int  FIELD_INSN  FRAME  IINC_INSN  INSN  INT_INSN  JUMP_INSN  LABEL  LDC_INSN  LINE  LOOKUPSWITCH_INSN  METHOD_INSN  MULTIANEWARRAY_INSN  TABLESWITCH_INSN  TYPE_INSN  VAR_INSN  i  index  opcode  
[P5_Replace_Variable]^clones[i] =  ( LabelNode )  i.get ( labels.get ( map )  ) ;^229^^^^^226^232^clones[i] =  ( LabelNode )  map.get ( labels.get ( i )  ) ;^[CLASS] AbstractInsnNode  [METHOD] clone [RETURN_TYPE] LabelNode[]   List labels Map map [VARIABLES] LabelNode[]  clones  List  labels  boolean  AbstractInsnNode  next  prev  Map  map  int  FIELD_INSN  FRAME  IINC_INSN  INSN  INT_INSN  JUMP_INSN  LABEL  LDC_INSN  LINE  LOOKUPSWITCH_INSN  METHOD_INSN  MULTIANEWARRAY_INSN  TABLESWITCH_INSN  TYPE_INSN  VAR_INSN  i  index  opcode  
[P5_Replace_Variable]^clones[i] =  ( LabelNode )  labels.get ( map.get ( i )  ) ;^229^^^^^226^232^clones[i] =  ( LabelNode )  map.get ( labels.get ( i )  ) ;^[CLASS] AbstractInsnNode  [METHOD] clone [RETURN_TYPE] LabelNode[]   List labels Map map [VARIABLES] LabelNode[]  clones  List  labels  boolean  AbstractInsnNode  next  prev  Map  map  int  FIELD_INSN  FRAME  IINC_INSN  INSN  INT_INSN  JUMP_INSN  LABEL  LDC_INSN  LINE  LOOKUPSWITCH_INSN  METHOD_INSN  MULTIANEWARRAY_INSN  TABLESWITCH_INSN  TYPE_INSN  VAR_INSN  i  index  opcode  
[P8_Replace_Mix]^clones[i] =  ( LabelNode )  map.get ( labels.get ( LOOKUPSWITCH_INSN )  ) ;^229^^^^^226^232^clones[i] =  ( LabelNode )  map.get ( labels.get ( i )  ) ;^[CLASS] AbstractInsnNode  [METHOD] clone [RETURN_TYPE] LabelNode[]   List labels Map map [VARIABLES] LabelNode[]  clones  List  labels  boolean  AbstractInsnNode  next  prev  Map  map  int  FIELD_INSN  FRAME  IINC_INSN  INSN  INT_INSN  JUMP_INSN  LABEL  LDC_INSN  LINE  LOOKUPSWITCH_INSN  METHOD_INSN  MULTIANEWARRAY_INSN  TABLESWITCH_INSN  TYPE_INSN  VAR_INSN  i  index  opcode  
[P14_Delete_Statement]^^229^^^^^226^232^clones[i] =  ( LabelNode )  map.get ( labels.get ( i )  ) ;^[CLASS] AbstractInsnNode  [METHOD] clone [RETURN_TYPE] LabelNode[]   List labels Map map [VARIABLES] LabelNode[]  clones  List  labels  boolean  AbstractInsnNode  next  prev  Map  map  int  FIELD_INSN  FRAME  IINC_INSN  INSN  INT_INSN  JUMP_INSN  LABEL  LDC_INSN  LINE  LOOKUPSWITCH_INSN  METHOD_INSN  MULTIANEWARRAY_INSN  TABLESWITCH_INSN  TYPE_INSN  VAR_INSN  i  index  opcode  
[P11_Insert_Donor_Statement]^return  ( LabelNode )  map.get ( label ) ;clones[i] =  ( LabelNode )  map.get ( labels.get ( i )  ) ;^229^^^^^226^232^clones[i] =  ( LabelNode )  map.get ( labels.get ( i )  ) ;^[CLASS] AbstractInsnNode  [METHOD] clone [RETURN_TYPE] LabelNode[]   List labels Map map [VARIABLES] LabelNode[]  clones  List  labels  boolean  AbstractInsnNode  next  prev  Map  map  int  FIELD_INSN  FRAME  IINC_INSN  INSN  INT_INSN  JUMP_INSN  LABEL  LDC_INSN  LINE  LOOKUPSWITCH_INSN  METHOD_INSN  MULTIANEWARRAY_INSN  TABLESWITCH_INSN  TYPE_INSN  VAR_INSN  i  index  opcode  
[P5_Replace_Variable]^clones[i] =  ( LabelNode )  map.get ( labels.get ( MULTIANEWARRAY_INSN )  ) ;^229^^^^^226^232^clones[i] =  ( LabelNode )  map.get ( labels.get ( i )  ) ;^[CLASS] AbstractInsnNode  [METHOD] clone [RETURN_TYPE] LabelNode[]   List labels Map map [VARIABLES] LabelNode[]  clones  List  labels  boolean  AbstractInsnNode  next  prev  Map  map  int  FIELD_INSN  FRAME  IINC_INSN  INSN  INT_INSN  JUMP_INSN  LABEL  LDC_INSN  LINE  LOOKUPSWITCH_INSN  METHOD_INSN  MULTIANEWARRAY_INSN  TABLESWITCH_INSN  TYPE_INSN  VAR_INSN  i  index  opcode  
[P8_Replace_Mix]^clones[i] =  ( LabelNode )  map.get ( labels.get ( VAR_INSN )  ) ;^229^^^^^226^232^clones[i] =  ( LabelNode )  map.get ( labels.get ( i )  ) ;^[CLASS] AbstractInsnNode  [METHOD] clone [RETURN_TYPE] LabelNode[]   List labels Map map [VARIABLES] LabelNode[]  clones  List  labels  boolean  AbstractInsnNode  next  prev  Map  map  int  FIELD_INSN  FRAME  IINC_INSN  INSN  INT_INSN  JUMP_INSN  LABEL  LDC_INSN  LINE  LOOKUPSWITCH_INSN  METHOD_INSN  MULTIANEWARRAY_INSN  TABLESWITCH_INSN  TYPE_INSN  VAR_INSN  i  index  opcode  
[P8_Replace_Mix]^clones[i]  =  clones[i] ;^229^^^^^226^232^clones[i] =  ( LabelNode )  map.get ( labels.get ( i )  ) ;^[CLASS] AbstractInsnNode  [METHOD] clone [RETURN_TYPE] LabelNode[]   List labels Map map [VARIABLES] LabelNode[]  clones  List  labels  boolean  AbstractInsnNode  next  prev  Map  map  int  FIELD_INSN  FRAME  IINC_INSN  INSN  INT_INSN  JUMP_INSN  LABEL  LDC_INSN  LINE  LOOKUPSWITCH_INSN  METHOD_INSN  MULTIANEWARRAY_INSN  TABLESWITCH_INSN  TYPE_INSN  VAR_INSN  i  index  opcode  
[P3_Replace_Literal]^for  ( int i = METHOD_INSN; i < clones.length; ++i )  {^228^^^^^226^232^for  ( int i = 0; i < clones.length; ++i )  {^[CLASS] AbstractInsnNode  [METHOD] clone [RETURN_TYPE] LabelNode[]   List labels Map map [VARIABLES] LabelNode[]  clones  List  labels  boolean  AbstractInsnNode  next  prev  Map  map  int  FIELD_INSN  FRAME  IINC_INSN  INSN  INT_INSN  JUMP_INSN  LABEL  LDC_INSN  LINE  LOOKUPSWITCH_INSN  METHOD_INSN  MULTIANEWARRAY_INSN  TABLESWITCH_INSN  TYPE_INSN  VAR_INSN  i  index  opcode  
