[P8_Replace_Mix]^private  Interpreter interpreter;^58^^^^^53^63^private final Interpreter interpreter;^[CLASS] Analyzer   [VARIABLES] 
[P1_Replace_Type]^private  short  n;^60^^^^^55^65^private int n;^[CLASS] Analyzer   [VARIABLES] 
[P1_Replace_Type]^private  short  top;^74^^^^^69^79^private int top;^[CLASS] Analyzer   [VARIABLES] 
[P8_Replace_Mix]^this.interpreter =  null;^83^^^^^82^84^this.interpreter = interpreter;^[CLASS] Analyzer  [METHOD] <init> [RETURN_TYPE] Interpreter)   Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  n  top  
[P2_Replace_Operator]^if  (  ( m.access &  ( ACC_ABSTRACT | ACC_NATIVE )  )  == 0 )  {^101^^^^^86^116^if  (  ( m.access &  ( ACC_ABSTRACT | ACC_NATIVE )  )  != 0 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  (  ( m.access  ^   ( ACC_ABSTRACT | ACC_NATIVE )  )  != 0 )  {^101^^^^^86^116^if  (  ( m.access &  ( ACC_ABSTRACT | ACC_NATIVE )  )  != 0 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  (  ( m.access &  ( ACC_ABSTRACT   instanceof   ACC_NATIVE )  )  != 0 )  {^101^^^^^86^116^if  (  ( m.access &  ( ACC_ABSTRACT | ACC_NATIVE )  )  != 0 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^if  (  ( m.access &  ( ACC_ABSTRACT | ACC_NATIVE )  )  != jump )  {^101^^^^^86^116^if  (  ( m.access &  ( ACC_ABSTRACT | ACC_NATIVE )  )  != 0 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^if  (  ( m.access &  ( ACC_ABSTRACT | ACC_NATIVE )  )  != call )  {^101^^^^^86^116^if  (  ( m.access &  ( ACC_ABSTRACT | ACC_NATIVE )  )  != 0 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( (m.access & ACC_ABSTRACT | ACC_NATIVE) )  {^101^^^^^86^116^if  (  ( m.access &  ( ACC_ABSTRACT | ACC_NATIVE )  )  != 0 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( ACC_ABSTRACT | ACC_NATIVE )  {^101^^^^^86^116^if  (  ( m.access &  ( ACC_ABSTRACT | ACC_NATIVE )  )  != 0 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  (  ( m.access &  ( ACC_ABSTRACT | ACC_NATIVE )  )  != 4 )  {^101^^^^^86^116^if  (  ( m.access &  ( ACC_ABSTRACT | ACC_NATIVE )  )  != 0 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P15_Unwrap_Block]^frames = new org.mockito.asm.tree.analysis.Frame[0]; return frames;^101^102^103^104^^86^116^if  (  ( m.access &  ( ACC_ABSTRACT | ACC_NATIVE )  )  != 0 )  { frames = new Frame[0]; return frames; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P16_Remove_Block]^^101^102^103^104^^86^116^if  (  ( m.access &  ( ACC_ABSTRACT | ACC_NATIVE )  )  != 0 )  { frames = new Frame[0]; return frames; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^frames = new Frame[i];^102^^^^^87^117^frames = new Frame[0];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^frames = new Frame[0 / 4];^102^^^^^87^117^frames = new Frame[0];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^frames = new Frame[n];frames = new Frame[0];^102^^^^^87^117^frames = new Frame[0];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^frames[insn] = newFrame ( frame ) ;frames = new Frame[0];^102^^^^^87^117^frames = new Frame[0];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^frames = new Frame[7];^102^^^^^87^117^frames = new Frame[0];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^frames = new Frame[2];^102^^^^^87^117^frames = new Frame[0];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^n = m.instructions.size() - 7 ;^105^^^^^90^120^n = m.instructions.size (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^n = m.instructions.get (  ) ;^105^^^^^90^120^n = m.instructions.size (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^n =  null.instructions.size (  ) ;^105^^^^^90^120^n = m.instructions.size (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^n = m.instructions.size() + 2 ;^105^^^^^90^120^n = m.instructions.size (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^105^106^^^^90^120^n = m.instructions.size (  ) ; insns = m.instructions;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^insns =  null.instructions;^106^^^^^91^121^insns = m.instructions;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^handlers = jew List[n];^107^^^^^92^122^handlers = new List[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^handlers  =  handlers ;^107^^^^^92^122^handlers = new List[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^frames = new Frame[n];handlers = new List[n];^107^^^^^92^122^handlers = new List[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^queue = new int[n];handlers = new List[n];^107^^^^^92^122^handlers = new List[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^insnHandlers = new ArrayList (  ) ;handlers = new List[n];^107^^^^^92^122^handlers = new List[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^frames = insnTypeew Frame[n];^108^^^^^93^123^frames = new Frame[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^frames  = null ;^108^^^^^93^123^frames = new Frame[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^handlers = new List[n];frames = new Frame[n];^108^^^^^93^123^frames = new Frame[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^queued = new boolean[n];frames = new Frame[n];^108^^^^^93^123^frames = new Frame[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^queue = new int[n];frames = new Frame[n];^108^^^^^93^123^frames = new Frame[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^frames = new Frame[0];frames = new Frame[n];^108^^^^^93^123^frames = new Frame[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^frames[insn] = newFrame ( frame ) ;frames = new Frame[n];^108^^^^^93^123^frames = new Frame[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^subroutines = localew Subroutine[n];^109^^^^^94^124^subroutines = new Subroutine[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutines ;^109^^^^^94^124^subroutines = new Subroutine[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^queued = new boolean[n];subroutines = new Subroutine[n];^109^^^^^94^124^subroutines = new Subroutine[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^subroutines[insn] = subroutine.copy (  ) ;subroutines = new Subroutine[n];^109^^^^^94^124^subroutines = new Subroutine[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^subroutines[insn] = sub.copy (  ) ;subroutines = new Subroutine[n];^109^^^^^94^124^subroutines = new Subroutine[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^queued = varew boolean[n];^110^^^^^95^125^queued = new boolean[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^queued  =  queued ;^110^^^^^95^125^queued = new boolean[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^frames = new Frame[n];queued = new boolean[n];^110^^^^^95^125^queued = new boolean[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^queue = new int[n];queued = new boolean[n];^110^^^^^95^125^queued = new boolean[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^subroutines = new Subroutine[n];queued = new boolean[n];^110^^^^^95^125^queued = new boolean[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^queue = insnTypeew int[n];^111^^^^^96^126^queue = new int[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^queue ;^111^^^^^96^126^queue = new int[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^frames = new Frame[n];queue = new int[n];^111^^^^^96^126^queue = new int[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^handlers = new List[n];queue = new int[n];^111^^^^^96^126^queue = new int[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^queued = new boolean[n];queue = new int[n];^111^^^^^96^126^queue = new int[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^top = var;^112^^^^^97^127^top = 0;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^top = 1;^112^^^^^97^127^top = 0;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnHandlers != null )  {^121^^^^^106^136^if  ( insnHandlers == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( insnHandlers == false )  {^121^^^^^106^136^if  ( insnHandlers == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P9_Replace_Statement]^if  ( oldFrame == null )  {^121^^^^^106^136^if  ( insnHandlers == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P15_Unwrap_Block]^insnHandlers = new java.util.ArrayList(); handlers[j] = insnHandlers;^121^122^123^124^^106^136^if  ( insnHandlers == null )  { insnHandlers = new ArrayList (  ) ; handlers[j] = insnHandlers; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P16_Remove_Block]^^121^122^123^124^^106^136^if  ( insnHandlers == null )  { insnHandlers = new ArrayList (  ) ; handlers[j] = insnHandlers; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^insnHandlers = new Array ArrayList  (  ) ;^122^^^^^107^137^insnHandlers = new ArrayList (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^handlers = new List[n];insnHandlers = new ArrayList (  ) ;^122^^^^^107^137^insnHandlers = new ArrayList (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^handlers[j] = subroutineCalls;^123^^^^^108^138^handlers[j] = insnHandlers;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^handlers[j]  = null ;^123^^^^^108^138^handlers[j] = insnHandlers;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^insnHandlers = new  List  (  ) ;^122^^^^^107^137^insnHandlers = new ArrayList (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^for  (  long  i = 0; i < m.tryCatchBlocks.size (  ) ; ++i )  {^115^^^^^100^130^for  ( int i = 0; i < m.tryCatchBlocks.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^for  ( int i = 0; i <= m.tryCatchBlocks.size (  ) ; ++i )  {^115^^^^^100^130^for  ( int i = 0; i < m.tryCatchBlocks.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^for  ( int i = 0; i > m.tryCatchBlocks.size (  ) ; ++i )  {^115^^^^^100^130^for  ( int i = 0; i < m.tryCatchBlocks.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < m.tryCatchBlocks.size() - 0 ; ++i )  {^115^^^^^100^130^for  ( int i = 0; i < m.tryCatchBlocks.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^for  ( int i = 0; i < m.tryCatchBlocks.get (  ) ; ++i )  {^115^^^^^100^130^for  ( int i = 0; i < m.tryCatchBlocks.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^if  ( subroutineCalls == null )  {^121^^^^^106^136^if  ( insnHandlers == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^insnHandlers = new Array LinkedHashSet  (  ) ;^122^^^^^107^137^insnHandlers = new ArrayList (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^insnHandlers = new Array Set  (  ) ;^122^^^^^107^137^insnHandlers = new ArrayList (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^handlers[j]  =  handlers[j] ;^123^^^^^108^138^handlers[j] = insnHandlers;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^insnHandlers = new  Set  (  ) ;^122^^^^^107^137^insnHandlers = new ArrayList (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^for  (  long  j = begin; j < end; ++j )  {^119^^^^^104^134^for  ( int j = begin; j < end; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^for  ( int j = begin; j == end; ++j )  {^119^^^^^104^134^for  ( int j = begin; j < end; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^for  ( int j = jump; j < end; ++j )  {^119^^^^^104^134^for  ( int j = begin; j < end; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^for  ( int insnType = begin; j < end; ++j )  {^119^^^^^104^134^for  ( int j = begin; j < end; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^for  ( int j = begin; j < var; ++j )  {^119^^^^^104^134^for  ( int j = begin; j < end; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^for  ( int j = end; j < begin; ++j )  {^119^^^^^104^134^for  ( int j = begin; j < end; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^for  ( int begin = j; j < end; ++j )  {^119^^^^^104^134^for  ( int j = begin; j < end; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^handlers[j] ;^123^^^^^108^138^handlers[j] = insnHandlers;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^insnHandlers = new  LinkedHashSet  (  ) ;^122^^^^^107^137^insnHandlers = new ArrayList (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^Set  insnHandlers = handlers[j];^120^^^^^105^135^List insnHandlers = handlers[j];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^List insnHandlers = handlers[insn];List insnHandlers = handlers[j];^120^^^^^105^135^List insnHandlers = handlers[j];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^125^^^^^110^140^insnHandlers.add ( tcb ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^sub.callers.add ( jsr ) ;insnHandlers.add ( tcb ) ;^125^^^^^110^140^insnHandlers.add ( tcb ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^handler.init ( f ) ;insnHandlers.add ( tcb ) ;^125^^^^^110^140^insnHandlers.add ( tcb ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  m.tryCatchBlocks .get ( n )  ;^116^^^^^101^131^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  m.tryCatchBlocks.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^long  begin = insns.indexOf ( tcb.start ) ;^117^^^^^102^132^int begin = insns.indexOf ( tcb.start ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int begin = insns.get ( tcb.start ) ;^117^^^^^102^132^int begin = insns.indexOf ( tcb.start ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( lsi.dflt ) ;int begin = insns.indexOf ( tcb.start ) ;^117^^^^^102^132^int begin = insns.indexOf ( tcb.start ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( tsi.dflt ) ;int begin = insns.indexOf ( tcb.start ) ;^117^^^^^102^132^int begin = insns.indexOf ( tcb.start ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( tcb.handler ) ;int begin = insns.indexOf ( tcb.start ) ;^117^^^^^102^132^int begin = insns.indexOf ( tcb.start ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int end = insns.indexOf ( tcb.end ) ;int begin = insns.indexOf ( tcb.start ) ;^117^^^^^102^132^int begin = insns.indexOf ( tcb.start ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( j.label ) ;int begin = insns.indexOf ( tcb.start ) ;^117^^^^^102^132^int begin = insns.indexOf ( tcb.start ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^short  end = insns.indexOf ( tcb.end ) ;^118^^^^^103^133^int end = insns.indexOf ( tcb.end ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int end = insns.get ( tcb.end ) ;^118^^^^^103^133^int end = insns.indexOf ( tcb.end ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( lsi.dflt ) ;int end = insns.indexOf ( tcb.end ) ;^118^^^^^103^133^int end = insns.indexOf ( tcb.end ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int begin = insns.indexOf ( tcb.start ) ;int end = insns.indexOf ( tcb.end ) ;^118^^^^^103^133^int end = insns.indexOf ( tcb.end ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( tsi.dflt ) ;int end = insns.indexOf ( tcb.end ) ;^118^^^^^103^133^int end = insns.indexOf ( tcb.end ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( tcb.handler ) ;int end = insns.indexOf ( tcb.end ) ;^118^^^^^103^133^int end = insns.indexOf ( tcb.end ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;int end = insns.indexOf ( tcb.end ) ;^118^^^^^103^133^int end = insns.indexOf ( tcb.end ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( j.label ) ;int end = insns.indexOf ( tcb.end ) ;^118^^^^^103^133^int end = insns.indexOf ( tcb.end ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^for  ( int j = var; j < end; ++j )  {^119^^^^^104^134^for  ( int j = begin; j < end; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  m.tryCatchBlocks .get ( insnType )  ;^116^^^^^101^131^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  m.tryCatchBlocks.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^116^117^^^^101^131^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  m.tryCatchBlocks.get ( i ) ; int begin = insns.indexOf ( tcb.start ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int begin = insns .get ( n )  ;^117^^^^^102^132^int begin = insns.indexOf ( tcb.start ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^117^118^^^^102^132^int begin = insns.indexOf ( tcb.start ) ; int end = insns.indexOf ( tcb.end ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^findSubroutine ( insns.indexOf ( tcb.handler ) , sub, calls ) ;int begin = insns.indexOf ( tcb.start ) ;^117^^^^^102^132^int begin = insns.indexOf ( tcb.start ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^jump = insns.indexOf ( label ) ;int begin = insns.indexOf ( tcb.start ) ;^117^^^^^102^132^int begin = insns.indexOf ( tcb.start ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;int begin = insns.indexOf ( tcb.start ) ;^117^^^^^102^132^int begin = insns.indexOf ( tcb.start ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^118^^^^^103^133^int end = insns.indexOf ( tcb.end ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^jump = insns.indexOf ( label ) ;int end = insns.indexOf ( tcb.end ) ;^118^^^^^103^133^int end = insns.indexOf ( tcb.end ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^for  (  short  j = begin; j < end; ++j )  {^119^^^^^104^134^for  ( int j = begin; j < end; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^for  ( int j = begin; j <= end; ++j )  {^119^^^^^104^134^for  ( int j = begin; j < end; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^for  ( int top = begin; j < end; ++j )  {^119^^^^^104^134^for  ( int j = begin; j < end; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^for  ( int end = begin; j < j; ++j )  {^119^^^^^104^134^for  ( int j = begin; j < end; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( insnHandlers == this )  {^121^^^^^106^136^if  ( insnHandlers == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^insnHandlers = new  LinkedList  (  ) ;^122^^^^^107^137^insnHandlers = new ArrayList (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = i; i < m.tryCatchBlocks.size (  ) ; ++i )  {^115^^^^^100^130^for  ( int i = 0; i < m.tryCatchBlocks.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < m.tryCatchBlocks.size() + 1 ; ++i )  {^115^^^^^100^130^for  ( int i = 0; i < m.tryCatchBlocks.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  m.tryCatchBlocks .get ( j )  ;^116^^^^^101^131^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  m.tryCatchBlocks.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  m.tryCatchBlocks .get ( local )  ;^116^^^^^101^131^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  m.tryCatchBlocks.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^short  begin = insns.indexOf ( tcb.start ) ;^117^^^^^102^132^int begin = insns.indexOf ( tcb.start ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int begin = insns .get ( j )  ;^117^^^^^102^132^int begin = insns.indexOf ( tcb.start ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^for  ( int j = top; j < end; ++j )  {^119^^^^^104^134^for  ( int j = begin; j < end; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < m.tryCatchBlocks.size() + 7 ; ++i )  {^115^^^^^100^130^for  ( int i = 0; i < m.tryCatchBlocks.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int begin = insns .get ( call )  ;^117^^^^^102^132^int begin = insns.indexOf ( tcb.start ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^117^^^^^102^132^int begin = insns.indexOf ( tcb.start ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^int end = insns .get ( n )  ;^118^^^^^103^133^int end = insns.indexOf ( tcb.end ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^Subroutine main = new Subroutine ( null.maxLocals, null ) ;^130^^^^^115^145^Subroutine main = new Subroutine ( null, m.maxLocals, null ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^Subroutine main = new Subroutine ( null,  null ) ;^130^^^^^115^145^Subroutine main = new Subroutine ( null, m.maxLocals, null ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^List subroutineCalls = new  Set  (  ) ;^131^^^^^116^146^List subroutineCalls = new ArrayList (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^ArrayList  subroutineCalls = new Array ArrayList  (  ) ;^131^^^^^116^146^List subroutineCalls = new ArrayList (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^Map subroutineHeads = new HashMap (  ) ;List subroutineCalls = new ArrayList (  ) ;^131^^^^^116^146^List subroutineCalls = new ArrayList (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^List subroutineCalls = new ArrayList (  ) ;Map subroutineHeads = new HashMap (  ) ;^132^^^^^117^147^Map subroutineHeads = new HashMap (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^findSubroutine ( -8, main, subroutineCalls ) ;^133^^^^^118^148^findSubroutine ( 0, main, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^findSubroutine ( 0, subroutine, subroutineCalls ) ;^133^^^^^118^148^findSubroutine ( 0, main, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^findSubroutine ( 0, main, insnHandlers ) ;^133^^^^^118^148^findSubroutine ( 0, main, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^findSubroutine ( 0,  subroutineCalls ) ;^133^^^^^118^148^findSubroutine ( 0, main, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^findSubroutine ( 0, main ) ;^133^^^^^118^148^findSubroutine ( 0, main, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^findSubroutine ( 0, subroutineCalls, main ) ;^133^^^^^118^148^findSubroutine ( 0, main, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^merge ( 0, main, subroutineCalls ) ;^133^^^^^118^148^findSubroutine ( 0, main, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^merge ( 0, main, insnHandlers ) ;^133^^^^^118^148^findSubroutine ( 0, main, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^133^^^^^118^148^findSubroutine ( 0, main, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^findSubroutine ( insns.indexOf ( jsr.label ) , sub, subroutineCalls ) ;findSubroutine ( 0, main, subroutineCalls ) ;^133^^^^^118^148^findSubroutine ( 0, main, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^subroutines[insn] = subroutine.copy (  ) ;findSubroutine ( 0, main, subroutineCalls ) ;^133^^^^^118^148^findSubroutine ( 0, main, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;findSubroutine ( 0, main, subroutineCalls ) ;^133^^^^^118^148^findSubroutine ( 0, main, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^while  ( !subroutineCalls.get (  )  )  {^134^^^^^119^149^while  ( !subroutineCalls.isEmpty (  )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( sub != null )  {^137^^^^^122^152^if  ( sub == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( sub == this )  {^137^^^^^122^152^if  ( sub == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P9_Replace_Statement]^if  ( oldFrame == null )  {^137^^^^^122^152^if  ( sub == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P9_Replace_Statement]^if  ( subroutine == null )  {^137^^^^^122^152^if  ( sub == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P9_Replace_Statement]^if  ( subroutine != null )  {^137^^^^^122^152^if  ( sub == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P9_Replace_Statement]^if  ( oldSubroutine == null )  {^137^^^^^122^152^if  ( sub == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P9_Replace_Statement]^if  ( tcb.type == null )  {^137^^^^^122^152^if  ( sub == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^142^^^^^137^143^sub.callers.add ( jsr ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^calls.add ( node ) ;sub.callers.add ( jsr ) ;^142^^^^^137^143^sub.callers.add ( jsr ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^insnHandlers.add ( tcb ) ;sub.callers.add ( jsr ) ;^142^^^^^137^143^sub.callers.add ( jsr ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P4_Replace_Constructor]^sub = new Subroutine ( jsr.label, m.maxLocals ) ;^138^^^^^123^153^sub = new Subroutine ( jsr.label, m.maxLocals, jsr ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P4_Replace_Constructor]^sub = new Subroutine ( jsr.label.maxLocals, jsr ) ;^138^^^^^123^153^sub = new Subroutine ( jsr.label, m.maxLocals, jsr ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^sub = new Subroutine (  m.maxLocals, jsr ) ;^138^^^^^123^153^sub = new Subroutine ( jsr.label, m.maxLocals, jsr ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^sub = new Subroutine ( jsr.label,  jsr ) ;^138^^^^^123^153^sub = new Subroutine ( jsr.label, m.maxLocals, jsr ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^sub =  new Subroutine ( j.label, m.maxLocals, j ) ;^138^^^^^123^153^sub = new Subroutine ( jsr.label, m.maxLocals, jsr ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^subroutineHeads.put ( jsr.label ) ;^139^^^^^124^154^subroutineHeads.put ( jsr.label, sub ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^subroutineHeads.put (  sub ) ;^139^^^^^124^154^subroutineHeads.put ( jsr.label, sub ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutineHeads .get ( jump )  ;^139^^^^^124^154^subroutineHeads.put ( jsr.label, sub ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^139^140^^^^124^154^subroutineHeads.put ( jsr.label, sub ) ; findSubroutine ( insns.indexOf ( jsr.label ) , sub, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^findSubroutine ( insns.indexOf ( jsr.label ) ,  subroutineCalls ) ;^140^^^^^125^155^findSubroutine ( insns.indexOf ( jsr.label ) , sub, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^findSubroutine ( insns.indexOf ( jsr.label ) , sub ) ;^140^^^^^125^155^findSubroutine ( insns.indexOf ( jsr.label ) , sub, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^merge ( insns.indexOf ( jsr.label ) , sub, subroutineCalls ) ;^140^^^^^125^155^findSubroutine ( insns.indexOf ( jsr.label ) , sub, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^findSubroutine ( insns.get ( jsr.label ) , sub, subroutineCalls ) ;^140^^^^^125^155^findSubroutine ( insns.indexOf ( jsr.label ) , sub, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^140^^^^^125^155^findSubroutine ( insns.indexOf ( jsr.label ) , sub, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^findSubroutine ( insns.indexOf ( lsnode.dflt ) , sub, calls ) ;findSubroutine ( insns.indexOf ( jsr.label ) , sub, subroutineCalls ) ;^140^^^^^125^155^findSubroutine ( insns.indexOf ( jsr.label ) , sub, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^findSubroutine ( insns.indexOf ( jnode.label ) , sub, calls ) ;findSubroutine ( insns.indexOf ( jsr.label ) , sub, subroutineCalls ) ;^140^^^^^125^155^findSubroutine ( insns.indexOf ( jsr.label ) , sub, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^findSubroutine ( insns.indexOf ( tsnode.dflt ) , sub, calls ) ;findSubroutine ( insns.indexOf ( jsr.label ) , sub, subroutineCalls ) ;^140^^^^^125^155^findSubroutine ( insns.indexOf ( jsr.label ) , sub, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^findSubroutine ( insns.indexOf ( tcb.handler ) , sub, calls ) ;findSubroutine ( insns.indexOf ( jsr.label ) , sub, subroutineCalls ) ;^140^^^^^125^155^findSubroutine ( insns.indexOf ( jsr.label ) , sub, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;findSubroutine ( insns.indexOf ( jsr.label ) , sub, subroutineCalls ) ;^140^^^^^125^155^findSubroutine ( insns.indexOf ( jsr.label ) , sub, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^findSubroutine ( 0, main, subroutineCalls ) ;findSubroutine ( insns.indexOf ( jsr.label ) , sub, subroutineCalls ) ;^140^^^^^125^155^findSubroutine ( insns.indexOf ( jsr.label ) , sub, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^JumpInsnNode jsr =  ( JumpInsnNode )  subroutineCalls.remove (  ) ;^135^^^^^120^150^JumpInsnNode jsr =  ( JumpInsnNode )  subroutineCalls.remove ( 0 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^JumpInsnNode jsr =  ( JumpInsnNode )  insnHandlers.remove ( 0 ) ;^135^^^^^120^150^JumpInsnNode jsr =  ( JumpInsnNode )  subroutineCalls.remove ( 0 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^JumpInsnNode jsr =  ( JumpInsnNode )  insnHandlers .isEmpty (  )  ;^135^^^^^120^150^JumpInsnNode jsr =  ( JumpInsnNode )  subroutineCalls.remove ( 0 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^JumpInsnNode j =  ( JumpInsnNode )  insnNode;JumpInsnNode jsr =  ( JumpInsnNode )  subroutineCalls.remove ( 0 ) ;^135^^^^^120^150^JumpInsnNode jsr =  ( JumpInsnNode )  subroutineCalls.remove ( 0 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^JumpInsnNode jnode =  ( JumpInsnNode )  node;JumpInsnNode jsr =  ( JumpInsnNode )  subroutineCalls.remove ( 0 ) ;^135^^^^^120^150^JumpInsnNode jsr =  ( JumpInsnNode )  subroutineCalls.remove ( 0 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^Subroutine sub =  ( Subroutine )  subroutineHeads.put ( jsr.label ) ;^136^^^^^121^151^Subroutine sub =  ( Subroutine )  subroutineHeads.get ( jsr.label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^Subroutine oldSubroutine = subroutines[insn];Subroutine sub =  ( Subroutine )  subroutineHeads.get ( jsr.label ) ;^136^^^^^121^151^Subroutine sub =  ( Subroutine )  subroutineHeads.get ( jsr.label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^Subroutine subroutine = subroutines[insn];Subroutine sub =  ( Subroutine )  subroutineHeads.get ( jsr.label ) ;^136^^^^^121^151^Subroutine sub =  ( Subroutine )  subroutineHeads.get ( jsr.label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^JumpInsnNode jsr =  ( JumpInsnNode )  subroutineCalls.remove ( begin ) ;^135^^^^^120^150^JumpInsnNode jsr =  ( JumpInsnNode )  subroutineCalls.remove ( 0 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^135^^^^^120^150^JumpInsnNode jsr =  ( JumpInsnNode )  subroutineCalls.remove ( 0 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^while  ( !subroutineCalls.isEmpty (  )  )  { JumpInsnNode jsr =  ( JumpInsnNode )  subroutineCalls.remove ( 0 ) ;JumpInsnNode jsr =  ( JumpInsnNode )  subroutineCalls.remove ( 0 ) ;^135^^^^^120^150^JumpInsnNode jsr =  ( JumpInsnNode )  subroutineCalls.remove ( 0 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^136^^^^^121^151^Subroutine sub =  ( Subroutine )  subroutineHeads.get ( jsr.label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutineHeads .get ( insn )  ;^139^^^^^124^154^subroutineHeads.put ( jsr.label, sub ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^142^^^^^127^157^sub.callers.add ( jsr ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^calls.add ( node ) ;sub.callers.add ( jsr ) ;^142^^^^^127^157^sub.callers.add ( jsr ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^insnHandlers.add ( tcb ) ;sub.callers.add ( jsr ) ;^142^^^^^127^157^sub.callers.add ( jsr ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^139^^^^^124^154^subroutineHeads.put ( jsr.label, sub ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^findSubroutine ( insns .get ( n )  , sub, subroutineCalls ) ;^140^^^^^125^155^findSubroutine ( insns.indexOf ( jsr.label ) , sub, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( insns .get ( begin )  , sub, subroutineCalls ) ;^140^^^^^125^155^findSubroutine ( insns.indexOf ( jsr.label ) , sub, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^JumpInsnNode jsr =  ( JumpInsnNode )  subroutineCalls.remove ( insn ) ;^135^^^^^120^150^JumpInsnNode jsr =  ( JumpInsnNode )  subroutineCalls.remove ( 0 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^JumpInsnNode jsr =  ( JumpInsnNode )  subroutineCalls .isEmpty (  )  ;^135^^^^^120^150^JumpInsnNode jsr =  ( JumpInsnNode )  subroutineCalls.remove ( 0 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^Subroutine sub =  ( Subroutine )  subroutineHeads .get ( i )  ;^136^^^^^121^151^Subroutine sub =  ( Subroutine )  subroutineHeads.get ( jsr.label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^while  ( !subroutineCalls .remove ( begin )   )  {^134^^^^^119^149^while  ( !subroutineCalls.isEmpty (  )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^134^135^^^^119^149^while  ( !subroutineCalls.isEmpty (  )  )  { JumpInsnNode jsr =  ( JumpInsnNode )  subroutineCalls.remove ( 0 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^JumpInsnNode jsr =  ( JumpInsnNode )  subroutineCalls.remove ( -8 ) ;^135^^^^^120^150^JumpInsnNode jsr =  ( JumpInsnNode )  subroutineCalls.remove ( 0 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^Subroutine sub =  ( Subroutine )  subroutineHeads .get ( j )  ;^136^^^^^121^151^Subroutine sub =  ( Subroutine )  subroutineHeads.get ( jsr.label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^subroutineHeads .get ( n )  ;^139^^^^^124^154^subroutineHeads.put ( jsr.label, sub ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( subroutines[i] != null || subroutines[i].start == null )  {^146^^^^^131^161^if  ( subroutines[i] != null && subroutines[i].start == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( subroutines[i] == null && subroutines[i].start == null )  {^146^^^^^131^161^if  ( subroutines[i] != null && subroutines[i].start == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( subroutines[i] != null && subroutines[i].start != null )  {^146^^^^^131^161^if  ( subroutines[i] != null && subroutines[i].start == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( subroutines[i] != null ) {^146^^^^^131^161^if  ( subroutines[i] != null && subroutines[i].start == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  (  subroutines[i].start == null )  {^146^^^^^131^161^if  ( subroutines[i] != null && subroutines[i].start == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( subroutines[i] != false ) {^146^^^^^131^161^if  ( subroutines[i] != null && subroutines[i].start == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P9_Replace_Statement]^if  ( oldSubroutine != null && subroutineBeforeJSR != null )  {^146^^^^^131^161^if  ( subroutines[i] != null && subroutines[i].start == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P15_Unwrap_Block]^subroutines[i] = null;^146^147^148^^^131^161^if  ( subroutines[i] != null && subroutines[i].start == null )  { subroutines[i] = null; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P16_Remove_Block]^^146^147^148^^^131^161^if  ( subroutines[i] != null && subroutines[i].start == null )  { subroutines[i] = null; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P13_Insert_Block]^if  (  ( oldSubroutine != null )  &&  ( subroutineBeforeJSR != null )  )  {     changes |= oldSubroutine.merge ( subroutineBeforeJSR ) ; }^146^^^^^131^161^[Delete]^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutines[i] = true;^147^^^^^132^162^subroutines[i] = null;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^subroutine.access[var] = true;subroutines[i] = null;^147^^^^^132^162^subroutines[i] = null;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^subroutines[insn] = sub.copy (  ) ;subroutines[i] = null;^147^^^^^132^162^subroutines[i] = null;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P12_Insert_Condition]^if  ( subroutines[insn] != null )  { subroutines[i] = null; }^147^^^^^132^162^subroutines[i] = null;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^for  (  long  i = 0; i < n; ++i )  {^145^^^^^130^160^for  ( int i = 0; i < n; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^for  ( int i = 0; i > n; ++i )  {^145^^^^^130^160^for  ( int i = 0; i < n; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = -8; i < n; ++i )  {^145^^^^^130^160^for  ( int i = 0; i < n; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( subroutines[i] != false && subroutines[i].start == false )  {^146^^^^^131^161^if  ( subroutines[i] != null && subroutines[i].start == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutines[i] = this;^147^^^^^132^162^subroutines[i] = null;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = call; i < n; ++i )  {^145^^^^^130^160^for  ( int i = 0; i < n; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^Frame current = newFrame ( m.maxLocals.maxStack ) ;^152^^^^^137^167^Frame current = newFrame ( m.maxLocals, m.maxStack ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^Frame current = newFrame (  m.maxStack ) ;^152^^^^^137^167^Frame current = newFrame ( m.maxLocals, m.maxStack ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^Frame current = newFrame ( m.maxLocals ) ;^152^^^^^137^167^Frame current = newFrame ( m.maxLocals, m.maxStack ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^Frame current = newControlFlowEdge ( m.maxLocals, m.maxStack ) ;^152^^^^^137^167^Frame current = newFrame ( m.maxLocals, m.maxStack ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^Frame handler = newFrame ( m.maxLocals, m.maxStack ) ;Frame current = newFrame ( m.maxLocals, m.maxStack ) ;^152^^^^^137^167^Frame current = newFrame ( m.maxLocals, m.maxStack ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^152^153^^^^137^167^Frame current = newFrame ( m.maxLocals, m.maxStack ) ; Frame handler = newFrame ( m.maxLocals, m.maxStack ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^Frame handler = newFrame ( m.maxLocals.maxStack ) ;^153^^^^^138^168^Frame handler = newFrame ( m.maxLocals, m.maxStack ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^Frame handler = newFrame (  m.maxStack ) ;^153^^^^^138^168^Frame handler = newFrame ( m.maxLocals, m.maxStack ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^Frame handler = newFrame ( m.maxLocals ) ;^153^^^^^138^168^Frame handler = newFrame ( m.maxLocals, m.maxStack ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^Frame handler = newControlFlowEdge ( m.maxLocals, m.maxStack ) ;^153^^^^^138^168^Frame handler = newFrame ( m.maxLocals, m.maxStack ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^Frame current = newFrame ( m.maxLocals, m.maxStack ) ;Frame handler = newFrame ( m.maxLocals, m.maxStack ) ;^153^^^^^138^168^Frame handler = newFrame ( m.maxLocals, m.maxStack ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^153^154^^^^138^168^Frame handler = newFrame ( m.maxLocals, m.maxStack ) ; Type[] args = Type.getArgumentTypes ( m.desc ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^Type[] args = Type.getObjectType ( m.desc ) ;^154^^^^^139^169^Type[] args = Type.getArgumentTypes ( m.desc ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^Type[] args = Type .getObjectType ( owner )  ;^154^^^^^139^169^Type[] args = Type.getArgumentTypes ( m.desc ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^Type ctype = Type.getObjectType ( owner ) ;Type[] args = Type.getArgumentTypes ( m.desc ) ;^154^^^^^139^169^Type[] args = Type.getArgumentTypes ( m.desc ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^154^155^^^^139^169^Type[] args = Type.getArgumentTypes ( m.desc ) ; int local = 0;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^type = Type.getObjectType ( tcb.type ) ;Type[] args = Type.getArgumentTypes ( m.desc ) ;^154^^^^^139^169^Type[] args = Type.getArgumentTypes ( m.desc ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^long  local = 0;^155^^^^^140^170^int local = 0;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^int local = var;^155^^^^^140^170^int local = 0;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  (  ( m.access & ACC_STATIC )  != 0 )  {^156^^^^^141^171^if  (  ( m.access & ACC_STATIC )  == 0 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  (  ( m.access  ^  ACC_STATIC )  == 0 )  {^156^^^^^141^171^if  (  ( m.access & ACC_STATIC )  == 0 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^if  (  ( m.access & ACC_STATIC )  == -7 )  {^156^^^^^141^171^if  (  ( m.access & ACC_STATIC )  == 0 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( (m.access & ACC_STATIC) )  {^156^^^^^141^171^if  (  ( m.access & ACC_STATIC )  == 0 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  (  ( m.access & ACC_STATIC )  == 0 / 4 )  {^156^^^^^141^171^if  (  ( m.access & ACC_STATIC )  == 0 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P15_Unwrap_Block]^org.mockito.asm.Type ctype = org.mockito.asm.Type.getObjectType(owner); current.setLocal((local++), interpreter.newValue(ctype));^156^157^158^159^^141^171^if  (  ( m.access & ACC_STATIC )  == 0 )  { Type ctype = Type.getObjectType ( owner ) ; current.setLocal ( local++, interpreter.newValue ( ctype )  ) ; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P16_Remove_Block]^^156^157^158^159^^141^171^if  (  ( m.access & ACC_STATIC )  == 0 )  { Type ctype = Type.getObjectType ( owner ) ; current.setLocal ( local++, interpreter.newValue ( ctype )  ) ; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^Type ctype = Type .getArgumentTypes (  )  ;^157^^^^^142^172^Type ctype = Type.getObjectType ( owner ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^Type[] args = Type.getArgumentTypes ( m.desc ) ;Type ctype = Type.getObjectType ( owner ) ;^157^^^^^142^172^Type ctype = Type.getObjectType ( owner ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^157^^^^^142^172^Type ctype = Type.getObjectType ( owner ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^type = Type.getObjectType ( tcb.type ) ;Type ctype = Type.getObjectType ( owner ) ;^157^^^^^142^172^Type ctype = Type.getObjectType ( owner ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^type = Type.getObjectType ( "java/lang/Throwable" ) ;Type ctype = Type.getObjectType ( owner ) ;^157^^^^^142^172^Type ctype = Type.getObjectType ( owner ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^current.setLocal ( local++, interpreter.newValue ( type )  ) ;^158^^^^^143^173^current.setLocal ( local++, interpreter.newValue ( ctype )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^current.setLocal ( local++.newValue ( ctype )  ) ;^158^^^^^143^173^current.setLocal ( local++, interpreter.newValue ( ctype )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^current.setLocal ( local++, ctype.newValue ( interpreter )  ) ;^158^^^^^143^173^current.setLocal ( local++, interpreter.newValue ( ctype )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^current.Frame ( local++, interpreter.newValue ( ctype )  ) ;^158^^^^^143^173^current.setLocal ( local++, interpreter.newValue ( ctype )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^current .clearStack (  )  ;^158^^^^^143^173^current.setLocal ( local++, interpreter.newValue ( ctype )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^158^^^^^143^173^current.setLocal ( local++, interpreter.newValue ( ctype )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^157^158^^^^142^172^Type ctype = Type.getObjectType ( owner ) ; current.setLocal ( local++, interpreter.newValue ( ctype )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( args[i].getSize (  )  != 2 )  {^162^^^^^147^177^if  ( args[i].getSize (  )  == 2 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^if  ( args[i].getSize (  )  == n )  {^162^^^^^147^177^if  ( args[i].getSize (  )  == 2 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^if  ( args[i].execute (  )  == 2 )  {^162^^^^^147^177^if  ( args[i].getSize (  )  == 2 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^if  ( args[i] .execute ( insnNode , interpreter )   == 2 )  {^162^^^^^147^177^if  ( args[i].getSize (  )  == 2 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( args[i].getSize (  )  == 2 >> 4 )  {^162^^^^^147^177^if  ( args[i].getSize (  )  == 2 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P15_Unwrap_Block]^current.setLocal((local++), interpreter.newValue(null));^162^163^164^^^147^177^if  ( args[i].getSize (  )  == 2 )  { current.setLocal ( local++, interpreter.newValue ( null )  ) ; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P16_Remove_Block]^^162^163^164^^^147^177^if  ( args[i].getSize (  )  == 2 )  { current.setLocal ( local++, interpreter.newValue ( null )  ) ; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^current.setLocal ( local++.newValue ( null )  ) ;^163^^^^^148^178^current.setLocal ( local++, interpreter.newValue ( null )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^current.Frame ( local++, interpreter.newValue ( null )  ) ;^163^^^^^148^178^current.setLocal ( local++, interpreter.newValue ( null )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^163^^^^^148^178^current.setLocal ( local++, interpreter.newValue ( null )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P13_Insert_Block]^if  (  ( args[i].getSize (  )  )  == 2 )  {     current.setLocal (  ( local++ ) , interpreter.newValue ( null )  ) ; }^163^^^^^148^178^[Delete]^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^for  (  short  i = 0; i < args.length; ++i )  {^160^^^^^145^175^for  ( int i = 0; i < args.length; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^for  ( int i = 0; i <= args.length; ++i )  {^160^^^^^145^175^for  ( int i = 0; i < args.length; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = insnOpcode; i < args.length; ++i )  {^160^^^^^145^175^for  ( int i = 0; i < args.length; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^if  ( args[i].getSize (  )  == 4 )  {^162^^^^^147^177^if  ( args[i].getSize (  )  == 2 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( args[i].getSize (  )  == 2L )  {^162^^^^^147^177^if  ( args[i].getSize (  )  == 2 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^current .clearStack (  )  ;^163^^^^^148^178^current.setLocal ( local++, interpreter.newValue ( null )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^current.setLocal ( local++, localnterpreter.newValue ( args[i] )  ) ;^161^^^^^146^176^current.setLocal ( local++, interpreter.newValue ( args[i] )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^current.setLocal ( local++nterpreter.newValue ( args[i] )  ) ;^161^^^^^146^176^current.setLocal ( local++, interpreter.newValue ( args[i] )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^current.setLocal ( local++.newValue ( args[i] )  ) ;^161^^^^^146^176^current.setLocal ( local++, interpreter.newValue ( args[i] )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^current.setLocal ( local++, argsnterpreter.newValue ( i[i] )  ) ;^161^^^^^146^176^current.setLocal ( local++, interpreter.newValue ( args[i] )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^current.setLocal ( local++, interpreternterpreter.newValue ( args[i] )  ) ;^161^^^^^146^176^current.setLocal ( local++, interpreter.newValue ( args[i] )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^current.setLocal ( local++, i.newValue ( args[i] )  ) ;^161^^^^^146^176^current.setLocal ( local++, interpreter.newValue ( args[i] )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^current.setLocal ( local++, jnterpreter.newValue ( args[i] )  ) ;^161^^^^^146^176^current.setLocal ( local++, interpreter.newValue ( args[i] )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^161^^^^^146^176^current.setLocal ( local++, interpreter.newValue ( args[i] )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^current.setLocal ( local++, args.newValue ( interpreter[i] )  ) ;^161^^^^^146^176^current.setLocal ( local++, interpreter.newValue ( args[i] )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^current.setLocal ( local++, interpreter .newValue ( type )   ) ;^161^^^^^146^176^current.setLocal ( local++, interpreter.newValue ( args[i] )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^current.setLocal ( local++, topnterpreter.newValue ( args[i] )  ) ;^161^^^^^146^176^current.setLocal ( local++, interpreter.newValue ( args[i] )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = -5; i < args.length; ++i )  {^160^^^^^145^175^for  ( int i = 0; i < args.length; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^current .clearStack (  )  ;^161^^^^^146^176^current.setLocal ( local++, interpreter.newValue ( args[i] )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^while  ( local == m.maxLocals )  {^166^^^^^151^181^while  ( local < m.maxLocals )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^current.setLocal ( local++.newValue ( null )  ) ;^167^^^^^152^182^current.setLocal ( local++, interpreter.newValue ( null )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^current.Frame ( local++, interpreter.newValue ( null )  ) ;^167^^^^^152^182^current.setLocal ( local++, interpreter.newValue ( null )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^167^^^^^152^182^current.setLocal ( local++, interpreter.newValue ( null )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( 0, handler, null ) ;^169^^^^^154^184^merge ( 0, current, null ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^findSubroutine ( 0, current, null ) ;^169^^^^^154^184^merge ( 0, current, null ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( 0, handler, null ) ;^169^^^^^154^184^merge ( 0, current, null ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^169^^^^^154^184^merge ( 0, current, null ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( jump, current, subroutine ) ;merge ( 0, current, null ) ;^169^^^^^154^184^merge ( 0, current, null ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( insn + 1, current, subroutine ) ;merge ( 0, current, null ) ;^169^^^^^154^184^merge ( 0, current, null ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^while  ( top == 0 )  {^172^^^^^157^187^while  ( top > 0 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^while  ( top >= 0 )  {^172^^^^^157^187^while  ( top > 0 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^while  ( top > begin )  {^172^^^^^157^187^while  ( top > 0 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^while  ( top > 2 )  {^172^^^^^157^187^while  ( top > 0 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^while  ( top > var )  {^172^^^^^157^187^while  ( top > 0 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^while  ( top > -5 )  {^172^^^^^157^187^while  ( top > 0 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnType == AbstractInsnNode.LABEL && insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnType >= AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnType < AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnType != AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnType > AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnType == AbstractInsnNode.LABEL ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  (  insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( (insnType == LABEL || insnType == LINE) ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnType == LABEL ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnType == LINE ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnType == FRAME ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insn + 1 ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( subroutine == null ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnNode instanceof JumpInsnNode ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode != GOTO && insnOpcode != JSR ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode != GOTO ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode != JSR ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == JSR ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnNode instanceof LookupSwitchInsnNode ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( j < size() ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnNode instanceof TableSwitchInsnNode ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == RET ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( i < size() ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( frames[call] != null ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( call + 1 ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode != ATHROW && (insnOpcode < IRETURN) || (insnOpcode > RETURN) ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode != ATHROW ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( (insnOpcode < IRETURN || insnOpcode > RETURN) ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode < IRETURN ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode > RETURN ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( subroutine != null ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnNode instanceof VarInsnNode ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( ((insnOpcode == LLOAD) || (insnOpcode == DLOAD)) || (insnOpcode == LSTORE) || insnOpcode == DSTORE ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( ((insnOpcode == LLOAD) || (insnOpcode == DLOAD) || insnOpcode == LSTORE) ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( (insnOpcode == LLOAD || insnOpcode == DLOAD) ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == LLOAD ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == DLOAD ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == LSTORE ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == DSTORE ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( var + 1 ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnNode instanceof IincInsnNode ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  <=  JumpInsnNode )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  &  JumpInsnNode )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  !=  JumpInsnNode )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  >>  JumpInsnNode )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  <  JumpInsnNode )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode != GOTO )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode != JSR )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insn + 1 )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == JSR )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnNode instanceof LookupSwitchInsnNode )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( j < size() )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnNode instanceof TableSwitchInsnNode )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == RET )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( subroutine == null )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( i < size() )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( frames[call] != null )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( call + 1 )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode != ATHROW && (insnOpcode < IRETURN) || (insnOpcode > RETURN) )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode != ATHROW )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( (insnOpcode < IRETURN || insnOpcode > RETURN) )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode < IRETURN )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode > RETURN )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( subroutine != null )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnNode instanceof VarInsnNode )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( ((insnOpcode == LLOAD) || (insnOpcode == DLOAD)) || (insnOpcode == LSTORE) || insnOpcode == DSTORE )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( ((insnOpcode == LLOAD) || (insnOpcode == DLOAD) || insnOpcode == LSTORE) )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( (insnOpcode == LLOAD || insnOpcode == DLOAD) )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == LLOAD )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == DLOAD )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == LSTORE )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == DSTORE )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( var + 1 )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnNode instanceof IincInsnNode )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P15_Unwrap_Block]^org.mockito.asm.tree.JumpInsnNode j = ((org.mockito.asm.tree.JumpInsnNode) (insnNode)); if ((insnOpcode != (GOTO)) && (insnOpcode != (JSR))) {    merge((insn + 1), current, subroutine);    newControlFlowEdge(insn, (insn + 1));}; int jump = insns.indexOf(j.label); if (insnOpcode == (JSR)) {    merge(jump, current, new org.mockito.asm.tree.analysis.Subroutine(j.label, m.maxLocals, j));}else {    merge(jump, current, subroutine);}; newControlFlowEdge(insn, jump);^193^194^195^196^197^178^208^if  ( insnNode instanceof JumpInsnNode )  { JumpInsnNode j =  ( JumpInsnNode )  insnNode; if  ( insnOpcode != GOTO && insnOpcode != JSR )  { merge ( insn + 1, current, subroutine ) ; newControlFlowEdge ( insn, insn + 1 ) ; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P16_Remove_Block]^^193^194^195^196^197^178^208^if  ( insnNode instanceof JumpInsnNode )  { JumpInsnNode j =  ( JumpInsnNode )  insnNode; if  ( insnOpcode != GOTO && insnOpcode != JSR )  { merge ( insn + 1, current, subroutine ) ; newControlFlowEdge ( insn, insn + 1 ) ; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  &  LookupSwitchInsnNode )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  ||  LookupSwitchInsnNode )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  |  LookupSwitchInsnNode )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  <<  LookupSwitchInsnNode )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( j < size() )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode == RET )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( subroutine == null )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( i < size() )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( frames[call] != null )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( call + 1 )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode != ATHROW && (insnOpcode < IRETURN) || (insnOpcode > RETURN) )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode != ATHROW )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( (insnOpcode < IRETURN || insnOpcode > RETURN) )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode < IRETURN )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode > RETURN )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( subroutine != null )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnNode instanceof VarInsnNode )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( ((insnOpcode == LLOAD) || (insnOpcode == DLOAD)) || (insnOpcode == LSTORE) || insnOpcode == DSTORE )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( ((insnOpcode == LLOAD) || (insnOpcode == DLOAD) || insnOpcode == LSTORE) )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( (insnOpcode == LLOAD || insnOpcode == DLOAD) )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode == LLOAD )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode == DLOAD )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode == LSTORE )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode == DSTORE )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( var + 1 )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnNode instanceof IincInsnNode )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insn + 1 )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^}  if  ( insnNode instanceof LookupSwitchInsnNode )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  ^  TableSwitchInsnNode )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  &  TableSwitchInsnNode )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  |  TableSwitchInsnNode )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( j < size() )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode == RET )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( subroutine == null )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( i < size() )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( frames[call] != null )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( call + 1 )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode != ATHROW && (insnOpcode < IRETURN) || (insnOpcode > RETURN) )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode != ATHROW )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( (insnOpcode < IRETURN || insnOpcode > RETURN) )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode < IRETURN )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode > RETURN )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( subroutine != null )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnNode instanceof VarInsnNode )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( ((insnOpcode == LLOAD) || (insnOpcode == DLOAD)) || (insnOpcode == LSTORE) || insnOpcode == DSTORE )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( ((insnOpcode == LLOAD) || (insnOpcode == DLOAD) || insnOpcode == LSTORE) )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( (insnOpcode == LLOAD || insnOpcode == DLOAD) )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode == LLOAD )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode == DLOAD )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode == LSTORE )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode == DSTORE )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( var + 1 )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnNode instanceof IincInsnNode )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insn + 1 )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^}  if  ( insnNode instanceof TableSwitchInsnNode )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnOpcode != RET )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnOpcode >= RET )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( subroutine == null )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( i < size() )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( frames[call] != null )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( call + 1 )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode != ATHROW && (insnOpcode < IRETURN) || (insnOpcode > RETURN) )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode != ATHROW )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( (insnOpcode < IRETURN || insnOpcode > RETURN) )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode < IRETURN )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode > RETURN )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( subroutine != null )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnNode instanceof VarInsnNode )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( ((insnOpcode == LLOAD) || (insnOpcode == DLOAD)) || (insnOpcode == LSTORE) || insnOpcode == DSTORE )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( ((insnOpcode == LLOAD) || (insnOpcode == DLOAD) || insnOpcode == LSTORE) )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( (insnOpcode == LLOAD || insnOpcode == DLOAD) )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode == LLOAD )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode == DLOAD )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode == LSTORE )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode == DSTORE )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( var + 1 )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnNode instanceof IincInsnNode )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insn + 1 )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^}  if  ( insnOpcode == RET )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P15_Unwrap_Block]^if (subroutine == null) {    throw new org.mockito.asm.tree.analysis.AnalyzerException("RET instruction outside of a sub routine");}; for (int i = 0; i < (subroutine.callers.size()); ++i) {    java.lang.Object caller = subroutine.callers.get(i);    int call = insns.indexOf(((org.mockito.asm.tree.AbstractInsnNode) (caller)));    if ((frames[call]) != null) {        merge((call + 1), frames[call], current, subroutines[call], subroutine.access);        newControlFlowEdge(insn, (call + 1));    }};^230^231^232^233^^215^245^} else if  ( insnOpcode == RET )  { if  ( subroutine == null )  { throw new AnalyzerException  (" ")  ; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P16_Remove_Block]^^230^231^232^233^^215^245^} else if  ( insnOpcode == RET )  { if  ( subroutine == null )  { throw new AnalyzerException  (" ")  ; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnOpcode != ATHROW ||  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnOpcode == ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN && insnOpcode > RETURN )  ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode > IRETURN || insnOpcode > RETURN )  ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode >= RETURN )  ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  (  insnOpcode > RETURN )  ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode != ATHROW ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( (insnOpcode < IRETURN || insnOpcode > RETURN) ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode < IRETURN ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode > RETURN ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( subroutine != null ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnNode instanceof VarInsnNode ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( ((insnOpcode == LLOAD) || (insnOpcode == DLOAD)) || (insnOpcode == LSTORE) || insnOpcode == DSTORE ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( ((insnOpcode == LLOAD) || (insnOpcode == DLOAD) || insnOpcode == LSTORE) ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( (insnOpcode == LLOAD || insnOpcode == DLOAD) ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode == LLOAD ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode == DLOAD ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode == LSTORE ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnOpcode == DSTORE ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( var + 1 ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insnNode instanceof IincInsnNode ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else if  ( insn + 1 ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^}  if  (  insnOpcode > RETURN )  ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( subroutine == null )  {^249^^^^^246^266^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnNode instanceof VarInsnNode )  {^249^^^^^246^266^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( ((insnOpcode == LLOAD) || (insnOpcode == DLOAD)) || (insnOpcode == LSTORE) || insnOpcode == DSTORE )  {^249^^^^^246^266^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( ((insnOpcode == LLOAD) || (insnOpcode == DLOAD) || insnOpcode == LSTORE) )  {^249^^^^^246^266^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( (insnOpcode == LLOAD || insnOpcode == DLOAD) )  {^249^^^^^246^266^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == LLOAD )  {^249^^^^^246^266^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == DLOAD )  {^249^^^^^246^266^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == LSTORE )  {^249^^^^^246^266^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == DSTORE )  {^249^^^^^246^266^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( var + 1 )  {^249^^^^^246^266^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnNode instanceof IincInsnNode )  {^249^^^^^246^266^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( subroutine != false )  {^249^^^^^246^266^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P9_Replace_Statement]^if  ( oldFrame == null )  {^249^^^^^246^266^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P9_Replace_Statement]^if  ( subroutines[insn] != null )  {^249^^^^^246^266^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P9_Replace_Statement]^if  ( sub == null )  {^249^^^^^246^266^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P9_Replace_Statement]^if  ( oldSubroutine == null )  {^249^^^^^246^266^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P9_Replace_Statement]^if  ( tcb.type == null )  {^249^^^^^246^266^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  <  VarInsnNode )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  ==  VarInsnNode )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( ((insnOpcode == LLOAD) || (insnOpcode == DLOAD)) || (insnOpcode == LSTORE) || insnOpcode == DSTORE )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( ((insnOpcode == LLOAD) || (insnOpcode == DLOAD) || insnOpcode == LSTORE) )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( (insnOpcode == LLOAD || insnOpcode == DLOAD) )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == LLOAD )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == DLOAD )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == LSTORE )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == DSTORE )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( var + 1 )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnNode instanceof IincInsnNode )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  <=  IincInsnNode )  {^259^^^^^246^266^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else {^259^^^^^246^266^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^}  if  ( insnNode instanceof IincInsnNode )  {^259^^^^^246^266^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P15_Unwrap_Block]^int var = ((org.mockito.asm.tree.IincInsnNode) (insnNode)).var; subroutine.access[var] = true;^259^260^261^262^^246^266^} else if  ( insnNode instanceof IincInsnNode )  { int var =  (  ( IincInsnNode )  insnNode ) .var; subroutine.access[var] = true; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P16_Remove_Block]^^259^260^261^262^^246^266^} else if  ( insnNode instanceof IincInsnNode )  { int var =  (  ( IincInsnNode )  insnNode ) .var; subroutine.access[var] = true; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var] = false;^261^^^^^246^266^subroutine.access[var] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^subroutine.access[var + 1] = true;subroutine.access[var] = true;^261^^^^^246^266^subroutine.access[var] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^subroutines[i] = null;subroutine.access[var] = true;^261^^^^^246^266^subroutine.access[var] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^long  var =  (  ( IincInsnNode )  insnNode ) .var;^260^^^^^246^266^int var =  (  ( IincInsnNode )  insnNode ) .var;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int var =  (  ( VarInsnNode )  insnNode ) .var;int var =  (  ( IincInsnNode )  insnNode ) .var;^260^^^^^246^266^int var =  (  ( IincInsnNode )  insnNode ) .var;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD && insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode >= LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD || insnOpcode != DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode <= LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode > DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == LLOAD ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  (  insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( ((insnOpcode == LLOAD) || (insnOpcode == DLOAD) || insnOpcode == LSTORE) ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( (insnOpcode == LLOAD || insnOpcode == DLOAD) ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == DLOAD ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == LSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( var + 1 ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P15_Unwrap_Block]^subroutine.access[(var + 1)] = true;^253^254^255^256^257^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) { subroutine.access[var + 1] = true; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P16_Remove_Block]^^253^254^255^256^257^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) { subroutine.access[var + 1] = true; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var ] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + 1] = false;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 4] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^subroutine.access[var] = true;subroutine.access[var + 1] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var] = false;^252^^^^^246^266^subroutine.access[var] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^subroutine.access[var + 1] = true;subroutine.access[var] = true;^252^^^^^246^266^subroutine.access[var] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^subroutines[i] = null;subroutine.access[var] = true;^252^^^^^246^266^subroutine.access[var] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + call] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 2] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^short  var =  (  ( VarInsnNode )  insnNode ) .var;^251^^^^^246^266^int var =  (  ( VarInsnNode )  insnNode ) .var;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int var =  (  ( IincInsnNode )  insnNode ) .var;int var =  (  ( VarInsnNode )  insnNode ) .var;^251^^^^^246^266^int var =  (  ( VarInsnNode )  insnNode ) .var;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode < LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode != DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + top] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  ||  IincInsnNode )  {^259^^^^^246^266^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^short  var =  (  ( IincInsnNode )  insnNode ) .var;^260^^^^^246^266^int var =  (  ( IincInsnNode )  insnNode ) .var;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + i] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  |  VarInsnNode )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  >>  VarInsnNode )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  &  IincInsnNode )  {^259^^^^^246^266^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode <= LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode <= DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + var] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 0] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + insnOpcode, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( insn + 1, handler, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( insn + 1, current, sub ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( insn + 1,  subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( insn + 1, current ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( current + 1, insn, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( insn + 1, subroutine, current ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( subroutine + 1, current, insn ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^merge ( j + 1, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( jump, current, subroutine ) ;merge ( insn + 1, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( insn + 1, f, subroutine ) ;merge ( insn + 1, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( 0, current, null ) ;merge ( insn + 1, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( jump, handler, subroutine ) ;merge ( insn + 1, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  !=  1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + j ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( j, insn + 1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^findSubroutine ( insn, insn + 1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^newControlFlowEdge ( insn, jump ) ;newControlFlowEdge ( insn, insn + 1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^newControlFlowEdge ( insn, call + 1 ) ;newControlFlowEdge ( insn, insn + 1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P12_Insert_Condition]^if  ( newControlFlowExceptionEdge ( insn, jump )  )  { newControlFlowEdge ( insn, insn + 1 ) ; }^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( subroutine == null )  {^249^^^^^234^264^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnNode instanceof VarInsnNode )  {^249^^^^^234^264^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( ((insnOpcode == LLOAD) || (insnOpcode == DLOAD)) || (insnOpcode == LSTORE) || insnOpcode == DSTORE )  {^249^^^^^234^264^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( ((insnOpcode == LLOAD) || (insnOpcode == DLOAD) || insnOpcode == LSTORE) )  {^249^^^^^234^264^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( (insnOpcode == LLOAD || insnOpcode == DLOAD) )  {^249^^^^^234^264^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == LLOAD )  {^249^^^^^234^264^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == DLOAD )  {^249^^^^^234^264^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == LSTORE )  {^249^^^^^234^264^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == DSTORE )  {^249^^^^^234^264^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( var + 1 )  {^249^^^^^234^264^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnNode instanceof IincInsnNode )  {^249^^^^^234^264^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( subroutine != true )  {^249^^^^^234^264^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P9_Replace_Statement]^if  ( oldFrame == null )  {^249^^^^^234^264^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P9_Replace_Statement]^if  ( subroutines[insn] != null )  {^249^^^^^234^264^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P9_Replace_Statement]^if  ( sub == null )  {^249^^^^^234^264^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P9_Replace_Statement]^if  ( oldSubroutine == null )  {^249^^^^^234^264^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P9_Replace_Statement]^if  ( tcb.type == null )  {^249^^^^^234^264^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  !=  VarInsnNode )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( ((insnOpcode == LLOAD) || (insnOpcode == DLOAD)) || (insnOpcode == LSTORE) || insnOpcode == DSTORE )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( ((insnOpcode == LLOAD) || (insnOpcode == DLOAD) || insnOpcode == LSTORE) )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( (insnOpcode == LLOAD || insnOpcode == DLOAD) )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == LLOAD )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == DLOAD )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == LSTORE )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == DSTORE )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( var + 1 )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnNode instanceof IincInsnNode )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  &  IincInsnNode )  {^259^^^^^244^274^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^} else {^259^^^^^244^274^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^}  if  ( insnNode instanceof IincInsnNode )  {^259^^^^^244^274^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P15_Unwrap_Block]^int var = ((org.mockito.asm.tree.IincInsnNode) (insnNode)).var; subroutine.access[var] = true;^259^260^261^262^^244^274^} else if  ( insnNode instanceof IincInsnNode )  { int var =  (  ( IincInsnNode )  insnNode ) .var; subroutine.access[var] = true; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P16_Remove_Block]^^259^260^261^262^^244^274^} else if  ( insnNode instanceof IincInsnNode )  { int var =  (  ( IincInsnNode )  insnNode ) .var; subroutine.access[var] = true; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var] = false;^261^^^^^246^276^subroutine.access[var] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^subroutine.access[var + 1] = true;subroutine.access[var] = true;^261^^^^^246^276^subroutine.access[var] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^subroutines[i] = null;subroutine.access[var] = true;^261^^^^^246^276^subroutine.access[var] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^long  var =  (  ( IincInsnNode )  insnNode ) .var;^260^^^^^245^275^int var =  (  ( IincInsnNode )  insnNode ) .var;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int var =  (  ( VarInsnNode )  insnNode ) .var;int var =  (  ( IincInsnNode )  insnNode ) .var;^260^^^^^245^275^int var =  (  ( IincInsnNode )  insnNode ) .var;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^short  var =  (  ( IincInsnNode )  insnNode ) .var;^260^^^^^245^275^int var =  (  ( IincInsnNode )  insnNode ) .var;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD && insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode >= LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD || insnOpcode >= DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode != LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode >= DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == LLOAD ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  (  insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( ((insnOpcode == LLOAD) || (insnOpcode == DLOAD) || insnOpcode == LSTORE) ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( (insnOpcode == LLOAD || insnOpcode == DLOAD) ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == DLOAD ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == LSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( var + 1 ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P15_Unwrap_Block]^subroutine.access[(var + 1)] = true;^253^254^255^256^257^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) { subroutine.access[var + 1] = true; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P16_Remove_Block]^^253^254^255^256^257^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) { subroutine.access[var + 1] = true; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var ] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + 1] = false;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 2] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^subroutine.access[var] = true;subroutine.access[var + 1] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var] = false;^252^^^^^237^267^subroutine.access[var] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^subroutine.access[var + 1] = true;subroutine.access[var] = true;^252^^^^^237^267^subroutine.access[var] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^subroutines[i] = null;subroutine.access[var] = true;^252^^^^^237^267^subroutine.access[var] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var ] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + 1] = false;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 0] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^subroutine.access[var] = true;subroutine.access[var + 1] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^short  var =  (  ( VarInsnNode )  insnNode ) .var;^251^^^^^236^266^int var =  (  ( VarInsnNode )  insnNode ) .var;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int var =  (  ( IincInsnNode )  insnNode ) .var;int var =  (  ( VarInsnNode )  insnNode ) .var;^251^^^^^236^266^int var =  (  ( VarInsnNode )  insnNode ) .var;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode <= LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD || insnOpcode != DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode >= LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode != DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + jump] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  <=  IincInsnNode )  {^259^^^^^244^274^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + var] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 * 3] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  >=  VarInsnNode )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  |  VarInsnNode )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 >>> 2] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 + 4] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode > DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + insn] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 4] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  >  IincInsnNode )  {^259^^^^^244^274^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 >> 3] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + insnOpcode, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( var + 1, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( insn + 1, current, sub ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( insn + 1,  subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( insn + 1, current ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( current + 1, insn, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( insn + 1, subroutine, current ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^merge ( insn + 1, handler, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^264^265^^^^249^279^merge ( insn + 1, current, subroutine ) ; newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( jump, current, subroutine ) ;merge ( insn + 1, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( insn + 1, f, subroutine ) ;merge ( insn + 1, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( 0, current, null ) ;merge ( insn + 1, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( jump, handler, subroutine ) ;merge ( insn + 1, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  !=  1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + insnType ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( j, insn + 1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^findSubroutine ( insn, insn + 1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowEdge ( jump, insn + 1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^newControlFlowEdge ( insn, jump ) ;newControlFlowEdge ( insn, insn + 1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^newControlFlowEdge ( insn, call + 1 ) ;newControlFlowEdge ( insn, insn + 1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P12_Insert_Condition]^if  ( newControlFlowExceptionEdge ( insn, jump )  )  { newControlFlowEdge ( insn, insn + 1 ) ; }^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( subroutine != null )  {^231^^^^^216^246^if  ( subroutine == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^if  ( sub == null )  {^231^^^^^216^246^if  ( subroutine == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( subroutine == true )  {^231^^^^^216^246^if  ( subroutine == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P9_Replace_Statement]^if  ( oldFrame == null )  {^231^^^^^216^246^if  ( subroutine == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P9_Replace_Statement]^if  ( subroutines[insn] != null )  {^231^^^^^216^246^if  ( subroutine == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P9_Replace_Statement]^if  ( oldSubroutine == null )  {^231^^^^^216^246^if  ( subroutine == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P9_Replace_Statement]^if  ( tcb.type == null )  {^231^^^^^216^246^if  ( subroutine == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P15_Unwrap_Block]^throw new org.mockito.asm.tree.analysis.AnalyzerException("RET instruction outside of a sub routine");^231^232^233^^^216^246^if  ( subroutine == null )  { throw new AnalyzerException  (" ")  ; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P16_Remove_Block]^^231^232^233^^^216^246^if  ( subroutine == null )  { throw new AnalyzerException  (" ")  ; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P13_Insert_Block]^if  (  ( insn < 0 )  ||  ( insn >=  ( n )  )  )  {     throw new AnalyzerException ( "Execution can fall off end of the code" ) ; }^231^^^^^216^246^[Delete]^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P13_Insert_Block]^if  ( subroutine == null )  {     throw new AnalyzerException ( "RET instruction outside of a sub routine" ) ; }^232^^^^^217^247^[Delete]^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^return 0;^232^^^^^217^247^throw new AnalyzerException  (" ")  ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( frames[call] == null )  {^237^^^^^222^252^if  ( frames[call] != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( call + 1 )  {^237^^^^^222^252^if  ( frames[call] != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( frames[call] != false )  {^237^^^^^222^252^if  ( frames[call] != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P9_Replace_Statement]^if  ( subroutines[insn] != null )  {^237^^^^^222^252^if  ( frames[call] != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( call + jump, frames[call], current, subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( call + 1, frames[call],  subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( call + 1, frames[call], currents[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( call + 1[call], current, subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( call + 1, frames[call], current[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, call   instanceof   1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, call  ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( local, call + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( insn, jump + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge (  call + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( insn + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( call, insn + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^findSubroutine ( insn, call + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowEdge ( insn, var + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^newControlFlowEdge ( insn, jump ) ;newControlFlowEdge ( insn, call + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^newControlFlowEdge ( insn, insn + 1 ) ;newControlFlowEdge ( insn, call + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P12_Insert_Condition]^if  ( newControlFlowExceptionEdge ( insn, jump )  )  { newControlFlowEdge ( insn, call + 1 ) ; }^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^for  (  long  i = 0; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^for  ( int i = 0; i <= subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^for  >  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = insnType; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < subroutine.callers.size() + 6 ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^for  ( int i = 0; i < subroutine.callers.get (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( call + top, frames[call], current, subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, call  <  1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowEdge ( var, call + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^short  call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^236^^^^^221^251^int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( lsi.dflt ) ;int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^236^^^^^221^251^int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( tsi.dflt ) ;int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^236^^^^^221^251^int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( tcb.handler ) ;int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^236^^^^^221^251^int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int end = insns.indexOf ( tcb.end ) ;int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^236^^^^^221^251^int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( j.label ) ;int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^236^^^^^221^251^int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^Object caller = subroutine.callers .get ( insnType )  ;^235^^^^^220^250^Object caller = subroutine.callers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^Object caller = subroutine.callers .get ( insn )  ;^235^^^^^220^250^Object caller = subroutine.callers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^235^236^^^^220^250^Object caller = subroutine.callers.get ( i ) ; int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^236^^^^^221^251^int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( call , frames[call], current, subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, call  !=  1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, call + j ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowEdge ( insn, local + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^for  (  short  i = 0; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 8; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < subroutine.callers.size() + 2 ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^long  call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^236^^^^^221^251^int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < subroutine.callers.size() - 6 ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^Object caller = subroutine.callers .get ( var )  ;^235^^^^^220^250^Object caller = subroutine.callers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^235^^^^^220^250^Object caller = subroutine.callers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( call + insnType, frames[call], current, subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( insn, n + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowEdge ( insn, top + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( sub == false )  {^231^^^^^216^246^if  ( subroutine == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( call + n, frames[call], current, subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, call  ==  1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( top, call + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( var, call + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnOpcode >= ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode == IRETURN || insnOpcode > RETURN )  ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode < RETURN )  ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnOpcode < ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( subroutine != true )  {^249^^^^^246^266^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  >=  VarInsnNode )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  &&  IincInsnNode )  {^259^^^^^246^266^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD || insnOpcode <= DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode != LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 3] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode != LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + n] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 * 0] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  >>  IincInsnNode )  {^259^^^^^246^266^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 * 2] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^long  var =  (  ( VarInsnNode )  insnNode ) .var;^251^^^^^246^266^int var =  (  ( VarInsnNode )  insnNode ) .var;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  &&  VarInsnNode )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  ||  VarInsnNode )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  >=  IincInsnNode )  {^259^^^^^246^266^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode >= LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + ] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 * 4] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1L] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD || insnOpcode >= DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  <<  IincInsnNode )  {^259^^^^^246^266^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + begin] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn , current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( var + 1, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^264^265^^^^246^266^merge ( insn + 1, current, subroutine ) ; newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn  ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( var, insn + 1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( var, insn + 1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  ^  VarInsnNode )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  ||  IincInsnNode )  {^259^^^^^244^274^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode != LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD || insnOpcode <= DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + local] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1L] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 4] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^long  var =  (  ( VarInsnNode )  insnNode ) .var;^251^^^^^236^266^int var =  (  ( VarInsnNode )  insnNode ) .var;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD || insnOpcode > DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + call] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 3] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  ==  IincInsnNode )  {^259^^^^^244^274^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 3] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  <  VarInsnNode )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  ^  IincInsnNode )  {^259^^^^^244^274^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode < LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode <= LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 * 4] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode < LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 / 4] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^for  <  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^for  >>  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = call; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < subroutine.callers.size() - 0 ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( frames[call] != true )  {^237^^^^^222^252^if  ( frames[call] != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( jump, call + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int call = insns .get ( local )  ;^236^^^^^221^251^int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int call = insns .get ( insn )  ;^236^^^^^221^251^int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( call + insn, frames[call], current, subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, call  ||  1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + begin] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = j; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < subroutine.callers.size() + 3 ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^Object caller = subroutine.callers .get ( call )  ;^235^^^^^220^250^Object caller = subroutine.callers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^int call = insns .get ( begin )  ;^236^^^^^221^251^int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, call  >>  1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn , current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( subroutine + 1, current, insn ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^merge ( jump + 1, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + begin ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( n, insn + 1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^for  (  short  j = 0; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^for  ( int j = 0; j <= tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = -2; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < tsi.labels.size() + 5 ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^for  ( int j = 0; j < tsi.labels.get (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^jump = label.indexOf ( insns ) ;^226^^^^^211^241^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^jump =  insns.indexOf ( null ) ;^226^^^^^211^241^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^LabelNode label =  ( LabelNode )  tsi.labels .get ( var )  ;^225^^^^^210^240^LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^225^^^^^210^240^LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^226^227^^^^211^241^jump = insns.indexOf ( label ) ; merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( lsi.dflt ) ;jump = insns.indexOf ( label ) ;^226^^^^^211^241^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int begin = insns.indexOf ( tcb.start ) ;jump = insns.indexOf ( label ) ;^226^^^^^211^241^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( tsi.dflt ) ;jump = insns.indexOf ( label ) ;^226^^^^^211^241^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( tcb.handler ) ;jump = insns.indexOf ( label ) ;^226^^^^^211^241^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int end = insns.indexOf ( tcb.end ) ;jump = insns.indexOf ( label ) ;^226^^^^^211^241^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( j.label ) ;jump = insns.indexOf ( label ) ;^226^^^^^211^241^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( j, current, subroutine ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump, handler, subroutine ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump, current, sub ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge (  current, subroutine ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump,  subroutine ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump, current ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( subroutine, current, jump ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( current, jump, subroutine ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^findSubroutine ( jump, current, subroutine ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( jump, handler, subroutine ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( insn + 1, f, subroutine ) ;merge ( jump, current, subroutine ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( insn + 1, current, subroutine ) ;merge ( jump, current, subroutine ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( 0, current, null ) ;merge ( jump, current, subroutine ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( jump, handler, subroutine ) ;merge ( jump, current, subroutine ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( local, jump ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( insn, local ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge (  jump ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( insn ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( jump, insn ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^newControlFlowExceptionEdge ( insn, jump ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowEdge ( j, jump ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^newControlFlowEdge ( insn, insn + 1 ) ;newControlFlowEdge ( insn, jump ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^newControlFlowEdge ( insn, call + 1 ) ;newControlFlowEdge ( insn, jump ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P12_Insert_Condition]^if  ( newControlFlowExceptionEdge ( insn, jump )  )  { newControlFlowEdge ( insn, jump ) ; }^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^JumpInsnNode j =  ( JumpInsnNode )  insnNode;TableSwitchInsnNode tsi =  ( TableSwitchInsnNode )  insnNode;^220^^^^^205^235^TableSwitchInsnNode tsi =  ( TableSwitchInsnNode )  insnNode;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^TableSwitchInsnNode tsnode =  ( TableSwitchInsnNode )  node;TableSwitchInsnNode tsi =  ( TableSwitchInsnNode )  insnNode;^220^^^^^205^235^TableSwitchInsnNode tsi =  ( TableSwitchInsnNode )  insnNode;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^LookupSwitchInsnNode lsnode =  ( LookupSwitchInsnNode )  node;TableSwitchInsnNode tsi =  ( TableSwitchInsnNode )  insnNode;^220^^^^^205^235^TableSwitchInsnNode tsi =  ( TableSwitchInsnNode )  insnNode;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^LookupSwitchInsnNode lsi =  ( LookupSwitchInsnNode )  insnNode;TableSwitchInsnNode tsi =  ( TableSwitchInsnNode )  insnNode;^220^^^^^205^235^TableSwitchInsnNode tsi =  ( TableSwitchInsnNode )  insnNode;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^short  jump = insns.indexOf ( tsi.dflt ) ;^221^^^^^206^236^int jump = insns.indexOf ( tsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int jump = insns.get ( tsi.dflt ) ;^221^^^^^206^236^int jump = insns.indexOf ( tsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( lsi.dflt ) ;int jump = insns.indexOf ( tsi.dflt ) ;^221^^^^^206^236^int jump = insns.indexOf ( tsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int begin = insns.indexOf ( tcb.start ) ;int jump = insns.indexOf ( tsi.dflt ) ;^221^^^^^206^236^int jump = insns.indexOf ( tsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( tcb.handler ) ;int jump = insns.indexOf ( tsi.dflt ) ;^221^^^^^206^236^int jump = insns.indexOf ( tsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;int jump = insns.indexOf ( tsi.dflt ) ;^221^^^^^206^236^int jump = insns.indexOf ( tsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int end = insns.indexOf ( tcb.end ) ;int jump = insns.indexOf ( tsi.dflt ) ;^221^^^^^206^236^int jump = insns.indexOf ( tsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( j.label ) ;int jump = insns.indexOf ( tsi.dflt ) ;^221^^^^^206^236^int jump = insns.indexOf ( tsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = begin; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < tsi.labels.size() + 1 ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int jump = insns .get ( insnOpcode )  ;^221^^^^^206^236^int jump = insns.indexOf ( tsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^int jump = insns .get ( jump )  ;^221^^^^^206^236^int jump = insns.indexOf ( tsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^221^222^^^^206^236^int jump = insns.indexOf ( tsi.dflt ) ; merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^findSubroutine ( insns.indexOf ( tsnode.dflt ) , sub, calls ) ;int jump = insns.indexOf ( tsi.dflt ) ;^221^^^^^206^236^int jump = insns.indexOf ( tsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^jump = insns.indexOf ( label ) ;int jump = insns.indexOf ( tsi.dflt ) ;^221^^^^^206^236^int jump = insns.indexOf ( tsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;int jump = insns.indexOf ( tsi.dflt ) ;^221^^^^^206^236^int jump = insns.indexOf ( tsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( j, current, subroutine ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump, current, sub ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge (  current, subroutine ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump,  subroutine ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump, current ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( subroutine, current, jump ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( current, jump, subroutine ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^findSubroutine ( jump, current, subroutine ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^merge ( jump, handler, subroutine ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( insn + 1, f, subroutine ) ;merge ( jump, current, subroutine ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( insn + 1, current, subroutine ) ;merge ( jump, current, subroutine ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( 0, current, null ) ;merge ( jump, current, subroutine ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( jump, handler, subroutine ) ;merge ( jump, current, subroutine ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( j, jump ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( insn, n ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge (  jump ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( insn ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( jump, insn ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^newControlFlowExceptionEdge ( insn, jump ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^newControlFlowEdge ( insn, insn + 1 ) ;newControlFlowEdge ( insn, jump ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^newControlFlowEdge ( insn, call + 1 ) ;newControlFlowEdge ( insn, jump ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P12_Insert_Condition]^if  ( newControlFlowExceptionEdge ( insn, jump )  )  { newControlFlowEdge ( insn, jump ) ; }^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < tsi.labels.size() - 6 ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^224^225^226^227^228^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  { LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ; jump = insns.indexOf ( label ) ; merge ( jump, current, subroutine ) ; newControlFlowEdge ( insn, jump ) ; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^LabelNode label =  ( LabelNode )  tsi.labels .get ( i )  ;^225^^^^^210^240^LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^225^226^^^^210^240^LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ; jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^jump = insns .get ( insn )  ;^226^^^^^211^241^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( var, current, subroutine ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump, subroutine, current ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^227^228^^^^212^242^merge ( jump, current, subroutine ) ; newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( var, jump ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnOpcode <= RET )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnOpcode <= ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( subroutine != this )  {^249^^^^^246^266^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  !=  VarInsnNode )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  ==  IincInsnNode )  {^259^^^^^246^266^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + end] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode >= DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 + 0] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 * 3] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  &  VarInsnNode )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 / 4] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode < DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  <  IincInsnNode )  {^259^^^^^246^266^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( top + 1, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  &&  1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + call ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( jump, insn + 1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( subroutine != false )  {^249^^^^^234^264^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  &  VarInsnNode )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  <<  VarInsnNode )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  >=  IincInsnNode )  {^259^^^^^244^274^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 0] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 - 0] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode < DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  |  IincInsnNode )  {^259^^^^^244^274^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 + 2] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  <=  VarInsnNode )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 % 4] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + ] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 >>> 2] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 2] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + , current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  >=  1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + local ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( var, insn + 1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( top, insn + 1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( subroutine == this )  {^231^^^^^216^246^if  ( subroutine == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, call  <<  1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^for  ||  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^for  &  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = -8; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( n, call + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^int call = insns .get ( insnType )  ;^236^^^^^221^251^int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int call = insns .get ( call )  ;^236^^^^^221^251^int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( call + j, frames[call], current, subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, call + local ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = insn; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < subroutine.callers.size() + 7 ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < subroutine.callers.size() - 8 ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int call = insns .get ( i )  ;^236^^^^^221^251^int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^int call = insns .get ( var )  ;^236^^^^^221^251^int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, call  >  1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, call + call ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( subroutine == false )  {^231^^^^^216^246^if  ( subroutine == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( frames[call] != this )  {^237^^^^^222^252^if  ( frames[call] != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, call  <=  1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, call + var ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode <= IRETURN || insnOpcode > RETURN )  ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode == RETURN )  ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  <=  VarInsnNode )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  ^  IincInsnNode )  {^259^^^^^246^266^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 - 3] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 >> 1] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 - 2] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  >  IincInsnNode )  {^259^^^^^246^266^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 - 0] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  ^  VarInsnNode )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + insn] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 >>> 3] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + begin, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^merge ( jump + 1, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  ^  1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + jump ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 + 1] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD || insnOpcode < DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode > LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode <= DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + local] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + i] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 * 1] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  !=  IincInsnNode )  {^259^^^^^244^274^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = -4; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < tsi.labels.size() - 2 ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^jump = insns .get ( n )  ;^226^^^^^211^241^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^LabelNode label =  ( LabelNode )  tsi.labels .get ( insn )  ;^225^^^^^210^240^LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( top, current, subroutine ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( insn, n ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowExceptionEdge ( insn, j ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^for  <<  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = end; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( call + call, frames[call], current, subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^int call = insns .get ( end )  ;^236^^^^^221^251^int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, call  |  1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^jump = insns .get ( var )  ;^226^^^^^211^241^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^long  jump = insns.indexOf ( tsi.dflt ) ;^221^^^^^206^236^int jump = insns.indexOf ( tsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^int jump = insns .get ( top )  ;^221^^^^^206^236^int jump = insns.indexOf ( tsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < tsi.labels.size() - 4 ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < subroutine.callers.size() + 8 ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^Object caller = subroutine.callers .get ( local )  ;^235^^^^^220^250^Object caller = subroutine.callers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int call = insns .get ( insnOpcode )  ;^236^^^^^221^251^int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^int jump = insns .get ( var )  ;^221^^^^^206^236^int jump = insns.indexOf ( tsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^221^^^^^206^236^int jump = insns.indexOf ( tsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( insnType, current, subroutine ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump, subroutine, current ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( jump, current, sub ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( local, jump ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( insn, var ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < tsi.labels.size() + 7 ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^LabelNode label =  ( LabelNode )  tsi.labels .get ( jump )  ;^225^^^^^210^240^LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( insnType, current, subroutine ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( n, jump ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( insn, j ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( j + 1, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn  ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( top, insn + 1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^for  (  short  j = 0; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^for  ( int j = 0; j <= lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = insnType; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < lsi.labels.size() + 1 ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^for  ( int j = 0; j < lsi.labels.get (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^jump = label.indexOf ( insns ) ;^215^^^^^200^230^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^jump =  insns.indexOf ( null ) ;^215^^^^^200^230^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^LabelNode label =  ( LabelNode )  lsi.labels .get ( insnOpcode )  ;^214^^^^^199^229^LabelNode label =  ( LabelNode )  lsi.labels.get ( j ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^LabelNode label =  ( LabelNode )  lsi.labels .get ( top )  ;^214^^^^^199^229^LabelNode label =  ( LabelNode )  lsi.labels.get ( j ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^214^215^^^^199^229^LabelNode label =  ( LabelNode )  lsi.labels.get ( j ) ; jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^215^216^^^^200^230^jump = insns.indexOf ( label ) ; merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( lsi.dflt ) ;jump = insns.indexOf ( label ) ;^215^^^^^200^230^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int begin = insns.indexOf ( tcb.start ) ;jump = insns.indexOf ( label ) ;^215^^^^^200^230^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( tsi.dflt ) ;jump = insns.indexOf ( label ) ;^215^^^^^200^230^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( tcb.handler ) ;jump = insns.indexOf ( label ) ;^215^^^^^200^230^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int end = insns.indexOf ( tcb.end ) ;jump = insns.indexOf ( label ) ;^215^^^^^200^230^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( j.label ) ;jump = insns.indexOf ( label ) ;^215^^^^^200^230^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( top, current, subroutine ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump, handler, subroutine ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump, current, sub ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge (  current, subroutine ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump,  subroutine ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump, current ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( subroutine, current, jump ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump, subroutine, current ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^findSubroutine ( jump, current, subroutine ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^merge ( insnType, current, subroutine ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( insn + 1, f, subroutine ) ;merge ( jump, current, subroutine ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( insn + 1, current, subroutine ) ;merge ( jump, current, subroutine ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( 0, current, null ) ;merge ( jump, current, subroutine ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( jump, handler, subroutine ) ;merge ( jump, current, subroutine ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( n, jump ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( insn, n ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge (  jump ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( insn ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( jump, insn ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^newControlFlowExceptionEdge ( insn, jump ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowExceptionEdge ( insn, local ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^newControlFlowEdge ( insn, insn + 1 ) ;newControlFlowEdge ( insn, jump ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^newControlFlowEdge ( insn, call + 1 ) ;newControlFlowEdge ( insn, jump ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P12_Insert_Condition]^if  ( newControlFlowExceptionEdge ( insn, jump )  )  { newControlFlowEdge ( insn, jump ) ; }^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^TableSwitchInsnNode tsi =  ( TableSwitchInsnNode )  insnNode;LookupSwitchInsnNode lsi =  ( LookupSwitchInsnNode )  insnNode;^209^^^^^194^224^LookupSwitchInsnNode lsi =  ( LookupSwitchInsnNode )  insnNode;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^JumpInsnNode j =  ( JumpInsnNode )  insnNode;LookupSwitchInsnNode lsi =  ( LookupSwitchInsnNode )  insnNode;^209^^^^^194^224^LookupSwitchInsnNode lsi =  ( LookupSwitchInsnNode )  insnNode;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^JumpInsnNode jnode =  ( JumpInsnNode )  node;LookupSwitchInsnNode lsi =  ( LookupSwitchInsnNode )  insnNode;^209^^^^^194^224^LookupSwitchInsnNode lsi =  ( LookupSwitchInsnNode )  insnNode;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^TableSwitchInsnNode tsnode =  ( TableSwitchInsnNode )  node;LookupSwitchInsnNode lsi =  ( LookupSwitchInsnNode )  insnNode;^209^^^^^194^224^LookupSwitchInsnNode lsi =  ( LookupSwitchInsnNode )  insnNode;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^LookupSwitchInsnNode lsnode =  ( LookupSwitchInsnNode )  node;LookupSwitchInsnNode lsi =  ( LookupSwitchInsnNode )  insnNode;^209^^^^^194^224^LookupSwitchInsnNode lsi =  ( LookupSwitchInsnNode )  insnNode;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^short  jump = insns.indexOf ( lsi.dflt ) ;^210^^^^^195^225^int jump = insns.indexOf ( lsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int jump = insns.get ( lsi.dflt ) ;^210^^^^^195^225^int jump = insns.indexOf ( lsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int jump = insns .get ( insn )  ;^210^^^^^195^225^int jump = insns.indexOf ( lsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int begin = insns.indexOf ( tcb.start ) ;int jump = insns.indexOf ( lsi.dflt ) ;^210^^^^^195^225^int jump = insns.indexOf ( lsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( tsi.dflt ) ;int jump = insns.indexOf ( lsi.dflt ) ;^210^^^^^195^225^int jump = insns.indexOf ( lsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( tcb.handler ) ;int jump = insns.indexOf ( lsi.dflt ) ;^210^^^^^195^225^int jump = insns.indexOf ( lsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;int jump = insns.indexOf ( lsi.dflt ) ;^210^^^^^195^225^int jump = insns.indexOf ( lsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int end = insns.indexOf ( tcb.end ) ;int jump = insns.indexOf ( lsi.dflt ) ;^210^^^^^195^225^int jump = insns.indexOf ( lsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( j.label ) ;int jump = insns.indexOf ( lsi.dflt ) ;^210^^^^^195^225^int jump = insns.indexOf ( lsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = -4; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < lsi.labels.size() - 6 ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^LabelNode label =  ( LabelNode )  lsi.labels .get ( var )  ;^214^^^^^199^229^LabelNode label =  ( LabelNode )  lsi.labels.get ( j ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^210^^^^^195^225^int jump = insns.indexOf ( lsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^findSubroutine ( insns.indexOf ( lsnode.dflt ) , sub, calls ) ;int jump = insns.indexOf ( lsi.dflt ) ;^210^^^^^195^225^int jump = insns.indexOf ( lsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^jump = insns.indexOf ( label ) ;int jump = insns.indexOf ( lsi.dflt ) ;^210^^^^^195^225^int jump = insns.indexOf ( lsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;int jump = insns.indexOf ( lsi.dflt ) ;^210^^^^^195^225^int jump = insns.indexOf ( lsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( var, current, subroutine ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump, handler, subroutine ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump, current, sub ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge (  current, subroutine ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump,  subroutine ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump, current ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( current, jump, subroutine ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump, subroutine, current ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^findSubroutine ( jump, current, subroutine ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( jump, current, sub ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^211^212^^^^196^226^merge ( jump, current, subroutine ) ; newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( insn + 1, f, subroutine ) ;merge ( jump, current, subroutine ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( insn + 1, current, subroutine ) ;merge ( jump, current, subroutine ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( 0, current, null ) ;merge ( jump, current, subroutine ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( jump, handler, subroutine ) ;merge ( jump, current, subroutine ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( var, jump ) ;^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( insn, j ) ;^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge (  jump ) ;^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( insn ) ;^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( jump, insn ) ;^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^newControlFlowExceptionEdge ( insn, jump ) ;^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowEdge ( insn, n ) ;^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^newControlFlowEdge ( insn, insn + 1 ) ;newControlFlowEdge ( insn, jump ) ;^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^newControlFlowEdge ( insn, call + 1 ) ;newControlFlowEdge ( insn, jump ) ;^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P12_Insert_Condition]^if  ( newControlFlowExceptionEdge ( insn, jump )  )  { newControlFlowEdge ( insn, jump ) ; }^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^213^214^215^216^217^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  { LabelNode label =  ( LabelNode )  lsi.labels.get ( j ) ; jump = insns.indexOf ( label ) ; merge ( jump, current, subroutine ) ; newControlFlowEdge ( insn, jump ) ; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^214^^^^^199^229^LabelNode label =  ( LabelNode )  lsi.labels.get ( j ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( local, current, subroutine ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( current, jump, subroutine ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^216^217^^^^201^231^merge ( jump, current, subroutine ) ; newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( insn, var ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  >=  TableSwitchInsnNode )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  >  TableSwitchInsnNode )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + insnType] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode > LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + insnOpcode] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + i, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  >  1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  <  IincInsnNode )  {^259^^^^^244^274^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 >>> 0] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + insnOpcode] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + insnType] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + n] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1L] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  ==  VarInsnNode )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + end] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + var] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn   instanceof   1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + i ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( sub == this )  {^231^^^^^216^246^if  ( subroutine == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, call  &&  1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^for  |  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < subroutine.callers.size() - 9 ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int call = insns .get ( n )  ;^236^^^^^221^251^int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( call + end, frames[call], current, subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, call  >=  1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( insn, top + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 1; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < subroutine.callers.size() + 0 ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^Object caller = subroutine.callers .get ( insnOpcode )  ;^235^^^^^220^250^Object caller = subroutine.callers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < subroutine.callers.size() - 7 ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( call + , frames[call], current, subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, call + insn ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( insn, n + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnOpcode > ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + j] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode > LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 << 4] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  !=  IincInsnNode )  {^259^^^^^246^266^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  &  1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + n ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( top, insn + 1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( subroutine != this )  {^249^^^^^234^264^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 / 3] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 - 2] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  <<  IincInsnNode )  {^259^^^^^244^274^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^for  ( int i = 0; i > subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^Object caller = subroutine.callers .get ( jump )  ;^235^^^^^220^250^Object caller = subroutine.callers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int call = insns .get ( j )  ;^236^^^^^221^251^int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, call + insnOpcode ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + jump] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = ; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < subroutine.callers.size() - 3 ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^Object caller = subroutine.callers .get ( j )  ;^235^^^^^220^250^Object caller = subroutine.callers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^return ;^232^^^^^217^247^throw new AnalyzerException  (" ")  ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < subroutine.callers.size() + 5 ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( n + 1, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  >>  1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn +  ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 8; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowExceptionEdge ( insn, local ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^jump = insns .get ( begin )  ;^226^^^^^211^241^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int jump = insns .get ( insn )  ;^221^^^^^206^236^int jump = insns.indexOf ( tsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^for  (  long  j = 0; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = j; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < tsi.labels.size() + 2 ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( jump, handler, subroutine ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowExceptionEdge ( local, jump ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < tsi.labels.size() + 6 ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^jump = insns .get ( insnType )  ;^226^^^^^211^241^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^226^^^^^211^241^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnOpcode > RET )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnOpcode < RET )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  |  IincInsnNode )  {^259^^^^^246^266^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode < LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  <<  VarInsnNode )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + local] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 - 4] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( n + 1, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  >=  1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + insn ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowEdge ( local, insn + 1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  &&  VarInsnNode )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 + 0] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + begin] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + ] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( local + 1, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( local, insn + 1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^return true;^232^^^^^217^247^throw new AnalyzerException  (" ")  ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, call +  ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^for  &&  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^for   instanceof   ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < subroutine.callers.size() + 9 ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( call + var, frames[call], current, subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, call + jump ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^Object caller = subroutine.callers .get ( n )  ;^235^^^^^220^250^Object caller = subroutine.callers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = local; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < subroutine.callers.size() - 2 ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( n, call + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, call + begin ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 % 2] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 / 1] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + n, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn   instanceof   1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + end ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( jump, insn + 1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( n, insn + 1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  >>  VarInsnNode )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode > LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + insn] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + top] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 * 2] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  >  VarInsnNode )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 - 0] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^for  ( int j = 0; j > lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = insnOpcode; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^LabelNode label =  ( LabelNode )  lsi.labels .get ( begin )  ;^214^^^^^199^229^LabelNode label =  ( LabelNode )  lsi.labels.get ( j ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^LabelNode label =  ( LabelNode )  lsi.labels .get ( insn )  ;^214^^^^^199^229^LabelNode label =  ( LabelNode )  lsi.labels.get ( j ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^jump = insns .get ( insnType )  ;^215^^^^^200^230^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( var, current, subroutine ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowExceptionEdge ( j, jump ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^for  ( int j = 0; j == tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = -1; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^LabelNode label =  ( LabelNode )  tsi.labels .get ( call )  ;^225^^^^^210^240^LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^LabelNode label =  ( LabelNode )  tsi.labels .get ( insnOpcode )  ;^225^^^^^210^240^LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^jump = insns .get ( call )  ;^226^^^^^211^241^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( local, current, subroutine ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^for  <=  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = n; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + end] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^long  jump = insns.indexOf ( lsi.dflt ) ;^210^^^^^195^225^int jump = insns.indexOf ( lsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int jump = insns .get ( j )  ;^210^^^^^195^225^int jump = insns.indexOf ( lsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^for  (  long  j = 0; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = top; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < lsi.labels.size() + 5 ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 9; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^210^211^^^^195^225^int jump = insns.indexOf ( lsi.dflt ) ; merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^merge ( top, current, subroutine ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( insn, top ) ;^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowEdge ( insn, local ) ;^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < lsi.labels.size() + 7 ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^jump = insns .get ( insn )  ;^215^^^^^200^230^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^jump = insns .get ( j )  ;^215^^^^^200^230^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( j, current, subroutine ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( var, jump ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^222^223^^^^207^237^merge ( jump, current, subroutine ) ; newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( insn, j ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowEdge ( var, jump ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < tsi.labels.size() - 1 ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^jump = insns .get ( local )  ;^226^^^^^211^241^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( jump, current, sub ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, call  ^  1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + insnType, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode != GOTO || insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == GOTO && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode != GOTO && insnOpcode <= JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^if  ( j != GOTO && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^if  ( jumpOpcode != GOTO && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^if  ( insn != GOTO && insnOpcodeOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insnOpcode != GOTO ) {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  (  insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( insn + 1 )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P15_Unwrap_Block]^merge((insn + 1), current, subroutine); newControlFlowEdge(insn, (insn + 1));^195^196^197^198^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  { merge ( insn + 1, current, subroutine ) ; newControlFlowEdge ( insn, insn + 1 ) ; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P16_Remove_Block]^^195^196^197^198^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  { merge ( insn + 1, current, subroutine ) ; newControlFlowEdge ( insn, insn + 1 ) ; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn , current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump + 1, current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( insn + 1, handler, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( insn + 1, current, sub ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( insn + 1,  subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( insn + 1, current ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( subroutine + 1, current, insn ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( insn + 1, subroutine, current ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( jump, current, subroutine ) ;merge ( insn + 1, current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( insn + 1, f, subroutine ) ;merge ( insn + 1, current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( 0, current, null ) ;merge ( insn + 1, current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( jump, handler, subroutine ) ;merge ( insn + 1, current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  <<  1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + n ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( local, insn + 1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^findSubroutine ( insn, insn + 1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowEdge ( n, insn + 1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^newControlFlowEdge ( insn, jump ) ;newControlFlowEdge ( insn, insn + 1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^newControlFlowEdge ( insn, call + 1 ) ;newControlFlowEdge ( insn, insn + 1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P12_Insert_Condition]^if  ( newControlFlowExceptionEdge ( insn, jump )  )  { newControlFlowEdge ( insn, insn + 1 ) ; }^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode != JSR )  {^200^^^^^185^215^if  ( insnOpcode == JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( top, current, subroutine ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump, handler, subroutine ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump, current, sub ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge (  current, subroutine ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump,  subroutine ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump, current ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( subroutine, current, jump ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( current, jump, subroutine ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^findSubroutine ( jump, current, subroutine ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^merge ( insnType, current, subroutine ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( insn + 1, f, subroutine ) ;merge ( jump, current, subroutine ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( insn + 1, current, subroutine ) ;merge ( jump, current, subroutine ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( 0, current, null ) ;merge ( jump, current, subroutine ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( jump, handler, subroutine ) ;merge ( jump, current, subroutine ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P4_Replace_Constructor]^merge ( jump, current, new Subroutine ( j.label, m.maxLocals )  ) ;^201^202^203^^^186^216^merge ( jump, current, new Subroutine ( j.label, m.maxLocals, j )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P4_Replace_Constructor]^merge ( jump, current, new Subroutine ( j.label.maxLocals, j )  ) ;^201^202^203^^^186^216^merge ( jump, current, new Subroutine ( j.label, m.maxLocals, j )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump, current, new Subroutine (  m.maxLocals, j )  ) ;^201^202^203^^^186^216^merge ( jump, current, new Subroutine ( j.label, m.maxLocals, j )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump, current, new Subroutine ( j.label,  j )  ) ;^201^202^203^^^186^216^merge ( jump, current, new Subroutine ( j.label, m.maxLocals, j )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P4_Replace_Constructor]^merge (  current, new Subroutine ( j.label, m.maxLocals, j )  ) ;^201^202^203^^^186^216^merge ( jump, current, new Subroutine ( j.label, m.maxLocals, j )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P4_Replace_Constructor]^merge ( jump,  new Subroutine ( j.label, m.maxLocals, j )  ) ;^201^202^203^^^186^216^merge ( jump, current, new Subroutine ( j.label, m.maxLocals, j )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^201^202^203^^^186^216^merge ( jump, current, new Subroutine ( j.label, m.maxLocals, j )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P13_Insert_Block]^if  ( insnOpcode ==  ( JSR )  )  {     merge ( jump, current, new Subroutine ( j.label, m.maxLocals, j )  ) ; }else {     merge ( jump, current, subroutine ) ; }^201^^^^^186^216^[Delete]^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^TableSwitchInsnNode tsi =  ( TableSwitchInsnNode )  insnNode;JumpInsnNode j =  ( JumpInsnNode )  insnNode;^194^^^^^179^209^JumpInsnNode j =  ( JumpInsnNode )  insnNode;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^JumpInsnNode jnode =  ( JumpInsnNode )  node;JumpInsnNode j =  ( JumpInsnNode )  insnNode;^194^^^^^179^209^JumpInsnNode j =  ( JumpInsnNode )  insnNode;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^LookupSwitchInsnNode lsi =  ( LookupSwitchInsnNode )  insnNode;JumpInsnNode j =  ( JumpInsnNode )  insnNode;^194^^^^^179^209^JumpInsnNode j =  ( JumpInsnNode )  insnNode;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^JumpInsnNode jsr =  ( JumpInsnNode )  subroutineCalls.remove ( 0 ) ;JumpInsnNode j =  ( JumpInsnNode )  insnNode;^194^^^^^179^209^JumpInsnNode j =  ( JumpInsnNode )  insnNode;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^short  jump = insns.indexOf ( j.label ) ;^199^^^^^184^214^int jump = insns.indexOf ( j.label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int jump = insns.get ( j.label ) ;^199^^^^^184^214^int jump = insns.indexOf ( j.label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( lsi.dflt ) ;int jump = insns.indexOf ( j.label ) ;^199^^^^^184^214^int jump = insns.indexOf ( j.label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int begin = insns.indexOf ( tcb.start ) ;int jump = insns.indexOf ( j.label ) ;^199^^^^^184^214^int jump = insns.indexOf ( j.label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( tsi.dflt ) ;int jump = insns.indexOf ( j.label ) ;^199^^^^^184^214^int jump = insns.indexOf ( j.label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( tcb.handler ) ;int jump = insns.indexOf ( j.label ) ;^199^^^^^184^214^int jump = insns.indexOf ( j.label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;int jump = insns.indexOf ( j.label ) ;^199^^^^^184^214^int jump = insns.indexOf ( j.label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int end = insns.indexOf ( tcb.end ) ;int jump = insns.indexOf ( j.label ) ;^199^^^^^184^214^int jump = insns.indexOf ( j.label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + local, current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( j + 1, current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( current + 1, insn, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^merge ( local + 1, current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  |  1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + top ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( j, insn + 1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^199^^^^^184^214^int jump = insns.indexOf ( j.label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^findSubroutine ( insns.indexOf ( jnode.label ) , sub, calls ) ;int jump = insns.indexOf ( j.label ) ;^199^^^^^184^214^int jump = insns.indexOf ( j.label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^jump = insns.indexOf ( label ) ;int jump = insns.indexOf ( j.label ) ;^199^^^^^184^214^int jump = insns.indexOf ( j.label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;int jump = insns.indexOf ( j.label ) ;^199^^^^^184^214^int jump = insns.indexOf ( j.label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( insnType, current, subroutine ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump, handler, subroutine ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump, current, sub ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge (  current, subroutine ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump,  subroutine ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump, current ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( subroutine, current, jump ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( current, jump, subroutine ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump, subroutine, current ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^findSubroutine ( jump, current, subroutine ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( insn + 1, f, subroutine ) ;merge ( jump, current, subroutine ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( insn + 1, current, subroutine ) ;merge ( jump, current, subroutine ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( 0, current, null ) ;merge ( jump, current, subroutine ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( jump, handler, subroutine ) ;merge ( jump, current, subroutine ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( n, jump ) ;^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( insn, local ) ;^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge (  jump ) ;^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( insn ) ;^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( jump, insn ) ;^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^newControlFlowExceptionEdge ( insn, jump ) ;^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowEdge ( local, jump ) ;^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^newControlFlowEdge ( insn, insn + 1 ) ;newControlFlowEdge ( insn, jump ) ;^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^newControlFlowEdge ( insn, call + 1 ) ;newControlFlowEdge ( insn, jump ) ;^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P12_Insert_Condition]^if  ( newControlFlowExceptionEdge ( insn, jump )  )  { newControlFlowEdge ( insn, jump ) ; }^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode > GOTO && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode != GOTO && insnOpcode >= JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^if  ( local != GOTO && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^if  ( nOpcode != GOTO && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^if  ( JSR != GOTO && insnOpcode != insnOpcode )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^if  ( insnOpcodeOpcode != GOTO && insn != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^if  ( insnOpcode != JSR && insnOpcode != GOTO )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^if  ( JSROpcode != GOTO && insnOpcode != insn )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( var != GOTO ) {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + , current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  &  1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn  ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( j, insn + 1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowEdge ( jump, insn + 1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( local, current, subroutine ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump, subroutine, current ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( jump, current, sub ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  >=  LookupSwitchInsnNode )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  !=  LookupSwitchInsnNode )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  <  TableSwitchInsnNode )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  >>  TableSwitchInsnNode )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD || insnOpcode > DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 - 1] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + jump, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  ||  1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( local, insn + 1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  >>  IincInsnNode )  {^259^^^^^244^274^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + top] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + var ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, call + i ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^for  ^  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^for  !=  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = begin; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^Object caller = subroutine.callers .get ( begin )  ;^235^^^^^220^250^Object caller = subroutine.callers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = -4; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < subroutine.callers.size() - 5 ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^Object caller = subroutine.callers .get ( i )  ;^235^^^^^220^250^Object caller = subroutine.callers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( call + begin, frames[call], current, subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( top, call + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^}  if  ( insnOpcode = ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + jump] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + j, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( local + 1, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + j] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^for  ==  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int call = insns .get ( jump )  ;^236^^^^^221^251^int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 5; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  &&  1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + end ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( jump, insn + 1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^for  ( int j = 0; j > tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 1; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^LabelNode label =  ( LabelNode )  tsi.labels .get ( n )  ;^225^^^^^210^240^LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^jump = insns .get ( i )  ;^226^^^^^211^241^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowExceptionEdge ( n, jump ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = -7; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < tsi.labels.size() + 0 ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int jump = insns .get ( call )  ;^221^^^^^206^236^int jump = insns.indexOf ( tsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^int jump = insns .get ( n )  ;^221^^^^^206^236^int jump = insns.indexOf ( tsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( insnType, current, subroutine ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < tsi.labels.size() - 9 ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  >  VarInsnNode )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  |  1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + insnOpcode] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  &&  IincInsnNode )  {^259^^^^^244^274^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 + 4] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + n ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( j, insn + 1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, call  &  1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = i; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < subroutine.callers.size() + 4 ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^Object caller = subroutine.callers .get ( end )  ;^235^^^^^220^250^Object caller = subroutine.callers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 4; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( j, insn + 1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + n] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 / 2] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = jump; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < tsi.labels.size() + 8 ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^jump = insns .get ( insnOpcode )  ;^226^^^^^211^241^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( insn, var ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = jump; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, call + insnType ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < tsi.labels.size() - 8 ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^LabelNode label =  ( LabelNode )  tsi.labels .get ( begin )  ;^225^^^^^210^240^LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = -2; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( n, current, subroutine ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( top, jump ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < tsi.labels.size() - 7 ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowExceptionEdge ( var, jump ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 4; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < lsi.labels.size() - 2 ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( n, current, subroutine ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowExceptionEdge ( top, jump ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^jump = insns .get ( n )  ;^215^^^^^200^230^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^int jump = insns .get ( var )  ;^210^^^^^195^225^int jump = insns.indexOf ( lsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = n; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( insnType, current, subroutine ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( subroutine, current, jump ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( local, jump ) ;^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < lsi.labels.size() + 2 ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^LabelNode label =  ( LabelNode )  lsi.labels .get ( end )  ;^214^^^^^199^229^LabelNode label =  ( LabelNode )  lsi.labels.get ( j ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^jump = insns .get ( begin )  ;^215^^^^^200^230^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( local, jump ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  <<  TableSwitchInsnNode )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 + 3] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 % 4] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( call + local, frames[call], current, subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( insn, var + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 + 2] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + insn, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + begin ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^for  ( int i = 0; i == subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < subroutine.callers.size() + 1 ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, call + top ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 + 0] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = -6; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( n, insn + 1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = -6; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 7; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^LabelNode label =  ( LabelNode )  tsi.labels .get ( top )  ;^225^^^^^210^240^LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int jump = insns .get ( j )  ;^221^^^^^206^236^int jump = insns.indexOf ( tsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( insn, local ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowExceptionEdge ( insn, j ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < tsi.labels.size() - 5 ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 + 4] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 / 0] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( n, insn + 1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + i] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  ||  VarInsnNode )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + jump ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < subroutine.callers.size() - 1 ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( top, insn + 1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + call] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = -1; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^LabelNode label =  ( LabelNode )  lsi.labels .get ( call )  ;^214^^^^^199^229^LabelNode label =  ( LabelNode )  lsi.labels.get ( j ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^LabelNode label =  ( LabelNode )  lsi.labels .get ( jump )  ;^214^^^^^199^229^LabelNode label =  ( LabelNode )  lsi.labels.get ( j ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^LabelNode label =  ( LabelNode )  lsi.labels .get ( n )  ;^214^^^^^199^229^LabelNode label =  ( LabelNode )  lsi.labels.get ( j ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^215^^^^^200^230^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( insn, local ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowExceptionEdge ( insn, n ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = top; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^LabelNode label =  ( LabelNode )  tsi.labels .get ( insnType )  ;^225^^^^^210^240^LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( insn, top ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowExceptionEdge ( top, jump ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 9; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, call + end ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^subroutine = subroutine != null ? null : subroutine.copy (  ) ;^191^^^^^176^206^subroutine = subroutine == null ? null : subroutine.copy (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^subroutine = sub == null ? null : subroutine.copy (  ) ;^191^^^^^176^206^subroutine = subroutine == null ? null : subroutine.copy (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^subroutine = subroutine ( subroutine.copy (  ) ;^191^^^^^176^206^subroutine = subroutine == null ? null : subroutine.copy (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^subroutine = subroutine == null ? null : subroutine.merge (  ) ;^191^^^^^176^206^subroutine = subroutine == null ? null : subroutine.copy (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine = subroutine == false ? false : subroutine.copy (  ) ;^191^^^^^176^206^subroutine = subroutine == null ? null : subroutine.copy (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^subroutines[insn] = subroutine.copy (  ) ;subroutine = subroutine == null ? null : subroutine.copy (  ) ;^191^^^^^176^206^subroutine = subroutine == null ? null : subroutine.copy (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int jump = insns .get ( local )  ;^199^^^^^184^214^int jump = insns.indexOf ( j.label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 6; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^LabelNode label =  ( LabelNode )  tsi.labels .get ( local )  ;^225^^^^^210^240^LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^current.init ( handler ) .execute ( insnNode, interpreter ) ;^190^^^^^175^205^current.init ( f ) .execute ( insnNode, interpreter ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^current.init ( f ) .execute (  interpreter ) ;^190^^^^^175^205^current.init ( f ) .execute ( insnNode, interpreter ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^current.init ( f ) .execute ( insnNode ) ;^190^^^^^175^205^current.init ( f ) .execute ( insnNode, interpreter ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^current.init ( interpreter ) .execute ( insnNode, f ) ;^190^^^^^175^205^current.init ( f ) .execute ( insnNode, interpreter ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^current.init ( f ) .execute ( interpreter, insnNode ) ;^190^^^^^175^205^current.init ( f ) .execute ( insnNode, interpreter ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^current.init ( f )  .getSize (  )  ;^190^^^^^175^205^current.init ( f ) .execute ( insnNode, interpreter ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^current.merge ( f ) .execute ( insnNode, interpreter ) ;^190^^^^^175^205^current.init ( f ) .execute ( insnNode, interpreter ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^current .clearStack (  )  .execute ( insnNode, interpreter ) ;^190^^^^^175^205^current.init ( f ) .execute ( insnNode, interpreter ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^current.merge ( handler ) .execute ( insnNode, interpreter ) ;^190^^^^^175^205^current.init ( f ) .execute ( insnNode, interpreter ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^190^191^^^^175^205^current.init ( f ) .execute ( insnNode, interpreter ) ; subroutine = subroutine == null ? null : subroutine.copy (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^190^^^^^175^205^current.init ( f ) .execute ( insnNode, interpreter ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^191^^^^^176^206^subroutine = subroutine == null ? null : subroutine.copy (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^196^197^^^^181^211^merge ( insn + 1, current, subroutine ) ; newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  ==  1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( var, insn + 1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( j, jump ) ;^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( insn, j ) ;^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^int jump = insns .get ( n )  ;^210^^^^^195^225^int jump = insns.indexOf ( lsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( j, current, subroutine ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( n, jump ) ;^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowExceptionEdge ( local, jump ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int call = insns .get ( top )  ;^236^^^^^221^251^int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn , f, subroutine ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( var + 1, f, subroutine ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( insn + 1, handler, subroutine ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( insn + 1,  subroutine ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( insn + 1, f ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( subroutine + 1, f, insn ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( f + 1, insn, subroutine ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( insn + 1, subroutine, f ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^merge ( n + 1, f, subroutine ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( jump, current, subroutine ) ;merge ( insn + 1, f, subroutine ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( insn + 1, current, subroutine ) ;merge ( insn + 1, f, subroutine ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( jump, handler, subroutine ) ;merge ( insn + 1, f, subroutine ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  !=  1 ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + insnType ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( n, insn + 1 ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^findSubroutine ( insn, insn + 1 ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowEdge ( var, insn + 1 ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^newControlFlowEdge ( insn, jump ) ;newControlFlowEdge ( insn, insn + 1 ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^newControlFlowEdge ( insn, call + 1 ) ;newControlFlowEdge ( insn, insn + 1 ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P12_Insert_Condition]^if  ( newControlFlowExceptionEdge ( insn, jump )  )  { newControlFlowEdge ( insn, insn + 1 ) ; }^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  ^  JumpInsnNode )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  ==  JumpInsnNode )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  &&  JumpInsnNode )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  ==  LookupSwitchInsnNode )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  <=  LookupSwitchInsnNode )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 % 1] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 << 0] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( insn, jump + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^Object caller = subroutine.callers .get ( top )  ;^235^^^^^220^250^Object caller = subroutine.callers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( sub == true )  {^231^^^^^216^246^if  ( subroutine == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 / 2] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  <  1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 >>> 1] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 << 2] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 >> 0] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 / 2] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = -3; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( local, call + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + top, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  |  1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = -9; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < tsi.labels.size() + 3 ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = n; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( n, jump ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + insnType ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 + 3] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 - 4] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + jump, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  ==  1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = -1; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = top; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + local, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 / 0] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^for  >=  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( jump, call + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = insn; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^LabelNode label =  ( LabelNode )  tsi.labels .get ( end )  ;^225^^^^^210^240^LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( var, current, subroutine ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^jump = insns .get ( top )  ;^226^^^^^211^241^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( top, jump ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + top ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( j, jump ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int jump = insns .get ( begin )  ;^210^^^^^195^225^int jump = insns.indexOf ( lsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = i; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < lsi.labels.size() + 0 ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( j, jump ) ;^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < lsi.labels.size() + 3 ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^LabelNode label =  ( LabelNode )  lsi.labels .get ( j )  ;^214^^^^^199^229^LabelNode label =  ( LabelNode )  lsi.labels.get ( j ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( insn, j ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowExceptionEdge ( insn, j ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  <=  TableSwitchInsnNode )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  !=  TableSwitchInsnNode )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^}  if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 >>> 0] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 << 0] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  <<  1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + i ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 - 3] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 << 1] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + call ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = var; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( call + insnOpcode, frames[call], current, subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = insnOpcode; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( call + i, frames[call], current, subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 - 4] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + n, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  >  1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = -8; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int jump = insns .get ( insnType )  ;^221^^^^^206^236^int jump = insns.indexOf ( tsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = -3; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode == LLOAD || insnOpcode < DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 >> 3] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + begin, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  ||  1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  >>  1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + var ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 >>> 4] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 3; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < lsi.labels.size() - 8 ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 3; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < tsi.labels.size() + 9 ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int jump = insns .get ( jump )  ;^210^^^^^195^225^int jump = insns.indexOf ( lsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = ; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < lsi.labels.size() - 0 ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int jump = insns .get ( local )  ;^210^^^^^195^225^int jump = insns.indexOf ( lsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < lsi.labels.size() + 8 ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^LabelNode label =  ( LabelNode )  lsi.labels .get ( local )  ;^214^^^^^199^229^LabelNode label =  ( LabelNode )  lsi.labels.get ( j ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( var, current, subroutine ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( local, current, subroutine ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( top + 1, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  <<  1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^if  ( n != GOTO && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^if  ( insnOpcode != null && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^if  ( GOTO != insnOpcode && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^if  ( GOTOOpcode != insn && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + end ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( top, insn + 1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + jump, current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^merge ( n + 1, current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + insnOpcode ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( insnType, current, subroutine ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( var, jump ) ;^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( insn, var ) ;^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + end, current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( top + 1, current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  ^  1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + i ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode <= JSR )  {^200^^^^^185^215^if  ( insnOpcode == JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  &&  LookupSwitchInsnNode )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  >>  LookupSwitchInsnNode )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  ||  TableSwitchInsnNode )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 >> 2] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 - 1] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + i, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 6; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < tsi.labels.size() - 0 ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = insnType; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < tsi.labels.size() - 3 ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( var, current, subroutine ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^}  if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 >>> 2] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 >>> 1] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 >> 2] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + top, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + insnType] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 << 4] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = -5; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^LabelNode label =  ( LabelNode )  tsi.labels .get ( j )  ;^225^^^^^210^240^LabelNode label =  ( LabelNode )  tsi.labels.get ( j ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int jump = insns .get ( i )  ;^221^^^^^206^236^int jump = insns.indexOf ( tsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( insnType, current, subroutine ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + j ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = j; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < lsi.labels.size() - 1 ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^jump = insns .get ( local )  ;^215^^^^^200^230^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = -7; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( local, current, subroutine ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < lsi.labels.size() + 4 ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( jump, current, sub ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  &&  TableSwitchInsnNode )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 * 1] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + , current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 - 2] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 3; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( insn, local + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, call + n ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + j, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  ^  1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = ; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 2; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + top ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 2; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnHandlers == null )  {^270^^^^^255^285^if  ( insnHandlers != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( i < insnHandlers.size() )  {^270^^^^^255^285^if  ( insnHandlers != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P6_Replace_Expression]^if  ( tcb.type == null )  {^270^^^^^255^285^if  ( insnHandlers != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( insnHandlers != false )  {^270^^^^^255^285^if  ( insnHandlers != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( tcb.type != null )  {^274^^^^^259^289^if  ( tcb.type == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( tcb.type == true )  {^274^^^^^259^289^if  ( tcb.type == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P9_Replace_Statement]^if  ( oldFrame == null )  {^274^^^^^259^289^if  ( tcb.type == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P9_Replace_Statement]^if  ( sub == null )  {^274^^^^^259^289^if  ( tcb.type == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P9_Replace_Statement]^if  ( subroutine == null )  {^274^^^^^259^289^if  ( tcb.type == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P9_Replace_Statement]^if  ( subroutine != null )  {^274^^^^^259^289^if  ( tcb.type == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P9_Replace_Statement]^if  ( oldSubroutine == null )  {^274^^^^^259^289^if  ( tcb.type == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P15_Unwrap_Block]^type = org.mockito.asm.Type.getObjectType("java/lang/Throwable");^274^275^276^277^278^259^289^if  ( tcb.type == null )  { type = Type.getObjectType ( "java/lang/Throwable" ) ; } else { type = Type.getObjectType ( tcb.type ) ; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P16_Remove_Block]^^274^275^276^277^278^259^289^if  ( tcb.type == null )  { type = Type.getObjectType ( "java/lang/Throwable" ) ; } else { type = Type.getObjectType ( tcb.type ) ; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^type =  Type.getObjectType ( null.type ) ;^277^^^^^274^278^type = Type.getObjectType ( tcb.type ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^type = Type.getObjectType ( "java/lang/Throwable" ) ;type = Type.getObjectType ( tcb.type ) ;^277^^^^^274^278^type = Type.getObjectType ( tcb.type ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^277^^^^^274^278^type = Type.getObjectType ( tcb.type ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^Type[] args = Type.getArgumentTypes ( m.desc ) ;type = Type.getObjectType ( tcb.type ) ;^277^^^^^274^278^type = Type.getObjectType ( tcb.type ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^Type ctype = Type.getObjectType ( owner ) ;type = Type.getObjectType ( tcb.type ) ;^277^^^^^274^278^type = Type.getObjectType ( tcb.type ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^type = Type.getObjectType ( "java/lang/Throwableab" ) ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^type = Type .getArgumentTypes (  )  ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^type ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^type = Type.getObjectType ( tcb.type ) ;type = Type.getObjectType ( "java/lang/Throwable" ) ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^type = Type.getObjectType ( "java/lang/Throwableava/lang/" ) ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^Type ctype = Type.getObjectType ( owner ) ;type = Type.getObjectType ( "java/lang/Throwable" ) ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^if  ( newControlFlowExceptionEdge ( j, jump )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^if  ( newControlFlowExceptionEdge ( insn, j )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^icurrent  ( newControlFlowExceptionEdge ( insn, jump )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^if  ( newControlFlowExceptionEdge (  jump )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^if  ( newControlFlowExceptionEdge ( insn )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^if  ( newControlFlowExceptionEdge ( jump, insn )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^if  ( newControlFlowEdge ( insn, jump )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P15_Unwrap_Block]^handler.init(f); handler.clearStack(); handler.push(interpreter.newValue(type)); merge(jump, handler, subroutine);^280^281^282^283^284^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  { handler.init ( f ) ; handler.clearStack (  ) ; handler.push ( interpreter.newValue ( type )  ) ; merge ( jump, handler, subroutine ) ; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P16_Remove_Block]^^280^281^282^283^284^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  { handler.init ( f ) ; handler.clearStack (  ) ; handler.push ( interpreter.newValue ( type )  ) ; merge ( jump, handler, subroutine ) ; }^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^handler.init ( current ) ;^281^^^^^266^296^handler.init ( f ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^handler.merge ( f ) ;^281^^^^^266^296^handler.init ( f ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^281^282^^^^266^296^handler.init ( f ) ; handler.clearStack (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^insnHandlers.add ( tcb ) ;handler.init ( f ) ;^281^^^^^266^296^handler.init ( f ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^handler.clearStack (  ) ;handler.init ( f ) ;^281^^^^^266^296^handler.init ( f ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^handler.setLocal (  ) ;^282^^^^^267^297^handler.clearStack (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^282^^^^^267^297^handler.clearStack (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^handler.init ( f ) ;handler.clearStack (  ) ;^282^^^^^267^297^handler.clearStack (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^handler.push ( interpreter.newValue ( ctype )  ) ;^283^^^^^268^298^handler.push ( interpreter.newValue ( type )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^handler.push ( type.newValue ( interpreter )  ) ;^283^^^^^268^298^handler.push ( interpreter.newValue ( type )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^handler.Frame ( interpreter.newValue ( type )  ) ;^283^^^^^268^298^handler.push ( interpreter.newValue ( type )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^283^^^^^268^298^handler.push ( interpreter.newValue ( type )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^current.setLocal ( local++, interpreter.newValue ( args[i] )  ) ;handler.push ( interpreter.newValue ( type )  ) ;^283^^^^^268^298^handler.push ( interpreter.newValue ( type )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^current.setLocal ( local++, interpreter.newValue ( ctype )  ) ;handler.push ( interpreter.newValue ( type )  ) ;^283^^^^^268^298^handler.push ( interpreter.newValue ( type )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^current.setLocal ( local++, interpreter.newValue ( null )  ) ;handler.push ( interpreter.newValue ( type )  ) ;^283^^^^^268^298^handler.push ( interpreter.newValue ( type )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( insnType, handler, subroutine ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump, f, subroutine ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump, handler, sub ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge (  handler, subroutine ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump,  subroutine ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump, handler ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( handler, jump, subroutine ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( jump, subroutine, handler ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^findSubroutine ( jump, handler, subroutine ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( jump, current, subroutine ) ;merge ( jump, handler, subroutine ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( insn + 1, f, subroutine ) ;merge ( jump, handler, subroutine ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^merge ( insn + 1, current, subroutine ) ;merge ( jump, handler, subroutine ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^for  (  short  i = 0; i < insnHandlers.size (  ) ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^for  ( int i = 0; i > insnHandlers.size (  ) ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 9; i < insnHandlers.size (  ) ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < insnHandlers.size() + 0 ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^for  ( int i = 0; i < insnHandlers.add (  ) ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( tcb.type == false )  {^274^^^^^259^289^if  ( tcb.type == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^type = Type.getObjectType ( "java/lang/Throwableja" ) ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^type  =  type ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^type = Type.getObjectType ( "ava/langava/lang/Throwable" ) ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^if  ( newControlFlowExceptionEdge ( insn, local )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^ihandler  ( newControlFlowExceptionEdge ( insn, jump )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^handler .clearStack (  )  ;^281^^^^^266^296^handler.init ( f ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^handler .clearStack (  )  ;^283^^^^^268^298^handler.push ( interpreter.newValue ( type )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^283^284^^^^268^298^handler.push ( interpreter.newValue ( type )  ) ; merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( subroutine, handler, jump ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^type = Type.getObjectType ( "java/lang/Throwableva/l" ) ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^type = Type .getArgumentTypes (  )  ;^277^^^^^262^292^type = Type.getObjectType ( tcb.type ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^type =  Type.getObjectType ( null.type ) ;^277^^^^^262^292^type = Type.getObjectType ( tcb.type ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^type = Type.getObjectType ( "java/lang/Throwable" ) ;type = Type.getObjectType ( tcb.type ) ;^277^^^^^262^292^type = Type.getObjectType ( tcb.type ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  subroutineCalls.get ( i ) ;^272^^^^^257^287^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  jnsnHandlers.get ( i ) ;^272^^^^^257^287^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  i.get ( insnHandlers ) ;^272^^^^^257^287^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlersnsnHandlers.get ( i ) ;^272^^^^^257^287^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers .get ( jump )  ;^272^^^^^257^287^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^short  jump = insns.indexOf ( tcb.handler ) ;^279^^^^^264^294^int jump = insns.indexOf ( tcb.handler ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int jump = insns.get ( tcb.handler ) ;^279^^^^^264^294^int jump = insns.indexOf ( tcb.handler ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( lsi.dflt ) ;int jump = insns.indexOf ( tcb.handler ) ;^279^^^^^264^294^int jump = insns.indexOf ( tcb.handler ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int begin = insns.indexOf ( tcb.start ) ;int jump = insns.indexOf ( tcb.handler ) ;^279^^^^^264^294^int jump = insns.indexOf ( tcb.handler ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( tsi.dflt ) ;int jump = insns.indexOf ( tcb.handler ) ;^279^^^^^264^294^int jump = insns.indexOf ( tcb.handler ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int call = insns.indexOf (  ( AbstractInsnNode )  caller ) ;int jump = insns.indexOf ( tcb.handler ) ;^279^^^^^264^294^int jump = insns.indexOf ( tcb.handler ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int end = insns.indexOf ( tcb.end ) ;int jump = insns.indexOf ( tcb.handler ) ;^279^^^^^264^294^int jump = insns.indexOf ( tcb.handler ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int jump = insns.indexOf ( j.label ) ;int jump = insns.indexOf ( tcb.handler ) ;^279^^^^^264^294^int jump = insns.indexOf ( tcb.handler ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  localnsnHandlers.get ( i ) ;^272^^^^^257^287^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^272^^^^^257^287^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^277^^^^^262^292^type = Type.getObjectType ( tcb.type ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^Type[] args = Type.getArgumentTypes ( m.desc ) ;type = Type.getObjectType ( tcb.type ) ;^277^^^^^262^292^type = Type.getObjectType ( tcb.type ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^Type ctype = Type.getObjectType ( owner ) ;type = Type.getObjectType ( tcb.type ) ;^277^^^^^262^292^type = Type.getObjectType ( tcb.type ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int jump = insns .get ( call )  ;^279^^^^^264^294^int jump = insns.indexOf ( tcb.handler ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^279^^^^^264^294^int jump = insns.indexOf ( tcb.handler ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^findSubroutine ( insns.indexOf ( tcb.handler ) , sub, calls ) ;int jump = insns.indexOf ( tcb.handler ) ;^279^^^^^264^294^int jump = insns.indexOf ( tcb.handler ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^jump = insns.indexOf ( label ) ;int jump = insns.indexOf ( tcb.handler ) ;^279^^^^^264^294^int jump = insns.indexOf ( tcb.handler ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^if  ( newControlFlowExceptionEdge ( insn, var )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( newControlFlowExceptionEdge ( var, jump )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^281^^^^^266^296^handler.init ( f ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^handler .setLocal ( call )  ;^282^^^^^267^297^handler.clearStack (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^handler.Frame ( interpreter.newValue ( ctype )  ) ;^283^^^^^268^298^handler.push ( interpreter.newValue ( type )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( var, handler, subroutine ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^type = Type.getObjectType ( "java" ) ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = begin; i < insnHandlers.size (  ) ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < insnHandlers.size() + 2 ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < insnHandlers.size() + 8 ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^for  ( int i = 0; i < subroutineCalls.size (  ) ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  jumpnsnHandlers.get ( i ) ;^272^^^^^257^287^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^type = Type.getObjectType ( "/laava/lang/Throwable" ) ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^if  ( newControlFlowExceptionEdge ( n, jump )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( newControlFlowExceptionEdge ( local, jump )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^handler .setLocal ( jump )  ;^282^^^^^267^297^handler.clearStack (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^type = Type .getArgumentTypes (  )  ;^277^^^^^274^278^type = Type.getObjectType ( tcb.type ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^type = Type.getObjectType ( "jaava/lang/Throwable" ) ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^type = Type.getObjectType ( "lang/Throwablava/lang/Throwable" ) ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( newControlFlowExceptionEdge ( insn, n )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^handler .setLocal ( local )  ;^282^^^^^267^297^handler.clearStack (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^282^283^^^^267^297^handler.clearStack (  ) ; handler.push ( interpreter.newValue ( type )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( j, handler, subroutine ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < lsi.labels.size() - 9 ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowExceptionEdge ( insn, var ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^for  (  long  i = 0; i < insnHandlers.size (  ) ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^for  ( int i = 0; i <= insnHandlers.size (  ) ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = -4; i < insnHandlers.size (  ) ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < insnHandlers.size() + 4 ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^type = Type.getObjectType ( "ng/ava/lang/Throwable" ) ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( newControlFlowEdge ( j, jump )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( j, handler, subroutine ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( jump, handler, sub ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^type = Type.getObjectType ( "a/laava/lang/Throwable" ) ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^type  = null ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^long  jump = insns.indexOf ( tcb.handler ) ;^279^^^^^264^294^int jump = insns.indexOf ( tcb.handler ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^272^273^^^^257^287^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ; Type type;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^type = Type.getObjectType ( "/lang/Throwab" ) ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int jump = insns .get ( insn )  ;^279^^^^^264^294^int jump = insns.indexOf ( tcb.handler ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^handler .setLocal ( i )  ;^282^^^^^267^297^handler.clearStack (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnType <= AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  >  JumpInsnNode )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  ||  JumpInsnNode )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  <  LookupSwitchInsnNode )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  >  LookupSwitchInsnNode )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 / 4] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = -5; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 >>> 3] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 << 2] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 / 1] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + insn ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = call; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( n, current, subroutine ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowEdge ( insn, top ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowExceptionEdge ( insn, var ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 + 1] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 >> 0] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  ==  1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 * 1] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 << 3] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + end, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  <  1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^return false;^232^^^^^217^247^throw new AnalyzerException  (" ")  ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < subroutine.callers.size() - 4 ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + insn, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  <=  1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^jump = insns .get ( jump )  ;^215^^^^^200^230^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( top, jump ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 2; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( n, current, subroutine ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( jump, handler, subroutine ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( insn, top ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + call, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^jump = insns .get ( jump )  ;^226^^^^^211^241^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = var; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^int jump = insns .get ( local )  ;^221^^^^^206^236^int jump = insns.indexOf ( tsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 / 3] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( var, insn + 1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^subroutine.access[var + j] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 - 1] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = -5; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^jump = insns .get ( top )  ;^215^^^^^200^230^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = begin; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowEdge ( insn, var ) ;^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( top, current, subroutine ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode != GOTO && insnOpcode == JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + begin, current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn   instanceof   1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode >= JSR )  {^200^^^^^185^215^if  ( insnOpcode == JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^merge ( var, current, subroutine ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^long  jump = insns.indexOf ( j.label ) ;^199^^^^^184^214^int jump = insns.indexOf ( j.label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( local, current, subroutine ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^merge ( n, current, subroutine ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowExceptionEdge ( var, jump ) ;^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^if  ( var != GOTO && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^if  ( localOpcode != GOTO && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( insnOpcode = GOTO && insnOpcode = JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + j ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode > JSR )  {^200^^^^^185^215^if  ( insnOpcode == JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( j, current, subroutine ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 % 0] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 * 0] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn +  ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( local, insn + 1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = end; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 << 1] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 << 3] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 << 2] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 * 3] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  &  1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < lsi.labels.size() - 4 ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^int jump = insns .get ( top )  ;^210^^^^^195^225^int jump = insns.indexOf ( lsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( insnType, current, subroutine ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < lsi.labels.size() - 7 ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 / 0] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 >> 4] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 / 1] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^jump = insns .get ( end )  ;^226^^^^^211^241^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 + 1] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + insnOpcode ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( var, current, subroutine ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^jump = insns .get ( end )  ;^215^^^^^200^230^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = -9; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^merge ( var + 1, current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  <  1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + jump ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( j, current, subroutine ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( jump, current, sub ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( insn, n ) ;^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowEdge ( insn, top ) ;^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( top, current, subroutine ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowExceptionEdge ( top, jump ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( j + 1, f, subroutine ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^merge ( insn + 1, f, sub ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^187^188^^^^172^202^merge ( insn + 1, f, subroutine ) ; newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn   instanceof   1 ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn  ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( jump, insn + 1 ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowEdge ( j, insn + 1 ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  >=  JumpInsnNode )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnNode  <<  JumpInsnNode )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^} else if  ( insnNode  ^  LookupSwitchInsnNode )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 + 3] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 * 2] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < tsi.labels.size() + 4 ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int jump = insns .get ( end )  ;^221^^^^^206^236^int jump = insns.indexOf ( tsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + var, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 >>> 4] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( j, current, subroutine ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^int jump = insns .get ( insnType )  ;^210^^^^^195^225^int jump = insns.indexOf ( lsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 8; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowEdge ( top, jump ) ;^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( jump, handler, subroutine ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 - 3] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 >> 1] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = -7; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = -9; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 * 4] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = call; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < lsi.labels.size() + 9 ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^jump = insns .get ( i )  ;^215^^^^^200^230^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowExceptionEdge ( j, jump ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = var; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowExceptionEdge ( insn, j ) ;^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^if  ( varOpcode != GOTO && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  &&  1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^if  ( insnOpcode != GOTO && insnOpcode > JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^if  ( jump != GOTO && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + insnOpcode ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + local, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + end, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 + 2] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 >>> 3] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 4; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int jump = insns .get ( begin )  ;^221^^^^^206^236^int jump = insns.indexOf ( tsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^newControlFlowExceptionEdge ( insn, local ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 5; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^LabelNode label =  ( LabelNode )  lsi.labels .get ( i )  ;^214^^^^^199^229^LabelNode label =  ( LabelNode )  lsi.labels.get ( j ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < lsi.labels.size() - 3 ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^LabelNode label =  ( LabelNode )  lsi.labels .get ( insnType )  ;^214^^^^^199^229^LabelNode label =  ( LabelNode )  lsi.labels.get ( j ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + call, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 % 3] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 % 3] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 6; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^} else if  ( insnOpcode = ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( insnHandlers != true )  {^270^^^^^255^285^if  ( insnHandlers != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( tcb.type == this )  {^274^^^^^259^289^if  ( tcb.type == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^type = Type.getObjectType ( "/l" ) ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^if  ( newControlFlowExceptionEdge ( insn, top )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( jump, f, subroutine ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 2; i < insnHandlers.size (  ) ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < insnHandlers.size() - 8 ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^type = Type.getObjectType ( "java/lang/Throwableva/lan" ) ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^type = Type.getObjectType ( "/lang/Th" ) ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( newControlFlowEdge ( insn, j )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^handler.merge ( current ) ;^281^^^^^266^296^handler.init ( f ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^handler .setLocal ( end )  ;^282^^^^^267^297^handler.clearStack (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^handler .setLocal ( begin )  ;^282^^^^^267^297^handler.clearStack (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^type = Type.getObjectType ( "owaava/lang/Throwable" ) ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  topnsnHandlers.get ( i ) ;^272^^^^^257^287^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  varnsnHandlers.get ( i ) ;^272^^^^^257^287^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers .get ( n )  ;^272^^^^^257^287^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^type = Type.getObjectType ( "vava/lang/Throwable" ) ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^merge ( local, handler, subroutine ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^type = Type.getObjectType ( "ava/ava/lang/Throwable" ) ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = ; i < insnHandlers.size (  ) ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < insnHandlers.size() - 5 ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  subroutineCalls .get ( var )  ;^272^^^^^257^287^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int jump = insns .get ( jump )  ;^279^^^^^264^294^int jump = insns.indexOf ( tcb.handler ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^type = Type.getObjectType ( "java/lang/Throwablean" ) ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int jump = insns .get ( begin )  ;^279^^^^^264^294^int jump = insns.indexOf ( tcb.handler ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^handler .setLocal ( n )  ;^282^^^^^267^297^handler.clearStack (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^type = Type.getObjectType ( "java/lang/Throwablela" ) ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^type = Type.getObjectType ( "ang/Throwablava/lang/Throwable" ) ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^jump = insns .get ( var )  ;^215^^^^^200^230^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 7; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = insnType; i < insnHandlers.size (  ) ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < insnHandlers.size() - 2 ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^type = Type.getObjectType ( "an" ) ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^type = Type.getObjectType ( "jav" ) ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^type = Type.getObjectType ( "java/lang/Throwableva/la" ) ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^type = Type.getObjectType ( "java/ava/lang/Throwable" ) ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^if  ( newControlFlowEdge ( insn, top )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine = subroutine == true ? true : subroutine.copy (  ) ;^191^^^^^176^206^subroutine = subroutine == null ? null : subroutine.copy (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^type = Type.getObjectType ( "" ) ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^AbstractInsnNode node = insns.get ( insn ) ;AbstractInsnNode insnNode = m.instructions.get ( insn ) ;^179^^^^^164^194^AbstractInsnNode insnNode = m.instructions.get ( insn ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^long  insnOpcode = insnNode.getOpcode (  ) ;^180^^^^^165^195^int insnOpcode = insnNode.getOpcode (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int insnType = insnNode.getType (  ) ;int insnOpcode = insnNode.getOpcode (  ) ;^180^^^^^165^195^int insnOpcode = insnNode.getOpcode (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^short  insnType = insnNode.getType (  ) ;^181^^^^^166^196^int insnType = insnNode.getType (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^int insnOpcode = insnNode.getOpcode (  ) ;int insnType = insnNode.getType (  ) ;^181^^^^^166^196^int insnType = insnNode.getType (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int jump = insns .get ( begin )  ;^199^^^^^184^214^int jump = insns.indexOf ( j.label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int jump = insns .get ( i )  ;^210^^^^^195^225^int jump = insns.indexOf ( lsi.dflt ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = end; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^Set  insnHandlers = handlers[insn];^269^^^^^254^284^List insnHandlers = handlers[insn];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^List topHandlers = handlers[insn];^269^^^^^254^284^List insnHandlers = handlers[insn];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^List handlersHandlers = insn[insn];^269^^^^^254^284^List insnHandlers = handlers[insn];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^List jHandlers = handlers[insn];^269^^^^^254^284^List insnHandlers = handlers[insn];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^List insnHandlers = handlers[j];List insnHandlers = handlers[insn];^269^^^^^254^284^List insnHandlers = handlers[insn];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = -9; i < insnHandlers.size (  ) ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < insnHandlers.size() + 9 ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  nnsnHandlers.get ( i ) ;^272^^^^^257^287^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers .get ( i )  ;^272^^^^^257^287^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^AbstractInsnNode insnNode = m.instructions .get ( local )  ;^179^^^^^164^194^AbstractInsnNode insnNode = m.instructions.get ( insn ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^179^^^^^164^194^AbstractInsnNode insnNode = m.instructions.get ( insn ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int insnOpcode = insnNode .getType (  )  ;^180^^^^^165^195^int insnOpcode = insnNode.getOpcode (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^180^181^^^^165^195^int insnOpcode = insnNode.getOpcode (  ) ; int insnType = insnNode.getType (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P12_Insert_Condition]^if  ( insnOpcode != GOTO && insnOpcode != JSR )  { int insnOpcode = insnNode.getOpcode (  ) ; }^180^^^^^165^195^int insnOpcode = insnNode.getOpcode (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int insnType = insnNode .getOpcode (  )  ;^181^^^^^166^196^int insnType = insnNode.getType (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^181^^^^^166^196^int insnType = insnNode.getType (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^merge ( top + 1, f, subroutine ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^newControlFlowEdge ( insn, insn + begin ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  ||  1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( n, insn + 1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^newControlFlowEdge ( top, jump ) ;^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( local, current, subroutine ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 0; i < insnHandlers.size() + 5 ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^for  ( int i = 0; i < subroutineCalls.add (  ) ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^type = Type.getObjectType ( "va/lang/Throwab" ) ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^findSubroutine ( n, handler, subroutine ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^queued[insn] = true;^176^^^^^161^191^queued[insn] = false;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^queued[insn] = true;queued[insn] = false;^176^^^^^161^191^queued[insn] = false;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^queue[top++] = insn;queued[insn] = false;^176^^^^^161^191^queued[insn] = false;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine = subroutine == this ? this : subroutine.copy (  ) ;^191^^^^^176^206^subroutine = subroutine == null ? null : subroutine.copy (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^jump = insns .get ( j )  ;^226^^^^^211^241^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^type = Type.getObjectType ( "java/lang/Throwablej" ) ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  |  ) , e ) ;^289^290^^^^274^304^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^throw new AnalyzerException ( "Error at instruction "   instanceof   insn   instanceof   ": " + e.getMessage (  ) , e ) ;^289^290^^^^274^304^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^throw new AnalyzerException ( "Error at instruction "  ^  insn + ": " + e.getMessage (  ) , e ) ;^289^290^^^^274^304^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^throw new AnalyzerException ( "t instrrror at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^289^290^^^^274^304^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P4_Replace_Constructor]^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  )  ) ;^289^290^^^^274^304^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^throw new AnalyzerException ( "Error at instruction " + n + ": " + e.getMessage (  ) , e ) ;^289^290^^^^274^304^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^throw new AnalyzerException ( "Error at instruction " + e + ": " + insn.getMessage (  ) , e ) ;^289^290^^^^274^304^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.AnalyzerException (  ) , e ) ;^289^290^^^^274^304^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^throw new AnalyzerException ( "Error at instruction " + j + ": " + e.getMessage (  ) , e ) ;^289^290^^^^274^304^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  &  ) , e ) ;^292^293^^^^277^307^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^throw new AnalyzerException ( "Error at instruction "  <<  insn  <<  ": " + e.getMessage (  ) , e ) ;^292^293^^^^277^307^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^throw new AnalyzerException ( "Error at instruction "  &  insn + ": " + e.getMessage (  ) , e ) ;^292^293^^^^277^307^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^throw new AnalyzerException ( "Error at instruction " + insn + ":" + e.getMessage (  ) , e ) ;^292^293^^^^277^307^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P4_Replace_Constructor]^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  )  ) ;^292^293^^^^277^307^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^throw new AnalyzerException ( "Error at instruction " + jump + ": " + e.getMessage (  ) , e ) ;^292^293^^^^277^307^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^throw new AnalyzerException ( "Error at instruction " + e + ": " + insn.getMessage (  ) , e ) ;^292^293^^^^277^307^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^throw new AnalyzerException ( "Error at instruction " + local + ": " + e.getMessage (  ) , e ) ;^292^293^^^^277^307^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^long  insn = queue[--top];^173^^^^^158^188^int insn = queue[--top];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^Frame oldFrame = frames[insn];Frame f = frames[insn];^174^^^^^159^189^Frame f = frames[insn];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^Subroutine oldSubroutine = subroutines[insn];Subroutine subroutine = subroutines[insn];^175^^^^^160^190^Subroutine subroutine = subroutines[insn];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P11_Insert_Donor_Statement]^Subroutine sub =  ( Subroutine )  subroutineHeads.get ( jsr.label ) ;Subroutine subroutine = subroutines[insn];^175^^^^^160^190^Subroutine subroutine = subroutines[insn];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^AbstractInsnNode insnNode = m.instructions .get ( i )  ;^179^^^^^164^194^AbstractInsnNode insnNode = m.instructions.get ( insn ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^short  insnOpcode = insnNode.getOpcode (  ) ;^180^^^^^165^195^int insnOpcode = insnNode.getOpcode (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P1_Replace_Type]^LinkedHashSet  insnHandlers = handlers[insn];^269^^^^^254^284^List insnHandlers = handlers[insn];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^List nHandlers = handlers[insn];^269^^^^^254^284^List insnHandlers = handlers[insn];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int i = 7; i < insnHandlers.size (  ) ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int jump = insns .get ( n )  ;^279^^^^^264^294^int jump = insns.indexOf ( tcb.handler ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  !=  ) , e ) ;^289^290^^^^274^304^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^throw new AnalyzerException ( "Error at instruction "  !=  insn  !=  ": " + e.getMessage (  ) , e ) ;^289^290^^^^274^304^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^throw new AnalyzerException ( "Error at instruction "  &  insn + ": " + e.getMessage (  ) , e ) ;^289^290^^^^274^304^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^throw new AnalyzerException ( "ror at instrror at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^289^290^^^^274^304^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^throw new AnalyzerException ( "Error at instruction " + var + ": " + e.getMessage (  ) , e ) ;^289^290^^^^274^304^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e .AnalyzerException ( owner )  , e ) ;^289^290^^^^274^304^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^return ;^289^290^^^^274^304^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ^  ) , e ) ;^292^293^^^^277^307^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^throw new AnalyzerException ( "Error at instruction "  &  insn  &  ": " + e.getMessage (  ) , e ) ;^292^293^^^^277^307^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^throw new AnalyzerException ( " rror at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^292^293^^^^277^307^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^throw new AnalyzerException ( "Error at instruction " + var + ": " + e.getMessage (  ) , e ) ;^292^293^^^^277^307^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^return 0;^292^293^^^^277^307^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^179^180^^^^164^194^AbstractInsnNode insnNode = m.instructions.get ( insn ) ; int insnOpcode = insnNode.getOpcode (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^180^^^^^165^195^int insnOpcode = insnNode.getOpcode (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  <<  1 ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P5_Replace_Variable]^current.init ( insnNode ) .execute ( f, interpreter ) ;^190^^^^^175^205^current.init ( f ) .execute ( insnNode, interpreter ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^merge ( insn + top, current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P2_Replace_Operator]^newControlFlowEdge ( insn, insn  >  1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int jump = insns .get ( n )  ;^199^^^^^184^214^int jump = insns.indexOf ( j.label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^for  ( int j = 0; j < lsi.labels.size() - 5 ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^jump = insns .get ( insnOpcode )  ;^215^^^^^200^230^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers .get ( begin )  ;^272^^^^^257^287^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P3_Replace_Literal]^type = Type.getObjectType ( "java/" ) ;^275^^^^^260^290^type = Type.getObjectType ( "java/lang/Throwable" ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^int jump = insns .get ( end )  ;^279^^^^^264^294^int jump = insns.indexOf ( tcb.handler ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P7_Replace_Invocation]^+ ": " + e.AnalyzerException (  ) , e ) ;^290^^^^^275^305^+ ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^290^^^^^275^305^+ ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P14_Delete_Statement]^^293^^^^^278^308^+ ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[P8_Replace_Mix]^subroutine.access[var + 1 >> 4] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
