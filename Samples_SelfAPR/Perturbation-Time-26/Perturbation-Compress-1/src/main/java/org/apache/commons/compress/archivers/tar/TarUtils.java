[P1_Replace_Type]^private static final  long  BYTE_MASK = 255;^28^^^^^23^33^private static final int BYTE_MASK = 255;^[CLASS] TarUtils   [VARIABLES] 
[P3_Replace_Literal]^private static final int BYTE_MASK = 249;^28^^^^^23^33^private static final int BYTE_MASK = 255;^[CLASS] TarUtils   [VARIABLES] 
[P8_Replace_Mix]^private static final int BYTE_MASK  = null ;^28^^^^^23^33^private static final int BYTE_MASK = 255;^[CLASS] TarUtils   [VARIABLES] 
[P1_Replace_Type]^int     result = 0;^40^^^^^39^66^long    result = 0;^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P3_Replace_Literal]^long    result = 9;^40^^^^^39^66^long    result = 0;^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P11_Insert_Donor_Statement]^long sum = 0;long    result = 0;^40^^^^^39^66^long    result = 0;^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P3_Replace_Literal]^boolean stillPadding = false;^41^^^^^39^66^boolean stillPadding = true;^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P1_Replace_Type]^long      end = offset + length;^42^^^^^39^66^int     end = offset + length;^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P2_Replace_Operator]^int  >>  end = offset + length;^42^^^^^39^66^int     end = offset + length;^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P5_Replace_Variable]^int     end = length + length;^42^^^^^39^66^int     end = offset + length;^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P5_Replace_Variable]^int     end = offset + offset;^42^^^^^39^66^int     end = offset + length;^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P5_Replace_Variable]^int     end = length + offset;^42^^^^^39^66^int     end = offset + length;^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P2_Replace_Operator]^if  ( header[i] != 0 )  {^45^^^^^39^66^if  ( header[i] == 0 )  {^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P3_Replace_Literal]^if  ( header[i] == -8 )  {^45^^^^^39^66^if  ( header[i] == 0 )  {^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P8_Replace_Mix]^if  ( header[i] == 0 + 1 )  {^45^^^^^39^66^if  ( header[i] == 0 )  {^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P9_Replace_Statement]^if  ( value == 0 )  {^45^^^^^39^66^if  ( header[i] == 0 )  {^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P15_Unwrap_Block]^break;^45^46^47^^^39^66^if  ( header[i] == 0 )  { break; }^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P16_Remove_Block]^^45^46^47^^^39^66^if  ( header[i] == 0 )  { break; }^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P13_Insert_Block]^if  (  ( header[i] )  ==  (  ( byte )   ( ' ' )  )  )  {     break; }^45^^^^^39^66^[Delete]^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P2_Replace_Operator]^if  ( header[i] ==  ( byte )  ' ' && header[i] == '0' )  {^49^^^^^39^66^if  ( header[i] ==  ( byte )  ' ' || header[i] == '0' )  {^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P2_Replace_Operator]^if  ( header[i] >  ( byte )  ' ' || header[i] == '0' )  {^49^^^^^39^66^if  ( header[i] ==  ( byte )  ' ' || header[i] == '0' )  {^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P2_Replace_Operator]^if  ( header[i] ==  ( byte )  ' ' || header[i] != '0' )  {^49^^^^^39^66^if  ( header[i] ==  ( byte )  ' ' || header[i] == '0' )  {^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P2_Replace_Operator]^if  ( header[i] <  ( byte )  ' ' || header[i] == '0' )  {^49^^^^^39^66^if  ( header[i] ==  ( byte )  ' ' || header[i] == '0' )  {^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P6_Replace_Expression]^if  ( header[i] ==  ( byte )  ' ' ) {^49^^^^^39^66^if  ( header[i] ==  ( byte )  ' ' || header[i] == '0' )  {^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P6_Replace_Expression]^if  (  header[i] == '0' )  {^49^^^^^39^66^if  ( header[i] ==  ( byte )  ' ' || header[i] == '0' )  {^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P6_Replace_Expression]^if  ( header[i] ==  ( byte )   ( ' ' ) )  {^49^^^^^39^66^if  ( header[i] ==  ( byte )  ' ' || header[i] == '0' )  {^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P6_Replace_Expression]^if  ( header[i] == byte (' ') )  {^49^^^^^39^66^if  ( header[i] ==  ( byte )  ' ' || header[i] == '0' )  {^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P6_Replace_Expression]^break;^51^^^^^39^66^ continue; ^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P15_Unwrap_Block]^if (stillPadding) {    continue;}; if ((header[i]) == ((byte) (' '))) {    break;};^49^50^51^52^^39^66^if  ( header[i] ==  ( byte )  ' ' || header[i] == '0' )  { if  ( stillPadding )  { continue; }^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P16_Remove_Block]^^49^50^51^52^^39^66^if  ( header[i] ==  ( byte )  ' ' || header[i] == '0' )  { if  ( stillPadding )  { continue; }^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P15_Unwrap_Block]^continue;^50^51^52^^^39^66^if  ( stillPadding )  { continue; }^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P16_Remove_Block]^^50^51^52^^^39^66^if  ( stillPadding )  { continue; }^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P2_Replace_Operator]^if  ( header[i] !=  ( byte )  ' ' )  {^54^^^^^39^66^if  ( header[i] ==  ( byte )  ' ' )  {^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P15_Unwrap_Block]^break;^54^55^56^^^39^66^if  ( header[i] ==  ( byte )  ' ' )  { break; }^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P16_Remove_Block]^^54^55^56^^^39^66^if  ( header[i] ==  ( byte )  ' ' )  { break; }^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P13_Insert_Block]^if  (  ( header[i] )  == 0 )  {     break; }^54^^^^^39^66^[Delete]^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P2_Replace_Operator]^if  ( header[i] <=  ( byte )  ' ' )  {^54^^^^^39^66^if  ( header[i] ==  ( byte )  ' ' )  {^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P1_Replace_Type]^for  (  short  i = offset; i < end; ++i )  {^44^^^^^39^66^for  ( int i = offset; i < end; ++i )  {^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P2_Replace_Operator]^for  ( int i = offset; i <= end; ++i )  {^44^^^^^39^66^for  ( int i = offset; i < end; ++i )  {^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P2_Replace_Operator]^for  |  ( int i = offset; i < end; ++i )  {^44^^^^^39^66^for  ( int i = offset; i < end; ++i )  {^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P5_Replace_Variable]^for  ( int i = length; i < end; ++i )  {^44^^^^^39^66^for  ( int i = offset; i < end; ++i )  {^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P5_Replace_Variable]^for  ( lengthnt i = offset; i < end; ++i )  {^44^^^^^39^66^for  ( int i = offset; i < end; ++i )  {^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P5_Replace_Variable]^for  ( int i = offset; i < offset; ++i )  {^44^^^^^39^66^for  ( int i = offset; i < end; ++i )  {^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P5_Replace_Variable]^for  ( int i = end; i < offset; ++i )  {^44^^^^^39^66^for  ( int i = offset; i < end; ++i )  {^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P5_Replace_Variable]^for  ( offsetnt i = i; i < end; ++i )  {^44^^^^^39^66^for  ( int i = offset; i < end; ++i )  {^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P8_Replace_Mix]^for  ( offsetnt i = offset; i < end; ++i )  {^44^^^^^39^66^for  ( int i = offset; i < end; ++i )  {^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P2_Replace_Operator]^if  ( header[i] > 0 )  {^45^^^^^39^66^if  ( header[i] == 0 )  {^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P3_Replace_Literal]^if  ( header[i] == -5 )  {^45^^^^^39^66^if  ( header[i] == 0 )  {^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P8_Replace_Mix]^if  ( header[i] == 2 )  {^45^^^^^39^66^if  ( header[i] == 0 )  {^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P2_Replace_Operator]^if  ( header[i] >=  ( byte )  ' ' || header[i] == '0' )  {^49^^^^^39^66^if  ( header[i] ==  ( byte )  ' ' || header[i] == '0' )  {^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P2_Replace_Operator]^if  ( header[i] !=  ( byte )  ' ' || header[i] == '0' )  {^49^^^^^39^66^if  ( header[i] ==  ( byte )  ' ' || header[i] == '0' )  {^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P2_Replace_Operator]^if  ( header[i] >  ( byte )  ' ' )  {^54^^^^^39^66^if  ( header[i] ==  ( byte )  ' ' )  {^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P3_Replace_Literal]^stillPadding = true;^59^^^^^39^66^stillPadding = false;^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P2_Replace_Operator]^result =  ^  ( result << 3 )  +  ( header[i] - '0' ) ;^61^^^^^39^66^result =  ( result << 3 )  +  ( header[i] - '0' ) ;^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P2_Replace_Operator]^result =  ( result  !=  3 )  +  ( header[i] - '0' ) ;^61^^^^^39^66^result =  ( result << 3 )  +  ( header[i] - '0' ) ;^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P2_Replace_Operator]^result =  ( result << 3 )  +  ( header[i]  &&  '0' ) ;^61^^^^^39^66^result =  ( result << 3 )  +  ( header[i] - '0' ) ;^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P3_Replace_Literal]^result =  ( result <<  )  +  ( header[i] - '0' ) ;^61^^^^^39^66^result =  ( result << 3 )  +  ( header[i] - '0' ) ;^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P5_Replace_Variable]^result =  ( header << 3 )  +  ( result[i] - '0' ) ;^61^^^^^39^66^result =  ( result << 3 )  +  ( header[i] - '0' ) ;^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P8_Replace_Mix]^result =  ( result << 0 )  +  ( header[i] - '0' ) ;^61^^^^^39^66^result =  ( result << 3 )  +  ( header[i] - '0' ) ;^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P2_Replace_Operator]^result =  >=  ( result << 3 )  +  ( header[i] - '0' ) ;^61^^^^^39^66^result =  ( result << 3 )  +  ( header[i] - '0' ) ;^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P2_Replace_Operator]^result =  ( result  &&  3 )  +  ( header[i] - '0' ) ;^61^^^^^39^66^result =  ( result << 3 )  +  ( header[i] - '0' ) ;^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P2_Replace_Operator]^result =  ( result << 3 )  +  ( header[i]  ^  '0' ) ;^61^^^^^39^66^result =  ( result << 3 )  +  ( header[i] - '0' ) ;^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P3_Replace_Literal]^result =  ( result << BYTE_MASK )  +  ( header[i] - '0' ) ;^61^^^^^39^66^result =  ( result << 3 )  +  ( header[i] - '0' ) ;^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P8_Replace_Mix]^result =  ( result << 4 )  +  ( header[i] - '0' ) ;^61^^^^^39^66^result =  ( result << 3 )  +  ( header[i] - '0' ) ;^[CLASS] TarUtils  [METHOD] parseOctal [RETURN_TYPE] long   byte[] header int offset int length [VARIABLES] byte[]  header  boolean  stillPadding  int  BYTE_MASK  end  i  length  offset  long  result  
[P5_Replace_Variable]^StringBuffer result = new StringBuffer ( i ) ;^77^^^^^76^89^StringBuffer result = new StringBuffer ( length ) ;^[CLASS] TarUtils  [METHOD] parseName [RETURN_TYPE] StringBuffer   byte[] header int offset int length [VARIABLES] byte[]  header  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  
[P8_Replace_Mix]^StringBuffer result = new StringBuffer ( offset ) ;^77^^^^^76^89^StringBuffer result = new StringBuffer ( length ) ;^[CLASS] TarUtils  [METHOD] parseName [RETURN_TYPE] StringBuffer   byte[] header int offset int length [VARIABLES] byte[]  header  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  
[P1_Replace_Type]^short           end = offset + length;^78^^^^^76^89^int          end = offset + length;^[CLASS] TarUtils  [METHOD] parseName [RETURN_TYPE] StringBuffer   byte[] header int offset int length [VARIABLES] byte[]  header  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  
[P2_Replace_Operator]^int  &&  end = offset + length;^78^^^^^76^89^int          end = offset + length;^[CLASS] TarUtils  [METHOD] parseName [RETURN_TYPE] StringBuffer   byte[] header int offset int length [VARIABLES] byte[]  header  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  
[P5_Replace_Variable]^int          end = length + length;^78^^^^^76^89^int          end = offset + length;^[CLASS] TarUtils  [METHOD] parseName [RETURN_TYPE] StringBuffer   byte[] header int offset int length [VARIABLES] byte[]  header  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  
[P5_Replace_Variable]^int          end = offset + offset;^78^^^^^76^89^int          end = offset + length;^[CLASS] TarUtils  [METHOD] parseName [RETURN_TYPE] StringBuffer   byte[] header int offset int length [VARIABLES] byte[]  header  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  
[P5_Replace_Variable]^int          end = length + offset;^78^^^^^76^89^int          end = offset + length;^[CLASS] TarUtils  [METHOD] parseName [RETURN_TYPE] StringBuffer   byte[] header int offset int length [VARIABLES] byte[]  header  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  
[P2_Replace_Operator]^if  ( header[i] != 0 )  {^81^^^^^76^89^if  ( header[i] == 0 )  {^[CLASS] TarUtils  [METHOD] parseName [RETURN_TYPE] StringBuffer   byte[] header int offset int length [VARIABLES] byte[]  header  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  
[P3_Replace_Literal]^if  ( header[i] == offset )  {^81^^^^^76^89^if  ( header[i] == 0 )  {^[CLASS] TarUtils  [METHOD] parseName [RETURN_TYPE] StringBuffer   byte[] header int offset int length [VARIABLES] byte[]  header  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  
[P8_Replace_Mix]^if  ( header[i] == 4 )  {^81^^^^^76^89^if  ( header[i] == 0 )  {^[CLASS] TarUtils  [METHOD] parseName [RETURN_TYPE] StringBuffer   byte[] header int offset int length [VARIABLES] byte[]  header  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  
[P9_Replace_Statement]^if  ( value == 0 )  {^81^^^^^76^89^if  ( header[i] == 0 )  {^[CLASS] TarUtils  [METHOD] parseName [RETURN_TYPE] StringBuffer   byte[] header int offset int length [VARIABLES] byte[]  header  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  
[P15_Unwrap_Block]^break;^81^82^83^^^76^89^if  ( header[i] == 0 )  { break; }^[CLASS] TarUtils  [METHOD] parseName [RETURN_TYPE] StringBuffer   byte[] header int offset int length [VARIABLES] byte[]  header  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  
[P16_Remove_Block]^^81^82^83^^^76^89^if  ( header[i] == 0 )  { break; }^[CLASS] TarUtils  [METHOD] parseName [RETURN_TYPE] StringBuffer   byte[] header int offset int length [VARIABLES] byte[]  header  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  
[P13_Insert_Block]^if  (  ( header[i] )  ==  (  ( byte )   ( ' ' )  )  )  {     break; }^81^^^^^76^89^[Delete]^[CLASS] TarUtils  [METHOD] parseName [RETURN_TYPE] StringBuffer   byte[] header int offset int length [VARIABLES] byte[]  header  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  
[P1_Replace_Type]^for  (  short  i = offset; i < end; ++i )  {^80^^^^^76^89^for  ( int i = offset; i < end; ++i )  {^[CLASS] TarUtils  [METHOD] parseName [RETURN_TYPE] StringBuffer   byte[] header int offset int length [VARIABLES] byte[]  header  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  
[P2_Replace_Operator]^for  ( int i = offset; i > end; ++i )  {^80^^^^^76^89^for  ( int i = offset; i < end; ++i )  {^[CLASS] TarUtils  [METHOD] parseName [RETURN_TYPE] StringBuffer   byte[] header int offset int length [VARIABLES] byte[]  header  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  
[P5_Replace_Variable]^for  ( offsetnt i = offset; i < end; ++i )  {^80^^^^^76^89^for  ( int i = offset; i < end; ++i )  {^[CLASS] TarUtils  [METHOD] parseName [RETURN_TYPE] StringBuffer   byte[] header int offset int length [VARIABLES] byte[]  header  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  
[P5_Replace_Variable]^for  ( int i = offset; i < offset; ++i )  {^80^^^^^76^89^for  ( int i = offset; i < end; ++i )  {^[CLASS] TarUtils  [METHOD] parseName [RETURN_TYPE] StringBuffer   byte[] header int offset int length [VARIABLES] byte[]  header  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  
[P5_Replace_Variable]^for  ( int i = end; i < offset; ++i )  {^80^^^^^76^89^for  ( int i = offset; i < end; ++i )  {^[CLASS] TarUtils  [METHOD] parseName [RETURN_TYPE] StringBuffer   byte[] header int offset int length [VARIABLES] byte[]  header  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  
[P5_Replace_Variable]^for  ( endnt i = offset; i < i; ++i )  {^80^^^^^76^89^for  ( int i = offset; i < end; ++i )  {^[CLASS] TarUtils  [METHOD] parseName [RETURN_TYPE] StringBuffer   byte[] header int offset int length [VARIABLES] byte[]  header  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  
[P8_Replace_Mix]^for  ( int i = length; i < end; ++i )  {^80^^^^^76^89^for  ( int i = offset; i < end; ++i )  {^[CLASS] TarUtils  [METHOD] parseName [RETURN_TYPE] StringBuffer   byte[] header int offset int length [VARIABLES] byte[]  header  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  
[P3_Replace_Literal]^if  ( header[i] ==  )  {^81^^^^^76^89^if  ( header[i] == 0 )  {^[CLASS] TarUtils  [METHOD] parseName [RETURN_TYPE] StringBuffer   byte[] header int offset int length [VARIABLES] byte[]  header  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  
[P8_Replace_Mix]^if  ( header[i] == 0L )  {^81^^^^^76^89^if  ( header[i] == 0 )  {^[CLASS] TarUtils  [METHOD] parseName [RETURN_TYPE] StringBuffer   byte[] header int offset int length [VARIABLES] byte[]  header  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  
[P8_Replace_Mix]^result .StringBuffer ( i )  ;^85^^^^^76^89^result.append (  ( char )  header[i] ) ;^[CLASS] TarUtils  [METHOD] parseName [RETURN_TYPE] StringBuffer   byte[] header int offset int length [VARIABLES] byte[]  header  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  
[P14_Delete_Statement]^^85^^^^^76^89^result.append (  ( char )  header[i] ) ;^[CLASS] TarUtils  [METHOD] parseName [RETURN_TYPE] StringBuffer   byte[] header int offset int length [VARIABLES] byte[]  header  StringBuffer  result  boolean  int  BYTE_MASK  end  i  length  offset  
[P1_Replace_Type]^short  i;^101^^^^^100^112^int i;^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P2_Replace_Operator]^for  ( i = 0; i < length || i < name.length (  ) ; ++i )  {^103^^^^^100^112^for  ( i = 0; i < length && i < name.length (  ) ; ++i )  {^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P2_Replace_Operator]^for  ( i = 0; i > length && i < name.length (  ) ; ++i )  {^103^^^^^100^112^for  ( i = 0; i < length && i < name.length (  ) ; ++i )  {^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P2_Replace_Operator]^for  ( i = 0; i < length && i == name.length (  ) ; ++i )  {^103^^^^^100^112^for  ( i = 0; i < length && i < name.length (  ) ; ++i )  {^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P2_Replace_Operator]^for  <<  ( i = 0; i < length && i < name.length (  ) ; ++i )  {^103^^^^^100^112^for  ( i = 0; i < length && i < name.length (  ) ; ++i )  {^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P3_Replace_Literal]^for  ( i = 2; i < length && i < name.length (  ) ; ++i )  {^103^^^^^100^112^for  ( i = 0; i < length && i < name.length (  ) ; ++i )  {^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P3_Replace_Literal]^for  ( i = 0; i < length && i < name.length() - 2 ; ++i )  {^103^^^^^100^112^for  ( i = 0; i < length && i < name.length (  ) ; ++i )  {^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P5_Replace_Variable]^for  ( length = 0; i < length && i < name.length (  ) ; ++i )  {^103^^^^^100^112^for  ( i = 0; i < length && i < name.length (  ) ; ++i )  {^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P5_Replace_Variable]^for  ( i = 0; i < i && i < name.length (  ) ; ++i )  {^103^^^^^100^112^for  ( i = 0; i < length && i < name.length (  ) ; ++i )  {^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P5_Replace_Variable]^for  ( name = 0; i < length && i < i.length (  ) ; ++i )  {^103^^^^^100^112^for  ( i = 0; i < length && i < name.length (  ) ; ++i )  {^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P7_Replace_Invocation]^for  ( i = 0; i < length && i < name.append (  ) ; ++i )  {^103^^^^^100^112^for  ( i = 0; i < length && i < name.length (  ) ; ++i )  {^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P7_Replace_Invocation]^for  ( i = 0; i < length && i < name .StringBuffer ( length )  ; ++i )  {^103^^^^^100^112^for  ( i = 0; i < length && i < name.length (  ) ; ++i )  {^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P8_Replace_Mix]^for  ( offset = 0; i < length && i < name.length (  ) ; ++i )  {^103^^^^^100^112^for  ( i = 0; i < length && i < name.length (  ) ; ++i )  {^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P1_Replace_Type]^buf[offset + i] =  (  long  )  name.charAt ( i ) ;^104^^^^^100^112^buf[offset + i] =  ( byte )  name.charAt ( i ) ;^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P2_Replace_Operator]^buf[offset + i] =   instanceof   ( byte )  name.charAt ( i ) ;^104^^^^^100^112^buf[offset + i] =  ( byte )  name.charAt ( i ) ;^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P5_Replace_Variable]^buf[length + i] =  ( byte )  name.charAt ( i ) ;^104^^^^^100^112^buf[offset + i] =  ( byte )  name.charAt ( i ) ;^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P5_Replace_Variable]^buf[offset + name] =  ( byte )  i.charAt ( i ) ;^104^^^^^100^112^buf[offset + i] =  ( byte )  name.charAt ( i ) ;^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P8_Replace_Mix]^buf[offset + i] =  (  short  )  name.charAt ( i ) ;^104^^^^^100^112^buf[offset + i] =  ( byte )  name.charAt ( i ) ;^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P11_Insert_Donor_Statement]^buf[offset + idx] =  ( byte )  '0';buf[offset + i] =  ( byte )  name.charAt ( i ) ;^104^^^^^100^112^buf[offset + i] =  ( byte )  name.charAt ( i ) ;^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P11_Insert_Donor_Statement]^buf[offset + idx] =  ( byte )  ' ';buf[offset + i] =  ( byte )  name.charAt ( i ) ;^104^^^^^100^112^buf[offset + i] =  ( byte )  name.charAt ( i ) ;^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P1_Replace_Type]^buf[offset + i] =  (  int  )  name.charAt ( i ) ;^104^^^^^100^112^buf[offset + i] =  ( byte )  name.charAt ( i ) ;^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P5_Replace_Variable]^buf[offset + length] =  ( byte )  name.charAt ( i ) ;^104^^^^^100^112^buf[offset + i] =  ( byte )  name.charAt ( i ) ;^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P8_Replace_Mix]^buf[offset + offset] =  ( byte )  name.charAt ( i ) ;^104^^^^^100^112^buf[offset + i] =  ( byte )  name.charAt ( i ) ;^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P14_Delete_Statement]^^104^^^^^100^112^buf[offset + i] =  ( byte )  name.charAt ( i ) ;^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P3_Replace_Literal]^for  ( i = length; i < length && i < name.length (  ) ; ++i )  {^103^^^^^100^112^for  ( i = 0; i < length && i < name.length (  ) ; ++i )  {^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P3_Replace_Literal]^for  ( i = 0; i < length && i < name.length() - 0 ; ++i )  {^103^^^^^100^112^for  ( i = 0; i < length && i < name.length (  ) ; ++i )  {^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P8_Replace_Mix]^for  ( i = 0 ; i < length && i < name.length (  ) ; ++i )  {^103^^^^^100^112^for  ( i = 0; i < length && i < name.length (  ) ; ++i )  {^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P2_Replace_Operator]^buf[offset + i] =  &&  ( byte )  name.charAt ( i ) ;^104^^^^^100^112^buf[offset + i] =  ( byte )  name.charAt ( i ) ;^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P3_Replace_Literal]^for  ( i = 0; i < length && i < name.length() + 6 ; ++i )  {^103^^^^^100^112^for  ( i = 0; i < length && i < name.length (  ) ; ++i )  {^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P14_Delete_Statement]^^103^104^105^^^100^112^for  ( i = 0; i < length && i < name.length (  ) ; ++i )  { buf[offset + i] =  ( byte )  name.charAt ( i ) ; }^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P2_Replace_Operator]^for  ( ; i <= length; ++i )  {^107^^^^^100^112^for  ( ; i < length; ++i )  {^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P2_Replace_Operator]^for  |  ( ; i < length; ++i )  {^107^^^^^100^112^for  ( ; i < length; ++i )  {^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P5_Replace_Variable]^for  ( ; length < length; ++i )  {^107^^^^^100^112^for  ( ; i < length; ++i )  {^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P5_Replace_Variable]^for  ( ; i < offset; ++i )  {^107^^^^^100^112^for  ( ; i < length; ++i )  {^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P5_Replace_Variable]^for  ( ; length < i; ++i )  {^107^^^^^100^112^for  ( ; i < length; ++i )  {^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P8_Replace_Mix]^for  ( ; i < i; ++i )  {^107^^^^^100^112^for  ( ; i < length; ++i )  {^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P3_Replace_Literal]^buf[offset + i] = length;^108^^^^^100^112^buf[offset + i] = 0;^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P5_Replace_Variable]^buf[length + i] = 0;^108^^^^^100^112^buf[offset + i] = 0;^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P5_Replace_Variable]^buf[offset + length] = 0;^108^^^^^100^112^buf[offset + i] = 0;^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P8_Replace_Mix]^buf[offset + i] = 1;^108^^^^^100^112^buf[offset + i] = 0;^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P11_Insert_Donor_Statement]^buf[offset + idx] = 0;buf[offset + i] = 0;^108^^^^^100^112^buf[offset + i] = 0;^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P11_Insert_Donor_Statement]^buf[offset + idx] =  ( byte )  '0';buf[offset + i] = 0;^108^^^^^100^112^buf[offset + i] = 0;^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P11_Insert_Donor_Statement]^buf[offset + length - 2] = 0;buf[offset + i] = 0;^108^^^^^100^112^buf[offset + i] = 0;^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P11_Insert_Donor_Statement]^buf[offset + idx] =  ( byte )  ' ';buf[offset + i] = 0;^108^^^^^100^112^buf[offset + i] = 0;^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P3_Replace_Literal]^buf[offset + i] = -3;^108^^^^^100^112^buf[offset + i] = 0;^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P8_Replace_Mix]^buf[offset + i] = 0L;^108^^^^^100^112^buf[offset + i] = 0;^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P5_Replace_Variable]^return i + length;^111^^^^^100^112^return offset + length;^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P5_Replace_Variable]^return offset + i;^111^^^^^100^112^return offset + length;^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P5_Replace_Variable]^return length + offset;^111^^^^^100^112^return offset + length;^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P8_Replace_Mix]^return offset + length *  2;^111^^^^^100^112^return offset + length;^[CLASS] TarUtils  [METHOD] getNameBytes [RETURN_TYPE] int   StringBuffer name byte[] buf int offset int length [VARIABLES] byte[]  buf  StringBuffer  name  boolean  int  BYTE_MASK  end  i  length  offset  
[P1_Replace_Type]^short     idx = length - 1;^124^^^^^123^148^int    idx = length - 1;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P2_Replace_Operator]^int    idx = length  <  1;^124^^^^^123^148^int    idx = length - 1;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P3_Replace_Literal]^int    idx = length - ;^124^^^^^123^148^int    idx = length - 1;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P5_Replace_Variable]^int    idx = offset - 1;^124^^^^^123^148^int    idx = length - 1;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P3_Replace_Literal]^buf[offset + idx] = length;^126^^^^^123^148^buf[offset + idx] = 0;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P5_Replace_Variable]^buf[length + idx] = 0;^126^^^^^123^148^buf[offset + idx] = 0;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P5_Replace_Variable]^buf[offset + length] = 0;^126^^^^^123^148^buf[offset + idx] = 0;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P8_Replace_Mix]^buf[offset + idx] = 0 / 0;^126^^^^^123^148^buf[offset + idx] = 0;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P11_Insert_Donor_Statement]^buf[offset + idx] =  ( byte )  '0';buf[offset + idx] = 0;^126^^^^^123^148^buf[offset + idx] = 0;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P11_Insert_Donor_Statement]^buf[offset + length - 2] = 0;buf[offset + idx] = 0;^126^^^^^123^148^buf[offset + idx] = 0;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P11_Insert_Donor_Statement]^buf[offset + idx] =  ( byte )  ' ';buf[offset + idx] = 0;^126^^^^^123^148^buf[offset + idx] = 0;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P11_Insert_Donor_Statement]^buf[offset + i] = 0;buf[offset + idx] = 0;^126^^^^^123^148^buf[offset + idx] = 0;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P1_Replace_Type]^buf[offset + idx] =  (  short  )  ' ';^128^^^^^123^148^buf[offset + idx] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P2_Replace_Operator]^buf[offset + idx] =  !=  ( byte )  ' ';^128^^^^^123^148^buf[offset + idx] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P5_Replace_Variable]^buf[length + idx] =  ( byte )  ' ';^128^^^^^123^148^buf[offset + idx] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P5_Replace_Variable]^buf[offset + length] =  ( byte )  ' ';^128^^^^^123^148^buf[offset + idx] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P8_Replace_Mix]^buf[offset + idx] =  (  long  )  ' ';^128^^^^^123^148^buf[offset + idx] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P11_Insert_Donor_Statement]^buf[offset + idx] = 0;buf[offset + idx] =  ( byte )  ' ';^128^^^^^123^148^buf[offset + idx] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P11_Insert_Donor_Statement]^buf[offset + idx] =  ( byte )  '0';buf[offset + idx] =  ( byte )  ' ';^128^^^^^123^148^buf[offset + idx] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P11_Insert_Donor_Statement]^buf[offset + length - 2] = 0;buf[offset + idx] =  ( byte )  ' ';^128^^^^^123^148^buf[offset + idx] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P11_Insert_Donor_Statement]^buf[offset + i] = 0;buf[offset + idx] =  ( byte )  ' ';^128^^^^^123^148^buf[offset + idx] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P11_Insert_Donor_Statement]^buf[offset + i] =  ( byte )  name.charAt ( i ) ;buf[offset + idx] =  ( byte )  ' ';^128^^^^^123^148^buf[offset + idx] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P11_Insert_Donor_Statement]^buf[offset + length - 1] =  ( byte )  ' ';buf[offset + idx] =  ( byte )  ' ';^128^^^^^123^148^buf[offset + idx] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P2_Replace_Operator]^if  ( value != 0 )  {^131^^^^^123^148^if  ( value == 0 )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P3_Replace_Literal]^if  ( value == end )  {^131^^^^^123^148^if  ( value == 0 )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P3_Replace_Literal]^if  ( value == -2 )  {^131^^^^^123^148^if  ( value == 0 )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P3_Replace_Literal]^if  ( value == -4 )  {^131^^^^^123^148^if  ( value == 0 )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P5_Replace_Variable]^if  ( valueue == 0 )  {^131^^^^^123^148^if  ( value == 0 )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P5_Replace_Variable]^if  ( val == 0 )  {^131^^^^^123^148^if  ( value == 0 )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P6_Replace_Expression]^if  ( offset + idx )  {^131^^^^^123^148^if  ( value == 0 )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P6_Replace_Expression]^if  ( idx >= 0 && val > 0 )  {^131^^^^^123^148^if  ( value == 0 )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P6_Replace_Expression]^if  ( idx >= 0 )  {^131^^^^^123^148^if  ( value == 0 )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P6_Replace_Expression]^if  ( val > 0 )  {^131^^^^^123^148^if  ( value == 0 )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P6_Replace_Expression]^if  ( (byte (byte '0' + byte (val & 7))) )  {^131^^^^^123^148^if  ( value == 0 )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P6_Replace_Expression]^if  ( (byte (val & 7)) )  {^131^^^^^123^148^if  ( value == 0 )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P6_Replace_Expression]^if  ( val >> 3 )  {^131^^^^^123^148^if  ( value == 0 )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P8_Replace_Mix]^if  ( valueue == 0 % 3 )  {^131^^^^^123^148^if  ( value == 0 )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P9_Replace_Statement]^if  ( header[i] == 0 )  {^131^^^^^123^148^if  ( value == 0 )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P1_Replace_Type]^for  (  short  val = value; idx >= 0 && val > 0; --idx )  {^135^^^^^123^148^for  ( long val = value; idx >= 0 && val > 0; --idx )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P2_Replace_Operator]^for  ( long val = value; idx >= 0 || val > 0; --idx )  {^135^^^^^123^148^for  ( long val = value; idx >= 0 && val > 0; --idx )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P2_Replace_Operator]^for  ( long val = value; idx == 0 && val > 0; --idx )  {^135^^^^^123^148^for  ( long val = value; idx >= 0 && val > 0; --idx )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P2_Replace_Operator]^for  ( long val = value; idx >= 0 && val >= 0; --idx )  {^135^^^^^123^148^for  ( long val = value; idx >= 0 && val > 0; --idx )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P3_Replace_Literal]^for  ( long val = value; idx >=  && val > ; --idx )  {^135^^^^^123^148^for  ( long val = value; idx >= 0 && val > 0; --idx )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P3_Replace_Literal]^for  ( long val = value; idx >= offset && val > offset; --idx )  {^135^^^^^123^148^for  ( long val = value; idx >= 0 && val > 0; --idx )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P5_Replace_Variable]^for  ( long val = value; offset >= 0 && val > 0; --idx )  {^135^^^^^123^148^for  ( long val = value; idx >= 0 && val > 0; --idx )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P5_Replace_Variable]^for  ( long value = value; idx >= 0 && val > 0; --idx )  {^135^^^^^123^148^for  ( long val = value; idx >= 0 && val > 0; --idx )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P5_Replace_Variable]^for  ( long val = idx; value >= 0 && val > 0; --idx )  {^135^^^^^123^148^for  ( long val = value; idx >= 0 && val > 0; --idx )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P5_Replace_Variable]^for  ( long value = val; idx >= 0 && val > 0; --idx )  {^135^^^^^123^148^for  ( long val = value; idx >= 0 && val > 0; --idx )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P1_Replace_Type]^buf[offset + idx] =  (  int  )   (  (  int  )  '0' +  (  int  )   ( val & 7 )  ) ;^137^^^^^123^148^buf[offset + idx] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P2_Replace_Operator]^buf[offset + idx] =  ^  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^137^^^^^123^148^buf[offset + idx] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P2_Replace_Operator]^buf[offset + idx] =  ==  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^137^^^^^123^148^buf[offset + idx] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P2_Replace_Operator]^buf[offset + idx] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( val  ||  7 )  ) ;^137^^^^^123^148^buf[offset + idx] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P3_Replace_Literal]^buf[offset + idx] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & -2 )  ) ;^137^^^^^123^148^buf[offset + idx] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P5_Replace_Variable]^buf[length + idx] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^137^^^^^123^148^buf[offset + idx] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P5_Replace_Variable]^buf[offset + length] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^137^^^^^123^148^buf[offset + idx] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P5_Replace_Variable]^buf[offset + val] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( idx & 7 )  ) ;^137^^^^^123^148^buf[offset + idx] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P2_Replace_Operator]^val = val  >  3;^138^^^^^123^148^val = val >> 3;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P3_Replace_Literal]^val = val >> end;^138^^^^^123^148^val = val >> 3;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P5_Replace_Variable]^val = value >> 3;^138^^^^^123^148^val = val >> 3;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P8_Replace_Mix]^val = val >> 2;^138^^^^^123^148^val = val >> 3;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P2_Replace_Operator]^buf[offset + idx] =  &  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^137^^^^^123^148^buf[offset + idx] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P2_Replace_Operator]^buf[offset + idx] =  &&  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^137^^^^^123^148^buf[offset + idx] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P3_Replace_Literal]^buf[offset + idx] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & BYTE_MASK )  ) ;^137^^^^^123^148^buf[offset + idx] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P5_Replace_Variable]^buf[offset + idx] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( value & 7 )  ) ;^137^^^^^123^148^buf[offset + idx] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P8_Replace_Mix]^buf[offset + idx] =  (  long  )   (  (  long  )  '0' +  (  long  )   ( val & 7 )  ) ;^137^^^^^123^148^buf[offset + idx] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P2_Replace_Operator]^val = val   instanceof   3;^138^^^^^123^148^val = val >> 3;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P3_Replace_Literal]^val = val >> 4;^138^^^^^123^148^val = val >> 3;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P1_Replace_Type]^for  (  int  val = value; idx >= 0 && val > 0; --idx )  {^135^^^^^123^148^for  ( long val = value; idx >= 0 && val > 0; --idx )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P1_Replace_Type]^buf[offset + idx] =  (  long  )  '0';^132^^^^^123^148^buf[offset + idx] =  ( byte )  '0';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P2_Replace_Operator]^buf[offset + idx] =  ==  ( byte )  '0';^132^^^^^123^148^buf[offset + idx] =  ( byte )  '0';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P5_Replace_Variable]^buf[length + idx] =  ( byte )  '0';^132^^^^^123^148^buf[offset + idx] =  ( byte )  '0';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P5_Replace_Variable]^buf[offset + length] =  ( byte )  '0';^132^^^^^123^148^buf[offset + idx] =  ( byte )  '0';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P11_Insert_Donor_Statement]^buf[offset + idx] = 0;buf[offset + idx] =  ( byte )  '0';^132^^^^^123^148^buf[offset + idx] =  ( byte )  '0';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P11_Insert_Donor_Statement]^buf[offset + length - 2] = 0;buf[offset + idx] =  ( byte )  '0';^132^^^^^123^148^buf[offset + idx] =  ( byte )  '0';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P11_Insert_Donor_Statement]^buf[offset + idx] =  ( byte )  ' ';buf[offset + idx] =  ( byte )  '0';^132^^^^^123^148^buf[offset + idx] =  ( byte )  '0';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P11_Insert_Donor_Statement]^buf[offset + i] = 0;buf[offset + idx] =  ( byte )  '0';^132^^^^^123^148^buf[offset + idx] =  ( byte )  '0';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P11_Insert_Donor_Statement]^buf[offset + i] =  ( byte )  name.charAt ( i ) ;buf[offset + idx] =  ( byte )  '0';^132^^^^^123^148^buf[offset + idx] =  ( byte )  '0';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P11_Insert_Donor_Statement]^buf[offset + length - 1] =  ( byte )  ' ';buf[offset + idx] =  ( byte )  '0';^132^^^^^123^148^buf[offset + idx] =  ( byte )  '0';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P2_Replace_Operator]^for  ( long val = value; idx > 0 && val > 0; --idx )  {^135^^^^^123^148^for  ( long val = value; idx >= 0 && val > 0; --idx )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P3_Replace_Literal]^for  ( long val = value; idx >= -4 && val > -4; --idx )  {^135^^^^^123^148^for  ( long val = value; idx >= 0 && val > 0; --idx )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P3_Replace_Literal]^for  ( long val = value; idx >= -5 && val > -5; --idx )  {^135^^^^^123^148^for  ( long val = value; idx >= 0 && val > 0; --idx )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P5_Replace_Variable]^for  ( long val = value; length >= 0 && val > 0; --idx )  {^135^^^^^123^148^for  ( long val = value; idx >= 0 && val > 0; --idx )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P1_Replace_Type]^buf[offset + idx] =  (  short  )   (  (  short  )  '0' +  (  short  )   ( val & 7 )  ) ;^137^^^^^123^148^buf[offset + idx] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P2_Replace_Operator]^buf[offset + idx] =  !=  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^137^^^^^123^148^buf[offset + idx] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P2_Replace_Operator]^buf[offset + idx] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( val  <  7 )  ) ;^137^^^^^123^148^buf[offset + idx] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P2_Replace_Operator]^val = val  >=  3;^138^^^^^123^148^val = val >> 3;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P3_Replace_Literal]^val = val >> 12;^138^^^^^123^148^val = val >> 3;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P8_Replace_Mix]^val = val >> 1;^138^^^^^123^148^val = val >> 3;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P1_Replace_Type]^buf[offset + idx] =  (  short  )  '0';^132^^^^^123^148^buf[offset + idx] =  ( byte )  '0';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P2_Replace_Operator]^buf[offset + idx] =  ^  ( byte )  '0';^132^^^^^123^148^buf[offset + idx] =  ( byte )  '0';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P8_Replace_Mix]^buf[offset + idx] =  (  int  )  '0';^132^^^^^123^148^buf[offset + idx] =  ( byte )  '0';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P2_Replace_Operator]^buf[offset + idx] =  ||  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^137^^^^^123^148^buf[offset + idx] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P2_Replace_Operator]^buf[offset + idx] =  >=  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^137^^^^^123^148^buf[offset + idx] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P2_Replace_Operator]^buf[offset + idx] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( val  |  7 )  ) ;^137^^^^^123^148^buf[offset + idx] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P3_Replace_Literal]^buf[offset + idx] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 0 )  ) ;^137^^^^^123^148^buf[offset + idx] =  ( byte )   (  ( byte )  '0' +  ( byte )   ( val & 7 )  ) ;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P2_Replace_Operator]^val = val  ^  3;^138^^^^^123^148^val = val >> 3;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P3_Replace_Literal]^val = val >> 10;^138^^^^^123^148^val = val >> 3;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P8_Replace_Mix]^val = val >> 3 - 2;^138^^^^^123^148^val = val >> 3;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P2_Replace_Operator]^for  ( ; idx < 0; --idx )  {^143^^^^^123^148^for  ( ; idx >= 0; --idx )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P3_Replace_Literal]^for  ( ; idx >= end; --idx )  {^143^^^^^123^148^for  ( ; idx >= 0; --idx )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P5_Replace_Variable]^for  ( ; length >= 0; --idx )  {^143^^^^^123^148^for  ( ; idx >= 0; --idx )  {^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P1_Replace_Type]^buf[offset + idx] =  (  long  )  ' ';^144^^^^^123^148^buf[offset + idx] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P2_Replace_Operator]^buf[offset + idx] =  ||  ( byte )  ' ';^144^^^^^123^148^buf[offset + idx] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P5_Replace_Variable]^buf[length + idx] =  ( byte )  ' ';^144^^^^^123^148^buf[offset + idx] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P5_Replace_Variable]^buf[offset + length] =  ( byte )  ' ';^144^^^^^123^148^buf[offset + idx] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P8_Replace_Mix]^buf[offset + idx] =  (  int  )  ' ';^144^^^^^123^148^buf[offset + idx] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P11_Insert_Donor_Statement]^buf[offset + idx] = 0;buf[offset + idx] =  ( byte )  ' ';^144^^^^^123^148^buf[offset + idx] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P11_Insert_Donor_Statement]^buf[offset + idx] =  ( byte )  '0';buf[offset + idx] =  ( byte )  ' ';^144^^^^^123^148^buf[offset + idx] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P11_Insert_Donor_Statement]^buf[offset + length - 2] = 0;buf[offset + idx] =  ( byte )  ' ';^144^^^^^123^148^buf[offset + idx] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P11_Insert_Donor_Statement]^buf[offset + i] = 0;buf[offset + idx] =  ( byte )  ' ';^144^^^^^123^148^buf[offset + idx] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P11_Insert_Donor_Statement]^buf[offset + i] =  ( byte )  name.charAt ( i ) ;buf[offset + idx] =  ( byte )  ' ';^144^^^^^123^148^buf[offset + idx] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P11_Insert_Donor_Statement]^buf[offset + length - 1] =  ( byte )  ' ';buf[offset + idx] =  ( byte )  ' ';^144^^^^^123^148^buf[offset + idx] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P1_Replace_Type]^buf[offset + idx] =  (  short  )  ' ';^144^^^^^123^148^buf[offset + idx] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P2_Replace_Operator]^buf[offset + idx] =  !=  ( byte )  ' ';^144^^^^^123^148^buf[offset + idx] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P5_Replace_Variable]^return idx + length;^147^^^^^123^148^return offset + length;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P5_Replace_Variable]^return offset + idx;^147^^^^^123^148^return offset + length;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P5_Replace_Variable]^return length + offset;^147^^^^^123^148^return offset + length;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P8_Replace_Mix]^return offset + length + 3;^147^^^^^123^148^return offset + length;^[CLASS] TarUtils  [METHOD] getOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  val  value  
[P3_Replace_Literal]^byte[] temp = new byte[length ];^160^^^^^159^166^byte[] temp = new byte[length + 1];^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^byte[] temp = new byte[idx + 1];^160^^^^^159^166^byte[] temp = new byte[length + 1];^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P8_Replace_Mix]^byte[] temp = new byte[offset + 1];^160^^^^^159^166^byte[] temp = new byte[length + 1];^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P2_Replace_Operator]^getOctalBytes ( value, temp, 0, length  <  1 ) ;^162^^^^^159^166^getOctalBytes ( value, temp, 0, length + 1 ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P3_Replace_Literal]^getOctalBytes ( value, temp, 0, length  ) ;^162^^^^^159^166^getOctalBytes ( value, temp, 0, length + 1 ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^getOctalBytes ( value, buf, 0, length + 1 ) ;^162^^^^^159^166^getOctalBytes ( value, temp, 0, length + 1 ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^getOctalBytes ( value, temp, 0, offset + 1 ) ;^162^^^^^159^166^getOctalBytes ( value, temp, 0, length + 1 ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^getOctalBytes (  temp, 0, length + 1 ) ;^162^^^^^159^166^getOctalBytes ( value, temp, 0, length + 1 ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^getOctalBytes ( value,  0, length + 1 ) ;^162^^^^^159^166^getOctalBytes ( value, temp, 0, length + 1 ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^getOctalBytes ( value, temp, 0 + 1 ) ;^162^^^^^159^166^getOctalBytes ( value, temp, 0, length + 1 ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^getOctalBytes ( length, temp, 0, value + 1 ) ;^162^^^^^159^166^getOctalBytes ( value, temp, 0, length + 1 ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^getOctalBytes ( temp, value, 0, length + 1 ) ;^162^^^^^159^166^getOctalBytes ( value, temp, 0, length + 1 ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P8_Replace_Mix]^getOctalBytes ( value, temp, 0, idx + 1 ) ;^162^^^^^159^166^getOctalBytes ( value, temp, 0, length + 1 ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P14_Delete_Statement]^^162^163^^^^159^166^getOctalBytes ( value, temp, 0, length + 1 ) ; System.arraycopy ( temp, 0, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P11_Insert_Donor_Statement]^getOctalBytes ( value, buf, offset, length ) ;getOctalBytes ( value, temp, 0, length + 1 ) ;^162^^^^^159^166^getOctalBytes ( value, temp, 0, length + 1 ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P3_Replace_Literal]^System.arraycopy ( temp, 8, buf, offset, length ) ;^163^^^^^159^166^System.arraycopy ( temp, 0, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^System.arraycopy ( temp, 0, buf, idx, length ) ;^163^^^^^159^166^System.arraycopy ( temp, 0, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^System.arraycopy ( temp, 0, buf, offset, offset ) ;^163^^^^^159^166^System.arraycopy ( temp, 0, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^System.arraycopy (  0, buf, offset, length ) ;^163^^^^^159^166^System.arraycopy ( temp, 0, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^System.arraycopy ( temp, 0,  offset, length ) ;^163^^^^^159^166^System.arraycopy ( temp, 0, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^System.arraycopy ( temp, 0, buf,  length ) ;^163^^^^^159^166^System.arraycopy ( temp, 0, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^System.arraycopy ( temp, 0, buf, offset ) ;^163^^^^^159^166^System.arraycopy ( temp, 0, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^System.arraycopy ( buf, 0, temp, offset, length ) ;^163^^^^^159^166^System.arraycopy ( temp, 0, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^System.arraycopy ( temp, 0, offset, buf, length ) ;^163^^^^^159^166^System.arraycopy ( temp, 0, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^System.arraycopy ( temp, 0, buf, length, offset ) ;^163^^^^^159^166^System.arraycopy ( temp, 0, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P8_Replace_Mix]^System.arraycopy ( temp, 0, buf, offset, idx ) ;^163^^^^^159^166^System.arraycopy ( temp, 0, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P14_Delete_Statement]^^163^^^^^159^166^System.arraycopy ( temp, 0, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P11_Insert_Donor_Statement]^getOctalBytes ( value, buf, offset, length ) ;System.arraycopy ( temp, 0, buf, offset, length ) ;^163^^^^^159^166^System.arraycopy ( temp, 0, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^return idx + length;^165^^^^^159^166^return offset + length;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^return length + offset;^165^^^^^159^166^return offset + length;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P8_Replace_Mix]^return offset + length *  0.5 ;^165^^^^^159^166^return offset + length;^[CLASS] TarUtils  [METHOD] getLongOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  temp  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^getOctalBytes ( value, buf, idx, length ) ;^178^^^^^177^184^getOctalBytes ( value, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^getOctalBytes ( value, buf, offset, offset ) ;^178^^^^^177^184^getOctalBytes ( value, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^getOctalBytes (  buf, offset, length ) ;^178^^^^^177^184^getOctalBytes ( value, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^getOctalBytes ( value,  offset, length ) ;^178^^^^^177^184^getOctalBytes ( value, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^getOctalBytes ( value, buf,  length ) ;^178^^^^^177^184^getOctalBytes ( value, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^getOctalBytes ( value, buf, offset ) ;^178^^^^^177^184^getOctalBytes ( value, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^getOctalBytes ( buf, value, offset, length ) ;^178^^^^^177^184^getOctalBytes ( value, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^getOctalBytes ( value, length, offset, buf ) ;^178^^^^^177^184^getOctalBytes ( value, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^getOctalBytes ( value, offset, buf, length ) ;^178^^^^^177^184^getOctalBytes ( value, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^getOctalBytes ( value, buf, length, offset ) ;^178^^^^^177^184^getOctalBytes ( value, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P7_Replace_Invocation]^getLongOctalBytes ( value, buf, offset, length ) ;^178^^^^^177^184^getOctalBytes ( value, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P8_Replace_Mix]^getLongOctalBytes ( value, buf, idx, length ) ;^178^^^^^177^184^getOctalBytes ( value, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P14_Delete_Statement]^^178^^^^^177^184^getOctalBytes ( value, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P11_Insert_Donor_Statement]^getOctalBytes ( value, temp, 0, length + 1 ) ;getOctalBytes ( value, buf, offset, length ) ;^178^^^^^177^184^getOctalBytes ( value, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P11_Insert_Donor_Statement]^System.arraycopy ( temp, 0, buf, offset, length ) ;getOctalBytes ( value, buf, offset, length ) ;^178^^^^^177^184^getOctalBytes ( value, buf, offset, length ) ;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P1_Replace_Type]^buf[offset + length - 1] =  (  short  )  ' ';^180^^^^^177^184^buf[offset + length - 1] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P2_Replace_Operator]^buf[offset + length  &  1] =  ( byte )  ' ';^180^^^^^177^184^buf[offset + length - 1] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P2_Replace_Operator]^buf[offset  <=  length - 1] =  ( byte )  ' ';^180^^^^^177^184^buf[offset + length - 1] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P3_Replace_Literal]^buf[offset + length ] =  ( byte )  ' ';^180^^^^^177^184^buf[offset + length - 1] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^buf[idx + length - 1] =  ( byte )  ' ';^180^^^^^177^184^buf[offset + length - 1] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^buf[offset + idx - 1] =  ( byte )  ' ';^180^^^^^177^184^buf[offset + length - 1] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P8_Replace_Mix]^buf[offset + length - 0 ] =  ( byte )  ' ';^180^^^^^177^184^buf[offset + length - 1] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P11_Insert_Donor_Statement]^buf[offset + idx] =  ( byte )  '0';buf[offset + length - 1] =  ( byte )  ' ';^180^^^^^177^184^buf[offset + length - 1] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P11_Insert_Donor_Statement]^buf[offset + length - 2] = 0;buf[offset + length - 1] =  ( byte )  ' ';^180^^^^^177^184^buf[offset + length - 1] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P11_Insert_Donor_Statement]^buf[offset + idx] =  ( byte )  ' ';buf[offset + length - 1] =  ( byte )  ' ';^180^^^^^177^184^buf[offset + length - 1] =  ( byte )  ' ';^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P2_Replace_Operator]^buf[offset + length  >  2] = 0;^181^^^^^177^184^buf[offset + length - 2] = 0;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P2_Replace_Operator]^buf[offset  >=  length - 2] = 0;^181^^^^^177^184^buf[offset + length - 2] = 0;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P3_Replace_Literal]^buf[offset + length - i] = 0;^181^^^^^177^184^buf[offset + length - 2] = 0;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P3_Replace_Literal]^buf[offset + length - 2] = offset;^181^^^^^177^184^buf[offset + length - 2] = 0;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^buf[offset + idx - 2] = 0;^181^^^^^177^184^buf[offset + length - 2] = 0;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P8_Replace_Mix]^buf[offset + length - 0 ] = 0;^181^^^^^177^184^buf[offset + length - 2] = 0;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P11_Insert_Donor_Statement]^buf[offset + idx] = 0;buf[offset + length - 2] = 0;^181^^^^^177^184^buf[offset + length - 2] = 0;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P11_Insert_Donor_Statement]^buf[offset + idx] =  ( byte )  '0';buf[offset + length - 2] = 0;^181^^^^^177^184^buf[offset + length - 2] = 0;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P11_Insert_Donor_Statement]^buf[offset + idx] =  ( byte )  ' ';buf[offset + length - 2] = 0;^181^^^^^177^184^buf[offset + length - 2] = 0;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P11_Insert_Donor_Statement]^buf[offset + i] = 0;buf[offset + length - 2] = 0;^181^^^^^177^184^buf[offset + length - 2] = 0;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P11_Insert_Donor_Statement]^buf[offset + length - 1] =  ( byte )  ' ';buf[offset + length - 2] = 0;^181^^^^^177^184^buf[offset + length - 2] = 0;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^return idx + length;^183^^^^^177^184^return offset + length;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^return offset + idx;^183^^^^^177^184^return offset + length;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P5_Replace_Variable]^return length + offset;^183^^^^^177^184^return offset + length;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P8_Replace_Mix]^return offset + length + 1;^183^^^^^177^184^return offset + length;^[CLASS] TarUtils  [METHOD] getCheckSumOctalBytes [RETURN_TYPE] int   long value byte[] buf int offset int length [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  value  
[P1_Replace_Type]^short  sum = 0;^193^^^^^192^200^long sum = 0;^[CLASS] TarUtils  [METHOD] computeCheckSum [RETURN_TYPE] long   byte[] buf [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  sum  
[P3_Replace_Literal]^long sum = ;^193^^^^^192^200^long sum = 0;^[CLASS] TarUtils  [METHOD] computeCheckSum [RETURN_TYPE] long   byte[] buf [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  sum  
[P11_Insert_Donor_Statement]^long    result = 0;long sum = 0;^193^^^^^192^200^long sum = 0;^[CLASS] TarUtils  [METHOD] computeCheckSum [RETURN_TYPE] long   byte[] buf [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  sum  
[P1_Replace_Type]^for  (  long  i = 0; i < buf.length; ++i )  {^195^^^^^192^200^for  ( int i = 0; i < buf.length; ++i )  {^[CLASS] TarUtils  [METHOD] computeCheckSum [RETURN_TYPE] long   byte[] buf [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  sum  
[P2_Replace_Operator]^for  ( int i = 0; i <= buf.length; ++i )  {^195^^^^^192^200^for  ( int i = 0; i < buf.length; ++i )  {^[CLASS] TarUtils  [METHOD] computeCheckSum [RETURN_TYPE] long   byte[] buf [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  sum  
[P2_Replace_Operator]^for  &&  ( int i = 0; i < buf.length; ++i )  {^195^^^^^192^200^for  ( int i = 0; i < buf.length; ++i )  {^[CLASS] TarUtils  [METHOD] computeCheckSum [RETURN_TYPE] long   byte[] buf [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  sum  
[P3_Replace_Literal]^for  ( int i = -8; i < buf.length; ++i )  {^195^^^^^192^200^for  ( int i = 0; i < buf.length; ++i )  {^[CLASS] TarUtils  [METHOD] computeCheckSum [RETURN_TYPE] long   byte[] buf [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  sum  
[P5_Replace_Variable]^for  ( lengthnt i = 0; i < buf.length; ++i )  {^195^^^^^192^200^for  ( int i = 0; i < buf.length; ++i )  {^[CLASS] TarUtils  [METHOD] computeCheckSum [RETURN_TYPE] long   byte[] buf [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  sum  
[P5_Replace_Variable]^for  ( int i = 0; i < offset; ++i )  {^195^^^^^192^200^for  ( int i = 0; i < buf.length; ++i )  {^[CLASS] TarUtils  [METHOD] computeCheckSum [RETURN_TYPE] long   byte[] buf [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  sum  
[P5_Replace_Variable]^for  ( buf.lengthnt i = 0; i < i; ++i )  {^195^^^^^192^200^for  ( int i = 0; i < buf.length; ++i )  {^[CLASS] TarUtils  [METHOD] computeCheckSum [RETURN_TYPE] long   byte[] buf [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  sum  
[P2_Replace_Operator]^sum += BYTE_MASK  <  buf[i];^196^^^^^192^200^sum += BYTE_MASK & buf[i];^[CLASS] TarUtils  [METHOD] computeCheckSum [RETURN_TYPE] long   byte[] buf [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  sum  
[P5_Replace_Variable]^sum += offset & buf[i];^196^^^^^192^200^sum += BYTE_MASK & buf[i];^[CLASS] TarUtils  [METHOD] computeCheckSum [RETURN_TYPE] long   byte[] buf [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  sum  
[P5_Replace_Variable]^sum += buf & BYTE_MASK[i];^196^^^^^192^200^sum += BYTE_MASK & buf[i];^[CLASS] TarUtils  [METHOD] computeCheckSum [RETURN_TYPE] long   byte[] buf [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  sum  
[P8_Replace_Mix]^sum +=  BYTE_MASK & null[i];^196^^^^^192^200^sum += BYTE_MASK & buf[i];^[CLASS] TarUtils  [METHOD] computeCheckSum [RETURN_TYPE] long   byte[] buf [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  sum  
[P2_Replace_Operator]^sum += BYTE_MASK  <=  buf[i];^196^^^^^192^200^sum += BYTE_MASK & buf[i];^[CLASS] TarUtils  [METHOD] computeCheckSum [RETURN_TYPE] long   byte[] buf [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  sum  
[P1_Replace_Type]^for  (  short  i = 0; i < buf.length; ++i )  {^195^^^^^192^200^for  ( int i = 0; i < buf.length; ++i )  {^[CLASS] TarUtils  [METHOD] computeCheckSum [RETURN_TYPE] long   byte[] buf [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  sum  
[P3_Replace_Literal]^for  ( int i = length; i < buf.length; ++i )  {^195^^^^^192^200^for  ( int i = 0; i < buf.length; ++i )  {^[CLASS] TarUtils  [METHOD] computeCheckSum [RETURN_TYPE] long   byte[] buf [VARIABLES] byte[]  buf  boolean  int  BYTE_MASK  end  i  idx  length  offset  long  sum  
